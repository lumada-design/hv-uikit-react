# See https://octokit.github.io/rest.js/v17#repos-create-dispatch-event on how to trigger repository_dispatch events.
#
# An example using curl:
# curl \
#  -H "Accept: application/vnd.github.everest-preview+json" \
#  -H "Authorization: token <user-token>" \
#  --request POST \
#  --data "{\"event_type\": \"master\"}" \
#  https://api.github.com/repos/pentaho/hv-uikit-react/dispatches

name: Master
on:
  push
  schedule:
    - cron: "0 5 * * *" # daily at 05:00
  repository_dispatch:
    types: [master]    

# ref is not needed across checkouts because master is the default branch

# flow:
# Notify Start
# License-Checks | Lint | Test-Jest | Build-Documentation
# Robot_pa11y | Robot (chrome | ie | firefox)
# Notify End
# Release

env:
  RESOLVE_REGISTRY: https://repo.orl.eng.hitachivantara.com/artifactory/api/npm/npm/
  RELEASE_COMMIT_MESSAGE: "chore(release): publish"

jobs:
  Notify-Start:
    name: Notify Start
    runs-on: [self-hosted, Linux]
    container:
      image: node:12.14.1-buster
      options: -u 1000 # buildguy

    steps:
      - name: Notify
        uses: hbfernandes/slack-action@1.0
        env:
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
        with:
          args: |
            {
              "channel": "ui-kit-eng-ci",
              "attachments": [
                {
                  "mrkdwn_in": ["text"],
                  "title": "Workflow ${{ github.workflow }} (${{github.ref}}) build started",
                  "text": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}",
                  "footer": "by ${{github.actor}}"
                }
              ]
            }

  License-Checks:
    name: License Checks
    needs: [Notify-Start]
    runs-on: [self-hosted, Linux]
    container:
      image: node:12.14.1-buster
      options: -u 1000 # buildguy

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install
        run: |
          npm config set @hv:registry ${RESOLVE_REGISTRY}
          npm ci

      - name: License Check
        run: npm run license-check

  Lint:
    needs: [Notify-Start]
    runs-on: [self-hosted, Linux]
    container:
      image: node:12.14.1-buster
      options: -u 1000 # buildguy

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Restore npm ci and lerna bootstrap cache
        uses: actions/cache@master
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ github.workflow }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install
        run: |
          npm config set @hv:registry ${RESOLVE_REGISTRY}
          npm ci

      - name: Bootstrap
        run: npm run bootstrap

      - name: Lint
        run: npm run lint

  Test-Jest:
    name: Test Jest
    needs: [Notify-Start]
    runs-on: [self-hosted, Linux]
    container:
      image: node:12.14.1-buster
      options: -u 1000 # buildguy

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Restore npm ci and lerna bootstrap cache
        uses: actions/cache@master
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ github.workflow }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install
        run: |
          npm config set @hv:registry ${RESOLVE_REGISTRY}
          npm ci

      - name: Bootstrap
        run: npm run bootstrap

      - name: Test
        run: npm run test

  Build-Documentation:
    name: Build Documentation
    needs: [Notify-Start]
    runs-on: [self-hosted, Linux]
    container:
      image: node:12.14.1-buster
      options: -u 1000 # buildguy

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Restore npm ci and lerna bootstrap cache
        uses: actions/cache@master
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ github.workflow }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install
        run: |
          npm config set @hv:registry ${RESOLVE_REGISTRY}
          npm ci

      - name: Bootstrap
        run: npm run bootstrap

      - name: Generate Documentation
        run: npm run build-documentation

      - name: Archive Documentation
        uses: actions/upload-artifact@v1
        with:
          name: documentation
          path: dist

  Robot_pa11y:
    name: Test Robot pa11y
    needs: Build-Documentation
    runs-on: [self-hosted, Windows]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install PA11Y
        working-directory: ./automation/robot
        shell: cmd
        run: npm ci

      - name: Fetch Storybook
        uses: actions/download-artifact@v1
        with:
          name: documentation
          path: .github/storybook/www

      - name: Run Storybook
        uses: ./.github/storybook

      - name: Run PA11Y
        shell: cmd
        run: >-
          robot
          --variable STORYBOOK_URL:http://localhost:9002
          --include pa11y
          --outputdir reports
          --report report.html
          --log log.html
          automation\robot\storybook\core

      - name: Save Reports
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: pa11y-reports
          path: reports

  Robot:
    name: Test Robot
    needs: Build-Documentation
    runs-on: [self-hosted, Windows]
    timeout-minutes: 150
    strategy:
      fail-fast: false
      matrix:
        browser: [ie, chrome, firefox]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch Storybook
        uses: actions/download-artifact@v1
        with:
          name: documentation
          path: .github/storybook/www

      - name: Run Storybook
        uses: ./.github/storybook

      - name: Run SELENIUM Robot
        uses: ./.github/robot
        with:
          storybook-url: http://localhost:9002
          browser: ${{ matrix.browser }}
          excludes: |
            pa11y
            bug-${{ matrix.browser }}
            bug-${{ matrix.browser }}-webdriver
            issue
            issue-${{ matrix.browser }}
            bug-infrastructure
            bug-infrastructure-${{ matrix.browser }}
          output-dir: reports
          processes: 3
          path: ./automation/robot/storybook/core

      - name: Save Reports
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: ${{ matrix.browser }}-reports
          path: reports

  Notify-End:
    name: Notify End
    needs:
      [License-Checks, Lint, Test-Jest, Build-Documentation, Robot_pa11y, Robot]
    if: always()
    runs-on: [self-hosted, Linux]
    container:
      image: node:12.14.1-buster
      options: -u 1000 # buildguy

    steps:
      - uses: technote-space/workflow-conclusion-action@v1
      - name: generate conclusion color
        id: conclusion_color
        uses: actions/github-script@0.9.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            if("${{ env.WORKFLOW_CONCLUSION }}" === "success") core.exportVariable("COLOR", "#63A621")
            else if("${{ env.WORKFLOW_CONCLUSION }}" === "failure") core.exportVariable("COLOR", "#C62828")
            else if("${{ env.WORKFLOW_CONCLUSION }}" === "neutral") core.exportVariable("COLOR", "#BCBCBC")
            else if("${{ env.WORKFLOW_CONCLUSION }}" === "cancelled") core.exportVariable("COLOR", "#FFD00A")
            else if("${{ env.WORKFLOW_CONCLUSION }}" === "timed_out") core.exportVariable("COLOR", "#FFD00A")

      - name: Notify
        uses: hbfernandes/slack-action@1.0
        env:
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          CONCLUSION: ${{ env.WORKFLOW_CONCLUSION }}
        with:
          args: |
            {
              "channel": "ui-kit-eng-ci",
              "attachments": [
                {
                  "mrkdwn_in": ["text"],
                  "color": "${{env.COLOR}}",
                  "title": "${{ github.workflow }} (${{github.ref}}) build finished - ${{ env.CONCLUSION }}",
                  "text": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}"
                }
              ]
            }

  Release:
    if: github.event_name == 'schedule' && !contains(github.event.head_commit.message, '${ RELEASE_COMMIT_MESSAGE }')
    needs:
      [License-Checks, Lint, Test-Jest, Build-Documentation, Robot_pa11y, Robot]
    runs-on: [self-hosted, Linux]
    steps:
      - name: Trigger Release
        uses: actions/github-script@0.8.0
        with:
          # repo scope token is required to generate a dispatch event
          github-token: ${{ secrets.BUILD_TOKEN }}
          script: |
            await github.repos.createDispatchEvent({
              owner: context.repo.owner,
              repo: context.repo.repo,
              event_type: 'release'
            })
