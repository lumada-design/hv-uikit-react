# See https://octokit.github.io/rest.js/v17#repos-create-dispatch-event on how to trigger repository_dispatch events.
#
# An example using curl:
# curl \
#  -H "Accept: application/vnd.github.everest-preview+json" \
#  -H "Authorization: token <user-token>" \
#  --request POST \
#  --data "{\"event_type\": \"master\"}" \
#  https://api.github.com/repos/pentaho/hv-uikit-react/dispatches

name: Master Nightly
on:
  schedule:
    - cron: "0 5 * * *" # daily at 05:00
  repository_dispatch:
    types: [master]

# ref is not needed across checkouts because master is the default branch

# flow:
# Notify Start
# License-Checks | Lint | Test-Jest | Build-Documentation
# Robot_pa11y | Robot (chrome | ie | firefox)
# Notify End
# Release

env:
  RESOLVE_REGISTRY: https://repo.orl.eng.hitachivantara.com/artifactory/api/npm/npm/
  RELEASE_COMMIT_MESSAGE: "chore(release): publish"
  DOCUMENTATION_PUBLISH_FOLDER: master-staging
  DOCUMENTATION_PUBLISH_MESSAGE: "docs: storybook for master staging"
  DOCUMENTATION_URL: https://${{ github.repository_owner }}.github.io/hv-uikit-react/master-staging

jobs:
  Notify-Start:
    name: Notify Start
    runs-on: [self-hosted, Linux]
    steps:
      - name: Notify
        uses: hbfernandes/slack-action@1.0
        env:
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
        with:
          args: |
            {
              "channel": "ui-kit-eng-ci",
              "attachments": [
                {
                  "mrkdwn_in": ["text"],
                  "title": "Workflow ${{ github.workflow }} (${{github.ref}}) build started",
                  "text": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}",
                  "footer": "by ${{github.actor}}"
                }
              ]
            }

  Static-Checks:
    name: Licenses, Lint, Jest
    runs-on: [self-hosted, Linux]
    needs: [Notify-Start]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: "12"

      - name: Install
        run: |
          npm config set @hv:registry ${RESOLVE_REGISTRY}
          npm ci

      - name: Bootstrap
        run: npm run bootstrap

      - name: License Check
        run: npm run license-check

      - name: Lint
        run: npm run lint

      - name: Test
        run: npm run test

  Build-Documentation:
    name: Build Documentation
    runs-on: [self-hosted, Linux]
    needs: [Notify-Start]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: "12"

      - name: Install
        run: |
          npm config set @hv:registry ${RESOLVE_REGISTRY}
          npm ci

      - name: Bootstrap
        run: npm run bootstrap

      - name: Start Documentation Deployment
        uses: bobheadxi/deployments@master
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: ${{env.DOCUMENTATION_PUBLISH_FOLDER}}
          ref: ${{ github.head_ref }}
          desc: ${{env.DOCUMENTATION_PUBLISH_FOLDER}}

      - name: Checkout gh-pages
        uses: actions/checkout@v2
        with:
          path: public
          ref: gh-pages

      - name: Generate Documentation
        run: |
          npm run build-documentation
          rm -rf ./public/${DOCUMENTATION_PUBLISH_FOLDER}
          mkdir -p ./public/${DOCUMENTATION_PUBLISH_FOLDER}
          cp -r dist/* ./public/${DOCUMENTATION_PUBLISH_FOLDER}

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          commit_message: ${{env.DOCUMENTATION_PUBLISH_MESSAGE}}
          keepFiles: true
          user_name: "github-actions[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"

      - name: Waits deploy for to be up
        uses: jakejarvis/wait-action@master
        with:
          time: '30s'

      - name: Update Deployment Status
        uses: bobheadxi/deployments@master
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: ${{env.DOCUMENTATION_URL}}

  # Robot_pa11y:
  #   name: Test Robot pa11y
  #   needs: Build-Documentation
  #   runs-on: [self-hosted, Windows]

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - uses: actions/setup-node@v1
  #       with:
  #         node-version: "12"

  #     - name: Install PA11Y
  #       working-directory: ./automation/robot
  #       shell: cmd
  #       run: npm ci

  #     - name: Run PA11Y
  #       shell: cmd
  #       run: >-
  #         robot
  #         --variable STORYBOOK_URL:${{env.DOCUMENTATION_URL}}
  #         --include pa11y
  #         --outputdir reports
  #         --report report.html
  #         --log log.html
  #         automation\robot\storybook\core

  #     - name: Save Reports
  #       uses: actions/upload-artifact@v1
  #       if: always()
  #       with:
  #         name: pa11y-reports
  #         path: reports

  #     - name: Clean Reports
  #       run: rm -rf reports

  Robot:
    name: Test Robot
    needs: [Build-Documentation]
    runs-on: [self-hosted, Linux]
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        browser: [chrome, firefox]
    container:
      image: ppodgorsek/robot-framework:latest
      options: --shm-size=6g --cpus 4
      env:
        BROWSER: ${{ matrix.browser }}
        ROBOT_TESTS_DIR: ./automation/robot/storybook/core
        ROBOT_REPORTS_DIR: ./reports
        ROBOT_THREADS: 4
        ROBOT_OPTIONS: "--variable STORYBOOK_URL:${{env.DOCUMENTATION_URL}} --variable BROWSER:${{ matrix.browser }} --exclude pa11y --exclude bug-${{ matrix.browser }} --exclude bug-${{ matrix.browser }}-webdriver --exclude issue --exclude issue-${{ matrix.browser }} --exclude bug-infrastructure --exclude bug-infrastructure-${{ matrix.browser }}"

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run Robot
        run: ./.github/robot-docker/run-tests-in-virtual-screen-with-rerun.sh

      - name: Save Reports
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: ${{ matrix.browser }}-reports
          path: reports

      - name: Clean Reports
        run: rm -rf reports

  # Robot-Legacy:
  #   name: Test Robot
  #   needs: Build-Documentation
  #   runs-on: [self-hosted, Windows]
  #   timeout-minutes: 150
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       browser: [ie]

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Run SELENIUM Robot
  #       uses: ./.github/robot
  #       with:
  #         storybook-url: https://${{ github.repository_owner }}.github.io/hv-uikit-react/${{env.DOCUMENTATION_PUBLISH_FOLDER}}
  #         browser: ${{ matrix.browser }}
  #         excludes: |
  #           pa11y
  #           bug-${{ matrix.browser }}
  #           bug-${{ matrix.browser }}-webdriver
  #           issue
  #           issue-${{ matrix.browser }}
  #           bug-infrastructure
  #           bug-infrastructure-${{ matrix.browser }}
  #         output-dir: reports
  #         processes: 3
  #         path: ./automation/robot/storybook/core

  #     - name: Save Reports
  #       uses: actions/upload-artifact@v1
  #       if: always()
  #       with:
  #         name: ${{ matrix.browser }}-reports
  #         path: reports

  #     - name: Clean Reports
  #       run: rm -rf reports

  CleanupDeployment:
    name: Cleanup Deployment
    runs-on: [self-hosted, Linux]

    steps:
      - name: mark environment as deactivated
        uses: bobheadxi/deployments@master
        with:
          step: deactivate-env
          token: ${{ secrets.GITHUB_TOKEN }}
          env: ${{env.DOCUMENTATION_PUBLISH_FOLDER}}
          desc: Deployment was pruned

  Notify-End:
    name: Notify End
    #    needs: [Static-Checks, Build-Documentation, Robot_pa11y, Robot, Robot-Legacy]
    needs: [Static-Checks, Build-Documentation, Robot, CleanupDeployment]
    if: always()
    runs-on: [self-hosted, Linux]

    steps:
      - uses: technote-space/workflow-conclusion-action@v1
      - name: generate conclusion color
        id: conclusion_color
        uses: actions/github-script@0.9.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            if("${{ env.WORKFLOW_CONCLUSION }}" === "success") core.exportVariable("COLOR", "#63A621")
            else if("${{ env.WORKFLOW_CONCLUSION }}" === "failure") core.exportVariable("COLOR", "#C62828")
            else if("${{ env.WORKFLOW_CONCLUSION }}" === "neutral") core.exportVariable("COLOR", "#BCBCBC")
            else if("${{ env.WORKFLOW_CONCLUSION }}" === "cancelled") core.exportVariable("COLOR", "#FFD00A")
            else if("${{ env.WORKFLOW_CONCLUSION }}" === "timed_out") core.exportVariable("COLOR", "#FFD00A")

      - name: Notify
        uses: hbfernandes/slack-action@1.0
        env:
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          CONCLUSION: ${{ env.WORKFLOW_CONCLUSION }}
        with:
          args: |
            {
              "channel": "ui-kit-eng-ci",
              "attachments": [
                {
                  "mrkdwn_in": ["text"],
                  "color": "${{env.COLOR}}",
                  "title": "${{ github.workflow }} (${{github.ref}}) build finished - ${{ env.CONCLUSION }}",
                  "text": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}"
                }
              ]
            }

  Release:
    if: github.event_name == 'schedule' && !contains(github.event.head_commit.message, '${ RELEASE_COMMIT_MESSAGE }')
    needs: [Static-Checks, Build-Documentation, Robot, CleanupDeployment]
    runs-on: [self-hosted, Linux]
    steps:
      - name: Trigger Release
        uses: actions/github-script@0.8.0
        with:
          # repo scope token is required to generate a dispatch event
          github-token: ${{ secrets.BUILD_TOKEN }}
          script: |
            await github.repos.createDispatchEvent({
              owner: context.repo.owner,
              repo: context.repo.repo,
              event_type: 'release'
            })
