name: Applitools
run-name: v2.x Applitools
on:
  workflow_dispatch:

jobs:
  Build-Storybook:
    name: Build Storybook
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install
        run: npm ci

      - name: Bootstrap
        run: npm run bootstrap

      - name: Build Storybook
        run: npm run build-documentation

      - name: Archive Storybook
        uses: actions/upload-artifact@v2
        with:
          name: storybook
          path: ${{ github.workspace }}/dist

      - name: Clean Folders
        if: always()
        run: rm -rf ${{ github.workspace }}/dist

  Applitools:
    name: Applitools Storybook Visual Testing
    needs: [Build-Storybook]
    runs-on: ubuntu-latest

    services:
      storybook:
        image: nginx
        ports:
          - 9001:80
        volumes:
          - ${{ github.workspace }}/dist:/usr/share/nginx/html
        options: >-
          --name storybook
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Fetch Storybook
        uses: actions/download-artifact@v2
        with:
          name: storybook
          path: ${{ github.workspace }}/dist

      - name: Restart nginx
        uses: docker://docker
        with:
          args: docker restart storybook

      - name: Required Dependencies
        run: |
          sudo apt-get -y update 
          sudo apt-get install -y libgconf-2-4 libatk1.0-0 libatk-bridge2.0-0 libgdk-pixbuf2.0-0 libgtk-3-0 libgbm-dev libnss3-dev libxss-dev

      - name: Install automation/Applitools
        run: |
          cd ${{ github.workspace }}/automation/applitools
          npm ci

      - name: Run Applitools Storybook Visual Testing
        env:
          APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
        run: |
          cd ${{ github.workspace }}/automation/applitools
          APPLITOOLS_SHOW_LOGS=true npx eyes-storybook -u http://localhost:9001 > applitools-logs.txt

      - name: Archive Logs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: applitools-logs
          path: ${{ github.workspace }}/automation/applitools/applitools-logs.txt

      - name: Clean Folders
        if: always()
        run: rm -rf ${{ github.workspace }}/dist
