name: Run Full Tests on Branch
on:
  workflow_dispatch:

# flow:
# +------------------------------------+     +---------------------------------+
# |Static-Checks (Licenses, Lint, Jest)|     |Build-Storybook (v2 and v3 store)|
# +----------+-------------------------+     +--------------+------------------+
#            |                                              |
#            |                   +-----------+--------------+
#            |                   |           |              |
#            |             +-----v----+ +----v-----+ +------v----------------+
#            |             |A11Y-Tests| |Applitools| |Robot (chrome, firefox)|
#            |             +-----+----+ +----+-----+ +------+----------------+
#            |                   |           |              |
#            +-------------------+-----+-----+--------------+
#                                      |
#                                +----------+
#                                |Notify End|
#                                +----------+

jobs:
  Static-Checks:
    name: Licenses, Lint, Jest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Install
        run: npm ci

      - name: Bootstrap
        run: npm run bootstrap

      - name: License Check
        run: npm run license-check

      - name: Lint
        run: npm run lint

      - name: Test
        run: npm run test

  Build-Storybook-V2-Store:
    name: Build Storybook (v2 store)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Install
        run: |
          npm config set @hv:registry ${RESOLVE_REGISTRY}
          npm ci

      - name: Bootstrap
        run: npm run bootstrap

      - name: Build Storybook
        run: V2_COMPAT_STORY_STORE=TRUE npm run build-documentation

      - name: Archive Storybook
        uses: actions/upload-artifact@v2
        with:
          name: storybook-v2
          path: ${{ github.workspace }}/dist

      - name: Clean Folders
        if: always()
        run: rm -rf ${{ github.workspace }}/dist

  Build-Storybook-V3-Store:
    name: Build Storybook (v3 store)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Install
        run: npm ci

      - name: Bootstrap
        run: npm run bootstrap

      - name: Build
        run: npm run build

      - name: Build Storybook
        run: |
          npm run build-documentation

      - name: Archive Storybook
        uses: actions/upload-artifact@v2
        with:
          name: storybook-v3
          path: ${{ github.workspace }}/dist

      - name: Clean Folders
        if: always()
        run: rm -rf ${{ github.workspace }}/dist

  A11Y-Tests:
    name: Accessibility Tests
    needs: [Build-Storybook-V3-Store]
    runs-on: ubuntu-latest

    services:
      storybook:
        image: nginx
        ports:
          - 9001:80
        volumes:
          - ${{ github.workspace }}/dist:/usr/share/nginx/html
        options: >-
          --name storybook

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Fetch Storybook
        uses: actions/download-artifact@v2
        with:
          name: storybook-v3
          path: ${{ github.workspace }}/dist

      - name: Restart nginx
        uses: docker://docker
        with:
          args: docker restart storybook

      - name: Install automation/pa11y
        run: |
          cd ${{ github.workspace }}/automation/pa11y
          npm ci

      - name: Test A11Y
        run: |
          cd ${{ github.workspace }}/automation/pa11y
          STORYBOOK_URL=http://localhost:9001 npm run pa11y-ci

      - name: Clean Folders
        if: always()
        run: rm -rf ${{ github.workspace }}/dist

  Applitools:
    name: Applitools Storybook Visual Testing
    needs: [Build-Storybook-V2-Store]
    runs-on: ubuntu-latest

    services:
      storybook:
        image: nginx
        ports:
          - 9001:80
        volumes:
          - ${{ github.workspace }}/dist:/usr/share/nginx/html
        options: >-
          --name storybook

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Fetch Storybook
        uses: actions/download-artifact@v2
        with:
          name: storybook-v2
          path: ${{ github.workspace }}/dist

      - name: Restart nginx
        uses: docker://docker
        with:
          args: docker restart storybook

      - name: Install automation/Applitools
        run: |
          cd ${{ github.workspace }}/automation/applitools
          npm ci

      - name: run Applitools Storybook Visual Testing
        env:
          APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
        run: |
          cd ${{ github.workspace }}/automation/applitools
          npx eyes-storybook -u http://localhost:9001 > applitools-logs.txt

      - name: Archive Logs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: applitools-logs
          path: ${{ github.workspace }}/automation/applitools/applitools-logs.txt

      - name: Clean Folders
        if: always()
        run: rm -rf ${{ github.workspace }}/dist

  Robot:
    name: Test Robot
    needs: [Build-Storybook-V3-Store]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        browser: [firefox, chrome]
    container:
      image: joaoeg/docker-robot-framework:0.1
      options: --shm-size=6g -u 1001
      env:
        BROWSER: ${{ matrix.browser }}
        ROBOT_TESTS_DIR: ./automation/robot/storybook/core
        ROBOT_REPORTS_DIR: ./reports
        ROBOT_THREADS: 4
        ROBOT_OPTIONS: "--variable STORYBOOK_URL:http://storybook --variable BROWSER:${{ matrix.browser }} --exclude bug-${{ matrix.browser }} --exclude bug-${{ matrix.browser }}-webdriver --exclude issue --exclude issue-${{ matrix.browser }} --exclude bug-infrastructure --exclude bug-infrastructure-${{ matrix.browser }}"

    services:
      storybook:
        image: nginx
        volumes:
          - ${{ github.workspace }}/dist:/usr/share/nginx/html
        options: >-
          --name storybook

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch Storybook
        uses: actions/download-artifact@v2
        with:
          name: storybook-v3
          path: ${{ github.workspace }}/dist

      - name: Restart nginx
        uses: docker://docker
        with:
          args: docker restart storybook

      - name: Run Robot
        run: ./.github/robot-docker/run-tests-in-virtual-screen-with-rerun.sh

      - name: Save Reports
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: ${{ matrix.browser }}-reports
          path: ${{ github.workspace }}/reports

      - name: Clean Folders
        if: always()
        run: |
          rm -rf ${{ github.workspace }}/dist
          rm -rf ${{ github.workspace }}/reports

  Notify-End:
    name: Notify End
    needs: [Static-Checks, A11Y-Tests, Applitools, Robot]
    if: always()
    runs-on: ubuntu-latest

    steps:
      # delete storybook artifacts
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: |
            storybook-v2
            storybook-v3

      - uses: technote-space/workflow-conclusion-action@v1

      - name: generate conclusion color
        id: conclusion_color
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            if("${{ env.WORKFLOW_CONCLUSION }}" === "success") core.exportVariable("COLOR", "#63A621")
            else if("${{ env.WORKFLOW_CONCLUSION }}" === "failure") core.exportVariable("COLOR", "#C62828")
            else if("${{ env.WORKFLOW_CONCLUSION }}" === "neutral") core.exportVariable("COLOR", "#BCBCBC")
            else if("${{ env.WORKFLOW_CONCLUSION }}" === "cancelled") core.exportVariable("COLOR", "#FFD00A")
            else if("${{ env.WORKFLOW_CONCLUSION }}" === "timed_out") core.exportVariable("COLOR", "#FFD00A")

      - name: Notify
        uses: hbfernandes/slack-action@1.0
        env:
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          CONCLUSION: ${{ env.WORKFLOW_CONCLUSION }}
        with:
          args: |
            {
              "channel": "ui-kit-eng-ci",
              "attachments": [
                {
                  "mrkdwn_in": ["text"],
                  "color": "${{env.COLOR}}",
                  "title": "${{ github.workflow }} (${{github.ref}}) build finished - ${{ env.CONCLUSION }}",
                  "text": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}"
                }
              ]
            }
