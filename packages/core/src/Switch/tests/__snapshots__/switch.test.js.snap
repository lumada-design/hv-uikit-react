// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Switch input area hover input can be hovered in 1`] = `
<WithStyles(WithLabels)
  checked={false}
  classes={Object {}}
  labels={
    Object {
      "left": "Left",
      "right": "Right",
    }
  }
  showLabels={true}
>
  <WithLabels
    checked={false}
    classes={
      Object {
        "checked": "HvSwitch-checked",
        "checkedIcon": "HvSwitch-checkedIcon",
        "disabled": "HvSwitch-disabled",
        "disabledLabel": "HvSwitch-disabledLabel",
        "labelDeselected": "HvSwitch-labelDeselected",
        "labelSelected": "HvSwitch-labelSelected",
        "leftLabel": "HvSwitch-leftLabel",
        "rightLabel": "HvSwitch-rightLabel",
        "root": "HvSwitch-root",
        "switch": "HvSwitch-switch",
        "switchBase": "HvSwitch-switchBase",
        "thumb": "HvSwitch-thumb",
        "track": "HvSwitch-track",
      }
    }
    labels={
      Object {
        "left": "Left",
        "right": "Right",
      }
    }
    showLabels={true}
  >
    <HvSwitch
      checked={false}
      classes={
        Object {
          "checked": "HvSwitch-checked",
          "checkedIcon": "HvSwitch-checkedIcon",
          "disabled": "HvSwitch-disabled",
          "disabledLabel": "HvSwitch-disabledLabel",
          "labelDeselected": "HvSwitch-labelDeselected",
          "labelSelected": "HvSwitch-labelSelected",
          "leftLabel": "HvSwitch-leftLabel",
          "rightLabel": "HvSwitch-rightLabel",
          "root": "HvSwitch-root",
          "switch": "HvSwitch-switch",
          "switchBase": "HvSwitch-switchBase",
          "thumb": "HvSwitch-thumb",
          "track": "HvSwitch-track",
        }
      }
      labels={
        Object {
          "left": "Left",
          "right": "Right",
        }
      }
      showLabels={true}
    >
      <div
        className="HvSwitch-root"
      >
        <div>
          <WithStyles(ForwardRef)
            aria-disabled={false}
            className="HvSwitch-leftLabel HvSwitch-labelSelected"
            onClick={[Function]}
          >
            <ForwardRef
              aria-disabled={false}
              className="HvSwitch-leftLabel HvSwitch-labelSelected"
              classes={
                Object {
                  "3xlTitle": "HvTypography-3xlTitle",
                  "4xlTitle": "HvTypography-4xlTitle",
                  "5xlTitle": "HvTypography-5xlTitle",
                  "disabledButtonText": "HvTypography-disabledButtonText",
                  "highlightText": "HvTypography-highlightText",
                  "infoText": "HvTypography-infoText",
                  "inlineLink": "HvTypography-inlineLink",
                  "lTitle": "HvTypography-lTitle",
                  "labelText": "HvTypography-labelText",
                  "mTitle": "HvTypography-mTitle",
                  "normalText": "HvTypography-normalText",
                  "placeholderText": "HvTypography-placeholderText",
                  "root": "HvTypography-root",
                  "sLink": "HvTypography-sLink",
                  "sText": "HvTypography-sText",
                  "sTitle": "HvTypography-sTitle",
                  "selectedNavText": "HvTypography-selectedNavText",
                  "selectedText": "HvTypography-selectedText",
                  "vizText": "HvTypography-vizText",
                  "xlTitle": "HvTypography-xlTitle",
                  "xsTitle": "HvTypography-xsTitle",
                  "xxlTitle": "HvTypography-xxlTitle",
                  "xxsTitle": "HvTypography-xxsTitle",
                }
              }
              onClick={[Function]}
            >
              <p
                aria-disabled={false}
                className="HvSwitch-leftLabel HvSwitch-labelSelected HvTypography-root HvTypography-normalText"
                onClick={[Function]}
              >
                Left
              </p>
            </ForwardRef>
          </WithStyles(ForwardRef)>
        </div>
        <WithStyles(Focus)
          strategy="card"
          useFalseFocus={true}
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            strategy="card"
            useFalseFocus={true}
          >
            <ConditionalWrapper
              condition={true}
              wrapper={[Function]}
            >
              <div
                className="HvFocus-externalReference"
              >
                <div
                  aria-checked={false}
                  aria-disabled={false}
                  className="HvSwitch-root HvFocus-root HvFocus-focusDisabled"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  role="checkbox"
                  selected={false}
                  tabIndex="0"
                >
                  <WithStyles(ForwardRef(Switch))
                    checked={false}
                    classes={
                      Object {
                        "checked": "HvSwitch-checked",
                        "disabled": "HvSwitch-disabled",
                        "root": "HvSwitch-switch",
                        "switchBase": "HvSwitch-switchBase",
                        "thumb": "HvSwitch-thumb",
                        "track": "HvSwitch-track",
                      }
                    }
                    disabled={false}
                    inputProps={
                      Object {
                        "aria-label": "base switch",
                      }
                    }
                    tabIndex="-1"
                    value=""
                  >
                    <ForwardRef(Switch)
                      checked={false}
                      classes={
                        Object {
                          "checked": "Mui-checked HvSwitch-checked",
                          "colorPrimary": "MuiSwitch-colorPrimary",
                          "colorSecondary": "MuiSwitch-colorSecondary",
                          "disabled": "Mui-disabled HvSwitch-disabled",
                          "edgeEnd": "MuiSwitch-edgeEnd",
                          "edgeStart": "MuiSwitch-edgeStart",
                          "input": "MuiSwitch-input",
                          "root": "MuiSwitch-root HvSwitch-switch",
                          "sizeSmall": "MuiSwitch-sizeSmall",
                          "switchBase": "MuiSwitch-switchBase HvSwitch-switchBase",
                          "thumb": "MuiSwitch-thumb HvSwitch-thumb",
                          "track": "MuiSwitch-track HvSwitch-track",
                        }
                      }
                      disabled={false}
                      inputProps={
                        Object {
                          "aria-label": "base switch",
                        }
                      }
                      tabIndex="-1"
                      value=""
                    >
                      <span
                        className="MuiSwitch-root HvSwitch-switch"
                      >
                        <WithStyles(ForwardRef(SwitchBase))
                          checked={false}
                          checkedIcon={
                            <span
                              className="MuiSwitch-thumb HvSwitch-thumb"
                            />
                          }
                          classes={
                            Object {
                              "checked": "Mui-checked HvSwitch-checked",
                              "disabled": "Mui-disabled HvSwitch-disabled",
                              "input": "MuiSwitch-input",
                              "root": "MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary",
                            }
                          }
                          disabled={false}
                          icon={
                            <span
                              className="MuiSwitch-thumb HvSwitch-thumb"
                            />
                          }
                          inputProps={
                            Object {
                              "aria-label": "base switch",
                            }
                          }
                          tabIndex="-1"
                          type="checkbox"
                          value=""
                        >
                          <ForwardRef(SwitchBase)
                            checked={false}
                            checkedIcon={
                              <span
                                className="MuiSwitch-thumb HvSwitch-thumb"
                              />
                            }
                            classes={
                              Object {
                                "checked": "PrivateSwitchBase-checked-126 Mui-checked HvSwitch-checked",
                                "disabled": "PrivateSwitchBase-disabled-127 Mui-disabled HvSwitch-disabled",
                                "input": "PrivateSwitchBase-input-128 MuiSwitch-input",
                                "root": "PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary",
                              }
                            }
                            disabled={false}
                            icon={
                              <span
                                className="MuiSwitch-thumb HvSwitch-thumb"
                              />
                            }
                            inputProps={
                              Object {
                                "aria-label": "base switch",
                              }
                            }
                            tabIndex="-1"
                            type="checkbox"
                            value=""
                          >
                            <WithStyles(ForwardRef(IconButton))
                              className="PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary"
                              component="span"
                              disabled={false}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <ForwardRef(IconButton)
                                className="PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary"
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                component="span"
                                disabled={false}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  centerRipple={true}
                                  className="MuiIconButton-root PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary"
                                  component="span"
                                  disabled={false}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                >
                                  <ForwardRef(ButtonBase)
                                    centerRipple={true}
                                    className="MuiIconButton-root PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    disabled={false}
                                    focusRipple={true}
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          aria-label="base switch"
                                          checked={false}
                                          className="PrivateSwitchBase-input-128 MuiSwitch-input"
                                          disabled={false}
                                          onChange={[Function]}
                                          tabIndex="-1"
                                          type="checkbox"
                                          value=""
                                        />
                                        <span
                                          className="MuiSwitch-thumb HvSwitch-thumb"
                                        />
                                      </span>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                          </ForwardRef(SwitchBase)>
                        </WithStyles(ForwardRef(SwitchBase))>
                        <span
                          className="MuiSwitch-track HvSwitch-track"
                        />
                      </span>
                    </ForwardRef(Switch)>
                  </WithStyles(ForwardRef(Switch))>
                </div>
              </div>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
        <div>
          <WithStyles(ForwardRef)
            aria-disabled={false}
            className="HvSwitch-rightLabel HvSwitch-labelSelected"
            onClick={[Function]}
          >
            <ForwardRef
              aria-disabled={false}
              className="HvSwitch-rightLabel HvSwitch-labelSelected"
              classes={
                Object {
                  "3xlTitle": "HvTypography-3xlTitle",
                  "4xlTitle": "HvTypography-4xlTitle",
                  "5xlTitle": "HvTypography-5xlTitle",
                  "disabledButtonText": "HvTypography-disabledButtonText",
                  "highlightText": "HvTypography-highlightText",
                  "infoText": "HvTypography-infoText",
                  "inlineLink": "HvTypography-inlineLink",
                  "lTitle": "HvTypography-lTitle",
                  "labelText": "HvTypography-labelText",
                  "mTitle": "HvTypography-mTitle",
                  "normalText": "HvTypography-normalText",
                  "placeholderText": "HvTypography-placeholderText",
                  "root": "HvTypography-root",
                  "sLink": "HvTypography-sLink",
                  "sText": "HvTypography-sText",
                  "sTitle": "HvTypography-sTitle",
                  "selectedNavText": "HvTypography-selectedNavText",
                  "selectedText": "HvTypography-selectedText",
                  "vizText": "HvTypography-vizText",
                  "xlTitle": "HvTypography-xlTitle",
                  "xsTitle": "HvTypography-xsTitle",
                  "xxlTitle": "HvTypography-xxlTitle",
                  "xxsTitle": "HvTypography-xxsTitle",
                }
              }
              onClick={[Function]}
            >
              <p
                aria-disabled={false}
                className="HvSwitch-rightLabel HvSwitch-labelSelected HvTypography-root HvTypography-normalText"
                onClick={[Function]}
              >
                Right
              </p>
            </ForwardRef>
          </WithStyles(ForwardRef)>
        </div>
      </div>
    </HvSwitch>
  </WithLabels>
</WithStyles(WithLabels)>
`;

exports[`Switch input area hover input can be hovered out 1`] = `
<WithStyles(WithLabels)
  checked={false}
  classes={Object {}}
  labels={
    Object {
      "left": "Left",
      "right": "Right",
    }
  }
  showLabels={true}
>
  <WithLabels
    checked={false}
    classes={
      Object {
        "checked": "HvSwitch-checked",
        "checkedIcon": "HvSwitch-checkedIcon",
        "disabled": "HvSwitch-disabled",
        "disabledLabel": "HvSwitch-disabledLabel",
        "labelDeselected": "HvSwitch-labelDeselected",
        "labelSelected": "HvSwitch-labelSelected",
        "leftLabel": "HvSwitch-leftLabel",
        "rightLabel": "HvSwitch-rightLabel",
        "root": "HvSwitch-root",
        "switch": "HvSwitch-switch",
        "switchBase": "HvSwitch-switchBase",
        "thumb": "HvSwitch-thumb",
        "track": "HvSwitch-track",
      }
    }
    labels={
      Object {
        "left": "Left",
        "right": "Right",
      }
    }
    showLabels={true}
  >
    <HvSwitch
      checked={false}
      classes={
        Object {
          "checked": "HvSwitch-checked",
          "checkedIcon": "HvSwitch-checkedIcon",
          "disabled": "HvSwitch-disabled",
          "disabledLabel": "HvSwitch-disabledLabel",
          "labelDeselected": "HvSwitch-labelDeselected",
          "labelSelected": "HvSwitch-labelSelected",
          "leftLabel": "HvSwitch-leftLabel",
          "rightLabel": "HvSwitch-rightLabel",
          "root": "HvSwitch-root",
          "switch": "HvSwitch-switch",
          "switchBase": "HvSwitch-switchBase",
          "thumb": "HvSwitch-thumb",
          "track": "HvSwitch-track",
        }
      }
      labels={
        Object {
          "left": "Left",
          "right": "Right",
        }
      }
      showLabels={true}
    >
      <div
        className="HvSwitch-root"
      >
        <div>
          <WithStyles(ForwardRef)
            aria-disabled={false}
            className="HvSwitch-leftLabel HvSwitch-labelSelected"
            onClick={[Function]}
          >
            <ForwardRef
              aria-disabled={false}
              className="HvSwitch-leftLabel HvSwitch-labelSelected"
              classes={
                Object {
                  "3xlTitle": "HvTypography-3xlTitle",
                  "4xlTitle": "HvTypography-4xlTitle",
                  "5xlTitle": "HvTypography-5xlTitle",
                  "disabledButtonText": "HvTypography-disabledButtonText",
                  "highlightText": "HvTypography-highlightText",
                  "infoText": "HvTypography-infoText",
                  "inlineLink": "HvTypography-inlineLink",
                  "lTitle": "HvTypography-lTitle",
                  "labelText": "HvTypography-labelText",
                  "mTitle": "HvTypography-mTitle",
                  "normalText": "HvTypography-normalText",
                  "placeholderText": "HvTypography-placeholderText",
                  "root": "HvTypography-root",
                  "sLink": "HvTypography-sLink",
                  "sText": "HvTypography-sText",
                  "sTitle": "HvTypography-sTitle",
                  "selectedNavText": "HvTypography-selectedNavText",
                  "selectedText": "HvTypography-selectedText",
                  "vizText": "HvTypography-vizText",
                  "xlTitle": "HvTypography-xlTitle",
                  "xsTitle": "HvTypography-xsTitle",
                  "xxlTitle": "HvTypography-xxlTitle",
                  "xxsTitle": "HvTypography-xxsTitle",
                }
              }
              onClick={[Function]}
            >
              <p
                aria-disabled={false}
                className="HvSwitch-leftLabel HvSwitch-labelSelected HvTypography-root HvTypography-normalText"
                onClick={[Function]}
              >
                Left
              </p>
            </ForwardRef>
          </WithStyles(ForwardRef)>
        </div>
        <WithStyles(Focus)
          strategy="card"
          useFalseFocus={true}
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            strategy="card"
            useFalseFocus={true}
          >
            <ConditionalWrapper
              condition={true}
              wrapper={[Function]}
            >
              <div
                className="HvFocus-externalReference"
              >
                <div
                  aria-checked={false}
                  aria-disabled={false}
                  className="HvSwitch-root HvFocus-root HvFocus-focusDisabled"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  role="checkbox"
                  selected={false}
                  tabIndex="0"
                >
                  <WithStyles(ForwardRef(Switch))
                    checked={false}
                    classes={
                      Object {
                        "checked": "HvSwitch-checked",
                        "disabled": "HvSwitch-disabled",
                        "root": "HvSwitch-switch",
                        "switchBase": "HvSwitch-switchBase",
                        "thumb": "HvSwitch-thumb",
                        "track": "HvSwitch-track",
                      }
                    }
                    disabled={false}
                    inputProps={
                      Object {
                        "aria-label": "base switch",
                      }
                    }
                    tabIndex="-1"
                    value=""
                  >
                    <ForwardRef(Switch)
                      checked={false}
                      classes={
                        Object {
                          "checked": "Mui-checked HvSwitch-checked",
                          "colorPrimary": "MuiSwitch-colorPrimary",
                          "colorSecondary": "MuiSwitch-colorSecondary",
                          "disabled": "Mui-disabled HvSwitch-disabled",
                          "edgeEnd": "MuiSwitch-edgeEnd",
                          "edgeStart": "MuiSwitch-edgeStart",
                          "input": "MuiSwitch-input",
                          "root": "MuiSwitch-root HvSwitch-switch",
                          "sizeSmall": "MuiSwitch-sizeSmall",
                          "switchBase": "MuiSwitch-switchBase HvSwitch-switchBase",
                          "thumb": "MuiSwitch-thumb HvSwitch-thumb",
                          "track": "MuiSwitch-track HvSwitch-track",
                        }
                      }
                      disabled={false}
                      inputProps={
                        Object {
                          "aria-label": "base switch",
                        }
                      }
                      tabIndex="-1"
                      value=""
                    >
                      <span
                        className="MuiSwitch-root HvSwitch-switch"
                      >
                        <WithStyles(ForwardRef(SwitchBase))
                          checked={false}
                          checkedIcon={
                            <span
                              className="MuiSwitch-thumb HvSwitch-thumb"
                            />
                          }
                          classes={
                            Object {
                              "checked": "Mui-checked HvSwitch-checked",
                              "disabled": "Mui-disabled HvSwitch-disabled",
                              "input": "MuiSwitch-input",
                              "root": "MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary",
                            }
                          }
                          disabled={false}
                          icon={
                            <span
                              className="MuiSwitch-thumb HvSwitch-thumb"
                            />
                          }
                          inputProps={
                            Object {
                              "aria-label": "base switch",
                            }
                          }
                          tabIndex="-1"
                          type="checkbox"
                          value=""
                        >
                          <ForwardRef(SwitchBase)
                            checked={false}
                            checkedIcon={
                              <span
                                className="MuiSwitch-thumb HvSwitch-thumb"
                              />
                            }
                            classes={
                              Object {
                                "checked": "PrivateSwitchBase-checked-126 Mui-checked HvSwitch-checked",
                                "disabled": "PrivateSwitchBase-disabled-127 Mui-disabled HvSwitch-disabled",
                                "input": "PrivateSwitchBase-input-128 MuiSwitch-input",
                                "root": "PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary",
                              }
                            }
                            disabled={false}
                            icon={
                              <span
                                className="MuiSwitch-thumb HvSwitch-thumb"
                              />
                            }
                            inputProps={
                              Object {
                                "aria-label": "base switch",
                              }
                            }
                            tabIndex="-1"
                            type="checkbox"
                            value=""
                          >
                            <WithStyles(ForwardRef(IconButton))
                              className="PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary"
                              component="span"
                              disabled={false}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <ForwardRef(IconButton)
                                className="PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary"
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                component="span"
                                disabled={false}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  centerRipple={true}
                                  className="MuiIconButton-root PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary"
                                  component="span"
                                  disabled={false}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                >
                                  <ForwardRef(ButtonBase)
                                    centerRipple={true}
                                    className="MuiIconButton-root PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    disabled={false}
                                    focusRipple={true}
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          aria-label="base switch"
                                          checked={false}
                                          className="PrivateSwitchBase-input-128 MuiSwitch-input"
                                          disabled={false}
                                          onChange={[Function]}
                                          tabIndex="-1"
                                          type="checkbox"
                                          value=""
                                        />
                                        <span
                                          className="MuiSwitch-thumb HvSwitch-thumb"
                                        />
                                      </span>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                          </ForwardRef(SwitchBase)>
                        </WithStyles(ForwardRef(SwitchBase))>
                        <span
                          className="MuiSwitch-track HvSwitch-track"
                        />
                      </span>
                    </ForwardRef(Switch)>
                  </WithStyles(ForwardRef(Switch))>
                </div>
              </div>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
        <div>
          <WithStyles(ForwardRef)
            aria-disabled={false}
            className="HvSwitch-rightLabel HvSwitch-labelSelected"
            onClick={[Function]}
          >
            <ForwardRef
              aria-disabled={false}
              className="HvSwitch-rightLabel HvSwitch-labelSelected"
              classes={
                Object {
                  "3xlTitle": "HvTypography-3xlTitle",
                  "4xlTitle": "HvTypography-4xlTitle",
                  "5xlTitle": "HvTypography-5xlTitle",
                  "disabledButtonText": "HvTypography-disabledButtonText",
                  "highlightText": "HvTypography-highlightText",
                  "infoText": "HvTypography-infoText",
                  "inlineLink": "HvTypography-inlineLink",
                  "lTitle": "HvTypography-lTitle",
                  "labelText": "HvTypography-labelText",
                  "mTitle": "HvTypography-mTitle",
                  "normalText": "HvTypography-normalText",
                  "placeholderText": "HvTypography-placeholderText",
                  "root": "HvTypography-root",
                  "sLink": "HvTypography-sLink",
                  "sText": "HvTypography-sText",
                  "sTitle": "HvTypography-sTitle",
                  "selectedNavText": "HvTypography-selectedNavText",
                  "selectedText": "HvTypography-selectedText",
                  "vizText": "HvTypography-vizText",
                  "xlTitle": "HvTypography-xlTitle",
                  "xsTitle": "HvTypography-xsTitle",
                  "xxlTitle": "HvTypography-xxlTitle",
                  "xxsTitle": "HvTypography-xxsTitle",
                }
              }
              onClick={[Function]}
            >
              <p
                aria-disabled={false}
                className="HvSwitch-rightLabel HvSwitch-labelSelected HvTypography-root HvTypography-normalText"
                onClick={[Function]}
              >
                Right
              </p>
            </ForwardRef>
          </WithStyles(ForwardRef)>
        </div>
      </div>
    </HvSwitch>
  </WithLabels>
</WithStyles(WithLabels)>
`;

exports[`Switch label click label can be clicked 1`] = `
<WithStyles(WithLabels)
  checked={false}
  classes={Object {}}
  labels={
    Object {
      "left": "Left",
      "right": "Right",
    }
  }
  showLabels={true}
>
  <WithLabels
    checked={false}
    classes={
      Object {
        "checked": "HvSwitch-checked",
        "checkedIcon": "HvSwitch-checkedIcon",
        "disabled": "HvSwitch-disabled",
        "disabledLabel": "HvSwitch-disabledLabel",
        "labelDeselected": "HvSwitch-labelDeselected",
        "labelSelected": "HvSwitch-labelSelected",
        "leftLabel": "HvSwitch-leftLabel",
        "rightLabel": "HvSwitch-rightLabel",
        "root": "HvSwitch-root",
        "switch": "HvSwitch-switch",
        "switchBase": "HvSwitch-switchBase",
        "thumb": "HvSwitch-thumb",
        "track": "HvSwitch-track",
      }
    }
    labels={
      Object {
        "left": "Left",
        "right": "Right",
      }
    }
    showLabels={true}
  >
    <HvSwitch
      checked={false}
      classes={
        Object {
          "checked": "HvSwitch-checked",
          "checkedIcon": "HvSwitch-checkedIcon",
          "disabled": "HvSwitch-disabled",
          "disabledLabel": "HvSwitch-disabledLabel",
          "labelDeselected": "HvSwitch-labelDeselected",
          "labelSelected": "HvSwitch-labelSelected",
          "leftLabel": "HvSwitch-leftLabel",
          "rightLabel": "HvSwitch-rightLabel",
          "root": "HvSwitch-root",
          "switch": "HvSwitch-switch",
          "switchBase": "HvSwitch-switchBase",
          "thumb": "HvSwitch-thumb",
          "track": "HvSwitch-track",
        }
      }
      labels={
        Object {
          "left": "Left",
          "right": "Right",
        }
      }
      showLabels={true}
    >
      <div
        className="HvSwitch-root"
      >
        <div>
          <WithStyles(ForwardRef)
            aria-disabled={false}
            className="HvSwitch-leftLabel HvSwitch-labelSelected"
            onClick={[Function]}
          >
            <ForwardRef
              aria-disabled={false}
              className="HvSwitch-leftLabel HvSwitch-labelSelected"
              classes={
                Object {
                  "3xlTitle": "HvTypography-3xlTitle",
                  "4xlTitle": "HvTypography-4xlTitle",
                  "5xlTitle": "HvTypography-5xlTitle",
                  "disabledButtonText": "HvTypography-disabledButtonText",
                  "highlightText": "HvTypography-highlightText",
                  "infoText": "HvTypography-infoText",
                  "inlineLink": "HvTypography-inlineLink",
                  "lTitle": "HvTypography-lTitle",
                  "labelText": "HvTypography-labelText",
                  "mTitle": "HvTypography-mTitle",
                  "normalText": "HvTypography-normalText",
                  "placeholderText": "HvTypography-placeholderText",
                  "root": "HvTypography-root",
                  "sLink": "HvTypography-sLink",
                  "sText": "HvTypography-sText",
                  "sTitle": "HvTypography-sTitle",
                  "selectedNavText": "HvTypography-selectedNavText",
                  "selectedText": "HvTypography-selectedText",
                  "vizText": "HvTypography-vizText",
                  "xlTitle": "HvTypography-xlTitle",
                  "xsTitle": "HvTypography-xsTitle",
                  "xxlTitle": "HvTypography-xxlTitle",
                  "xxsTitle": "HvTypography-xxsTitle",
                }
              }
              onClick={[Function]}
            >
              <p
                aria-disabled={false}
                className="HvSwitch-leftLabel HvSwitch-labelSelected HvTypography-root HvTypography-normalText"
                onClick={[Function]}
              >
                Left
              </p>
            </ForwardRef>
          </WithStyles(ForwardRef)>
        </div>
        <WithStyles(Focus)
          strategy="card"
          useFalseFocus={true}
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            strategy="card"
            useFalseFocus={true}
          >
            <ConditionalWrapper
              condition={true}
              wrapper={[Function]}
            >
              <div
                className="HvFocus-externalReference"
              >
                <div
                  aria-checked={false}
                  aria-disabled={false}
                  className="HvSwitch-root HvFocus-root HvFocus-focusDisabled"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  role="checkbox"
                  selected={false}
                  tabIndex="0"
                >
                  <WithStyles(ForwardRef(Switch))
                    checked={false}
                    classes={
                      Object {
                        "checked": "HvSwitch-checked",
                        "disabled": "HvSwitch-disabled",
                        "root": "HvSwitch-switch",
                        "switchBase": "HvSwitch-switchBase",
                        "thumb": "HvSwitch-thumb",
                        "track": "HvSwitch-track",
                      }
                    }
                    disabled={false}
                    inputProps={
                      Object {
                        "aria-label": "base switch",
                      }
                    }
                    tabIndex="-1"
                    value=""
                  >
                    <ForwardRef(Switch)
                      checked={false}
                      classes={
                        Object {
                          "checked": "Mui-checked HvSwitch-checked",
                          "colorPrimary": "MuiSwitch-colorPrimary",
                          "colorSecondary": "MuiSwitch-colorSecondary",
                          "disabled": "Mui-disabled HvSwitch-disabled",
                          "edgeEnd": "MuiSwitch-edgeEnd",
                          "edgeStart": "MuiSwitch-edgeStart",
                          "input": "MuiSwitch-input",
                          "root": "MuiSwitch-root HvSwitch-switch",
                          "sizeSmall": "MuiSwitch-sizeSmall",
                          "switchBase": "MuiSwitch-switchBase HvSwitch-switchBase",
                          "thumb": "MuiSwitch-thumb HvSwitch-thumb",
                          "track": "MuiSwitch-track HvSwitch-track",
                        }
                      }
                      disabled={false}
                      inputProps={
                        Object {
                          "aria-label": "base switch",
                        }
                      }
                      tabIndex="-1"
                      value=""
                    >
                      <span
                        className="MuiSwitch-root HvSwitch-switch"
                      >
                        <WithStyles(ForwardRef(SwitchBase))
                          checked={false}
                          checkedIcon={
                            <span
                              className="MuiSwitch-thumb HvSwitch-thumb"
                            />
                          }
                          classes={
                            Object {
                              "checked": "Mui-checked HvSwitch-checked",
                              "disabled": "Mui-disabled HvSwitch-disabled",
                              "input": "MuiSwitch-input",
                              "root": "MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary",
                            }
                          }
                          disabled={false}
                          icon={
                            <span
                              className="MuiSwitch-thumb HvSwitch-thumb"
                            />
                          }
                          inputProps={
                            Object {
                              "aria-label": "base switch",
                            }
                          }
                          tabIndex="-1"
                          type="checkbox"
                          value=""
                        >
                          <ForwardRef(SwitchBase)
                            checked={false}
                            checkedIcon={
                              <span
                                className="MuiSwitch-thumb HvSwitch-thumb"
                              />
                            }
                            classes={
                              Object {
                                "checked": "PrivateSwitchBase-checked-126 Mui-checked HvSwitch-checked",
                                "disabled": "PrivateSwitchBase-disabled-127 Mui-disabled HvSwitch-disabled",
                                "input": "PrivateSwitchBase-input-128 MuiSwitch-input",
                                "root": "PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary",
                              }
                            }
                            disabled={false}
                            icon={
                              <span
                                className="MuiSwitch-thumb HvSwitch-thumb"
                              />
                            }
                            inputProps={
                              Object {
                                "aria-label": "base switch",
                              }
                            }
                            tabIndex="-1"
                            type="checkbox"
                            value=""
                          >
                            <WithStyles(ForwardRef(IconButton))
                              className="PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary"
                              component="span"
                              disabled={false}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <ForwardRef(IconButton)
                                className="PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary"
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                component="span"
                                disabled={false}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  centerRipple={true}
                                  className="MuiIconButton-root PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary"
                                  component="span"
                                  disabled={false}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                >
                                  <ForwardRef(ButtonBase)
                                    centerRipple={true}
                                    className="MuiIconButton-root PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    disabled={false}
                                    focusRipple={true}
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          aria-label="base switch"
                                          checked={false}
                                          className="PrivateSwitchBase-input-128 MuiSwitch-input"
                                          disabled={false}
                                          onChange={[Function]}
                                          tabIndex="-1"
                                          type="checkbox"
                                          value=""
                                        />
                                        <span
                                          className="MuiSwitch-thumb HvSwitch-thumb"
                                        />
                                      </span>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                          </ForwardRef(SwitchBase)>
                        </WithStyles(ForwardRef(SwitchBase))>
                        <span
                          className="MuiSwitch-track HvSwitch-track"
                        />
                      </span>
                    </ForwardRef(Switch)>
                  </WithStyles(ForwardRef(Switch))>
                </div>
              </div>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
        <div>
          <WithStyles(ForwardRef)
            aria-disabled={false}
            className="HvSwitch-rightLabel HvSwitch-labelSelected"
            onClick={[Function]}
          >
            <ForwardRef
              aria-disabled={false}
              className="HvSwitch-rightLabel HvSwitch-labelSelected"
              classes={
                Object {
                  "3xlTitle": "HvTypography-3xlTitle",
                  "4xlTitle": "HvTypography-4xlTitle",
                  "5xlTitle": "HvTypography-5xlTitle",
                  "disabledButtonText": "HvTypography-disabledButtonText",
                  "highlightText": "HvTypography-highlightText",
                  "infoText": "HvTypography-infoText",
                  "inlineLink": "HvTypography-inlineLink",
                  "lTitle": "HvTypography-lTitle",
                  "labelText": "HvTypography-labelText",
                  "mTitle": "HvTypography-mTitle",
                  "normalText": "HvTypography-normalText",
                  "placeholderText": "HvTypography-placeholderText",
                  "root": "HvTypography-root",
                  "sLink": "HvTypography-sLink",
                  "sText": "HvTypography-sText",
                  "sTitle": "HvTypography-sTitle",
                  "selectedNavText": "HvTypography-selectedNavText",
                  "selectedText": "HvTypography-selectedText",
                  "vizText": "HvTypography-vizText",
                  "xlTitle": "HvTypography-xlTitle",
                  "xsTitle": "HvTypography-xsTitle",
                  "xxlTitle": "HvTypography-xxlTitle",
                  "xxsTitle": "HvTypography-xxsTitle",
                }
              }
              onClick={[Function]}
            >
              <p
                aria-disabled={false}
                className="HvSwitch-rightLabel HvSwitch-labelSelected HvTypography-root HvTypography-normalText"
                onClick={[Function]}
              >
                Right
              </p>
            </ForwardRef>
          </WithStyles(ForwardRef)>
        </div>
      </div>
    </HvSwitch>
  </WithLabels>
</WithStyles(WithLabels)>
`;

exports[`Switch with Custom Configurations should render correctly 1`] = `
<WithStyles(WithLabels)
  checked={false}
  classes={Object {}}
  labels={
    Object {
      "left": "Left",
      "right": "Right",
    }
  }
  showLabels={true}
>
  <WithLabels
    checked={false}
    classes={
      Object {
        "checked": "HvSwitch-checked",
        "checkedIcon": "HvSwitch-checkedIcon",
        "disabled": "HvSwitch-disabled",
        "disabledLabel": "HvSwitch-disabledLabel",
        "labelDeselected": "HvSwitch-labelDeselected",
        "labelSelected": "HvSwitch-labelSelected",
        "leftLabel": "HvSwitch-leftLabel",
        "rightLabel": "HvSwitch-rightLabel",
        "root": "HvSwitch-root",
        "switch": "HvSwitch-switch",
        "switchBase": "HvSwitch-switchBase",
        "thumb": "HvSwitch-thumb",
        "track": "HvSwitch-track",
      }
    }
    labels={
      Object {
        "left": "Left",
        "right": "Right",
      }
    }
    showLabels={true}
  >
    <HvSwitch
      checked={false}
      classes={
        Object {
          "checked": "HvSwitch-checked",
          "checkedIcon": "HvSwitch-checkedIcon",
          "disabled": "HvSwitch-disabled",
          "disabledLabel": "HvSwitch-disabledLabel",
          "labelDeselected": "HvSwitch-labelDeselected",
          "labelSelected": "HvSwitch-labelSelected",
          "leftLabel": "HvSwitch-leftLabel",
          "rightLabel": "HvSwitch-rightLabel",
          "root": "HvSwitch-root",
          "switch": "HvSwitch-switch",
          "switchBase": "HvSwitch-switchBase",
          "thumb": "HvSwitch-thumb",
          "track": "HvSwitch-track",
        }
      }
      labels={
        Object {
          "left": "Left",
          "right": "Right",
        }
      }
      showLabels={true}
    >
      <div
        className="HvSwitch-root"
      >
        <div>
          <WithStyles(ForwardRef)
            aria-disabled={false}
            className="HvSwitch-leftLabel HvSwitch-labelSelected"
            onClick={[Function]}
          >
            <ForwardRef
              aria-disabled={false}
              className="HvSwitch-leftLabel HvSwitch-labelSelected"
              classes={
                Object {
                  "3xlTitle": "HvTypography-3xlTitle",
                  "4xlTitle": "HvTypography-4xlTitle",
                  "5xlTitle": "HvTypography-5xlTitle",
                  "disabledButtonText": "HvTypography-disabledButtonText",
                  "highlightText": "HvTypography-highlightText",
                  "infoText": "HvTypography-infoText",
                  "inlineLink": "HvTypography-inlineLink",
                  "lTitle": "HvTypography-lTitle",
                  "labelText": "HvTypography-labelText",
                  "mTitle": "HvTypography-mTitle",
                  "normalText": "HvTypography-normalText",
                  "placeholderText": "HvTypography-placeholderText",
                  "root": "HvTypography-root",
                  "sLink": "HvTypography-sLink",
                  "sText": "HvTypography-sText",
                  "sTitle": "HvTypography-sTitle",
                  "selectedNavText": "HvTypography-selectedNavText",
                  "selectedText": "HvTypography-selectedText",
                  "vizText": "HvTypography-vizText",
                  "xlTitle": "HvTypography-xlTitle",
                  "xsTitle": "HvTypography-xsTitle",
                  "xxlTitle": "HvTypography-xxlTitle",
                  "xxsTitle": "HvTypography-xxsTitle",
                }
              }
              onClick={[Function]}
            >
              <p
                aria-disabled={false}
                className="HvSwitch-leftLabel HvSwitch-labelSelected HvTypography-root HvTypography-normalText"
                onClick={[Function]}
              >
                Left
              </p>
            </ForwardRef>
          </WithStyles(ForwardRef)>
        </div>
        <WithStyles(Focus)
          strategy="card"
          useFalseFocus={true}
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            strategy="card"
            useFalseFocus={true}
          >
            <ConditionalWrapper
              condition={true}
              wrapper={[Function]}
            >
              <div
                className="HvFocus-externalReference"
              >
                <div
                  aria-checked={false}
                  aria-disabled={false}
                  className="HvSwitch-root HvFocus-root HvFocus-focusDisabled"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  role="checkbox"
                  selected={false}
                  tabIndex="0"
                >
                  <WithStyles(ForwardRef(Switch))
                    checked={false}
                    classes={
                      Object {
                        "checked": "HvSwitch-checked",
                        "disabled": "HvSwitch-disabled",
                        "root": "HvSwitch-switch",
                        "switchBase": "HvSwitch-switchBase",
                        "thumb": "HvSwitch-thumb",
                        "track": "HvSwitch-track",
                      }
                    }
                    disabled={false}
                    inputProps={
                      Object {
                        "aria-label": "base switch",
                      }
                    }
                    tabIndex="-1"
                    value=""
                  >
                    <ForwardRef(Switch)
                      checked={false}
                      classes={
                        Object {
                          "checked": "Mui-checked HvSwitch-checked",
                          "colorPrimary": "MuiSwitch-colorPrimary",
                          "colorSecondary": "MuiSwitch-colorSecondary",
                          "disabled": "Mui-disabled HvSwitch-disabled",
                          "edgeEnd": "MuiSwitch-edgeEnd",
                          "edgeStart": "MuiSwitch-edgeStart",
                          "input": "MuiSwitch-input",
                          "root": "MuiSwitch-root HvSwitch-switch",
                          "sizeSmall": "MuiSwitch-sizeSmall",
                          "switchBase": "MuiSwitch-switchBase HvSwitch-switchBase",
                          "thumb": "MuiSwitch-thumb HvSwitch-thumb",
                          "track": "MuiSwitch-track HvSwitch-track",
                        }
                      }
                      disabled={false}
                      inputProps={
                        Object {
                          "aria-label": "base switch",
                        }
                      }
                      tabIndex="-1"
                      value=""
                    >
                      <span
                        className="MuiSwitch-root HvSwitch-switch"
                      >
                        <WithStyles(ForwardRef(SwitchBase))
                          checked={false}
                          checkedIcon={
                            <span
                              className="MuiSwitch-thumb HvSwitch-thumb"
                            />
                          }
                          classes={
                            Object {
                              "checked": "Mui-checked HvSwitch-checked",
                              "disabled": "Mui-disabled HvSwitch-disabled",
                              "input": "MuiSwitch-input",
                              "root": "MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary",
                            }
                          }
                          disabled={false}
                          icon={
                            <span
                              className="MuiSwitch-thumb HvSwitch-thumb"
                            />
                          }
                          inputProps={
                            Object {
                              "aria-label": "base switch",
                            }
                          }
                          tabIndex="-1"
                          type="checkbox"
                          value=""
                        >
                          <ForwardRef(SwitchBase)
                            checked={false}
                            checkedIcon={
                              <span
                                className="MuiSwitch-thumb HvSwitch-thumb"
                              />
                            }
                            classes={
                              Object {
                                "checked": "PrivateSwitchBase-checked-126 Mui-checked HvSwitch-checked",
                                "disabled": "PrivateSwitchBase-disabled-127 Mui-disabled HvSwitch-disabled",
                                "input": "PrivateSwitchBase-input-128 MuiSwitch-input",
                                "root": "PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary",
                              }
                            }
                            disabled={false}
                            icon={
                              <span
                                className="MuiSwitch-thumb HvSwitch-thumb"
                              />
                            }
                            inputProps={
                              Object {
                                "aria-label": "base switch",
                              }
                            }
                            tabIndex="-1"
                            type="checkbox"
                            value=""
                          >
                            <WithStyles(ForwardRef(IconButton))
                              className="PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary"
                              component="span"
                              disabled={false}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <ForwardRef(IconButton)
                                className="PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary"
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                component="span"
                                disabled={false}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  centerRipple={true}
                                  className="MuiIconButton-root PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary"
                                  component="span"
                                  disabled={false}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                >
                                  <ForwardRef(ButtonBase)
                                    centerRipple={true}
                                    className="MuiIconButton-root PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    disabled={false}
                                    focusRipple={true}
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          aria-label="base switch"
                                          checked={false}
                                          className="PrivateSwitchBase-input-128 MuiSwitch-input"
                                          disabled={false}
                                          onChange={[Function]}
                                          tabIndex="-1"
                                          type="checkbox"
                                          value=""
                                        />
                                        <span
                                          className="MuiSwitch-thumb HvSwitch-thumb"
                                        />
                                      </span>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                          </ForwardRef(SwitchBase)>
                        </WithStyles(ForwardRef(SwitchBase))>
                        <span
                          className="MuiSwitch-track HvSwitch-track"
                        />
                      </span>
                    </ForwardRef(Switch)>
                  </WithStyles(ForwardRef(Switch))>
                </div>
              </div>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
        <div>
          <WithStyles(ForwardRef)
            aria-disabled={false}
            className="HvSwitch-rightLabel HvSwitch-labelSelected"
            onClick={[Function]}
          >
            <ForwardRef
              aria-disabled={false}
              className="HvSwitch-rightLabel HvSwitch-labelSelected"
              classes={
                Object {
                  "3xlTitle": "HvTypography-3xlTitle",
                  "4xlTitle": "HvTypography-4xlTitle",
                  "5xlTitle": "HvTypography-5xlTitle",
                  "disabledButtonText": "HvTypography-disabledButtonText",
                  "highlightText": "HvTypography-highlightText",
                  "infoText": "HvTypography-infoText",
                  "inlineLink": "HvTypography-inlineLink",
                  "lTitle": "HvTypography-lTitle",
                  "labelText": "HvTypography-labelText",
                  "mTitle": "HvTypography-mTitle",
                  "normalText": "HvTypography-normalText",
                  "placeholderText": "HvTypography-placeholderText",
                  "root": "HvTypography-root",
                  "sLink": "HvTypography-sLink",
                  "sText": "HvTypography-sText",
                  "sTitle": "HvTypography-sTitle",
                  "selectedNavText": "HvTypography-selectedNavText",
                  "selectedText": "HvTypography-selectedText",
                  "vizText": "HvTypography-vizText",
                  "xlTitle": "HvTypography-xlTitle",
                  "xsTitle": "HvTypography-xsTitle",
                  "xxlTitle": "HvTypography-xxlTitle",
                  "xxsTitle": "HvTypography-xxsTitle",
                }
              }
              onClick={[Function]}
            >
              <p
                aria-disabled={false}
                className="HvSwitch-rightLabel HvSwitch-labelSelected HvTypography-root HvTypography-normalText"
                onClick={[Function]}
              >
                Right
              </p>
            </ForwardRef>
          </WithStyles(ForwardRef)>
        </div>
      </div>
    </HvSwitch>
  </WithLabels>
</WithStyles(WithLabels)>
`;

exports[`Switch with no label display but with custom label configuration should render correctly 1`] = `
<WithStyles(WithLabels)
  checked={false}
  classes={Object {}}
  labels={
    Object {
      "left": "Left",
      "right": "Right",
    }
  }
  showLabels={true}
>
  <WithLabels
    checked={false}
    classes={
      Object {
        "checked": "HvSwitch-checked",
        "checkedIcon": "HvSwitch-checkedIcon",
        "disabled": "HvSwitch-disabled",
        "disabledLabel": "HvSwitch-disabledLabel",
        "labelDeselected": "HvSwitch-labelDeselected",
        "labelSelected": "HvSwitch-labelSelected",
        "leftLabel": "HvSwitch-leftLabel",
        "rightLabel": "HvSwitch-rightLabel",
        "root": "HvSwitch-root",
        "switch": "HvSwitch-switch",
        "switchBase": "HvSwitch-switchBase",
        "thumb": "HvSwitch-thumb",
        "track": "HvSwitch-track",
      }
    }
    labels={
      Object {
        "left": "Left",
        "right": "Right",
      }
    }
    showLabels={true}
  >
    <HvSwitch
      checked={false}
      classes={
        Object {
          "checked": "HvSwitch-checked",
          "checkedIcon": "HvSwitch-checkedIcon",
          "disabled": "HvSwitch-disabled",
          "disabledLabel": "HvSwitch-disabledLabel",
          "labelDeselected": "HvSwitch-labelDeselected",
          "labelSelected": "HvSwitch-labelSelected",
          "leftLabel": "HvSwitch-leftLabel",
          "rightLabel": "HvSwitch-rightLabel",
          "root": "HvSwitch-root",
          "switch": "HvSwitch-switch",
          "switchBase": "HvSwitch-switchBase",
          "thumb": "HvSwitch-thumb",
          "track": "HvSwitch-track",
        }
      }
      labels={
        Object {
          "left": "Left",
          "right": "Right",
        }
      }
      showLabels={true}
    >
      <div
        className="HvSwitch-root"
      >
        <div>
          <WithStyles(ForwardRef)
            aria-disabled={false}
            className="HvSwitch-leftLabel HvSwitch-labelSelected"
            onClick={[Function]}
          >
            <ForwardRef
              aria-disabled={false}
              className="HvSwitch-leftLabel HvSwitch-labelSelected"
              classes={
                Object {
                  "3xlTitle": "HvTypography-3xlTitle",
                  "4xlTitle": "HvTypography-4xlTitle",
                  "5xlTitle": "HvTypography-5xlTitle",
                  "disabledButtonText": "HvTypography-disabledButtonText",
                  "highlightText": "HvTypography-highlightText",
                  "infoText": "HvTypography-infoText",
                  "inlineLink": "HvTypography-inlineLink",
                  "lTitle": "HvTypography-lTitle",
                  "labelText": "HvTypography-labelText",
                  "mTitle": "HvTypography-mTitle",
                  "normalText": "HvTypography-normalText",
                  "placeholderText": "HvTypography-placeholderText",
                  "root": "HvTypography-root",
                  "sLink": "HvTypography-sLink",
                  "sText": "HvTypography-sText",
                  "sTitle": "HvTypography-sTitle",
                  "selectedNavText": "HvTypography-selectedNavText",
                  "selectedText": "HvTypography-selectedText",
                  "vizText": "HvTypography-vizText",
                  "xlTitle": "HvTypography-xlTitle",
                  "xsTitle": "HvTypography-xsTitle",
                  "xxlTitle": "HvTypography-xxlTitle",
                  "xxsTitle": "HvTypography-xxsTitle",
                }
              }
              onClick={[Function]}
            >
              <p
                aria-disabled={false}
                className="HvSwitch-leftLabel HvSwitch-labelSelected HvTypography-root HvTypography-normalText"
                onClick={[Function]}
              >
                Left
              </p>
            </ForwardRef>
          </WithStyles(ForwardRef)>
        </div>
        <WithStyles(Focus)
          strategy="card"
          useFalseFocus={true}
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            strategy="card"
            useFalseFocus={true}
          >
            <ConditionalWrapper
              condition={true}
              wrapper={[Function]}
            >
              <div
                className="HvFocus-externalReference"
              >
                <div
                  aria-checked={false}
                  aria-disabled={false}
                  className="HvSwitch-root HvFocus-root HvFocus-focusDisabled"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  role="checkbox"
                  selected={false}
                  tabIndex="0"
                >
                  <WithStyles(ForwardRef(Switch))
                    checked={false}
                    classes={
                      Object {
                        "checked": "HvSwitch-checked",
                        "disabled": "HvSwitch-disabled",
                        "root": "HvSwitch-switch",
                        "switchBase": "HvSwitch-switchBase",
                        "thumb": "HvSwitch-thumb",
                        "track": "HvSwitch-track",
                      }
                    }
                    disabled={false}
                    inputProps={
                      Object {
                        "aria-label": "base switch",
                      }
                    }
                    tabIndex="-1"
                    value=""
                  >
                    <ForwardRef(Switch)
                      checked={false}
                      classes={
                        Object {
                          "checked": "Mui-checked HvSwitch-checked",
                          "colorPrimary": "MuiSwitch-colorPrimary",
                          "colorSecondary": "MuiSwitch-colorSecondary",
                          "disabled": "Mui-disabled HvSwitch-disabled",
                          "edgeEnd": "MuiSwitch-edgeEnd",
                          "edgeStart": "MuiSwitch-edgeStart",
                          "input": "MuiSwitch-input",
                          "root": "MuiSwitch-root HvSwitch-switch",
                          "sizeSmall": "MuiSwitch-sizeSmall",
                          "switchBase": "MuiSwitch-switchBase HvSwitch-switchBase",
                          "thumb": "MuiSwitch-thumb HvSwitch-thumb",
                          "track": "MuiSwitch-track HvSwitch-track",
                        }
                      }
                      disabled={false}
                      inputProps={
                        Object {
                          "aria-label": "base switch",
                        }
                      }
                      tabIndex="-1"
                      value=""
                    >
                      <span
                        className="MuiSwitch-root HvSwitch-switch"
                      >
                        <WithStyles(ForwardRef(SwitchBase))
                          checked={false}
                          checkedIcon={
                            <span
                              className="MuiSwitch-thumb HvSwitch-thumb"
                            />
                          }
                          classes={
                            Object {
                              "checked": "Mui-checked HvSwitch-checked",
                              "disabled": "Mui-disabled HvSwitch-disabled",
                              "input": "MuiSwitch-input",
                              "root": "MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary",
                            }
                          }
                          disabled={false}
                          icon={
                            <span
                              className="MuiSwitch-thumb HvSwitch-thumb"
                            />
                          }
                          inputProps={
                            Object {
                              "aria-label": "base switch",
                            }
                          }
                          tabIndex="-1"
                          type="checkbox"
                          value=""
                        >
                          <ForwardRef(SwitchBase)
                            checked={false}
                            checkedIcon={
                              <span
                                className="MuiSwitch-thumb HvSwitch-thumb"
                              />
                            }
                            classes={
                              Object {
                                "checked": "PrivateSwitchBase-checked-126 Mui-checked HvSwitch-checked",
                                "disabled": "PrivateSwitchBase-disabled-127 Mui-disabled HvSwitch-disabled",
                                "input": "PrivateSwitchBase-input-128 MuiSwitch-input",
                                "root": "PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary",
                              }
                            }
                            disabled={false}
                            icon={
                              <span
                                className="MuiSwitch-thumb HvSwitch-thumb"
                              />
                            }
                            inputProps={
                              Object {
                                "aria-label": "base switch",
                              }
                            }
                            tabIndex="-1"
                            type="checkbox"
                            value=""
                          >
                            <WithStyles(ForwardRef(IconButton))
                              className="PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary"
                              component="span"
                              disabled={false}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <ForwardRef(IconButton)
                                className="PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary"
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                component="span"
                                disabled={false}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  centerRipple={true}
                                  className="MuiIconButton-root PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary"
                                  component="span"
                                  disabled={false}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                >
                                  <ForwardRef(ButtonBase)
                                    centerRipple={true}
                                    className="MuiIconButton-root PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    disabled={false}
                                    focusRipple={true}
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          aria-label="base switch"
                                          checked={false}
                                          className="PrivateSwitchBase-input-128 MuiSwitch-input"
                                          disabled={false}
                                          onChange={[Function]}
                                          tabIndex="-1"
                                          type="checkbox"
                                          value=""
                                        />
                                        <span
                                          className="MuiSwitch-thumb HvSwitch-thumb"
                                        />
                                      </span>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                          </ForwardRef(SwitchBase)>
                        </WithStyles(ForwardRef(SwitchBase))>
                        <span
                          className="MuiSwitch-track HvSwitch-track"
                        />
                      </span>
                    </ForwardRef(Switch)>
                  </WithStyles(ForwardRef(Switch))>
                </div>
              </div>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
        <div>
          <WithStyles(ForwardRef)
            aria-disabled={false}
            className="HvSwitch-rightLabel HvSwitch-labelSelected"
            onClick={[Function]}
          >
            <ForwardRef
              aria-disabled={false}
              className="HvSwitch-rightLabel HvSwitch-labelSelected"
              classes={
                Object {
                  "3xlTitle": "HvTypography-3xlTitle",
                  "4xlTitle": "HvTypography-4xlTitle",
                  "5xlTitle": "HvTypography-5xlTitle",
                  "disabledButtonText": "HvTypography-disabledButtonText",
                  "highlightText": "HvTypography-highlightText",
                  "infoText": "HvTypography-infoText",
                  "inlineLink": "HvTypography-inlineLink",
                  "lTitle": "HvTypography-lTitle",
                  "labelText": "HvTypography-labelText",
                  "mTitle": "HvTypography-mTitle",
                  "normalText": "HvTypography-normalText",
                  "placeholderText": "HvTypography-placeholderText",
                  "root": "HvTypography-root",
                  "sLink": "HvTypography-sLink",
                  "sText": "HvTypography-sText",
                  "sTitle": "HvTypography-sTitle",
                  "selectedNavText": "HvTypography-selectedNavText",
                  "selectedText": "HvTypography-selectedText",
                  "vizText": "HvTypography-vizText",
                  "xlTitle": "HvTypography-xlTitle",
                  "xsTitle": "HvTypography-xsTitle",
                  "xxlTitle": "HvTypography-xxlTitle",
                  "xxsTitle": "HvTypography-xxsTitle",
                }
              }
              onClick={[Function]}
            >
              <p
                aria-disabled={false}
                className="HvSwitch-rightLabel HvSwitch-labelSelected HvTypography-root HvTypography-normalText"
                onClick={[Function]}
              >
                Right
              </p>
            </ForwardRef>
          </WithStyles(ForwardRef)>
        </div>
      </div>
    </HvSwitch>
  </WithLabels>
</WithStyles(WithLabels)>
`;

exports[`Switch withStyles should render correctly 1`] = `
<WithStyles(WithLabels)
  checked={false}
  classes={Object {}}
  labels={
    Object {
      "left": "Left",
      "right": "Right",
    }
  }
  showLabels={true}
>
  <WithLabels
    checked={false}
    classes={
      Object {
        "checked": "HvSwitch-checked",
        "checkedIcon": "HvSwitch-checkedIcon",
        "disabled": "HvSwitch-disabled",
        "disabledLabel": "HvSwitch-disabledLabel",
        "labelDeselected": "HvSwitch-labelDeselected",
        "labelSelected": "HvSwitch-labelSelected",
        "leftLabel": "HvSwitch-leftLabel",
        "rightLabel": "HvSwitch-rightLabel",
        "root": "HvSwitch-root",
        "switch": "HvSwitch-switch",
        "switchBase": "HvSwitch-switchBase",
        "thumb": "HvSwitch-thumb",
        "track": "HvSwitch-track",
      }
    }
    labels={
      Object {
        "left": "Left",
        "right": "Right",
      }
    }
    showLabels={true}
  >
    <HvSwitch
      checked={false}
      classes={
        Object {
          "checked": "HvSwitch-checked",
          "checkedIcon": "HvSwitch-checkedIcon",
          "disabled": "HvSwitch-disabled",
          "disabledLabel": "HvSwitch-disabledLabel",
          "labelDeselected": "HvSwitch-labelDeselected",
          "labelSelected": "HvSwitch-labelSelected",
          "leftLabel": "HvSwitch-leftLabel",
          "rightLabel": "HvSwitch-rightLabel",
          "root": "HvSwitch-root",
          "switch": "HvSwitch-switch",
          "switchBase": "HvSwitch-switchBase",
          "thumb": "HvSwitch-thumb",
          "track": "HvSwitch-track",
        }
      }
      labels={
        Object {
          "left": "Left",
          "right": "Right",
        }
      }
      showLabels={true}
    >
      <div
        className="HvSwitch-root"
      >
        <div>
          <WithStyles(ForwardRef)
            aria-disabled={false}
            className="HvSwitch-leftLabel HvSwitch-labelSelected"
            onClick={[Function]}
          >
            <ForwardRef
              aria-disabled={false}
              className="HvSwitch-leftLabel HvSwitch-labelSelected"
              classes={
                Object {
                  "3xlTitle": "HvTypography-3xlTitle",
                  "4xlTitle": "HvTypography-4xlTitle",
                  "5xlTitle": "HvTypography-5xlTitle",
                  "disabledButtonText": "HvTypography-disabledButtonText",
                  "highlightText": "HvTypography-highlightText",
                  "infoText": "HvTypography-infoText",
                  "inlineLink": "HvTypography-inlineLink",
                  "lTitle": "HvTypography-lTitle",
                  "labelText": "HvTypography-labelText",
                  "mTitle": "HvTypography-mTitle",
                  "normalText": "HvTypography-normalText",
                  "placeholderText": "HvTypography-placeholderText",
                  "root": "HvTypography-root",
                  "sLink": "HvTypography-sLink",
                  "sText": "HvTypography-sText",
                  "sTitle": "HvTypography-sTitle",
                  "selectedNavText": "HvTypography-selectedNavText",
                  "selectedText": "HvTypography-selectedText",
                  "vizText": "HvTypography-vizText",
                  "xlTitle": "HvTypography-xlTitle",
                  "xsTitle": "HvTypography-xsTitle",
                  "xxlTitle": "HvTypography-xxlTitle",
                  "xxsTitle": "HvTypography-xxsTitle",
                }
              }
              onClick={[Function]}
            >
              <p
                aria-disabled={false}
                className="HvSwitch-leftLabel HvSwitch-labelSelected HvTypography-root HvTypography-normalText"
                onClick={[Function]}
              >
                Left
              </p>
            </ForwardRef>
          </WithStyles(ForwardRef)>
        </div>
        <WithStyles(Focus)
          strategy="card"
          useFalseFocus={true}
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            strategy="card"
            useFalseFocus={true}
          >
            <ConditionalWrapper
              condition={true}
              wrapper={[Function]}
            >
              <div
                className="HvFocus-externalReference"
              >
                <div
                  aria-checked={false}
                  aria-disabled={false}
                  className="HvSwitch-root HvFocus-root HvFocus-focusDisabled"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  role="checkbox"
                  selected={false}
                  tabIndex="0"
                >
                  <WithStyles(ForwardRef(Switch))
                    checked={false}
                    classes={
                      Object {
                        "checked": "HvSwitch-checked",
                        "disabled": "HvSwitch-disabled",
                        "root": "HvSwitch-switch",
                        "switchBase": "HvSwitch-switchBase",
                        "thumb": "HvSwitch-thumb",
                        "track": "HvSwitch-track",
                      }
                    }
                    disabled={false}
                    inputProps={
                      Object {
                        "aria-label": "base switch",
                      }
                    }
                    tabIndex="-1"
                    value=""
                  >
                    <ForwardRef(Switch)
                      checked={false}
                      classes={
                        Object {
                          "checked": "Mui-checked HvSwitch-checked",
                          "colorPrimary": "MuiSwitch-colorPrimary",
                          "colorSecondary": "MuiSwitch-colorSecondary",
                          "disabled": "Mui-disabled HvSwitch-disabled",
                          "edgeEnd": "MuiSwitch-edgeEnd",
                          "edgeStart": "MuiSwitch-edgeStart",
                          "input": "MuiSwitch-input",
                          "root": "MuiSwitch-root HvSwitch-switch",
                          "sizeSmall": "MuiSwitch-sizeSmall",
                          "switchBase": "MuiSwitch-switchBase HvSwitch-switchBase",
                          "thumb": "MuiSwitch-thumb HvSwitch-thumb",
                          "track": "MuiSwitch-track HvSwitch-track",
                        }
                      }
                      disabled={false}
                      inputProps={
                        Object {
                          "aria-label": "base switch",
                        }
                      }
                      tabIndex="-1"
                      value=""
                    >
                      <span
                        className="MuiSwitch-root HvSwitch-switch"
                      >
                        <WithStyles(ForwardRef(SwitchBase))
                          checked={false}
                          checkedIcon={
                            <span
                              className="MuiSwitch-thumb HvSwitch-thumb"
                            />
                          }
                          classes={
                            Object {
                              "checked": "Mui-checked HvSwitch-checked",
                              "disabled": "Mui-disabled HvSwitch-disabled",
                              "input": "MuiSwitch-input",
                              "root": "MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary",
                            }
                          }
                          disabled={false}
                          icon={
                            <span
                              className="MuiSwitch-thumb HvSwitch-thumb"
                            />
                          }
                          inputProps={
                            Object {
                              "aria-label": "base switch",
                            }
                          }
                          tabIndex="-1"
                          type="checkbox"
                          value=""
                        >
                          <ForwardRef(SwitchBase)
                            checked={false}
                            checkedIcon={
                              <span
                                className="MuiSwitch-thumb HvSwitch-thumb"
                              />
                            }
                            classes={
                              Object {
                                "checked": "PrivateSwitchBase-checked-126 Mui-checked HvSwitch-checked",
                                "disabled": "PrivateSwitchBase-disabled-127 Mui-disabled HvSwitch-disabled",
                                "input": "PrivateSwitchBase-input-128 MuiSwitch-input",
                                "root": "PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary",
                              }
                            }
                            disabled={false}
                            icon={
                              <span
                                className="MuiSwitch-thumb HvSwitch-thumb"
                              />
                            }
                            inputProps={
                              Object {
                                "aria-label": "base switch",
                              }
                            }
                            tabIndex="-1"
                            type="checkbox"
                            value=""
                          >
                            <WithStyles(ForwardRef(IconButton))
                              className="PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary"
                              component="span"
                              disabled={false}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <ForwardRef(IconButton)
                                className="PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary"
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                component="span"
                                disabled={false}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  centerRipple={true}
                                  className="MuiIconButton-root PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary"
                                  component="span"
                                  disabled={false}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                >
                                  <ForwardRef(ButtonBase)
                                    centerRipple={true}
                                    className="MuiIconButton-root PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    disabled={false}
                                    focusRipple={true}
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-125 MuiSwitch-switchBase HvSwitch-switchBase MuiSwitch-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          aria-label="base switch"
                                          checked={false}
                                          className="PrivateSwitchBase-input-128 MuiSwitch-input"
                                          disabled={false}
                                          onChange={[Function]}
                                          tabIndex="-1"
                                          type="checkbox"
                                          value=""
                                        />
                                        <span
                                          className="MuiSwitch-thumb HvSwitch-thumb"
                                        />
                                      </span>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                          </ForwardRef(SwitchBase)>
                        </WithStyles(ForwardRef(SwitchBase))>
                        <span
                          className="MuiSwitch-track HvSwitch-track"
                        />
                      </span>
                    </ForwardRef(Switch)>
                  </WithStyles(ForwardRef(Switch))>
                </div>
              </div>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
        <div>
          <WithStyles(ForwardRef)
            aria-disabled={false}
            className="HvSwitch-rightLabel HvSwitch-labelSelected"
            onClick={[Function]}
          >
            <ForwardRef
              aria-disabled={false}
              className="HvSwitch-rightLabel HvSwitch-labelSelected"
              classes={
                Object {
                  "3xlTitle": "HvTypography-3xlTitle",
                  "4xlTitle": "HvTypography-4xlTitle",
                  "5xlTitle": "HvTypography-5xlTitle",
                  "disabledButtonText": "HvTypography-disabledButtonText",
                  "highlightText": "HvTypography-highlightText",
                  "infoText": "HvTypography-infoText",
                  "inlineLink": "HvTypography-inlineLink",
                  "lTitle": "HvTypography-lTitle",
                  "labelText": "HvTypography-labelText",
                  "mTitle": "HvTypography-mTitle",
                  "normalText": "HvTypography-normalText",
                  "placeholderText": "HvTypography-placeholderText",
                  "root": "HvTypography-root",
                  "sLink": "HvTypography-sLink",
                  "sText": "HvTypography-sText",
                  "sTitle": "HvTypography-sTitle",
                  "selectedNavText": "HvTypography-selectedNavText",
                  "selectedText": "HvTypography-selectedText",
                  "vizText": "HvTypography-vizText",
                  "xlTitle": "HvTypography-xlTitle",
                  "xsTitle": "HvTypography-xsTitle",
                  "xxlTitle": "HvTypography-xxlTitle",
                  "xxsTitle": "HvTypography-xxsTitle",
                }
              }
              onClick={[Function]}
            >
              <p
                aria-disabled={false}
                className="HvSwitch-rightLabel HvSwitch-labelSelected HvTypography-root HvTypography-normalText"
                onClick={[Function]}
              >
                Right
              </p>
            </ForwardRef>
          </WithStyles(ForwardRef)>
        </div>
      </div>
    </HvSwitch>
  </WithLabels>
</WithStyles(WithLabels)>
`;
