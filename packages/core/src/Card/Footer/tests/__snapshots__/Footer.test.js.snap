// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Footer should render the actions and the dropdown accordingly 1`] = `
<WithStyles(Actions)
  actions={
    Array [
      Object {
        "id": "view",
        "label": "View",
      },
      Object {
        "id": "delete",
        "label": "Delete",
      },
      Object {
        "disabled": true,
        "id": "update",
        "label": "Update",
      },
    ]
  }
  id="id"
  maxVisibleActions={1}
>
  <Actions
    actions={
      Array [
        Object {
          "id": "view",
          "label": "View",
        },
        Object {
          "id": "delete",
          "label": "Delete",
        },
        Object {
          "disabled": true,
          "id": "update",
          "label": "Update",
        },
      ]
    }
    classes={
      Object {
        "actionContainer": "HvActions-actionContainer",
        "button": "HvActions-button",
        "dropDownMenu": "HvActions-dropDownMenu",
        "dropDownMenuButton": "HvActions-dropDownMenuButton",
        "dropDownMenuButtonSelected": "HvActions-dropDownMenuButtonSelected",
        "root": "HvActions-root",
      }
    }
    id="id"
    maxVisibleActions={1}
  >
    <div
      className="HvActions-root HvActions-actionContainer"
    >
      <WithStyles(HvButton)
        category="ghost"
        className="HvActions-button"
        disabled={false}
        id="view"
        key="id-0-action-view"
        onClick={[Function]}
      >
        <HvButton
          category="ghost"
          className="HvActions-button"
          classes={
            Object {
              "ghost": "HvButton-ghost",
              "ghostDisabled": "HvButton-ghostDisabled",
              "ghostSVG": "HvButton-ghostSVG",
              "ghostSecondary": "HvButton-ghostSecondary",
              "ghostSecondaryDisabled": "HvButton-ghostSecondaryDisabled",
              "ghostSecondarySVG": "HvButton-ghostSecondarySVG",
              "iconSVG": "HvButton-iconSVG",
              "primary": "HvButton-primary",
              "primaryDisabled": "HvButton-primaryDisabled",
              "primarySVG": "HvButton-primarySVG",
              "root": "HvButton-root",
              "rootIcon": "HvButton-rootIcon",
              "secondary": "HvButton-secondary",
              "secondaryDisabled": "HvButton-secondaryDisabled",
              "secondarySVG": "HvButton-secondarySVG",
              "semantic": "HvButton-semantic",
              "semanticDisabled": "HvButton-semanticDisabled",
              "semanticSVG": "HvButton-semanticSVG",
              "startIcon": "HvButton-startIcon",
            }
          }
          disabled={false}
          id="view"
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(Button))
            className="HvActions-button HvButton-ghostSVG"
            classes={
              Object {
                "containedPrimary": "HvButton-primary",
                "disabled": "HvButton-ghostDisabled",
                "outlinedPrimary": "HvButton-secondary",
                "root": "HvButton-root",
                "startIcon": "HvButton-startIcon",
                "textPrimary": "HvButton-ghost",
              }
            }
            color="primary"
            disableRipple={true}
            disabled={false}
            id="view"
            onClick={[Function]}
            variant="text"
          >
            <ForwardRef(Button)
              className="HvActions-button HvButton-ghostSVG"
              classes={
                Object {
                  "colorInherit": "MuiButton-colorInherit",
                  "contained": "MuiButton-contained",
                  "containedPrimary": "MuiButton-containedPrimary HvButton-primary",
                  "containedSecondary": "MuiButton-containedSecondary",
                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                  "disableElevation": "MuiButton-disableElevation",
                  "disabled": "Mui-disabled HvButton-ghostDisabled",
                  "endIcon": "MuiButton-endIcon",
                  "focusVisible": "Mui-focusVisible",
                  "fullWidth": "MuiButton-fullWidth",
                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                  "label": "MuiButton-label",
                  "outlined": "MuiButton-outlined",
                  "outlinedPrimary": "MuiButton-outlinedPrimary HvButton-secondary",
                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                  "root": "MuiButton-root HvButton-root",
                  "sizeLarge": "MuiButton-sizeLarge",
                  "sizeSmall": "MuiButton-sizeSmall",
                  "startIcon": "MuiButton-startIcon HvButton-startIcon",
                  "text": "MuiButton-text",
                  "textPrimary": "MuiButton-textPrimary HvButton-ghost",
                  "textSecondary": "MuiButton-textSecondary",
                  "textSizeLarge": "MuiButton-textSizeLarge",
                  "textSizeSmall": "MuiButton-textSizeSmall",
                }
              }
              color="primary"
              disableRipple={true}
              disabled={false}
              id="view"
              onClick={[Function]}
              variant="text"
            >
              <WithStyles(ForwardRef(ButtonBase))
                className="MuiButton-root HvButton-root MuiButton-text HvActions-button HvButton-ghostSVG MuiButton-textPrimary HvButton-ghost"
                component="button"
                disableRipple={true}
                disabled={false}
                focusRipple={true}
                focusVisibleClassName="Mui-focusVisible"
                id="view"
                onClick={[Function]}
                type="button"
              >
                <ForwardRef(ButtonBase)
                  className="MuiButton-root HvButton-root MuiButton-text HvActions-button HvButton-ghostSVG MuiButton-textPrimary HvButton-ghost"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "root": "MuiButtonBase-root",
                    }
                  }
                  component="button"
                  disableRipple={true}
                  disabled={false}
                  focusRipple={true}
                  focusVisibleClassName="Mui-focusVisible"
                  id="view"
                  onClick={[Function]}
                  type="button"
                >
                  <button
                    className="MuiButtonBase-root MuiButton-root HvButton-root MuiButton-text HvActions-button HvButton-ghostSVG MuiButton-textPrimary HvButton-ghost"
                    disabled={false}
                    id="view"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={0}
                    type="button"
                  >
                    <span
                      className="MuiButton-label"
                    >
                      View
                    </span>
                  </button>
                </ForwardRef(ButtonBase)>
              </WithStyles(ForwardRef(ButtonBase))>
            </ForwardRef(Button)>
          </WithStyles(ForwardRef(Button))>
        </HvButton>
      </WithStyles(HvButton)>
      <WithStyles(WithId)
        classes={
          Object {
            "icon": "HvActions-dropDownMenuButton",
            "iconSelected": "HvActions-dropDownMenuButtonSelected",
            "root": "HvActions-dropDownMenu",
          }
        }
        dataList={
          Array [
            Object {
              "id": "delete",
              "label": "Delete",
            },
            Object {
              "disabled": true,
              "id": "update",
              "label": "Update",
            },
          ]
        }
        disablePortal={false}
        disabled={false}
        icon={<WithStyles(MoreOptionsVertical) />}
        id="id-menu"
        keepOpened={false}
        onClick={[Function]}
        placement="left"
      >
        <WithId
          classes={
            Object {
              "icon": "HvDropDownMenu-icon HvActions-dropDownMenuButton",
              "iconSelected": "HvDropDownMenu-iconSelected HvActions-dropDownMenuButtonSelected",
              "inputExtensionFloatLeft": "HvDropDownMenu-inputExtensionFloatLeft",
              "inputExtensionFloatRight": "HvDropDownMenu-inputExtensionFloatRight",
              "inputExtensionLeftPosition": "HvDropDownMenu-inputExtensionLeftPosition",
              "inputExtensionOpen": "HvDropDownMenu-inputExtensionOpen",
              "inputExtensionOpenShadow": "HvDropDownMenu-inputExtensionOpenShadow",
              "menuList": "HvDropDownMenu-menuList",
              "popper": "HvDropDownMenu-popper",
              "root": "HvDropDownMenu-root HvActions-dropDownMenu",
            }
          }
          dataList={
            Array [
              Object {
                "id": "delete",
                "label": "Delete",
              },
              Object {
                "disabled": true,
                "id": "update",
                "label": "Update",
              },
            ]
          }
          disablePortal={false}
          disabled={false}
          icon={<WithStyles(MoreOptionsVertical) />}
          id="id-menu"
          keepOpened={false}
          onClick={[Function]}
          placement="left"
        >
          <DropDownMenu
            classes={
              Object {
                "icon": "HvDropDownMenu-icon HvActions-dropDownMenuButton",
                "iconSelected": "HvDropDownMenu-iconSelected HvActions-dropDownMenuButtonSelected",
                "inputExtensionFloatLeft": "HvDropDownMenu-inputExtensionFloatLeft",
                "inputExtensionFloatRight": "HvDropDownMenu-inputExtensionFloatRight",
                "inputExtensionLeftPosition": "HvDropDownMenu-inputExtensionLeftPosition",
                "inputExtensionOpen": "HvDropDownMenu-inputExtensionOpen",
                "inputExtensionOpenShadow": "HvDropDownMenu-inputExtensionOpenShadow",
                "menuList": "HvDropDownMenu-menuList",
                "popper": "HvDropDownMenu-popper",
                "root": "HvDropDownMenu-root HvActions-dropDownMenu",
              }
            }
            dataList={
              Array [
                Object {
                  "id": "delete",
                  "label": "Delete",
                },
                Object {
                  "disabled": true,
                  "id": "update",
                  "label": "Update",
                },
              ]
            }
            disablePortal={false}
            disabled={false}
            icon={<WithStyles(MoreOptionsVertical) />}
            id="id-menu"
            keepOpened={false}
            onClick={[Function]}
            placement="left"
          >
            <div
              className="HvDropDownMenu-root HvActions-dropDownMenu"
              id="id-menu"
            >
              <WithStyles(ForwardRef(IconButton))
                aria-haspopup="true"
                aria-label="Dropdown menu"
                buttonRef={
                  Object {
                    "current": <button
                      aria-haspopup="true"
                      aria-label="Dropdown menu"
                      class="MuiButtonBase-root MuiIconButton-root HvDropDownMenu-icon HvActions-dropDownMenuButton"
                      id="id-menu-icon-button"
                      tabindex="0"
                      type="button"
                    >
                      <span
                        class="MuiIconButton-label"
                      >
                        <div
                          class="HvIconMoreOptionsVertical-root HvIconMoreOptionsVertical-rootS"
                        >
                          <svg
                            focusable="false"
                            height="16px"
                            viewBox="0 0 16 16"
                            width="16px"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              class="color0"
                              d="M7 7h2v2H7zm0-5h2v2H7zm0 10h2v2H7z"
                              fill="#414141"
                            />
                          </svg>
                        </div>
                      </span>
                    </button>,
                  }
                }
                className="HvDropDownMenu-icon HvActions-dropDownMenuButton"
                disabled={false}
                id="id-menu-icon-button"
                onClick={[Function]}
                onKeyDown={[Function]}
              >
                <ForwardRef(IconButton)
                  aria-haspopup="true"
                  aria-label="Dropdown menu"
                  buttonRef={
                    Object {
                      "current": <button
                        aria-haspopup="true"
                        aria-label="Dropdown menu"
                        class="MuiButtonBase-root MuiIconButton-root HvDropDownMenu-icon HvActions-dropDownMenuButton"
                        id="id-menu-icon-button"
                        tabindex="0"
                        type="button"
                      >
                        <span
                          class="MuiIconButton-label"
                        >
                          <div
                            class="HvIconMoreOptionsVertical-root HvIconMoreOptionsVertical-rootS"
                          >
                            <svg
                              focusable="false"
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M7 7h2v2H7zm0-5h2v2H7zm0 10h2v2H7z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                        </span>
                      </button>,
                    }
                  }
                  className="HvDropDownMenu-icon HvActions-dropDownMenuButton"
                  classes={
                    Object {
                      "colorInherit": "MuiIconButton-colorInherit",
                      "colorPrimary": "MuiIconButton-colorPrimary",
                      "colorSecondary": "MuiIconButton-colorSecondary",
                      "disabled": "Mui-disabled",
                      "edgeEnd": "MuiIconButton-edgeEnd",
                      "edgeStart": "MuiIconButton-edgeStart",
                      "label": "MuiIconButton-label",
                      "root": "MuiIconButton-root",
                      "sizeSmall": "MuiIconButton-sizeSmall",
                    }
                  }
                  disabled={false}
                  id="id-menu-icon-button"
                  onClick={[Function]}
                  onKeyDown={[Function]}
                >
                  <WithStyles(ForwardRef(ButtonBase))
                    aria-haspopup="true"
                    aria-label="Dropdown menu"
                    buttonRef={
                      Object {
                        "current": <button
                          aria-haspopup="true"
                          aria-label="Dropdown menu"
                          class="MuiButtonBase-root MuiIconButton-root HvDropDownMenu-icon HvActions-dropDownMenuButton"
                          id="id-menu-icon-button"
                          tabindex="0"
                          type="button"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <div
                              class="HvIconMoreOptionsVertical-root HvIconMoreOptionsVertical-rootS"
                            >
                              <svg
                                focusable="false"
                                height="16px"
                                viewBox="0 0 16 16"
                                width="16px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M7 7h2v2H7zm0-5h2v2H7zm0 10h2v2H7z"
                                  fill="#414141"
                                />
                              </svg>
                            </div>
                          </span>
                        </button>,
                      }
                    }
                    centerRipple={true}
                    className="MuiIconButton-root HvDropDownMenu-icon HvActions-dropDownMenuButton"
                    disabled={false}
                    focusRipple={true}
                    id="id-menu-icon-button"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                  >
                    <ForwardRef(ButtonBase)
                      aria-haspopup="true"
                      aria-label="Dropdown menu"
                      buttonRef={
                        Object {
                          "current": <button
                            aria-haspopup="true"
                            aria-label="Dropdown menu"
                            class="MuiButtonBase-root MuiIconButton-root HvDropDownMenu-icon HvActions-dropDownMenuButton"
                            id="id-menu-icon-button"
                            tabindex="0"
                            type="button"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <div
                                class="HvIconMoreOptionsVertical-root HvIconMoreOptionsVertical-rootS"
                              >
                                <svg
                                  focusable="false"
                                  height="16px"
                                  viewBox="0 0 16 16"
                                  width="16px"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M7 7h2v2H7zm0-5h2v2H7zm0 10h2v2H7z"
                                    fill="#414141"
                                  />
                                </svg>
                              </div>
                            </span>
                          </button>,
                        }
                      }
                      centerRipple={true}
                      className="MuiIconButton-root HvDropDownMenu-icon HvActions-dropDownMenuButton"
                      classes={
                        Object {
                          "disabled": "Mui-disabled",
                          "focusVisible": "Mui-focusVisible",
                          "root": "MuiButtonBase-root",
                        }
                      }
                      disableRipple={true}
                      disabled={false}
                      focusRipple={true}
                      id="id-menu-icon-button"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                    >
                      <button
                        aria-haspopup="true"
                        aria-label="Dropdown menu"
                        className="MuiButtonBase-root MuiIconButton-root HvDropDownMenu-icon HvActions-dropDownMenuButton"
                        disabled={false}
                        id="id-menu-icon-button"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <WithStyles(MoreOptionsVertical)>
                            <MoreOptionsVertical
                              classes={
                                Object {
                                  "root": "HvIconMoreOptionsVertical-root",
                                  "rootL": "HvIconMoreOptionsVertical-rootL",
                                  "rootM": "HvIconMoreOptionsVertical-rootM",
                                  "rootS": "HvIconMoreOptionsVertical-rootS",
                                  "rootXs": "HvIconMoreOptionsVertical-rootXs",
                                }
                              }
                            >
                              <div
                                className="HvIconMoreOptionsVertical-root HvIconMoreOptionsVertical-rootS"
                              >
                                <svg
                                  focusable={false}
                                  height="16px"
                                  viewBox="0 0 16 16"
                                  width="16px"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    className="color0"
                                    d="M7 7h2v2H7zm0-5h2v2H7zm0 10h2v2H7z"
                                    fill="#414141"
                                  />
                                </svg>
                              </div>
                            </MoreOptionsVertical>
                          </WithStyles(MoreOptionsVertical)>
                        </span>
                      </button>
                    </ForwardRef(ButtonBase)>
                  </WithStyles(ForwardRef(ButtonBase))>
                </ForwardRef(IconButton)>
              </WithStyles(ForwardRef(IconButton))>
              <ForwardRef(Popper)
                anchorEl={null}
                className="HvDropDownMenu-popper"
                disablePortal={false}
                open={false}
                placement="bottom-end"
                popperOptions={
                  Object {
                    "onCreate": [Function],
                    "onUpdate": [Function],
                  }
                }
              />
            </div>
          </DropDownMenu>
        </WithId>
      </WithStyles(WithId)>
    </div>
  </Actions>
</WithStyles(Actions)>
`;

exports[`Footer should render the actions and the dropdown accordingly 2`] = `
<WithStyles(Actions)
  actions={
    Array [
      Object {
        "id": "view",
        "label": "View",
      },
      Object {
        "id": "delete",
        "label": "Delete",
      },
      Object {
        "disabled": true,
        "id": "update",
        "label": "Update",
      },
    ]
  }
  id="id"
  maxVisibleActions={0}
>
  <Actions
    actions={
      Array [
        Object {
          "id": "view",
          "label": "View",
        },
        Object {
          "id": "delete",
          "label": "Delete",
        },
        Object {
          "disabled": true,
          "id": "update",
          "label": "Update",
        },
      ]
    }
    classes={
      Object {
        "actionContainer": "HvActions-actionContainer",
        "button": "HvActions-button",
        "dropDownMenu": "HvActions-dropDownMenu",
        "dropDownMenuButton": "HvActions-dropDownMenuButton",
        "dropDownMenuButtonSelected": "HvActions-dropDownMenuButtonSelected",
        "root": "HvActions-root",
      }
    }
    id="id"
    maxVisibleActions={0}
  >
    <div
      className="HvActions-root HvActions-actionContainer"
    >
      <WithStyles(WithId)
        classes={
          Object {
            "icon": "HvActions-dropDownMenuButton",
            "iconSelected": "HvActions-dropDownMenuButtonSelected",
            "root": "HvActions-dropDownMenu",
          }
        }
        dataList={
          Array [
            Object {
              "id": "view",
              "label": "View",
            },
            Object {
              "id": "delete",
              "label": "Delete",
            },
            Object {
              "disabled": true,
              "id": "update",
              "label": "Update",
            },
          ]
        }
        disablePortal={false}
        disabled={false}
        icon={<WithStyles(MoreOptionsVertical) />}
        id="id-menu"
        keepOpened={false}
        onClick={[Function]}
        placement="left"
      >
        <WithId
          classes={
            Object {
              "icon": "HvDropDownMenu-icon HvActions-dropDownMenuButton",
              "iconSelected": "HvDropDownMenu-iconSelected HvActions-dropDownMenuButtonSelected",
              "inputExtensionFloatLeft": "HvDropDownMenu-inputExtensionFloatLeft",
              "inputExtensionFloatRight": "HvDropDownMenu-inputExtensionFloatRight",
              "inputExtensionLeftPosition": "HvDropDownMenu-inputExtensionLeftPosition",
              "inputExtensionOpen": "HvDropDownMenu-inputExtensionOpen",
              "inputExtensionOpenShadow": "HvDropDownMenu-inputExtensionOpenShadow",
              "menuList": "HvDropDownMenu-menuList",
              "popper": "HvDropDownMenu-popper",
              "root": "HvDropDownMenu-root HvActions-dropDownMenu",
            }
          }
          dataList={
            Array [
              Object {
                "id": "view",
                "label": "View",
              },
              Object {
                "id": "delete",
                "label": "Delete",
              },
              Object {
                "disabled": true,
                "id": "update",
                "label": "Update",
              },
            ]
          }
          disablePortal={false}
          disabled={false}
          icon={<WithStyles(MoreOptionsVertical) />}
          id="id-menu"
          keepOpened={false}
          onClick={[Function]}
          placement="left"
        >
          <DropDownMenu
            classes={
              Object {
                "icon": "HvDropDownMenu-icon HvActions-dropDownMenuButton",
                "iconSelected": "HvDropDownMenu-iconSelected HvActions-dropDownMenuButtonSelected",
                "inputExtensionFloatLeft": "HvDropDownMenu-inputExtensionFloatLeft",
                "inputExtensionFloatRight": "HvDropDownMenu-inputExtensionFloatRight",
                "inputExtensionLeftPosition": "HvDropDownMenu-inputExtensionLeftPosition",
                "inputExtensionOpen": "HvDropDownMenu-inputExtensionOpen",
                "inputExtensionOpenShadow": "HvDropDownMenu-inputExtensionOpenShadow",
                "menuList": "HvDropDownMenu-menuList",
                "popper": "HvDropDownMenu-popper",
                "root": "HvDropDownMenu-root HvActions-dropDownMenu",
              }
            }
            dataList={
              Array [
                Object {
                  "id": "view",
                  "label": "View",
                },
                Object {
                  "id": "delete",
                  "label": "Delete",
                },
                Object {
                  "disabled": true,
                  "id": "update",
                  "label": "Update",
                },
              ]
            }
            disablePortal={false}
            disabled={false}
            icon={<WithStyles(MoreOptionsVertical) />}
            id="id-menu"
            keepOpened={false}
            onClick={[Function]}
            placement="left"
          >
            <div
              className="HvDropDownMenu-root HvActions-dropDownMenu"
              id="id-menu"
            >
              <WithStyles(ForwardRef(IconButton))
                aria-haspopup="true"
                aria-label="Dropdown menu"
                buttonRef={
                  Object {
                    "current": <button
                      aria-haspopup="true"
                      aria-label="Dropdown menu"
                      class="MuiButtonBase-root MuiIconButton-root HvDropDownMenu-icon HvActions-dropDownMenuButton"
                      id="id-menu-icon-button"
                      tabindex="0"
                      type="button"
                    >
                      <span
                        class="MuiIconButton-label"
                      >
                        <div
                          class="HvIconMoreOptionsVertical-root HvIconMoreOptionsVertical-rootS"
                        >
                          <svg
                            focusable="false"
                            height="16px"
                            viewBox="0 0 16 16"
                            width="16px"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              class="color0"
                              d="M7 7h2v2H7zm0-5h2v2H7zm0 10h2v2H7z"
                              fill="#414141"
                            />
                          </svg>
                        </div>
                      </span>
                    </button>,
                  }
                }
                className="HvDropDownMenu-icon HvActions-dropDownMenuButton"
                disabled={false}
                id="id-menu-icon-button"
                onClick={[Function]}
                onKeyDown={[Function]}
              >
                <ForwardRef(IconButton)
                  aria-haspopup="true"
                  aria-label="Dropdown menu"
                  buttonRef={
                    Object {
                      "current": <button
                        aria-haspopup="true"
                        aria-label="Dropdown menu"
                        class="MuiButtonBase-root MuiIconButton-root HvDropDownMenu-icon HvActions-dropDownMenuButton"
                        id="id-menu-icon-button"
                        tabindex="0"
                        type="button"
                      >
                        <span
                          class="MuiIconButton-label"
                        >
                          <div
                            class="HvIconMoreOptionsVertical-root HvIconMoreOptionsVertical-rootS"
                          >
                            <svg
                              focusable="false"
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M7 7h2v2H7zm0-5h2v2H7zm0 10h2v2H7z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                        </span>
                      </button>,
                    }
                  }
                  className="HvDropDownMenu-icon HvActions-dropDownMenuButton"
                  classes={
                    Object {
                      "colorInherit": "MuiIconButton-colorInherit",
                      "colorPrimary": "MuiIconButton-colorPrimary",
                      "colorSecondary": "MuiIconButton-colorSecondary",
                      "disabled": "Mui-disabled",
                      "edgeEnd": "MuiIconButton-edgeEnd",
                      "edgeStart": "MuiIconButton-edgeStart",
                      "label": "MuiIconButton-label",
                      "root": "MuiIconButton-root",
                      "sizeSmall": "MuiIconButton-sizeSmall",
                    }
                  }
                  disabled={false}
                  id="id-menu-icon-button"
                  onClick={[Function]}
                  onKeyDown={[Function]}
                >
                  <WithStyles(ForwardRef(ButtonBase))
                    aria-haspopup="true"
                    aria-label="Dropdown menu"
                    buttonRef={
                      Object {
                        "current": <button
                          aria-haspopup="true"
                          aria-label="Dropdown menu"
                          class="MuiButtonBase-root MuiIconButton-root HvDropDownMenu-icon HvActions-dropDownMenuButton"
                          id="id-menu-icon-button"
                          tabindex="0"
                          type="button"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <div
                              class="HvIconMoreOptionsVertical-root HvIconMoreOptionsVertical-rootS"
                            >
                              <svg
                                focusable="false"
                                height="16px"
                                viewBox="0 0 16 16"
                                width="16px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M7 7h2v2H7zm0-5h2v2H7zm0 10h2v2H7z"
                                  fill="#414141"
                                />
                              </svg>
                            </div>
                          </span>
                        </button>,
                      }
                    }
                    centerRipple={true}
                    className="MuiIconButton-root HvDropDownMenu-icon HvActions-dropDownMenuButton"
                    disabled={false}
                    focusRipple={true}
                    id="id-menu-icon-button"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                  >
                    <ForwardRef(ButtonBase)
                      aria-haspopup="true"
                      aria-label="Dropdown menu"
                      buttonRef={
                        Object {
                          "current": <button
                            aria-haspopup="true"
                            aria-label="Dropdown menu"
                            class="MuiButtonBase-root MuiIconButton-root HvDropDownMenu-icon HvActions-dropDownMenuButton"
                            id="id-menu-icon-button"
                            tabindex="0"
                            type="button"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <div
                                class="HvIconMoreOptionsVertical-root HvIconMoreOptionsVertical-rootS"
                              >
                                <svg
                                  focusable="false"
                                  height="16px"
                                  viewBox="0 0 16 16"
                                  width="16px"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M7 7h2v2H7zm0-5h2v2H7zm0 10h2v2H7z"
                                    fill="#414141"
                                  />
                                </svg>
                              </div>
                            </span>
                          </button>,
                        }
                      }
                      centerRipple={true}
                      className="MuiIconButton-root HvDropDownMenu-icon HvActions-dropDownMenuButton"
                      classes={
                        Object {
                          "disabled": "Mui-disabled",
                          "focusVisible": "Mui-focusVisible",
                          "root": "MuiButtonBase-root",
                        }
                      }
                      disableRipple={true}
                      disabled={false}
                      focusRipple={true}
                      id="id-menu-icon-button"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                    >
                      <button
                        aria-haspopup="true"
                        aria-label="Dropdown menu"
                        className="MuiButtonBase-root MuiIconButton-root HvDropDownMenu-icon HvActions-dropDownMenuButton"
                        disabled={false}
                        id="id-menu-icon-button"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <WithStyles(MoreOptionsVertical)>
                            <MoreOptionsVertical
                              classes={
                                Object {
                                  "root": "HvIconMoreOptionsVertical-root",
                                  "rootL": "HvIconMoreOptionsVertical-rootL",
                                  "rootM": "HvIconMoreOptionsVertical-rootM",
                                  "rootS": "HvIconMoreOptionsVertical-rootS",
                                  "rootXs": "HvIconMoreOptionsVertical-rootXs",
                                }
                              }
                            >
                              <div
                                className="HvIconMoreOptionsVertical-root HvIconMoreOptionsVertical-rootS"
                              >
                                <svg
                                  focusable={false}
                                  height="16px"
                                  viewBox="0 0 16 16"
                                  width="16px"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    className="color0"
                                    d="M7 7h2v2H7zm0-5h2v2H7zm0 10h2v2H7z"
                                    fill="#414141"
                                  />
                                </svg>
                              </div>
                            </MoreOptionsVertical>
                          </WithStyles(MoreOptionsVertical)>
                        </span>
                      </button>
                    </ForwardRef(ButtonBase)>
                  </WithStyles(ForwardRef(ButtonBase))>
                </ForwardRef(IconButton)>
              </WithStyles(ForwardRef(IconButton))>
              <ForwardRef(Popper)
                anchorEl={null}
                className="HvDropDownMenu-popper"
                disablePortal={false}
                open={false}
                placement="bottom-end"
                popperOptions={
                  Object {
                    "onCreate": [Function],
                    "onUpdate": [Function],
                  }
                }
              />
            </div>
          </DropDownMenu>
        </WithId>
      </WithStyles(WithId)>
    </div>
  </Actions>
</WithStyles(Actions)>
`;

exports[`Footer should render the actions and the dropdown accordingly 3`] = `
<WithStyles(Actions)
  actions={
    Array [
      Object {
        "id": "view",
        "label": "View",
      },
      Object {
        "id": "delete",
        "label": "Delete",
      },
      Object {
        "disabled": true,
        "id": "update",
        "label": "Update",
      },
    ]
  }
  id="id"
  maxVisibleActions={2}
>
  <Actions
    actions={
      Array [
        Object {
          "id": "view",
          "label": "View",
        },
        Object {
          "id": "delete",
          "label": "Delete",
        },
        Object {
          "disabled": true,
          "id": "update",
          "label": "Update",
        },
      ]
    }
    classes={
      Object {
        "actionContainer": "HvActions-actionContainer",
        "button": "HvActions-button",
        "dropDownMenu": "HvActions-dropDownMenu",
        "dropDownMenuButton": "HvActions-dropDownMenuButton",
        "dropDownMenuButtonSelected": "HvActions-dropDownMenuButtonSelected",
        "root": "HvActions-root",
      }
    }
    id="id"
    maxVisibleActions={2}
  >
    <div
      className="HvActions-root HvActions-actionContainer"
    >
      <WithStyles(HvButton)
        category="ghost"
        className="HvActions-button"
        disabled={false}
        id="view"
        key="id-0-action-view"
        onClick={[Function]}
      >
        <HvButton
          category="ghost"
          className="HvActions-button"
          classes={
            Object {
              "ghost": "HvButton-ghost",
              "ghostDisabled": "HvButton-ghostDisabled",
              "ghostSVG": "HvButton-ghostSVG",
              "ghostSecondary": "HvButton-ghostSecondary",
              "ghostSecondaryDisabled": "HvButton-ghostSecondaryDisabled",
              "ghostSecondarySVG": "HvButton-ghostSecondarySVG",
              "iconSVG": "HvButton-iconSVG",
              "primary": "HvButton-primary",
              "primaryDisabled": "HvButton-primaryDisabled",
              "primarySVG": "HvButton-primarySVG",
              "root": "HvButton-root",
              "rootIcon": "HvButton-rootIcon",
              "secondary": "HvButton-secondary",
              "secondaryDisabled": "HvButton-secondaryDisabled",
              "secondarySVG": "HvButton-secondarySVG",
              "semantic": "HvButton-semantic",
              "semanticDisabled": "HvButton-semanticDisabled",
              "semanticSVG": "HvButton-semanticSVG",
              "startIcon": "HvButton-startIcon",
            }
          }
          disabled={false}
          id="view"
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(Button))
            className="HvActions-button HvButton-ghostSVG"
            classes={
              Object {
                "containedPrimary": "HvButton-primary",
                "disabled": "HvButton-ghostDisabled",
                "outlinedPrimary": "HvButton-secondary",
                "root": "HvButton-root",
                "startIcon": "HvButton-startIcon",
                "textPrimary": "HvButton-ghost",
              }
            }
            color="primary"
            disableRipple={true}
            disabled={false}
            id="view"
            onClick={[Function]}
            variant="text"
          >
            <ForwardRef(Button)
              className="HvActions-button HvButton-ghostSVG"
              classes={
                Object {
                  "colorInherit": "MuiButton-colorInherit",
                  "contained": "MuiButton-contained",
                  "containedPrimary": "MuiButton-containedPrimary HvButton-primary",
                  "containedSecondary": "MuiButton-containedSecondary",
                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                  "disableElevation": "MuiButton-disableElevation",
                  "disabled": "Mui-disabled HvButton-ghostDisabled",
                  "endIcon": "MuiButton-endIcon",
                  "focusVisible": "Mui-focusVisible",
                  "fullWidth": "MuiButton-fullWidth",
                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                  "label": "MuiButton-label",
                  "outlined": "MuiButton-outlined",
                  "outlinedPrimary": "MuiButton-outlinedPrimary HvButton-secondary",
                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                  "root": "MuiButton-root HvButton-root",
                  "sizeLarge": "MuiButton-sizeLarge",
                  "sizeSmall": "MuiButton-sizeSmall",
                  "startIcon": "MuiButton-startIcon HvButton-startIcon",
                  "text": "MuiButton-text",
                  "textPrimary": "MuiButton-textPrimary HvButton-ghost",
                  "textSecondary": "MuiButton-textSecondary",
                  "textSizeLarge": "MuiButton-textSizeLarge",
                  "textSizeSmall": "MuiButton-textSizeSmall",
                }
              }
              color="primary"
              disableRipple={true}
              disabled={false}
              id="view"
              onClick={[Function]}
              variant="text"
            >
              <WithStyles(ForwardRef(ButtonBase))
                className="MuiButton-root HvButton-root MuiButton-text HvActions-button HvButton-ghostSVG MuiButton-textPrimary HvButton-ghost"
                component="button"
                disableRipple={true}
                disabled={false}
                focusRipple={true}
                focusVisibleClassName="Mui-focusVisible"
                id="view"
                onClick={[Function]}
                type="button"
              >
                <ForwardRef(ButtonBase)
                  className="MuiButton-root HvButton-root MuiButton-text HvActions-button HvButton-ghostSVG MuiButton-textPrimary HvButton-ghost"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "root": "MuiButtonBase-root",
                    }
                  }
                  component="button"
                  disableRipple={true}
                  disabled={false}
                  focusRipple={true}
                  focusVisibleClassName="Mui-focusVisible"
                  id="view"
                  onClick={[Function]}
                  type="button"
                >
                  <button
                    className="MuiButtonBase-root MuiButton-root HvButton-root MuiButton-text HvActions-button HvButton-ghostSVG MuiButton-textPrimary HvButton-ghost"
                    disabled={false}
                    id="view"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={0}
                    type="button"
                  >
                    <span
                      className="MuiButton-label"
                    >
                      View
                    </span>
                  </button>
                </ForwardRef(ButtonBase)>
              </WithStyles(ForwardRef(ButtonBase))>
            </ForwardRef(Button)>
          </WithStyles(ForwardRef(Button))>
        </HvButton>
      </WithStyles(HvButton)>
      <WithStyles(HvButton)
        category="ghost"
        className="HvActions-button"
        disabled={false}
        id="delete"
        key="id-1-action-delete"
        onClick={[Function]}
      >
        <HvButton
          category="ghost"
          className="HvActions-button"
          classes={
            Object {
              "ghost": "HvButton-ghost",
              "ghostDisabled": "HvButton-ghostDisabled",
              "ghostSVG": "HvButton-ghostSVG",
              "ghostSecondary": "HvButton-ghostSecondary",
              "ghostSecondaryDisabled": "HvButton-ghostSecondaryDisabled",
              "ghostSecondarySVG": "HvButton-ghostSecondarySVG",
              "iconSVG": "HvButton-iconSVG",
              "primary": "HvButton-primary",
              "primaryDisabled": "HvButton-primaryDisabled",
              "primarySVG": "HvButton-primarySVG",
              "root": "HvButton-root",
              "rootIcon": "HvButton-rootIcon",
              "secondary": "HvButton-secondary",
              "secondaryDisabled": "HvButton-secondaryDisabled",
              "secondarySVG": "HvButton-secondarySVG",
              "semantic": "HvButton-semantic",
              "semanticDisabled": "HvButton-semanticDisabled",
              "semanticSVG": "HvButton-semanticSVG",
              "startIcon": "HvButton-startIcon",
            }
          }
          disabled={false}
          id="delete"
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(Button))
            className="HvActions-button HvButton-ghostSVG"
            classes={
              Object {
                "containedPrimary": "HvButton-primary",
                "disabled": "HvButton-ghostDisabled",
                "outlinedPrimary": "HvButton-secondary",
                "root": "HvButton-root",
                "startIcon": "HvButton-startIcon",
                "textPrimary": "HvButton-ghost",
              }
            }
            color="primary"
            disableRipple={true}
            disabled={false}
            id="delete"
            onClick={[Function]}
            variant="text"
          >
            <ForwardRef(Button)
              className="HvActions-button HvButton-ghostSVG"
              classes={
                Object {
                  "colorInherit": "MuiButton-colorInherit",
                  "contained": "MuiButton-contained",
                  "containedPrimary": "MuiButton-containedPrimary HvButton-primary",
                  "containedSecondary": "MuiButton-containedSecondary",
                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                  "disableElevation": "MuiButton-disableElevation",
                  "disabled": "Mui-disabled HvButton-ghostDisabled",
                  "endIcon": "MuiButton-endIcon",
                  "focusVisible": "Mui-focusVisible",
                  "fullWidth": "MuiButton-fullWidth",
                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                  "label": "MuiButton-label",
                  "outlined": "MuiButton-outlined",
                  "outlinedPrimary": "MuiButton-outlinedPrimary HvButton-secondary",
                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                  "root": "MuiButton-root HvButton-root",
                  "sizeLarge": "MuiButton-sizeLarge",
                  "sizeSmall": "MuiButton-sizeSmall",
                  "startIcon": "MuiButton-startIcon HvButton-startIcon",
                  "text": "MuiButton-text",
                  "textPrimary": "MuiButton-textPrimary HvButton-ghost",
                  "textSecondary": "MuiButton-textSecondary",
                  "textSizeLarge": "MuiButton-textSizeLarge",
                  "textSizeSmall": "MuiButton-textSizeSmall",
                }
              }
              color="primary"
              disableRipple={true}
              disabled={false}
              id="delete"
              onClick={[Function]}
              variant="text"
            >
              <WithStyles(ForwardRef(ButtonBase))
                className="MuiButton-root HvButton-root MuiButton-text HvActions-button HvButton-ghostSVG MuiButton-textPrimary HvButton-ghost"
                component="button"
                disableRipple={true}
                disabled={false}
                focusRipple={true}
                focusVisibleClassName="Mui-focusVisible"
                id="delete"
                onClick={[Function]}
                type="button"
              >
                <ForwardRef(ButtonBase)
                  className="MuiButton-root HvButton-root MuiButton-text HvActions-button HvButton-ghostSVG MuiButton-textPrimary HvButton-ghost"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "root": "MuiButtonBase-root",
                    }
                  }
                  component="button"
                  disableRipple={true}
                  disabled={false}
                  focusRipple={true}
                  focusVisibleClassName="Mui-focusVisible"
                  id="delete"
                  onClick={[Function]}
                  type="button"
                >
                  <button
                    className="MuiButtonBase-root MuiButton-root HvButton-root MuiButton-text HvActions-button HvButton-ghostSVG MuiButton-textPrimary HvButton-ghost"
                    disabled={false}
                    id="delete"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={0}
                    type="button"
                  >
                    <span
                      className="MuiButton-label"
                    >
                      Delete
                    </span>
                  </button>
                </ForwardRef(ButtonBase)>
              </WithStyles(ForwardRef(ButtonBase))>
            </ForwardRef(Button)>
          </WithStyles(ForwardRef(Button))>
        </HvButton>
      </WithStyles(HvButton)>
      <WithStyles(WithId)
        classes={
          Object {
            "icon": "HvActions-dropDownMenuButton",
            "iconSelected": "HvActions-dropDownMenuButtonSelected",
            "root": "HvActions-dropDownMenu",
          }
        }
        dataList={
          Array [
            Object {
              "disabled": true,
              "id": "update",
              "label": "Update",
            },
          ]
        }
        disablePortal={false}
        disabled={false}
        icon={<WithStyles(MoreOptionsVertical) />}
        id="id-menu"
        keepOpened={false}
        onClick={[Function]}
        placement="left"
      >
        <WithId
          classes={
            Object {
              "icon": "HvDropDownMenu-icon HvActions-dropDownMenuButton",
              "iconSelected": "HvDropDownMenu-iconSelected HvActions-dropDownMenuButtonSelected",
              "inputExtensionFloatLeft": "HvDropDownMenu-inputExtensionFloatLeft",
              "inputExtensionFloatRight": "HvDropDownMenu-inputExtensionFloatRight",
              "inputExtensionLeftPosition": "HvDropDownMenu-inputExtensionLeftPosition",
              "inputExtensionOpen": "HvDropDownMenu-inputExtensionOpen",
              "inputExtensionOpenShadow": "HvDropDownMenu-inputExtensionOpenShadow",
              "menuList": "HvDropDownMenu-menuList",
              "popper": "HvDropDownMenu-popper",
              "root": "HvDropDownMenu-root HvActions-dropDownMenu",
            }
          }
          dataList={
            Array [
              Object {
                "disabled": true,
                "id": "update",
                "label": "Update",
              },
            ]
          }
          disablePortal={false}
          disabled={false}
          icon={<WithStyles(MoreOptionsVertical) />}
          id="id-menu"
          keepOpened={false}
          onClick={[Function]}
          placement="left"
        >
          <DropDownMenu
            classes={
              Object {
                "icon": "HvDropDownMenu-icon HvActions-dropDownMenuButton",
                "iconSelected": "HvDropDownMenu-iconSelected HvActions-dropDownMenuButtonSelected",
                "inputExtensionFloatLeft": "HvDropDownMenu-inputExtensionFloatLeft",
                "inputExtensionFloatRight": "HvDropDownMenu-inputExtensionFloatRight",
                "inputExtensionLeftPosition": "HvDropDownMenu-inputExtensionLeftPosition",
                "inputExtensionOpen": "HvDropDownMenu-inputExtensionOpen",
                "inputExtensionOpenShadow": "HvDropDownMenu-inputExtensionOpenShadow",
                "menuList": "HvDropDownMenu-menuList",
                "popper": "HvDropDownMenu-popper",
                "root": "HvDropDownMenu-root HvActions-dropDownMenu",
              }
            }
            dataList={
              Array [
                Object {
                  "disabled": true,
                  "id": "update",
                  "label": "Update",
                },
              ]
            }
            disablePortal={false}
            disabled={false}
            icon={<WithStyles(MoreOptionsVertical) />}
            id="id-menu"
            keepOpened={false}
            onClick={[Function]}
            placement="left"
          >
            <div
              className="HvDropDownMenu-root HvActions-dropDownMenu"
              id="id-menu"
            >
              <WithStyles(ForwardRef(IconButton))
                aria-haspopup="true"
                aria-label="Dropdown menu"
                buttonRef={
                  Object {
                    "current": <button
                      aria-haspopup="true"
                      aria-label="Dropdown menu"
                      class="MuiButtonBase-root MuiIconButton-root HvDropDownMenu-icon HvActions-dropDownMenuButton"
                      id="id-menu-icon-button"
                      tabindex="0"
                      type="button"
                    >
                      <span
                        class="MuiIconButton-label"
                      >
                        <div
                          class="HvIconMoreOptionsVertical-root HvIconMoreOptionsVertical-rootS"
                        >
                          <svg
                            focusable="false"
                            height="16px"
                            viewBox="0 0 16 16"
                            width="16px"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              class="color0"
                              d="M7 7h2v2H7zm0-5h2v2H7zm0 10h2v2H7z"
                              fill="#414141"
                            />
                          </svg>
                        </div>
                      </span>
                    </button>,
                  }
                }
                className="HvDropDownMenu-icon HvActions-dropDownMenuButton"
                disabled={false}
                id="id-menu-icon-button"
                onClick={[Function]}
                onKeyDown={[Function]}
              >
                <ForwardRef(IconButton)
                  aria-haspopup="true"
                  aria-label="Dropdown menu"
                  buttonRef={
                    Object {
                      "current": <button
                        aria-haspopup="true"
                        aria-label="Dropdown menu"
                        class="MuiButtonBase-root MuiIconButton-root HvDropDownMenu-icon HvActions-dropDownMenuButton"
                        id="id-menu-icon-button"
                        tabindex="0"
                        type="button"
                      >
                        <span
                          class="MuiIconButton-label"
                        >
                          <div
                            class="HvIconMoreOptionsVertical-root HvIconMoreOptionsVertical-rootS"
                          >
                            <svg
                              focusable="false"
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M7 7h2v2H7zm0-5h2v2H7zm0 10h2v2H7z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                        </span>
                      </button>,
                    }
                  }
                  className="HvDropDownMenu-icon HvActions-dropDownMenuButton"
                  classes={
                    Object {
                      "colorInherit": "MuiIconButton-colorInherit",
                      "colorPrimary": "MuiIconButton-colorPrimary",
                      "colorSecondary": "MuiIconButton-colorSecondary",
                      "disabled": "Mui-disabled",
                      "edgeEnd": "MuiIconButton-edgeEnd",
                      "edgeStart": "MuiIconButton-edgeStart",
                      "label": "MuiIconButton-label",
                      "root": "MuiIconButton-root",
                      "sizeSmall": "MuiIconButton-sizeSmall",
                    }
                  }
                  disabled={false}
                  id="id-menu-icon-button"
                  onClick={[Function]}
                  onKeyDown={[Function]}
                >
                  <WithStyles(ForwardRef(ButtonBase))
                    aria-haspopup="true"
                    aria-label="Dropdown menu"
                    buttonRef={
                      Object {
                        "current": <button
                          aria-haspopup="true"
                          aria-label="Dropdown menu"
                          class="MuiButtonBase-root MuiIconButton-root HvDropDownMenu-icon HvActions-dropDownMenuButton"
                          id="id-menu-icon-button"
                          tabindex="0"
                          type="button"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <div
                              class="HvIconMoreOptionsVertical-root HvIconMoreOptionsVertical-rootS"
                            >
                              <svg
                                focusable="false"
                                height="16px"
                                viewBox="0 0 16 16"
                                width="16px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M7 7h2v2H7zm0-5h2v2H7zm0 10h2v2H7z"
                                  fill="#414141"
                                />
                              </svg>
                            </div>
                          </span>
                        </button>,
                      }
                    }
                    centerRipple={true}
                    className="MuiIconButton-root HvDropDownMenu-icon HvActions-dropDownMenuButton"
                    disabled={false}
                    focusRipple={true}
                    id="id-menu-icon-button"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                  >
                    <ForwardRef(ButtonBase)
                      aria-haspopup="true"
                      aria-label="Dropdown menu"
                      buttonRef={
                        Object {
                          "current": <button
                            aria-haspopup="true"
                            aria-label="Dropdown menu"
                            class="MuiButtonBase-root MuiIconButton-root HvDropDownMenu-icon HvActions-dropDownMenuButton"
                            id="id-menu-icon-button"
                            tabindex="0"
                            type="button"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <div
                                class="HvIconMoreOptionsVertical-root HvIconMoreOptionsVertical-rootS"
                              >
                                <svg
                                  focusable="false"
                                  height="16px"
                                  viewBox="0 0 16 16"
                                  width="16px"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M7 7h2v2H7zm0-5h2v2H7zm0 10h2v2H7z"
                                    fill="#414141"
                                  />
                                </svg>
                              </div>
                            </span>
                          </button>,
                        }
                      }
                      centerRipple={true}
                      className="MuiIconButton-root HvDropDownMenu-icon HvActions-dropDownMenuButton"
                      classes={
                        Object {
                          "disabled": "Mui-disabled",
                          "focusVisible": "Mui-focusVisible",
                          "root": "MuiButtonBase-root",
                        }
                      }
                      disableRipple={true}
                      disabled={false}
                      focusRipple={true}
                      id="id-menu-icon-button"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                    >
                      <button
                        aria-haspopup="true"
                        aria-label="Dropdown menu"
                        className="MuiButtonBase-root MuiIconButton-root HvDropDownMenu-icon HvActions-dropDownMenuButton"
                        disabled={false}
                        id="id-menu-icon-button"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <WithStyles(MoreOptionsVertical)>
                            <MoreOptionsVertical
                              classes={
                                Object {
                                  "root": "HvIconMoreOptionsVertical-root",
                                  "rootL": "HvIconMoreOptionsVertical-rootL",
                                  "rootM": "HvIconMoreOptionsVertical-rootM",
                                  "rootS": "HvIconMoreOptionsVertical-rootS",
                                  "rootXs": "HvIconMoreOptionsVertical-rootXs",
                                }
                              }
                            >
                              <div
                                className="HvIconMoreOptionsVertical-root HvIconMoreOptionsVertical-rootS"
                              >
                                <svg
                                  focusable={false}
                                  height="16px"
                                  viewBox="0 0 16 16"
                                  width="16px"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    className="color0"
                                    d="M7 7h2v2H7zm0-5h2v2H7zm0 10h2v2H7z"
                                    fill="#414141"
                                  />
                                </svg>
                              </div>
                            </MoreOptionsVertical>
                          </WithStyles(MoreOptionsVertical)>
                        </span>
                      </button>
                    </ForwardRef(ButtonBase)>
                  </WithStyles(ForwardRef(ButtonBase))>
                </ForwardRef(IconButton)>
              </WithStyles(ForwardRef(IconButton))>
              <ForwardRef(Popper)
                anchorEl={null}
                className="HvDropDownMenu-popper"
                disablePortal={false}
                open={false}
                placement="bottom-end"
                popperOptions={
                  Object {
                    "onCreate": [Function],
                    "onUpdate": [Function],
                  }
                }
              />
            </div>
          </DropDownMenu>
        </WithId>
      </WithStyles(WithId)>
    </div>
  </Actions>
</WithStyles(Actions)>
`;
