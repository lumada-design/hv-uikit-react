// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CheckBox should render correctly 1`] = `
<WithStyles(HvCheckbox)
  id="test"
  inputProps={
    Object {
      "aria-label": "Checkbox example",
    }
  }
>
  <HvCheckbox
    classes={
      Object {
        "checkBox": "HvCheckBox-checkBox",
        "container": "HvCheckBox-container",
        "disableFocus": "HvCheckBox-disableFocus",
        "icon": "HvCheckBox-icon",
        "labelDisabled": "HvCheckBox-labelDisabled",
        "labelEnd": "HvCheckBox-labelEnd",
        "labelStart": "HvCheckBox-labelStart",
        "labelTypography": "HvCheckBox-labelTypography",
      }
    }
    id="test"
    inputProps={
      Object {
        "aria-label": "Checkbox example",
      }
    }
  >
    <WithStyles(ForwardRef(FormControlLabel))
      className="HvCheckBox-container"
      classes={
        Object {
          "disabled": "HvCheckBox-labelDisabled",
          "label": "HvCheckBox-labelTypography",
        }
      }
      control={
        <WithStyles(ForwardRef(Checkbox))
          checkedIcon={
            <WithStyles(CheckboxCheck)
              className="HvCheckBox-icon"
            />
          }
          className="HvCheckBox-checkBox"
          color="default"
          disableRipple={true}
          disabled={false}
          icon={
            <WithStyles(Checkbox)
              className="HvCheckBox-icon"
            />
          }
          id="test-input"
          indeterminateIcon={
            <WithStyles(CheckboxPartial)
              className="HvCheckBox-icon"
            />
          }
          inputProps={
            Object {
              "aria-label": "Checkbox example",
            }
          }
          onBlur={[Function]}
          onChange={[Function]}
          value=""
        />
      }
      disabled={false}
      id="test"
      labelPlacement="end"
    >
      <ForwardRef(FormControlLabel)
        className="HvCheckBox-container"
        classes={
          Object {
            "disabled": "Mui-disabled HvCheckBox-labelDisabled",
            "label": "MuiFormControlLabel-label HvCheckBox-labelTypography",
            "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
            "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
            "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
            "root": "MuiFormControlLabel-root",
          }
        }
        control={
          <WithStyles(ForwardRef(Checkbox))
            checkedIcon={
              <WithStyles(CheckboxCheck)
                className="HvCheckBox-icon"
              />
            }
            className="HvCheckBox-checkBox"
            color="default"
            disableRipple={true}
            disabled={false}
            icon={
              <WithStyles(Checkbox)
                className="HvCheckBox-icon"
              />
            }
            id="test-input"
            indeterminateIcon={
              <WithStyles(CheckboxPartial)
                className="HvCheckBox-icon"
              />
            }
            inputProps={
              Object {
                "aria-label": "Checkbox example",
              }
            }
            onBlur={[Function]}
            onChange={[Function]}
            value=""
          />
        }
        disabled={false}
        id="test"
        labelPlacement="end"
      >
        <label
          className="MuiFormControlLabel-root HvCheckBox-container"
          id="test"
        >
          <WithStyles(ForwardRef(Checkbox))
            checkedIcon={
              <WithStyles(CheckboxCheck)
                className="HvCheckBox-icon"
              />
            }
            className="HvCheckBox-checkBox"
            color="default"
            disableRipple={true}
            disabled={false}
            icon={
              <WithStyles(Checkbox)
                className="HvCheckBox-icon"
              />
            }
            id="test-input"
            indeterminateIcon={
              <WithStyles(CheckboxPartial)
                className="HvCheckBox-icon"
              />
            }
            inputProps={
              Object {
                "aria-label": "Checkbox example",
              }
            }
            onBlur={[Function]}
            onChange={[Function]}
            value=""
          >
            <ForwardRef(Checkbox)
              checkedIcon={
                <WithStyles(CheckboxCheck)
                  className="HvCheckBox-icon"
                />
              }
              className="HvCheckBox-checkBox"
              classes={
                Object {
                  "checked": "Mui-checked",
                  "colorPrimary": "MuiCheckbox-colorPrimary",
                  "colorSecondary": "MuiCheckbox-colorSecondary",
                  "disabled": "Mui-disabled",
                  "indeterminate": "MuiCheckbox-indeterminate",
                  "root": "MuiCheckbox-root",
                }
              }
              color="default"
              disableRipple={true}
              disabled={false}
              icon={
                <WithStyles(Checkbox)
                  className="HvCheckBox-icon"
                />
              }
              id="test-input"
              indeterminateIcon={
                <WithStyles(CheckboxPartial)
                  className="HvCheckBox-icon"
                />
              }
              inputProps={
                Object {
                  "aria-label": "Checkbox example",
                }
              }
              onBlur={[Function]}
              onChange={[Function]}
              value=""
            >
              <WithStyles(ForwardRef(SwitchBase))
                checkedIcon={
                  <WithStyles(CheckboxCheck)
                    className="HvCheckBox-icon"
                    fontSize="default"
                  />
                }
                className="HvCheckBox-checkBox"
                classes={
                  Object {
                    "checked": "Mui-checked",
                    "disabled": "Mui-disabled",
                    "root": "MuiCheckbox-root",
                  }
                }
                color="default"
                disableRipple={true}
                disabled={false}
                icon={
                  <WithStyles(Checkbox)
                    className="HvCheckBox-icon"
                    fontSize="default"
                  />
                }
                id="test-input"
                inputProps={
                  Object {
                    "aria-label": "Checkbox example",
                    "data-indeterminate": false,
                  }
                }
                onBlur={[Function]}
                onChange={[Function]}
                type="checkbox"
                value=""
              >
                <ForwardRef(SwitchBase)
                  checkedIcon={
                    <WithStyles(CheckboxCheck)
                      className="HvCheckBox-icon"
                      fontSize="default"
                    />
                  }
                  className="HvCheckBox-checkBox"
                  classes={
                    Object {
                      "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                      "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                      "input": "PrivateSwitchBase-input-4",
                      "root": "PrivateSwitchBase-root-1 MuiCheckbox-root",
                    }
                  }
                  color="default"
                  disableRipple={true}
                  disabled={false}
                  icon={
                    <WithStyles(Checkbox)
                      className="HvCheckBox-icon"
                      fontSize="default"
                    />
                  }
                  id="test-input"
                  inputProps={
                    Object {
                      "aria-label": "Checkbox example",
                      "data-indeterminate": false,
                    }
                  }
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="checkbox"
                  value=""
                >
                  <WithStyles(ForwardRef(IconButton))
                    className="PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox"
                    color="default"
                    component="span"
                    disableRipple={true}
                    disabled={false}
                    onBlur={[Function]}
                    onFocus={[Function]}
                    tabIndex={null}
                  >
                    <ForwardRef(IconButton)
                      className="PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox"
                      classes={
                        Object {
                          "colorInherit": "MuiIconButton-colorInherit",
                          "colorPrimary": "MuiIconButton-colorPrimary",
                          "colorSecondary": "MuiIconButton-colorSecondary",
                          "disabled": "Mui-disabled",
                          "edgeEnd": "MuiIconButton-edgeEnd",
                          "edgeStart": "MuiIconButton-edgeStart",
                          "label": "MuiIconButton-label",
                          "root": "MuiIconButton-root",
                          "sizeSmall": "MuiIconButton-sizeSmall",
                        }
                      }
                      color="default"
                      component="span"
                      disableRipple={true}
                      disabled={false}
                      onBlur={[Function]}
                      onFocus={[Function]}
                      tabIndex={null}
                    >
                      <WithStyles(ForwardRef(ButtonBase))
                        centerRipple={true}
                        className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox"
                        component="span"
                        disableRipple={true}
                        disabled={false}
                        focusRipple={true}
                        onBlur={[Function]}
                        onFocus={[Function]}
                        tabIndex={null}
                      >
                        <ForwardRef(ButtonBase)
                          centerRipple={true}
                          className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiButtonBase-root",
                            }
                          }
                          component="span"
                          disableRipple={true}
                          disabled={false}
                          focusRipple={true}
                          onBlur={[Function]}
                          onFocus={[Function]}
                          tabIndex={null}
                        >
                          <span
                            aria-disabled={false}
                            className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox"
                            onBlur={[Function]}
                            onDragLeave={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            tabIndex={null}
                          >
                            <span
                              className="MuiIconButton-label"
                            >
                              <input
                                aria-label="Checkbox example"
                                className="PrivateSwitchBase-input-4"
                                data-indeterminate={false}
                                disabled={false}
                                id="test-input"
                                onChange={[Function]}
                                type="checkbox"
                                value=""
                              />
                              <WithStyles(Checkbox)
                                className="HvCheckBox-icon"
                                fontSize="default"
                              >
                                <Checkbox
                                  className="HvCheckBox-icon"
                                  classes={
                                    Object {
                                      "root": "HvIconCheckbox-root",
                                      "rootL": "HvIconCheckbox-rootL",
                                      "rootM": "HvIconCheckbox-rootM",
                                      "rootS": "HvIconCheckbox-rootS",
                                      "rootXs": "HvIconCheckbox-rootXs",
                                    }
                                  }
                                  fontSize="default"
                                >
                                  <div
                                    className="HvCheckBox-icon HvIconCheckbox-root HvIconCheckbox-rootS"
                                    fontSize="default"
                                  >
                                    <svg
                                      focusable={false}
                                      height="16px"
                                      viewBox="0 0 16 16"
                                      width="16px"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        className="color0"
                                        d="M0 0h16v16H0z"
                                        fill="#FFFFFF"
                                      />
                                      <path
                                        className="color1"
                                        d="M0-.00291v16h16v-16zm15 15H1v-14h14z"
                                        fill="#414141"
                                      />
                                    </svg>
                                  </div>
                                </Checkbox>
                              </WithStyles(Checkbox)>
                            </span>
                          </span>
                        </ForwardRef(ButtonBase)>
                      </WithStyles(ForwardRef(ButtonBase))>
                    </ForwardRef(IconButton)>
                  </WithStyles(ForwardRef(IconButton))>
                </ForwardRef(SwitchBase)>
              </WithStyles(ForwardRef(SwitchBase))>
            </ForwardRef(Checkbox)>
          </WithStyles(ForwardRef(Checkbox))>
          <WithStyles(ForwardRef(Typography))
            className="MuiFormControlLabel-label HvCheckBox-labelTypography"
            component="span"
          >
            <ForwardRef(Typography)
              className="MuiFormControlLabel-label HvCheckBox-labelTypography"
              classes={
                Object {
                  "alignCenter": "MuiTypography-alignCenter",
                  "alignJustify": "MuiTypography-alignJustify",
                  "alignLeft": "MuiTypography-alignLeft",
                  "alignRight": "MuiTypography-alignRight",
                  "body1": "MuiTypography-body1",
                  "body2": "MuiTypography-body2",
                  "button": "MuiTypography-button",
                  "caption": "MuiTypography-caption",
                  "colorError": "MuiTypography-colorError",
                  "colorInherit": "MuiTypography-colorInherit",
                  "colorPrimary": "MuiTypography-colorPrimary",
                  "colorSecondary": "MuiTypography-colorSecondary",
                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                  "displayBlock": "MuiTypography-displayBlock",
                  "displayInline": "MuiTypography-displayInline",
                  "gutterBottom": "MuiTypography-gutterBottom",
                  "h1": "MuiTypography-h1",
                  "h2": "MuiTypography-h2",
                  "h3": "MuiTypography-h3",
                  "h4": "MuiTypography-h4",
                  "h5": "MuiTypography-h5",
                  "h6": "MuiTypography-h6",
                  "noWrap": "MuiTypography-noWrap",
                  "overline": "MuiTypography-overline",
                  "paragraph": "MuiTypography-paragraph",
                  "root": "MuiTypography-root",
                  "srOnly": "MuiTypography-srOnly",
                  "subtitle1": "MuiTypography-subtitle1",
                  "subtitle2": "MuiTypography-subtitle2",
                }
              }
              component="span"
            >
              <span
                className="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
              />
            </ForwardRef(Typography)>
          </WithStyles(ForwardRef(Typography))>
        </label>
      </ForwardRef(FormControlLabel)>
    </WithStyles(ForwardRef(FormControlLabel))>
  </HvCheckbox>
</WithStyles(HvCheckbox)>
`;
