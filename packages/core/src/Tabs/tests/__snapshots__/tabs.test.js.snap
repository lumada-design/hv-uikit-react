// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Compose Tabs withStyles should render correctly 1`] = `
<WithStyles(HvTabs)
  id="tabs"
  onChange={[Function]}
  value={0}
>
  <HvTabs
    classes={
      Object {
        "flexContainer": "HvTabs-flexContainer",
        "indicator": "HvTabs-indicator",
        "root": "HvTabs-root",
        "scroller": "HvTabs-scroller",
      }
    }
    id="tabs"
    onChange={[Function]}
    value={0}
  >
    <WithStyles(ForwardRef(Tabs))
      TabIndicatorProps={
        Object {
          "children": <div />,
        }
      }
      classes={
        Object {
          "flexContainer": "HvTabs-flexContainer",
          "indicator": "HvTabs-indicator",
          "root": "HvTabs-root",
          "scroller": "HvTabs-scroller",
        }
      }
      id="tabs"
      onChange={[Function]}
      value={0}
    >
      <ForwardRef(Tabs)
        TabIndicatorProps={
          Object {
            "children": <div />,
          }
        }
        classes={
          Object {
            "centered": "MuiTabs-centered",
            "fixed": "MuiTabs-fixed",
            "flexContainer": "MuiTabs-flexContainer HvTabs-flexContainer",
            "flexContainerVertical": "MuiTabs-flexContainerVertical",
            "indicator": "MuiTabs-indicator HvTabs-indicator",
            "root": "MuiTabs-root HvTabs-root",
            "scrollButtons": "MuiTabs-scrollButtons",
            "scrollButtonsDesktop": "MuiTabs-scrollButtonsDesktop",
            "scrollable": "MuiTabs-scrollable",
            "scroller": "MuiTabs-scroller HvTabs-scroller",
            "vertical": "MuiTabs-vertical",
          }
        }
        id="tabs"
        onChange={[Function]}
        value={0}
      >
        <div
          className="MuiTabs-root HvTabs-root"
          id="tabs"
        >
          <div
            className="MuiTabs-scroller HvTabs-scroller MuiTabs-fixed"
            onScroll={[Function]}
            style={
              Object {
                "marginBottom": null,
                "overflow": "hidden",
              }
            }
          >
            <div
              className="MuiTabs-flexContainer HvTabs-flexContainer"
              role="tablist"
            >
              <WithStyles(HvTab)
                fullWidth={false}
                id="tabs-tab1"
                indicator={false}
                key=".0"
                label="Clickable tab 1"
                onChange={[Function]}
                selected={true}
                textColor="inherit"
                value={0}
              >
                <HvTab
                  classes={
                    Object {
                      "disabled": "HvTab-disabled",
                      "root": "HvTab-root",
                      "selected": "HvTab-selected",
                      "tabBorder": "HvTab-tabBorder",
                    }
                  }
                  disabled={false}
                  fullWidth={false}
                  icon={null}
                  id="tabs-tab1"
                  indicator={false}
                  label="Clickable tab 1"
                  onChange={[Function]}
                  selected={true}
                  textColor="inherit"
                  value={0}
                >
                  <WithStyles(ForwardRef(Tab))
                    classes={
                      Object {
                        "disabled": "HvTab-disabled",
                        "root": "HvTab-root",
                        "selected": "HvTab-selected",
                      }
                    }
                    component={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      }
                    }
                    disableRipple={true}
                    disableTouchRipple={true}
                    disabled={false}
                    fullWidth={false}
                    icon={null}
                    id="tabs-tab1"
                    indicator={false}
                    label="Clickable tab 1"
                    onChange={[Function]}
                    selected={true}
                    textColor="inherit"
                    value={0}
                  >
                    <ForwardRef(Tab)
                      classes={
                        Object {
                          "disabled": "Mui-disabled HvTab-disabled",
                          "fullWidth": "MuiTab-fullWidth",
                          "labelIcon": "MuiTab-labelIcon",
                          "root": "MuiTab-root HvTab-root",
                          "selected": "Mui-selected HvTab-selected",
                          "textColorInherit": "MuiTab-textColorInherit",
                          "textColorPrimary": "MuiTab-textColorPrimary",
                          "textColorSecondary": "MuiTab-textColorSecondary",
                          "wrapped": "MuiTab-wrapped",
                          "wrapper": "MuiTab-wrapper",
                        }
                      }
                      component={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        }
                      }
                      disableRipple={true}
                      disableTouchRipple={true}
                      disabled={false}
                      fullWidth={false}
                      icon={null}
                      id="tabs-tab1"
                      indicator={false}
                      label="Clickable tab 1"
                      onChange={[Function]}
                      selected={true}
                      textColor="inherit"
                      value={0}
                    >
                      <WithStyles(ForwardRef(ButtonBase))
                        aria-selected={true}
                        className="MuiTab-root HvTab-root MuiTab-textColorInherit Mui-selected HvTab-selected"
                        component={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "render": [Function],
                          }
                        }
                        disableRipple={true}
                        disableTouchRipple={true}
                        disabled={false}
                        focusRipple={true}
                        id="tabs-tab1"
                        onClick={[Function]}
                        role="tab"
                      >
                        <ForwardRef(ButtonBase)
                          aria-selected={true}
                          className="MuiTab-root HvTab-root MuiTab-textColorInherit Mui-selected HvTab-selected"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiButtonBase-root",
                            }
                          }
                          component={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "render": [Function],
                            }
                          }
                          disableRipple={true}
                          disableTouchRipple={true}
                          disabled={false}
                          focusRipple={true}
                          id="tabs-tab1"
                          onClick={[Function]}
                          role="tab"
                        >
                          <ForwardRef
                            aria-disabled={false}
                            aria-selected={true}
                            className="MuiButtonBase-root MuiTab-root HvTab-root MuiTab-textColorInherit Mui-selected HvTab-selected"
                            id="tabs-tab1"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onDragLeave={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            role="tab"
                            tabIndex={0}
                          >
                            <WithStyles(ForwardRef(ButtonBase))
                              aria-disabled={false}
                              aria-selected={true}
                              className="MuiButtonBase-root MuiTab-root HvTab-root MuiTab-textColorInherit Mui-selected HvTab-selected"
                              disabled={false}
                              id="tabs-tab1"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="tab"
                              tabIndex={0}
                            >
                              <ForwardRef(ButtonBase)
                                aria-disabled={false}
                                aria-selected={true}
                                className="MuiButtonBase-root MuiTab-root HvTab-root MuiTab-textColorInherit Mui-selected HvTab-selected"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "focusVisible": "Mui-focusVisible",
                                    "root": "MuiButtonBase-root",
                                  }
                                }
                                disableRipple={true}
                                disabled={false}
                                id="tabs-tab1"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onDragLeave={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                role="tab"
                                tabIndex={0}
                              >
                                <button
                                  aria-disabled={false}
                                  aria-selected={true}
                                  className="MuiButtonBase-root MuiButtonBase-root MuiTab-root HvTab-root MuiTab-textColorInherit Mui-selected HvTab-selected"
                                  disabled={false}
                                  id="tabs-tab1"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onDragLeave={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  role="tab"
                                  tabIndex={0}
                                  type="button"
                                >
                                  <span
                                    className="MuiTab-wrapper"
                                  >
                                    Clickable tab 1
                                  </span>
                                  <div
                                    className="HvTab-tabBorder"
                                    role="presentation"
                                  />
                                </button>
                              </ForwardRef(ButtonBase)>
                            </WithStyles(ForwardRef(ButtonBase))>
                          </ForwardRef>
                        </ForwardRef(ButtonBase)>
                      </WithStyles(ForwardRef(ButtonBase))>
                    </ForwardRef(Tab)>
                  </WithStyles(ForwardRef(Tab))>
                </HvTab>
              </WithStyles(HvTab)>
              <WithStyles(HvTab)
                fullWidth={false}
                id="tabs-tab2"
                indicator={false}
                key=".1"
                label="Clickable tab 2"
                onChange={[Function]}
                selected={false}
                textColor="inherit"
                value={1}
              >
                <HvTab
                  classes={
                    Object {
                      "disabled": "HvTab-disabled",
                      "root": "HvTab-root",
                      "selected": "HvTab-selected",
                      "tabBorder": "HvTab-tabBorder",
                    }
                  }
                  disabled={false}
                  fullWidth={false}
                  icon={null}
                  id="tabs-tab2"
                  indicator={false}
                  label="Clickable tab 2"
                  onChange={[Function]}
                  selected={false}
                  textColor="inherit"
                  value={1}
                >
                  <WithStyles(ForwardRef(Tab))
                    classes={
                      Object {
                        "disabled": "HvTab-disabled",
                        "root": "HvTab-root",
                        "selected": "HvTab-selected",
                      }
                    }
                    component={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      }
                    }
                    disableRipple={true}
                    disableTouchRipple={true}
                    disabled={false}
                    fullWidth={false}
                    icon={null}
                    id="tabs-tab2"
                    indicator={false}
                    label="Clickable tab 2"
                    onChange={[Function]}
                    selected={false}
                    textColor="inherit"
                    value={1}
                  >
                    <ForwardRef(Tab)
                      classes={
                        Object {
                          "disabled": "Mui-disabled HvTab-disabled",
                          "fullWidth": "MuiTab-fullWidth",
                          "labelIcon": "MuiTab-labelIcon",
                          "root": "MuiTab-root HvTab-root",
                          "selected": "Mui-selected HvTab-selected",
                          "textColorInherit": "MuiTab-textColorInherit",
                          "textColorPrimary": "MuiTab-textColorPrimary",
                          "textColorSecondary": "MuiTab-textColorSecondary",
                          "wrapped": "MuiTab-wrapped",
                          "wrapper": "MuiTab-wrapper",
                        }
                      }
                      component={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        }
                      }
                      disableRipple={true}
                      disableTouchRipple={true}
                      disabled={false}
                      fullWidth={false}
                      icon={null}
                      id="tabs-tab2"
                      indicator={false}
                      label="Clickable tab 2"
                      onChange={[Function]}
                      selected={false}
                      textColor="inherit"
                      value={1}
                    >
                      <WithStyles(ForwardRef(ButtonBase))
                        aria-selected={false}
                        className="MuiTab-root HvTab-root MuiTab-textColorInherit"
                        component={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "render": [Function],
                          }
                        }
                        disableRipple={true}
                        disableTouchRipple={true}
                        disabled={false}
                        focusRipple={true}
                        id="tabs-tab2"
                        onClick={[Function]}
                        role="tab"
                      >
                        <ForwardRef(ButtonBase)
                          aria-selected={false}
                          className="MuiTab-root HvTab-root MuiTab-textColorInherit"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiButtonBase-root",
                            }
                          }
                          component={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "render": [Function],
                            }
                          }
                          disableRipple={true}
                          disableTouchRipple={true}
                          disabled={false}
                          focusRipple={true}
                          id="tabs-tab2"
                          onClick={[Function]}
                          role="tab"
                        >
                          <ForwardRef
                            aria-disabled={false}
                            aria-selected={false}
                            className="MuiButtonBase-root MuiTab-root HvTab-root MuiTab-textColorInherit"
                            id="tabs-tab2"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onDragLeave={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            role="tab"
                            tabIndex={0}
                          >
                            <WithStyles(ForwardRef(ButtonBase))
                              aria-disabled={false}
                              aria-selected={false}
                              className="MuiButtonBase-root MuiTab-root HvTab-root MuiTab-textColorInherit"
                              disabled={false}
                              id="tabs-tab2"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="tab"
                              tabIndex={0}
                            >
                              <ForwardRef(ButtonBase)
                                aria-disabled={false}
                                aria-selected={false}
                                className="MuiButtonBase-root MuiTab-root HvTab-root MuiTab-textColorInherit"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "focusVisible": "Mui-focusVisible",
                                    "root": "MuiButtonBase-root",
                                  }
                                }
                                disableRipple={true}
                                disabled={false}
                                id="tabs-tab2"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onDragLeave={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                role="tab"
                                tabIndex={0}
                              >
                                <button
                                  aria-disabled={false}
                                  aria-selected={false}
                                  className="MuiButtonBase-root MuiButtonBase-root MuiTab-root HvTab-root MuiTab-textColorInherit"
                                  disabled={false}
                                  id="tabs-tab2"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onDragLeave={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  role="tab"
                                  tabIndex={0}
                                  type="button"
                                >
                                  <span
                                    className="MuiTab-wrapper"
                                  >
                                    Clickable tab 2
                                  </span>
                                  <div
                                    className="HvTab-tabBorder"
                                    role="presentation"
                                  />
                                </button>
                              </ForwardRef(ButtonBase)>
                            </WithStyles(ForwardRef(ButtonBase))>
                          </ForwardRef>
                        </ForwardRef(ButtonBase)>
                      </WithStyles(ForwardRef(ButtonBase))>
                    </ForwardRef(Tab)>
                  </WithStyles(ForwardRef(Tab))>
                </HvTab>
              </WithStyles(HvTab)>
              <WithStyles(HvTab)
                fullWidth={false}
                id="tabs-tab3"
                indicator={false}
                key=".2"
                label="Clickable tab 3"
                onChange={[Function]}
                selected={false}
                textColor="inherit"
                value={2}
              >
                <HvTab
                  classes={
                    Object {
                      "disabled": "HvTab-disabled",
                      "root": "HvTab-root",
                      "selected": "HvTab-selected",
                      "tabBorder": "HvTab-tabBorder",
                    }
                  }
                  disabled={false}
                  fullWidth={false}
                  icon={null}
                  id="tabs-tab3"
                  indicator={false}
                  label="Clickable tab 3"
                  onChange={[Function]}
                  selected={false}
                  textColor="inherit"
                  value={2}
                >
                  <WithStyles(ForwardRef(Tab))
                    classes={
                      Object {
                        "disabled": "HvTab-disabled",
                        "root": "HvTab-root",
                        "selected": "HvTab-selected",
                      }
                    }
                    component={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      }
                    }
                    disableRipple={true}
                    disableTouchRipple={true}
                    disabled={false}
                    fullWidth={false}
                    icon={null}
                    id="tabs-tab3"
                    indicator={false}
                    label="Clickable tab 3"
                    onChange={[Function]}
                    selected={false}
                    textColor="inherit"
                    value={2}
                  >
                    <ForwardRef(Tab)
                      classes={
                        Object {
                          "disabled": "Mui-disabled HvTab-disabled",
                          "fullWidth": "MuiTab-fullWidth",
                          "labelIcon": "MuiTab-labelIcon",
                          "root": "MuiTab-root HvTab-root",
                          "selected": "Mui-selected HvTab-selected",
                          "textColorInherit": "MuiTab-textColorInherit",
                          "textColorPrimary": "MuiTab-textColorPrimary",
                          "textColorSecondary": "MuiTab-textColorSecondary",
                          "wrapped": "MuiTab-wrapped",
                          "wrapper": "MuiTab-wrapper",
                        }
                      }
                      component={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        }
                      }
                      disableRipple={true}
                      disableTouchRipple={true}
                      disabled={false}
                      fullWidth={false}
                      icon={null}
                      id="tabs-tab3"
                      indicator={false}
                      label="Clickable tab 3"
                      onChange={[Function]}
                      selected={false}
                      textColor="inherit"
                      value={2}
                    >
                      <WithStyles(ForwardRef(ButtonBase))
                        aria-selected={false}
                        className="MuiTab-root HvTab-root MuiTab-textColorInherit"
                        component={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "render": [Function],
                          }
                        }
                        disableRipple={true}
                        disableTouchRipple={true}
                        disabled={false}
                        focusRipple={true}
                        id="tabs-tab3"
                        onClick={[Function]}
                        role="tab"
                      >
                        <ForwardRef(ButtonBase)
                          aria-selected={false}
                          className="MuiTab-root HvTab-root MuiTab-textColorInherit"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiButtonBase-root",
                            }
                          }
                          component={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "render": [Function],
                            }
                          }
                          disableRipple={true}
                          disableTouchRipple={true}
                          disabled={false}
                          focusRipple={true}
                          id="tabs-tab3"
                          onClick={[Function]}
                          role="tab"
                        >
                          <ForwardRef
                            aria-disabled={false}
                            aria-selected={false}
                            className="MuiButtonBase-root MuiTab-root HvTab-root MuiTab-textColorInherit"
                            id="tabs-tab3"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onDragLeave={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            role="tab"
                            tabIndex={0}
                          >
                            <WithStyles(ForwardRef(ButtonBase))
                              aria-disabled={false}
                              aria-selected={false}
                              className="MuiButtonBase-root MuiTab-root HvTab-root MuiTab-textColorInherit"
                              disabled={false}
                              id="tabs-tab3"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="tab"
                              tabIndex={0}
                            >
                              <ForwardRef(ButtonBase)
                                aria-disabled={false}
                                aria-selected={false}
                                className="MuiButtonBase-root MuiTab-root HvTab-root MuiTab-textColorInherit"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "focusVisible": "Mui-focusVisible",
                                    "root": "MuiButtonBase-root",
                                  }
                                }
                                disableRipple={true}
                                disabled={false}
                                id="tabs-tab3"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onDragLeave={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                role="tab"
                                tabIndex={0}
                              >
                                <button
                                  aria-disabled={false}
                                  aria-selected={false}
                                  className="MuiButtonBase-root MuiButtonBase-root MuiTab-root HvTab-root MuiTab-textColorInherit"
                                  disabled={false}
                                  id="tabs-tab3"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onDragLeave={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  role="tab"
                                  tabIndex={0}
                                  type="button"
                                >
                                  <span
                                    className="MuiTab-wrapper"
                                  >
                                    Clickable tab 3
                                  </span>
                                  <div
                                    className="HvTab-tabBorder"
                                    role="presentation"
                                  />
                                </button>
                              </ForwardRef(ButtonBase)>
                            </WithStyles(ForwardRef(ButtonBase))>
                          </ForwardRef>
                        </ForwardRef(ButtonBase)>
                      </WithStyles(ForwardRef(ButtonBase))>
                    </ForwardRef(Tab)>
                  </WithStyles(ForwardRef(Tab))>
                </HvTab>
              </WithStyles(HvTab)>
            </div>
            <WithStyles(ForwardRef(TabIndicator))
              className="MuiTabs-indicator HvTabs-indicator"
              color="secondary"
              orientation="horizontal"
              style={
                Object {
                  "left": 0,
                  "width": 0,
                }
              }
            >
              <ForwardRef(TabIndicator)
                className="MuiTabs-indicator HvTabs-indicator"
                classes={
                  Object {
                    "colorPrimary": "PrivateTabIndicator-colorPrimary-6",
                    "colorSecondary": "PrivateTabIndicator-colorSecondary-7",
                    "root": "PrivateTabIndicator-root-5",
                    "vertical": "PrivateTabIndicator-vertical-8",
                  }
                }
                color="secondary"
                orientation="horizontal"
                style={
                  Object {
                    "left": 0,
                    "width": 0,
                  }
                }
              >
                <span
                  className="PrivateTabIndicator-root-5 PrivateTabIndicator-colorSecondary-7 MuiTabs-indicator HvTabs-indicator"
                  style={
                    Object {
                      "left": 0,
                      "width": 0,
                    }
                  }
                >
                  <div />
                </span>
              </ForwardRef(TabIndicator)>
            </WithStyles(ForwardRef(TabIndicator))>
          </div>
        </div>
      </ForwardRef(Tabs)>
    </WithStyles(ForwardRef(Tabs))>
  </HvTabs>
</WithStyles(HvTabs)>
`;

exports[`Tabs should render correctly 1`] = `
<WithStyles(HvTabs)>
  <HvTabs
    classes={
      Object {
        "flexContainer": "HvTabs-flexContainer",
        "indicator": "HvTabs-indicator",
        "root": "HvTabs-root",
        "scroller": "HvTabs-scroller",
      }
    }
  >
    <WithStyles(ForwardRef(Tabs))
      TabIndicatorProps={
        Object {
          "children": <div />,
        }
      }
      classes={
        Object {
          "flexContainer": "HvTabs-flexContainer",
          "indicator": "HvTabs-indicator",
          "root": "HvTabs-root",
          "scroller": "HvTabs-scroller",
        }
      }
    >
      <ForwardRef(Tabs)
        TabIndicatorProps={
          Object {
            "children": <div />,
          }
        }
        classes={
          Object {
            "centered": "MuiTabs-centered",
            "fixed": "MuiTabs-fixed",
            "flexContainer": "MuiTabs-flexContainer HvTabs-flexContainer",
            "flexContainerVertical": "MuiTabs-flexContainerVertical",
            "indicator": "MuiTabs-indicator HvTabs-indicator",
            "root": "MuiTabs-root HvTabs-root",
            "scrollButtons": "MuiTabs-scrollButtons",
            "scrollButtonsDesktop": "MuiTabs-scrollButtonsDesktop",
            "scrollable": "MuiTabs-scrollable",
            "scroller": "MuiTabs-scroller HvTabs-scroller",
            "vertical": "MuiTabs-vertical",
          }
        }
      >
        <div
          className="MuiTabs-root HvTabs-root"
        >
          <div
            className="MuiTabs-scroller HvTabs-scroller MuiTabs-fixed"
            onScroll={[Function]}
            style={
              Object {
                "marginBottom": null,
                "overflow": "hidden",
              }
            }
          >
            <div
              className="MuiTabs-flexContainer HvTabs-flexContainer"
              role="tablist"
            />
            <WithStyles(ForwardRef(TabIndicator))
              className="MuiTabs-indicator HvTabs-indicator"
              color="secondary"
              orientation="horizontal"
              style={
                Object {
                  "left": 0,
                  "width": 0,
                }
              }
            >
              <ForwardRef(TabIndicator)
                className="MuiTabs-indicator HvTabs-indicator"
                classes={
                  Object {
                    "colorPrimary": "PrivateTabIndicator-colorPrimary-2",
                    "colorSecondary": "PrivateTabIndicator-colorSecondary-3",
                    "root": "PrivateTabIndicator-root-1",
                    "vertical": "PrivateTabIndicator-vertical-4",
                  }
                }
                color="secondary"
                orientation="horizontal"
                style={
                  Object {
                    "left": 0,
                    "width": 0,
                  }
                }
              >
                <span
                  className="PrivateTabIndicator-root-1 PrivateTabIndicator-colorSecondary-3 MuiTabs-indicator HvTabs-indicator"
                  style={
                    Object {
                      "left": 0,
                      "width": 0,
                    }
                  }
                >
                  <div />
                </span>
              </ForwardRef(TabIndicator)>
            </WithStyles(ForwardRef(TabIndicator))>
          </div>
        </div>
      </ForwardRef(Tabs)>
    </WithStyles(ForwardRef(Tabs))>
  </HvTabs>
</WithStyles(HvTabs)>
`;
