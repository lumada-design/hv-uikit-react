// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Custom Pagination should render correctly 1`] = `
<WithStyles(WithLabels)
  canNext={true}
  canPrevious={false}
  id="pagination"
  labels={
    Object {
      "pageSizeEntryName": "items",
    }
  }
  onPageChange={[Function]}
  onPageSizeChange={[Function]}
  page={0}
  pageSize={12}
  pageSizeOptions={
    Array [
      4,
      6,
      12,
      24,
      48,
      2000,
    ]
  }
  pages={6}
>
  <WithLabels
    canNext={true}
    canPrevious={false}
    classes={
      Object {
        "icon": "HvPagination-icon",
        "iconContainer": "HvPagination-iconContainer",
        "pageInfo": "HvPagination-pageInfo",
        "pageJump": "HvPagination-pageJump",
        "pageNavigator": "HvPagination-pageNavigator",
        "pageSizeInput": "HvPagination-pageSizeInput",
        "pageSizeInputContainer": "HvPagination-pageSizeInputContainer",
        "pageSizeInputRoot": "HvPagination-pageSizeInputRoot",
        "pageSizeOptions": "HvPagination-pageSizeOptions",
        "pageSizeOptionsSelect": "HvPagination-pageSizeOptionsSelect",
        "root": "HvPagination-root",
        "selectDownIcon": "HvPagination-selectDownIcon",
      }
    }
    id="pagination"
    labels={
      Object {
        "pageSizeEntryName": "items",
      }
    }
    onPageChange={[Function]}
    onPageSizeChange={[Function]}
    page={0}
    pageSize={12}
    pageSizeOptions={
      Array [
        4,
        6,
        12,
        24,
        48,
        2000,
      ]
    }
    pages={6}
  >
    <Pagination
      canNext={true}
      canPrevious={false}
      classes={
        Object {
          "icon": "HvPagination-icon",
          "iconContainer": "HvPagination-iconContainer",
          "pageInfo": "HvPagination-pageInfo",
          "pageJump": "HvPagination-pageJump",
          "pageNavigator": "HvPagination-pageNavigator",
          "pageSizeInput": "HvPagination-pageSizeInput",
          "pageSizeInputContainer": "HvPagination-pageSizeInputContainer",
          "pageSizeInputRoot": "HvPagination-pageSizeInputRoot",
          "pageSizeOptions": "HvPagination-pageSizeOptions",
          "pageSizeOptionsSelect": "HvPagination-pageSizeOptionsSelect",
          "root": "HvPagination-root",
          "selectDownIcon": "HvPagination-selectDownIcon",
        }
      }
      id="pagination"
      labels={
        Object {
          "pageSizeEntryName": "items",
          "pageSizePrev": "Show",
          "pageSizeSelectorDescription": "Select how many to display",
          "pagesSeparator": "of",
          "paginationFirstPageTitle": "First page",
          "paginationInputLabel": "Total pages for page input",
          "paginationLastPageTitle": "Last page",
          "paginationNextPageTitle": "Next page",
          "paginationPreviousPageTitle": "Previous page",
        }
      }
      onPageChange={[Function]}
      onPageSizeChange={[Function]}
      page={0}
      pageSize={12}
      pageSizeOptions={
        Array [
          4,
          6,
          12,
          24,
          48,
          2000,
        ]
      }
      pages={6}
    >
      <div
        className="HvPagination-root"
        id="pagination"
      >
        <div
          className="HvPagination-pageSizeOptions"
        >
          <WithStyles(ForwardRef)
            component="span"
            variant="sText"
          >
            <ForwardRef
              classes={
                Object {
                  "3xlTitle": "HvTypography-3xlTitle",
                  "4xlTitle": "HvTypography-4xlTitle",
                  "5xlTitle": "HvTypography-5xlTitle",
                  "disabledButtonText": "HvTypography-disabledButtonText",
                  "highlightText": "HvTypography-highlightText",
                  "infoText": "HvTypography-infoText",
                  "inlineLink": "HvTypography-inlineLink",
                  "lTitle": "HvTypography-lTitle",
                  "labelText": "HvTypography-labelText",
                  "mTitle": "HvTypography-mTitle",
                  "normalText": "HvTypography-normalText",
                  "placeholderText": "HvTypography-placeholderText",
                  "root": "HvTypography-root",
                  "sLink": "HvTypography-sLink",
                  "sText": "HvTypography-sText",
                  "sTitle": "HvTypography-sTitle",
                  "selectedNavText": "HvTypography-selectedNavText",
                  "selectedText": "HvTypography-selectedText",
                  "vizText": "HvTypography-vizText",
                  "xlTitle": "HvTypography-xlTitle",
                  "xsTitle": "HvTypography-xsTitle",
                  "xxlTitle": "HvTypography-xxlTitle",
                  "xxsTitle": "HvTypography-xxsTitle",
                }
              }
              component="span"
              variant="sText"
            >
              <span
                className="HvTypography-root HvTypography-sText"
              >
                Show
              </span>
            </ForwardRef>
          </WithStyles(ForwardRef)>
          <select
            aria-label="Select how many to display"
            className="HvPagination-pageSizeOptionsSelect"
            disabled={false}
            id="pagination-pageSize"
            onChange={[Function]}
            value={12}
          >
            <option
              key="4"
              value={4}
            >
              4
            </option>
            <option
              key="6"
              value={6}
            >
              6
            </option>
            <option
              key="12"
              value={12}
            >
              12
            </option>
            <option
              key="24"
              value={24}
            >
              24
            </option>
            <option
              key="48"
              value={48}
            >
              48
            </option>
            <option
              key="2000"
              value={2000}
            >
              2000
            </option>
          </select>
          <WithStyles(DropDownXS)
            className="HvPagination-selectDownIcon"
          >
            <DropDownXS
              className="HvPagination-selectDownIcon"
              classes={
                Object {
                  "root": "HvIconDropDownXS-root",
                  "rootL": "HvIconDropDownXS-rootL",
                  "rootM": "HvIconDropDownXS-rootM",
                  "rootS": "HvIconDropDownXS-rootS",
                  "rootXs": "HvIconDropDownXS-rootXs",
                }
              }
            >
              <div
                className="HvPagination-selectDownIcon HvIconDropDownXS-root HvIconDropDownXS-rootXs"
              >
                <svg
                  focusable={false}
                  height="12px"
                  viewBox="0 0 12 12"
                  width="12px"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    className="color0"
                    d="M5.99994 8.65L1.4 4.05l.7-.7L6 7.25l3.9-3.9.7.7z"
                    fill="#414141"
                  />
                </svg>
              </div>
            </DropDownXS>
          </WithStyles(DropDownXS)>
          <WithStyles(ForwardRef)
            component="span"
            variant="sText"
          >
            <ForwardRef
              classes={
                Object {
                  "3xlTitle": "HvTypography-3xlTitle",
                  "4xlTitle": "HvTypography-4xlTitle",
                  "5xlTitle": "HvTypography-5xlTitle",
                  "disabledButtonText": "HvTypography-disabledButtonText",
                  "highlightText": "HvTypography-highlightText",
                  "infoText": "HvTypography-infoText",
                  "inlineLink": "HvTypography-inlineLink",
                  "lTitle": "HvTypography-lTitle",
                  "labelText": "HvTypography-labelText",
                  "mTitle": "HvTypography-mTitle",
                  "normalText": "HvTypography-normalText",
                  "placeholderText": "HvTypography-placeholderText",
                  "root": "HvTypography-root",
                  "sLink": "HvTypography-sLink",
                  "sText": "HvTypography-sText",
                  "sTitle": "HvTypography-sTitle",
                  "selectedNavText": "HvTypography-selectedNavText",
                  "selectedText": "HvTypography-selectedText",
                  "vizText": "HvTypography-vizText",
                  "xlTitle": "HvTypography-xlTitle",
                  "xsTitle": "HvTypography-xsTitle",
                  "xxlTitle": "HvTypography-xxlTitle",
                  "xxsTitle": "HvTypography-xxsTitle",
                }
              }
              component="span"
              variant="sText"
            >
              <span
                className="HvTypography-root HvTypography-sText"
              >
                items
              </span>
            </ForwardRef>
          </WithStyles(ForwardRef)>
        </div>
        <div
          className="HvPagination-pageNavigator"
        >
          <WithStyles(ForwardRef(IconButton))
            aria-label="First Page"
            className="HvPagination-iconContainer"
            disabled={true}
            id="pagination-firstPage-button"
            onClick={[Function]}
          >
            <ForwardRef(IconButton)
              aria-label="First Page"
              className="HvPagination-iconContainer"
              classes={
                Object {
                  "colorInherit": "MuiIconButton-colorInherit",
                  "colorPrimary": "MuiIconButton-colorPrimary",
                  "colorSecondary": "MuiIconButton-colorSecondary",
                  "disabled": "Mui-disabled",
                  "edgeEnd": "MuiIconButton-edgeEnd",
                  "edgeStart": "MuiIconButton-edgeStart",
                  "label": "MuiIconButton-label",
                  "root": "MuiIconButton-root",
                  "sizeSmall": "MuiIconButton-sizeSmall",
                }
              }
              disabled={true}
              id="pagination-firstPage-button"
              onClick={[Function]}
            >
              <WithStyles(ForwardRef(ButtonBase))
                aria-label="First Page"
                centerRipple={true}
                className="MuiIconButton-root HvPagination-iconContainer Mui-disabled"
                disabled={true}
                focusRipple={true}
                id="pagination-firstPage-button"
                onClick={[Function]}
              >
                <ForwardRef(ButtonBase)
                  aria-label="First Page"
                  centerRipple={true}
                  className="MuiIconButton-root HvPagination-iconContainer Mui-disabled"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "root": "MuiButtonBase-root",
                    }
                  }
                  disableRipple={true}
                  disabled={true}
                  focusRipple={true}
                  id="pagination-firstPage-button"
                  onClick={[Function]}
                >
                  <button
                    aria-label="First Page"
                    className="MuiButtonBase-root MuiIconButton-root HvPagination-iconContainer Mui-disabled Mui-disabled"
                    disabled={true}
                    id="pagination-firstPage-button"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={-1}
                    type="button"
                  >
                    <span
                      className="MuiIconButton-label"
                    >
                      <Component>
                        <WithStyles(HvTooltip)
                          disableFocusListener={true}
                          disableTouchListener={true}
                          open={false}
                          style={
                            Object {
                              "overflow": "hidden",
                              "textOverflow": "ellipsis",
                              "whiteSpace": "nowrap",
                            }
                          }
                          title={
                            <WithStyles(ForwardRef)
                              variant="infoText"
                            >
                              First page
                            </WithStyles(ForwardRef)>
                          }
                        >
                          <HvTooltip
                            classes={
                              Object {
                                "color": "HvTooltip-color",
                                "popper": "HvTooltip-popper",
                                "root": "HvTooltip-root",
                                "separator": "HvTooltip-separator",
                                "separatorColor": "HvTooltip-separatorColor",
                                "title": "HvTooltip-title",
                                "tooltip": "HvTooltip-tooltip",
                                "tooltipMulti": "HvTooltip-tooltipMulti",
                                "valueWrapper": "HvTooltip-valueWrapper",
                                "values": "HvTooltip-values",
                                "valuesContainer": "HvTooltip-valuesContainer",
                              }
                            }
                            disableFocusListener={true}
                            disableTouchListener={true}
                            open={false}
                            style={
                              Object {
                                "overflow": "hidden",
                                "textOverflow": "ellipsis",
                                "whiteSpace": "nowrap",
                              }
                            }
                            title={
                              <WithStyles(ForwardRef)
                                variant="infoText"
                              >
                                First page
                              </WithStyles(ForwardRef)>
                            }
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              TransitionComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "children": [Function],
                                    "in": [Function],
                                    "onEnter": [Function],
                                    "onExit": [Function],
                                    "style": [Function],
                                    "timeout": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              TransitionProps={
                                Object {
                                  "timeout": 400,
                                }
                              }
                              classes={
                                Object {
                                  "popper": "HvTooltip-popper",
                                  "tooltip": "HvTooltip-tooltip",
                                }
                              }
                              disableFocusListener={true}
                              disableTouchListener={true}
                              enterDelay={300}
                              open={false}
                              placement="top"
                              style={
                                Object {
                                  "overflow": "hidden",
                                  "textOverflow": "ellipsis",
                                  "whiteSpace": "nowrap",
                                }
                              }
                              title={
                                <WithStyles(ForwardRef)
                                  variant="infoText"
                                >
                                  First page
                                </WithStyles(ForwardRef)>
                              }
                            >
                              <ForwardRef(Tooltip)
                                TransitionComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "children": [Function],
                                      "in": [Function],
                                      "onEnter": [Function],
                                      "onExit": [Function],
                                      "style": [Function],
                                      "timeout": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                TransitionProps={
                                  Object {
                                    "timeout": 400,
                                  }
                                }
                                classes={
                                  Object {
                                    "arrow": "MuiTooltip-arrow",
                                    "popper": "MuiTooltip-popper HvTooltip-popper",
                                    "popperArrow": "MuiTooltip-popperArrow",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip HvTooltip-tooltip",
                                    "tooltipArrow": "MuiTooltip-tooltipArrow",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableFocusListener={true}
                                disableTouchListener={true}
                                enterDelay={300}
                                open={false}
                                placement="top"
                                style={
                                  Object {
                                    "overflow": "hidden",
                                    "textOverflow": "ellipsis",
                                    "whiteSpace": "nowrap",
                                  }
                                }
                                title={
                                  <WithStyles(ForwardRef)
                                    variant="infoText"
                                  >
                                    First page
                                  </WithStyles(ForwardRef)>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseOver={[Function]}
                                  style={
                                    Object {
                                      "overflow": "hidden",
                                      "textOverflow": "ellipsis",
                                      "whiteSpace": "nowrap",
                                    }
                                  }
                                  title={null}
                                >
                                  <FirstPage>
                                    <WithStyles(Start)
                                      className="HvPagination-icon"
                                      color="atmo7"
                                    >
                                      <Start
                                        className="HvPagination-icon"
                                        classes={
                                          Object {
                                            "root": "HvIconStart-root",
                                            "rootL": "HvIconStart-rootL",
                                            "rootM": "HvIconStart-rootM",
                                            "rootS": "HvIconStart-rootS",
                                            "rootXs": "HvIconStart-rootXs",
                                          }
                                        }
                                        color="atmo7"
                                      >
                                        <div
                                          className="HvPagination-icon HvIconStart-root HvIconStart-rootS"
                                        >
                                          <svg
                                            focusable={false}
                                            height="16px"
                                            viewBox="0 0 16 16"
                                            width="16px"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              className="color0"
                                              d="M12.7 15.5L5.3 8.1001l7.4-7.5.7.80005-6.7 6.7 6.7 6.7zM3 0h1v16H3z"
                                              fill="#999999"
                                            />
                                          </svg>
                                        </div>
                                      </Start>
                                    </WithStyles(Start)>
                                  </FirstPage>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                      style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;"
                                    >
                                      <div
                                        class="HvPagination-icon HvIconStart-root HvIconStart-rootS"
                                      >
                                        <svg
                                          focusable="false"
                                          height="16px"
                                          viewBox="0 0 16 16"
                                          width="16px"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            class="color0"
                                            d="M12.7 15.5L5.3 8.1001l7.4-7.5.7.80005-6.7 6.7 6.7 6.7zM3 0h1v16H3z"
                                            fill="#999999"
                                          />
                                        </svg>
                                      </div>
                                    </div>
                                  }
                                  className="MuiTooltip-popper HvTooltip-popper"
                                  id={null}
                                  open={false}
                                  placement="top"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </HvTooltip>
                        </WithStyles(HvTooltip)>
                      </Component>
                    </span>
                  </button>
                </ForwardRef(ButtonBase)>
              </WithStyles(ForwardRef(ButtonBase))>
            </ForwardRef(IconButton)>
          </WithStyles(ForwardRef(IconButton))>
          <WithStyles(ForwardRef(IconButton))
            aria-label="Previous Page"
            className="HvPagination-iconContainer"
            disabled={true}
            id="pagination-previousPage-button"
            onClick={[Function]}
          >
            <ForwardRef(IconButton)
              aria-label="Previous Page"
              className="HvPagination-iconContainer"
              classes={
                Object {
                  "colorInherit": "MuiIconButton-colorInherit",
                  "colorPrimary": "MuiIconButton-colorPrimary",
                  "colorSecondary": "MuiIconButton-colorSecondary",
                  "disabled": "Mui-disabled",
                  "edgeEnd": "MuiIconButton-edgeEnd",
                  "edgeStart": "MuiIconButton-edgeStart",
                  "label": "MuiIconButton-label",
                  "root": "MuiIconButton-root",
                  "sizeSmall": "MuiIconButton-sizeSmall",
                }
              }
              disabled={true}
              id="pagination-previousPage-button"
              onClick={[Function]}
            >
              <WithStyles(ForwardRef(ButtonBase))
                aria-label="Previous Page"
                centerRipple={true}
                className="MuiIconButton-root HvPagination-iconContainer Mui-disabled"
                disabled={true}
                focusRipple={true}
                id="pagination-previousPage-button"
                onClick={[Function]}
              >
                <ForwardRef(ButtonBase)
                  aria-label="Previous Page"
                  centerRipple={true}
                  className="MuiIconButton-root HvPagination-iconContainer Mui-disabled"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "root": "MuiButtonBase-root",
                    }
                  }
                  disableRipple={true}
                  disabled={true}
                  focusRipple={true}
                  id="pagination-previousPage-button"
                  onClick={[Function]}
                >
                  <button
                    aria-label="Previous Page"
                    className="MuiButtonBase-root MuiIconButton-root HvPagination-iconContainer Mui-disabled Mui-disabled"
                    disabled={true}
                    id="pagination-previousPage-button"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={-1}
                    type="button"
                  >
                    <span
                      className="MuiIconButton-label"
                    >
                      <Component>
                        <WithStyles(HvTooltip)
                          disableFocusListener={true}
                          disableTouchListener={true}
                          open={false}
                          style={
                            Object {
                              "overflow": "hidden",
                              "textOverflow": "ellipsis",
                              "whiteSpace": "nowrap",
                            }
                          }
                          title={
                            <WithStyles(ForwardRef)
                              variant="infoText"
                            >
                              Previous page
                            </WithStyles(ForwardRef)>
                          }
                        >
                          <HvTooltip
                            classes={
                              Object {
                                "color": "HvTooltip-color",
                                "popper": "HvTooltip-popper",
                                "root": "HvTooltip-root",
                                "separator": "HvTooltip-separator",
                                "separatorColor": "HvTooltip-separatorColor",
                                "title": "HvTooltip-title",
                                "tooltip": "HvTooltip-tooltip",
                                "tooltipMulti": "HvTooltip-tooltipMulti",
                                "valueWrapper": "HvTooltip-valueWrapper",
                                "values": "HvTooltip-values",
                                "valuesContainer": "HvTooltip-valuesContainer",
                              }
                            }
                            disableFocusListener={true}
                            disableTouchListener={true}
                            open={false}
                            style={
                              Object {
                                "overflow": "hidden",
                                "textOverflow": "ellipsis",
                                "whiteSpace": "nowrap",
                              }
                            }
                            title={
                              <WithStyles(ForwardRef)
                                variant="infoText"
                              >
                                Previous page
                              </WithStyles(ForwardRef)>
                            }
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              TransitionComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "children": [Function],
                                    "in": [Function],
                                    "onEnter": [Function],
                                    "onExit": [Function],
                                    "style": [Function],
                                    "timeout": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              TransitionProps={
                                Object {
                                  "timeout": 400,
                                }
                              }
                              classes={
                                Object {
                                  "popper": "HvTooltip-popper",
                                  "tooltip": "HvTooltip-tooltip",
                                }
                              }
                              disableFocusListener={true}
                              disableTouchListener={true}
                              enterDelay={300}
                              open={false}
                              placement="top"
                              style={
                                Object {
                                  "overflow": "hidden",
                                  "textOverflow": "ellipsis",
                                  "whiteSpace": "nowrap",
                                }
                              }
                              title={
                                <WithStyles(ForwardRef)
                                  variant="infoText"
                                >
                                  Previous page
                                </WithStyles(ForwardRef)>
                              }
                            >
                              <ForwardRef(Tooltip)
                                TransitionComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "children": [Function],
                                      "in": [Function],
                                      "onEnter": [Function],
                                      "onExit": [Function],
                                      "style": [Function],
                                      "timeout": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                TransitionProps={
                                  Object {
                                    "timeout": 400,
                                  }
                                }
                                classes={
                                  Object {
                                    "arrow": "MuiTooltip-arrow",
                                    "popper": "MuiTooltip-popper HvTooltip-popper",
                                    "popperArrow": "MuiTooltip-popperArrow",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip HvTooltip-tooltip",
                                    "tooltipArrow": "MuiTooltip-tooltipArrow",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableFocusListener={true}
                                disableTouchListener={true}
                                enterDelay={300}
                                open={false}
                                placement="top"
                                style={
                                  Object {
                                    "overflow": "hidden",
                                    "textOverflow": "ellipsis",
                                    "whiteSpace": "nowrap",
                                  }
                                }
                                title={
                                  <WithStyles(ForwardRef)
                                    variant="infoText"
                                  >
                                    Previous page
                                  </WithStyles(ForwardRef)>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseOver={[Function]}
                                  style={
                                    Object {
                                      "overflow": "hidden",
                                      "textOverflow": "ellipsis",
                                      "whiteSpace": "nowrap",
                                    }
                                  }
                                  title={null}
                                >
                                  <PrevPage>
                                    <WithStyles(Backwards)
                                      className="HvPagination-icon"
                                      color="atmo7"
                                    >
                                      <Backwards
                                        className="HvPagination-icon"
                                        classes={
                                          Object {
                                            "root": "HvIconBackwards-root",
                                            "rootL": "HvIconBackwards-rootL",
                                            "rootM": "HvIconBackwards-rootM",
                                            "rootS": "HvIconBackwards-rootS",
                                            "rootXs": "HvIconBackwards-rootXs",
                                          }
                                        }
                                        color="atmo7"
                                      >
                                        <div
                                          className="HvPagination-icon HvIconBackwards-root HvIconBackwards-rootS"
                                        >
                                          <svg
                                            focusable={false}
                                            height="16px"
                                            viewBox="0 0 16 16"
                                            width="16px"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              className="color0"
                                              d="M11.35 15.45l-7.4-7.4 7.4-7.5.7.8-6.7 6.7 6.7 6.7z"
                                              fill="#999999"
                                            />
                                          </svg>
                                        </div>
                                      </Backwards>
                                    </WithStyles(Backwards)>
                                  </PrevPage>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                      style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;"
                                    >
                                      <div
                                        class="HvPagination-icon HvIconBackwards-root HvIconBackwards-rootS"
                                      >
                                        <svg
                                          focusable="false"
                                          height="16px"
                                          viewBox="0 0 16 16"
                                          width="16px"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            class="color0"
                                            d="M11.35 15.45l-7.4-7.4 7.4-7.5.7.8-6.7 6.7 6.7 6.7z"
                                            fill="#999999"
                                          />
                                        </svg>
                                      </div>
                                    </div>
                                  }
                                  className="MuiTooltip-popper HvTooltip-popper"
                                  id={null}
                                  open={false}
                                  placement="top"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </HvTooltip>
                        </WithStyles(HvTooltip)>
                      </Component>
                    </span>
                  </button>
                </ForwardRef(ButtonBase)>
              </WithStyles(ForwardRef(ButtonBase))>
            </ForwardRef(IconButton)>
          </WithStyles(ForwardRef(IconButton))>
          <div
            className="HvPagination-pageInfo"
          >
            <div
              className="HvPagination-pageJump"
            >
              <WithStyles(WithLabels)
                classes={
                  Object {
                    "input": "HvPagination-pageSizeInput",
                    "inputRoot": "HvPagination-pageSizeInputRoot",
                    "root": "HvPagination-pageSizeInputContainer",
                  }
                }
                disableClear={true}
                disabled={false}
                id="pagination-currentPage"
                initialValue="1"
                inputProps={
                  Object {
                    "aria-label": "6 Total pages for page input",
                  }
                }
                labels={
                  Object {
                    "pageSizeEntryName": "items",
                    "pageSizePrev": "Show",
                    "pageSizeSelectorDescription": "Select how many to display",
                    "pagesSeparator": "of",
                    "paginationFirstPageTitle": "First page",
                    "paginationInputLabel": "Total pages for page input",
                    "paginationLastPageTitle": "Last page",
                    "paginationNextPageTitle": "Next page",
                    "paginationPreviousPageTitle": "Previous page",
                  }
                }
                onBlur={[Function]}
                onChange={[Function]}
                onKeyDown={[Function]}
                type="number"
                validationIconVisible={false}
                value="1"
              >
                <WithLabels
                  classes={
                    Object {
                      "adornmentButton": "HvInput-adornmentButton",
                      "adornmentsBox": "HvInput-adornmentsBox",
                      "icon": "HvInput-icon",
                      "iconClear": "HvInput-iconClear",
                      "infoIcon": "HvInput-infoIcon",
                      "infoIconContainer": "HvInput-infoIconContainer",
                      "infoText": "HvInput-infoText",
                      "input": "HvInput-input HvPagination-pageSizeInput",
                      "inputDisabled": "HvInput-inputDisabled",
                      "inputRoot": "HvInput-inputRoot HvPagination-pageSizeInputRoot",
                      "inputRootDisabled": "HvInput-inputRootDisabled",
                      "inputRootFocused": "HvInput-inputRootFocused",
                      "inputRootInvalid": "HvInput-inputRootInvalid",
                      "label": "HvInput-label",
                      "labelContainer": "HvInput-labelContainer",
                      "labelDisabled": "HvInput-labelDisabled",
                      "multiLine": "HvInput-multiLine",
                      "root": "HvInput-root HvPagination-pageSizeInputContainer",
                      "suggestionList": "HvInput-suggestionList",
                      "suggestionsContainer": "HvInput-suggestionsContainer",
                    }
                  }
                  disableClear={true}
                  disabled={false}
                  id="pagination-currentPage"
                  initialValue="1"
                  inputProps={
                    Object {
                      "aria-label": "6 Total pages for page input",
                    }
                  }
                  labels={
                    Object {
                      "pageSizeEntryName": "items",
                      "pageSizePrev": "Show",
                      "pageSizeSelectorDescription": "Select how many to display",
                      "pagesSeparator": "of",
                      "paginationFirstPageTitle": "First page",
                      "paginationInputLabel": "Total pages for page input",
                      "paginationLastPageTitle": "Last page",
                      "paginationNextPageTitle": "Next page",
                      "paginationPreviousPageTitle": "Previous page",
                    }
                  }
                  onBlur={[Function]}
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="number"
                  validationIconVisible={false}
                  value="1"
                >
                  <WithId
                    classes={
                      Object {
                        "adornmentButton": "HvInput-adornmentButton",
                        "adornmentsBox": "HvInput-adornmentsBox",
                        "icon": "HvInput-icon",
                        "iconClear": "HvInput-iconClear",
                        "infoIcon": "HvInput-infoIcon",
                        "infoIconContainer": "HvInput-infoIconContainer",
                        "infoText": "HvInput-infoText",
                        "input": "HvInput-input HvPagination-pageSizeInput",
                        "inputDisabled": "HvInput-inputDisabled",
                        "inputRoot": "HvInput-inputRoot HvPagination-pageSizeInputRoot",
                        "inputRootDisabled": "HvInput-inputRootDisabled",
                        "inputRootFocused": "HvInput-inputRootFocused",
                        "inputRootInvalid": "HvInput-inputRootInvalid",
                        "label": "HvInput-label",
                        "labelContainer": "HvInput-labelContainer",
                        "labelDisabled": "HvInput-labelDisabled",
                        "multiLine": "HvInput-multiLine",
                        "root": "HvInput-root HvPagination-pageSizeInputContainer",
                        "suggestionList": "HvInput-suggestionList",
                        "suggestionsContainer": "HvInput-suggestionsContainer",
                      }
                    }
                    disableClear={true}
                    disabled={false}
                    id="pagination-currentPage"
                    initialValue="1"
                    inputProps={
                      Object {
                        "aria-label": "6 Total pages for page input",
                      }
                    }
                    labels={
                      Object {
                        "clearButtonLabel": "Clear the text",
                        "infoText": "",
                        "inputLabel": "",
                        "maxCharQuantityWarningText": "The value is too big",
                        "minCharQuantityWarningText": "The value is too short",
                        "pageSizeEntryName": "items",
                        "pageSizePrev": "Show",
                        "pageSizeSelectorDescription": "Select how many to display",
                        "pagesSeparator": "of",
                        "paginationFirstPageTitle": "First page",
                        "paginationInputLabel": "Total pages for page input",
                        "paginationLastPageTitle": "Last page",
                        "paginationNextPageTitle": "Next page",
                        "paginationPreviousPageTitle": "Previous page",
                        "placeholder": "",
                        "requiredWarningText": "The value is required",
                        "warningText": "something wrong",
                      }
                    }
                    onBlur={[Function]}
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    type="number"
                    validationIconVisible={false}
                    value="1"
                  >
                    <HvInput
                      classes={
                        Object {
                          "adornmentButton": "HvInput-adornmentButton",
                          "adornmentsBox": "HvInput-adornmentsBox",
                          "icon": "HvInput-icon",
                          "iconClear": "HvInput-iconClear",
                          "infoIcon": "HvInput-infoIcon",
                          "infoIconContainer": "HvInput-infoIconContainer",
                          "infoText": "HvInput-infoText",
                          "input": "HvInput-input HvPagination-pageSizeInput",
                          "inputDisabled": "HvInput-inputDisabled",
                          "inputRoot": "HvInput-inputRoot HvPagination-pageSizeInputRoot",
                          "inputRootDisabled": "HvInput-inputRootDisabled",
                          "inputRootFocused": "HvInput-inputRootFocused",
                          "inputRootInvalid": "HvInput-inputRootInvalid",
                          "label": "HvInput-label",
                          "labelContainer": "HvInput-labelContainer",
                          "labelDisabled": "HvInput-labelDisabled",
                          "multiLine": "HvInput-multiLine",
                          "root": "HvInput-root HvPagination-pageSizeInputContainer",
                          "suggestionList": "HvInput-suggestionList",
                          "suggestionsContainer": "HvInput-suggestionsContainer",
                        }
                      }
                      disableClear={true}
                      disabled={false}
                      id="pagination-currentPage"
                      initialValue="1"
                      inputProps={
                        Object {
                          "aria-label": "6 Total pages for page input",
                        }
                      }
                      labels={
                        Object {
                          "clearButtonLabel": "Clear the text",
                          "infoText": "",
                          "inputLabel": "",
                          "maxCharQuantityWarningText": "The value is too big",
                          "minCharQuantityWarningText": "The value is too short",
                          "pageSizeEntryName": "items",
                          "pageSizePrev": "Show",
                          "pageSizeSelectorDescription": "Select how many to display",
                          "pagesSeparator": "of",
                          "paginationFirstPageTitle": "First page",
                          "paginationInputLabel": "Total pages for page input",
                          "paginationLastPageTitle": "Last page",
                          "paginationNextPageTitle": "Next page",
                          "paginationPreviousPageTitle": "Previous page",
                          "placeholder": "",
                          "requiredWarningText": "The value is required",
                          "warningText": "something wrong",
                        }
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      onKeyDown={[Function]}
                      type="number"
                      validationIconVisible={false}
                      value="1"
                    >
                      <WithStyles(WithId)
                        className="HvInput-root HvPagination-pageSizeInputContainer"
                        disabled={false}
                        id="pagination-currentPage"
                        onBlur={[Function]}
                        value="1"
                      >
                        <WithId
                          className="HvInput-root HvPagination-pageSizeInputContainer"
                          classes={
                            Object {
                              "root": "HvFormElement-root",
                            }
                          }
                          disabled={false}
                          id="pagination-currentPage"
                          onBlur={[Function]}
                          value="1"
                        >
                          <HvFormElement
                            className="HvInput-root HvPagination-pageSizeInputContainer"
                            classes={
                              Object {
                                "root": "HvFormElement-root",
                              }
                            }
                            disabled={false}
                            id="pagination-currentPage"
                            onBlur={[Function]}
                            value="1"
                          >
                            <div
                              className="HvInput-root HvPagination-pageSizeInputContainer HvFormElement-root"
                              onBlur={[Function]}
                            >
                              <div
                                className="HvInput-labelContainer"
                              />
                              <WithStyles(HvBaseInput)
                                autoFocus={false}
                                className=""
                                classes={
                                  Object {
                                    "input": "HvInput-input HvPagination-pageSizeInput",
                                    "inputDisabled": "HvInput-inputDisabled",
                                    "inputRoot": "HvInput-inputRoot HvPagination-pageSizeInputRoot",
                                    "inputRootFocused": "HvInput-inputRootFocused",
                                    "multiLine": "HvInput-multiLine",
                                  }
                                }
                                endAdornment={null}
                                id="pagination-currentPage-input"
                                inputProps={
                                  Object {
                                    "aria-label": "6 Total pages for page input",
                                    "ref": Object {
                                      "current": <input
                                        aria-label="6 Total pages for page input"
                                        class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input HvPagination-pageSizeInput"
                                        id="pagination-currentPage-input"
                                        type="number"
                                        value="1"
                                      />,
                                    },
                                  }
                                }
                                inputRef={
                                  Object {
                                    "current": <input
                                      aria-label="6 Total pages for page input"
                                      class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input HvPagination-pageSizeInput"
                                      id="pagination-currentPage-input"
                                      type="number"
                                      value="1"
                                    />,
                                  }
                                }
                                invalid={false}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                required={false}
                                type="number"
                              >
                                <HvBaseInput
                                  autoFocus={false}
                                  className=""
                                  classes={
                                    Object {
                                      "input": "HvBaseInput-input HvInput-input HvPagination-pageSizeInput",
                                      "inputDisabled": "HvBaseInput-inputDisabled HvInput-inputDisabled",
                                      "inputRoot": "HvBaseInput-inputRoot HvInput-inputRoot HvPagination-pageSizeInputRoot",
                                      "inputRootDisabled": "HvBaseInput-inputRootDisabled",
                                      "inputRootFocused": "HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                                      "inputRootInvalid": "HvBaseInput-inputRootInvalid",
                                      "multiLine": "HvBaseInput-multiLine HvInput-multiLine",
                                      "root": "HvBaseInput-root",
                                    }
                                  }
                                  endAdornment={null}
                                  id="pagination-currentPage-input"
                                  inputProps={
                                    Object {
                                      "aria-label": "6 Total pages for page input",
                                      "ref": Object {
                                        "current": <input
                                          aria-label="6 Total pages for page input"
                                          class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input HvPagination-pageSizeInput"
                                          id="pagination-currentPage-input"
                                          type="number"
                                          value="1"
                                        />,
                                      },
                                    }
                                  }
                                  inputRef={
                                    Object {
                                      "current": <input
                                        aria-label="6 Total pages for page input"
                                        class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input HvPagination-pageSizeInput"
                                        id="pagination-currentPage-input"
                                        type="number"
                                        value="1"
                                      />,
                                    }
                                  }
                                  invalid={false}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  required={false}
                                  type="number"
                                >
                                  <WithStyles(ForwardRef(Input))
                                    autoFocus={false}
                                    className="HvBaseInput-inputRoot HvInput-inputRoot HvPagination-pageSizeInputRoot"
                                    classes={
                                      Object {
                                        "disabled": "HvBaseInput-inputDisabled HvInput-inputDisabled",
                                        "focused": "HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                                        "input": "HvBaseInput-input HvInput-input HvPagination-pageSizeInput",
                                        "multiline": "HvBaseInput-multiLine HvInput-multiLine",
                                      }
                                    }
                                    disabled={false}
                                    endAdornment={null}
                                    id="pagination-currentPage-input"
                                    inputProps={
                                      Object {
                                        "aria-controls": undefined,
                                        "aria-describedby": undefined,
                                        "aria-invalid": undefined,
                                        "aria-label": "6 Total pages for page input",
                                        "aria-labelledby": undefined,
                                        "aria-required": undefined,
                                        "ref": Object {
                                          "current": <input
                                            aria-label="6 Total pages for page input"
                                            class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input HvPagination-pageSizeInput"
                                            id="pagination-currentPage-input"
                                            type="number"
                                            value="1"
                                          />,
                                        },
                                        "required": false,
                                      }
                                    }
                                    inputRef={
                                      Object {
                                        "current": <input
                                          aria-label="6 Total pages for page input"
                                          class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input HvPagination-pageSizeInput"
                                          id="pagination-currentPage-input"
                                          type="number"
                                          value="1"
                                        />,
                                      }
                                    }
                                    multiline={false}
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    type="number"
                                    value="1"
                                  >
                                    <ForwardRef(Input)
                                      autoFocus={false}
                                      className="HvBaseInput-inputRoot HvInput-inputRoot HvPagination-pageSizeInputRoot"
                                      classes={
                                        Object {
                                          "colorSecondary": "MuiInput-colorSecondary",
                                          "disabled": "Mui-disabled HvBaseInput-inputDisabled HvInput-inputDisabled",
                                          "error": "Mui-error",
                                          "focused": "Mui-focused HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                                          "formControl": "MuiInput-formControl",
                                          "fullWidth": "MuiInput-fullWidth",
                                          "input": "MuiInput-input HvBaseInput-input HvInput-input HvPagination-pageSizeInput",
                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                          "inputMultiline": "MuiInput-inputMultiline",
                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                          "marginDense": "MuiInput-marginDense",
                                          "multiline": "MuiInput-multiline HvBaseInput-multiLine HvInput-multiLine",
                                          "root": "MuiInput-root",
                                          "underline": "MuiInput-underline",
                                        }
                                      }
                                      disableUnderline={true}
                                      disabled={false}
                                      endAdornment={null}
                                      id="pagination-currentPage-input"
                                      inputProps={
                                        Object {
                                          "aria-controls": undefined,
                                          "aria-describedby": undefined,
                                          "aria-invalid": undefined,
                                          "aria-label": "6 Total pages for page input",
                                          "aria-labelledby": undefined,
                                          "aria-required": undefined,
                                          "ref": Object {
                                            "current": <input
                                              aria-label="6 Total pages for page input"
                                              class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input HvPagination-pageSizeInput"
                                              id="pagination-currentPage-input"
                                              type="number"
                                              value="1"
                                            />,
                                          },
                                          "required": false,
                                        }
                                      }
                                      inputRef={
                                        Object {
                                          "current": <input
                                            aria-label="6 Total pages for page input"
                                            class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input HvPagination-pageSizeInput"
                                            id="pagination-currentPage-input"
                                            type="number"
                                            value="1"
                                          />,
                                        }
                                      }
                                      multiline={false}
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      type="number"
                                      value="1"
                                    >
                                      <WithStyles(ForwardRef(InputBase))
                                        autoFocus={false}
                                        className="HvBaseInput-inputRoot HvInput-inputRoot HvPagination-pageSizeInputRoot"
                                        classes={
                                          Object {
                                            "colorSecondary": "MuiInput-colorSecondary",
                                            "disabled": "Mui-disabled HvBaseInput-inputDisabled HvInput-inputDisabled",
                                            "error": "Mui-error",
                                            "focused": "Mui-focused HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                                            "formControl": "MuiInput-formControl",
                                            "fullWidth": "MuiInput-fullWidth",
                                            "input": "MuiInput-input HvBaseInput-input HvInput-input HvPagination-pageSizeInput",
                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                            "inputMultiline": "MuiInput-inputMultiline",
                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                            "marginDense": "MuiInput-marginDense",
                                            "multiline": "MuiInput-multiline HvBaseInput-multiLine HvInput-multiLine",
                                            "root": "MuiInput-root",
                                            "underline": null,
                                          }
                                        }
                                        disabled={false}
                                        endAdornment={null}
                                        fullWidth={false}
                                        id="pagination-currentPage-input"
                                        inputComponent="input"
                                        inputProps={
                                          Object {
                                            "aria-controls": undefined,
                                            "aria-describedby": undefined,
                                            "aria-invalid": undefined,
                                            "aria-label": "6 Total pages for page input",
                                            "aria-labelledby": undefined,
                                            "aria-required": undefined,
                                            "ref": Object {
                                              "current": <input
                                                aria-label="6 Total pages for page input"
                                                class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input HvPagination-pageSizeInput"
                                                id="pagination-currentPage-input"
                                                type="number"
                                                value="1"
                                              />,
                                            },
                                            "required": false,
                                          }
                                        }
                                        inputRef={
                                          Object {
                                            "current": <input
                                              aria-label="6 Total pages for page input"
                                              class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input HvPagination-pageSizeInput"
                                              id="pagination-currentPage-input"
                                              type="number"
                                              value="1"
                                            />,
                                          }
                                        }
                                        multiline={false}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        type="number"
                                        value="1"
                                      >
                                        <ForwardRef(InputBase)
                                          autoFocus={false}
                                          className="HvBaseInput-inputRoot HvInput-inputRoot HvPagination-pageSizeInputRoot"
                                          classes={
                                            Object {
                                              "adornedEnd": "MuiInputBase-adornedEnd",
                                              "adornedStart": "MuiInputBase-adornedStart",
                                              "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                              "disabled": "Mui-disabled Mui-disabled HvBaseInput-inputDisabled HvInput-inputDisabled",
                                              "error": "Mui-error Mui-error",
                                              "focused": "Mui-focused Mui-focused HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                              "input": "MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input HvPagination-pageSizeInput",
                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                              "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                              "multiline": "MuiInputBase-multiline MuiInput-multiline HvBaseInput-multiLine HvInput-multiLine",
                                              "root": "MuiInputBase-root MuiInput-root",
                                            }
                                          }
                                          disabled={false}
                                          endAdornment={null}
                                          fullWidth={false}
                                          id="pagination-currentPage-input"
                                          inputComponent="input"
                                          inputProps={
                                            Object {
                                              "aria-controls": undefined,
                                              "aria-describedby": undefined,
                                              "aria-invalid": undefined,
                                              "aria-label": "6 Total pages for page input",
                                              "aria-labelledby": undefined,
                                              "aria-required": undefined,
                                              "ref": Object {
                                                "current": <input
                                                  aria-label="6 Total pages for page input"
                                                  class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input HvPagination-pageSizeInput"
                                                  id="pagination-currentPage-input"
                                                  type="number"
                                                  value="1"
                                                />,
                                              },
                                              "required": false,
                                            }
                                          }
                                          inputRef={
                                            Object {
                                              "current": <input
                                                aria-label="6 Total pages for page input"
                                                class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input HvPagination-pageSizeInput"
                                                id="pagination-currentPage-input"
                                                type="number"
                                                value="1"
                                              />,
                                            }
                                          }
                                          multiline={false}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          type="number"
                                          value="1"
                                        >
                                          <div
                                            className="MuiInputBase-root MuiInput-root HvBaseInput-inputRoot HvInput-inputRoot HvPagination-pageSizeInputRoot"
                                            onClick={[Function]}
                                          >
                                            <input
                                              aria-label="6 Total pages for page input"
                                              autoFocus={false}
                                              className="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input HvPagination-pageSizeInput"
                                              disabled={false}
                                              id="pagination-currentPage-input"
                                              onAnimationStart={[Function]}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              required={false}
                                              type="number"
                                              value="1"
                                            />
                                          </div>
                                        </ForwardRef(InputBase)>
                                      </WithStyles(ForwardRef(InputBase))>
                                    </ForwardRef(Input)>
                                  </WithStyles(ForwardRef(Input))>
                                </HvBaseInput>
                              </WithStyles(HvBaseInput)>
                              <WithStyles(HvSuggestions)
                                classes={
                                  Object {
                                    "list": "HvInput-suggestionList",
                                    "root": "HvInput-suggestionsContainer",
                                  }
                                }
                                expanded={false}
                                id="pagination-currentPage-suggestions"
                                onClose={[Function]}
                                onKeyDown={[Function]}
                                onSuggestionSelected={[Function]}
                                suggestionValues={null}
                              >
                                <HvSuggestions
                                  classes={
                                    Object {
                                      "list": "HvSuggestions-list HvInput-suggestionList",
                                      "popper": "HvSuggestions-popper",
                                      "root": "HvSuggestions-root HvInput-suggestionsContainer",
                                    }
                                  }
                                  expanded={false}
                                  id="pagination-currentPage-suggestions"
                                  onClose={[Function]}
                                  onKeyDown={[Function]}
                                  onSuggestionSelected={[Function]}
                                  suggestionValues={null}
                                >
                                  <div
                                    className="HvSuggestions-root HvInput-suggestionsContainer"
                                    id="pagination-currentPage-suggestions"
                                    onKeyDown={[Function]}
                                  >
                                    <ForwardRef(Popper)
                                      className="HvSuggestions-popper"
                                      disablePortal={true}
                                      open={false}
                                    />
                                  </div>
                                </HvSuggestions>
                              </WithStyles(HvSuggestions)>
                              <WithStyles(HvHelperText)
                                className="HvInput-infoText"
                                id="pagination-currentPage-description"
                                notification=""
                                style={
                                  Object {
                                    "display": "none",
                                  }
                                }
                              >
                                <HvHelperText
                                  className="HvInput-infoText"
                                  classes={
                                    Object {
                                      "helperDisabled": "HvHelperText-helperDisabled",
                                      "helperText": "HvHelperText-helperText",
                                      "showText": "HvHelperText-showText",
                                      "topGutter": "HvHelperText-topGutter",
                                    }
                                  }
                                  id="pagination-currentPage-description"
                                  notification=""
                                  style={
                                    Object {
                                      "display": "none",
                                    }
                                  }
                                >
                                  <WithStyles(ForwardRef)
                                    className="HvInput-infoText HvHelperText-helperText HvHelperText-showText HvHelperText-topGutter"
                                    id="pagination-currentPage-description"
                                    style={
                                      Object {
                                        "display": "none",
                                      }
                                    }
                                    variant="infoText"
                                  >
                                    <ForwardRef
                                      className="HvInput-infoText HvHelperText-helperText HvHelperText-showText HvHelperText-topGutter"
                                      classes={
                                        Object {
                                          "3xlTitle": "HvTypography-3xlTitle",
                                          "4xlTitle": "HvTypography-4xlTitle",
                                          "5xlTitle": "HvTypography-5xlTitle",
                                          "disabledButtonText": "HvTypography-disabledButtonText",
                                          "highlightText": "HvTypography-highlightText",
                                          "infoText": "HvTypography-infoText",
                                          "inlineLink": "HvTypography-inlineLink",
                                          "lTitle": "HvTypography-lTitle",
                                          "labelText": "HvTypography-labelText",
                                          "mTitle": "HvTypography-mTitle",
                                          "normalText": "HvTypography-normalText",
                                          "placeholderText": "HvTypography-placeholderText",
                                          "root": "HvTypography-root",
                                          "sLink": "HvTypography-sLink",
                                          "sText": "HvTypography-sText",
                                          "sTitle": "HvTypography-sTitle",
                                          "selectedNavText": "HvTypography-selectedNavText",
                                          "selectedText": "HvTypography-selectedText",
                                          "vizText": "HvTypography-vizText",
                                          "xlTitle": "HvTypography-xlTitle",
                                          "xsTitle": "HvTypography-xsTitle",
                                          "xxlTitle": "HvTypography-xxlTitle",
                                          "xxsTitle": "HvTypography-xxsTitle",
                                        }
                                      }
                                      id="pagination-currentPage-description"
                                      style={
                                        Object {
                                          "display": "none",
                                        }
                                      }
                                      variant="infoText"
                                    >
                                      <p
                                        className="HvInput-infoText HvHelperText-helperText HvHelperText-showText HvHelperText-topGutter HvTypography-root HvTypography-infoText"
                                        id="pagination-currentPage-description"
                                        style={
                                          Object {
                                            "display": "none",
                                          }
                                        }
                                      />
                                    </ForwardRef>
                                  </WithStyles(ForwardRef)>
                                  <WithStyles(ForwardRef)
                                    aria-atomic="true"
                                    aria-live="polite"
                                    aria-relevant="additions text"
                                    className="HvInput-infoText HvHelperText-helperText HvHelperText-topGutter"
                                    id="pagination-currentPage-description-notification"
                                    style={
                                      Object {
                                        "display": "none",
                                      }
                                    }
                                    variant="infoText"
                                  >
                                    <ForwardRef
                                      aria-atomic="true"
                                      aria-live="polite"
                                      aria-relevant="additions text"
                                      className="HvInput-infoText HvHelperText-helperText HvHelperText-topGutter"
                                      classes={
                                        Object {
                                          "3xlTitle": "HvTypography-3xlTitle",
                                          "4xlTitle": "HvTypography-4xlTitle",
                                          "5xlTitle": "HvTypography-5xlTitle",
                                          "disabledButtonText": "HvTypography-disabledButtonText",
                                          "highlightText": "HvTypography-highlightText",
                                          "infoText": "HvTypography-infoText",
                                          "inlineLink": "HvTypography-inlineLink",
                                          "lTitle": "HvTypography-lTitle",
                                          "labelText": "HvTypography-labelText",
                                          "mTitle": "HvTypography-mTitle",
                                          "normalText": "HvTypography-normalText",
                                          "placeholderText": "HvTypography-placeholderText",
                                          "root": "HvTypography-root",
                                          "sLink": "HvTypography-sLink",
                                          "sText": "HvTypography-sText",
                                          "sTitle": "HvTypography-sTitle",
                                          "selectedNavText": "HvTypography-selectedNavText",
                                          "selectedText": "HvTypography-selectedText",
                                          "vizText": "HvTypography-vizText",
                                          "xlTitle": "HvTypography-xlTitle",
                                          "xsTitle": "HvTypography-xsTitle",
                                          "xxlTitle": "HvTypography-xxlTitle",
                                          "xxsTitle": "HvTypography-xxsTitle",
                                        }
                                      }
                                      id="pagination-currentPage-description-notification"
                                      style={
                                        Object {
                                          "display": "none",
                                        }
                                      }
                                      variant="infoText"
                                    >
                                      <p
                                        aria-atomic="true"
                                        aria-live="polite"
                                        aria-relevant="additions text"
                                        className="HvInput-infoText HvHelperText-helperText HvHelperText-topGutter HvTypography-root HvTypography-infoText"
                                        id="pagination-currentPage-description-notification"
                                        style={
                                          Object {
                                            "display": "none",
                                          }
                                        }
                                      />
                                    </ForwardRef>
                                  </WithStyles(ForwardRef)>
                                </HvHelperText>
                              </WithStyles(HvHelperText)>
                            </div>
                          </HvFormElement>
                        </WithId>
                      </WithStyles(WithId)>
                    </HvInput>
                  </WithId>
                </WithLabels>
              </WithStyles(WithLabels)>
            </div>
            <WithStyles(ForwardRef)
              component="span"
              variant="sText"
            >
              <ForwardRef
                classes={
                  Object {
                    "3xlTitle": "HvTypography-3xlTitle",
                    "4xlTitle": "HvTypography-4xlTitle",
                    "5xlTitle": "HvTypography-5xlTitle",
                    "disabledButtonText": "HvTypography-disabledButtonText",
                    "highlightText": "HvTypography-highlightText",
                    "infoText": "HvTypography-infoText",
                    "inlineLink": "HvTypography-inlineLink",
                    "lTitle": "HvTypography-lTitle",
                    "labelText": "HvTypography-labelText",
                    "mTitle": "HvTypography-mTitle",
                    "normalText": "HvTypography-normalText",
                    "placeholderText": "HvTypography-placeholderText",
                    "root": "HvTypography-root",
                    "sLink": "HvTypography-sLink",
                    "sText": "HvTypography-sText",
                    "sTitle": "HvTypography-sTitle",
                    "selectedNavText": "HvTypography-selectedNavText",
                    "selectedText": "HvTypography-selectedText",
                    "vizText": "HvTypography-vizText",
                    "xlTitle": "HvTypography-xlTitle",
                    "xsTitle": "HvTypography-xsTitle",
                    "xxlTitle": "HvTypography-xxlTitle",
                    "xxsTitle": "HvTypography-xxsTitle",
                  }
                }
                component="span"
                variant="sText"
              >
                <span
                  className="HvTypography-root HvTypography-sText"
                >
                   of 
                </span>
              </ForwardRef>
            </WithStyles(ForwardRef)>
            <WithStyles(ForwardRef)
              component="span"
              id="pagination-totalPages"
              variant="sText"
            >
              <ForwardRef
                classes={
                  Object {
                    "3xlTitle": "HvTypography-3xlTitle",
                    "4xlTitle": "HvTypography-4xlTitle",
                    "5xlTitle": "HvTypography-5xlTitle",
                    "disabledButtonText": "HvTypography-disabledButtonText",
                    "highlightText": "HvTypography-highlightText",
                    "infoText": "HvTypography-infoText",
                    "inlineLink": "HvTypography-inlineLink",
                    "lTitle": "HvTypography-lTitle",
                    "labelText": "HvTypography-labelText",
                    "mTitle": "HvTypography-mTitle",
                    "normalText": "HvTypography-normalText",
                    "placeholderText": "HvTypography-placeholderText",
                    "root": "HvTypography-root",
                    "sLink": "HvTypography-sLink",
                    "sText": "HvTypography-sText",
                    "sTitle": "HvTypography-sTitle",
                    "selectedNavText": "HvTypography-selectedNavText",
                    "selectedText": "HvTypography-selectedText",
                    "vizText": "HvTypography-vizText",
                    "xlTitle": "HvTypography-xlTitle",
                    "xsTitle": "HvTypography-xsTitle",
                    "xxlTitle": "HvTypography-xxlTitle",
                    "xxsTitle": "HvTypography-xxsTitle",
                  }
                }
                component="span"
                id="pagination-totalPages"
                variant="sText"
              >
                <span
                  className="HvTypography-root HvTypography-sText"
                  id="pagination-totalPages"
                >
                  6
                </span>
              </ForwardRef>
            </WithStyles(ForwardRef)>
          </div>
          <WithStyles(ForwardRef(IconButton))
            aria-label="Next Page"
            className="HvPagination-iconContainer"
            disabled={false}
            id="pagination-nextPage-button"
            onClick={[Function]}
          >
            <ForwardRef(IconButton)
              aria-label="Next Page"
              className="HvPagination-iconContainer"
              classes={
                Object {
                  "colorInherit": "MuiIconButton-colorInherit",
                  "colorPrimary": "MuiIconButton-colorPrimary",
                  "colorSecondary": "MuiIconButton-colorSecondary",
                  "disabled": "Mui-disabled",
                  "edgeEnd": "MuiIconButton-edgeEnd",
                  "edgeStart": "MuiIconButton-edgeStart",
                  "label": "MuiIconButton-label",
                  "root": "MuiIconButton-root",
                  "sizeSmall": "MuiIconButton-sizeSmall",
                }
              }
              disabled={false}
              id="pagination-nextPage-button"
              onClick={[Function]}
            >
              <WithStyles(ForwardRef(ButtonBase))
                aria-label="Next Page"
                centerRipple={true}
                className="MuiIconButton-root HvPagination-iconContainer"
                disabled={false}
                focusRipple={true}
                id="pagination-nextPage-button"
                onClick={[Function]}
              >
                <ForwardRef(ButtonBase)
                  aria-label="Next Page"
                  centerRipple={true}
                  className="MuiIconButton-root HvPagination-iconContainer"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "root": "MuiButtonBase-root",
                    }
                  }
                  disableRipple={true}
                  disabled={false}
                  focusRipple={true}
                  id="pagination-nextPage-button"
                  onClick={[Function]}
                >
                  <button
                    aria-label="Next Page"
                    className="MuiButtonBase-root MuiIconButton-root HvPagination-iconContainer"
                    disabled={false}
                    id="pagination-nextPage-button"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={0}
                    type="button"
                  >
                    <span
                      className="MuiIconButton-label"
                    >
                      <Component>
                        <WithStyles(HvTooltip)
                          disableFocusListener={true}
                          disableTouchListener={true}
                          open={false}
                          style={
                            Object {
                              "overflow": "hidden",
                              "textOverflow": "ellipsis",
                              "whiteSpace": "nowrap",
                            }
                          }
                          title={
                            <WithStyles(ForwardRef)
                              variant="infoText"
                            >
                              Next page
                            </WithStyles(ForwardRef)>
                          }
                        >
                          <HvTooltip
                            classes={
                              Object {
                                "color": "HvTooltip-color",
                                "popper": "HvTooltip-popper",
                                "root": "HvTooltip-root",
                                "separator": "HvTooltip-separator",
                                "separatorColor": "HvTooltip-separatorColor",
                                "title": "HvTooltip-title",
                                "tooltip": "HvTooltip-tooltip",
                                "tooltipMulti": "HvTooltip-tooltipMulti",
                                "valueWrapper": "HvTooltip-valueWrapper",
                                "values": "HvTooltip-values",
                                "valuesContainer": "HvTooltip-valuesContainer",
                              }
                            }
                            disableFocusListener={true}
                            disableTouchListener={true}
                            open={false}
                            style={
                              Object {
                                "overflow": "hidden",
                                "textOverflow": "ellipsis",
                                "whiteSpace": "nowrap",
                              }
                            }
                            title={
                              <WithStyles(ForwardRef)
                                variant="infoText"
                              >
                                Next page
                              </WithStyles(ForwardRef)>
                            }
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              TransitionComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "children": [Function],
                                    "in": [Function],
                                    "onEnter": [Function],
                                    "onExit": [Function],
                                    "style": [Function],
                                    "timeout": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              TransitionProps={
                                Object {
                                  "timeout": 400,
                                }
                              }
                              classes={
                                Object {
                                  "popper": "HvTooltip-popper",
                                  "tooltip": "HvTooltip-tooltip",
                                }
                              }
                              disableFocusListener={true}
                              disableTouchListener={true}
                              enterDelay={300}
                              open={false}
                              placement="top"
                              style={
                                Object {
                                  "overflow": "hidden",
                                  "textOverflow": "ellipsis",
                                  "whiteSpace": "nowrap",
                                }
                              }
                              title={
                                <WithStyles(ForwardRef)
                                  variant="infoText"
                                >
                                  Next page
                                </WithStyles(ForwardRef)>
                              }
                            >
                              <ForwardRef(Tooltip)
                                TransitionComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "children": [Function],
                                      "in": [Function],
                                      "onEnter": [Function],
                                      "onExit": [Function],
                                      "style": [Function],
                                      "timeout": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                TransitionProps={
                                  Object {
                                    "timeout": 400,
                                  }
                                }
                                classes={
                                  Object {
                                    "arrow": "MuiTooltip-arrow",
                                    "popper": "MuiTooltip-popper HvTooltip-popper",
                                    "popperArrow": "MuiTooltip-popperArrow",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip HvTooltip-tooltip",
                                    "tooltipArrow": "MuiTooltip-tooltipArrow",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableFocusListener={true}
                                disableTouchListener={true}
                                enterDelay={300}
                                open={false}
                                placement="top"
                                style={
                                  Object {
                                    "overflow": "hidden",
                                    "textOverflow": "ellipsis",
                                    "whiteSpace": "nowrap",
                                  }
                                }
                                title={
                                  <WithStyles(ForwardRef)
                                    variant="infoText"
                                  >
                                    Next page
                                  </WithStyles(ForwardRef)>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseOver={[Function]}
                                  style={
                                    Object {
                                      "overflow": "hidden",
                                      "textOverflow": "ellipsis",
                                      "whiteSpace": "nowrap",
                                    }
                                  }
                                  title={null}
                                >
                                  <NextPage>
                                    <WithStyles(Forwards)
                                      className="HvPagination-icon"
                                    >
                                      <Forwards
                                        className="HvPagination-icon"
                                        classes={
                                          Object {
                                            "root": "HvIconForwards-root",
                                            "rootL": "HvIconForwards-rootL",
                                            "rootM": "HvIconForwards-rootM",
                                            "rootS": "HvIconForwards-rootS",
                                            "rootXs": "HvIconForwards-rootXs",
                                          }
                                        }
                                      >
                                        <div
                                          className="HvPagination-icon HvIconForwards-root HvIconForwards-rootS"
                                        >
                                          <svg
                                            focusable={false}
                                            height="16px"
                                            viewBox="0 0 16 16"
                                            width="16px"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              className="color0"
                                              d="M4.7 15.45l-.8-.7 6.8-6.7-6.8-6.7.8-.8 7.4 7.5z"
                                              fill="#414141"
                                            />
                                          </svg>
                                        </div>
                                      </Forwards>
                                    </WithStyles(Forwards)>
                                  </NextPage>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                      style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;"
                                    >
                                      <div
                                        class="HvPagination-icon HvIconForwards-root HvIconForwards-rootS"
                                      >
                                        <svg
                                          focusable="false"
                                          height="16px"
                                          viewBox="0 0 16 16"
                                          width="16px"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            class="color0"
                                            d="M4.7 15.45l-.8-.7 6.8-6.7-6.8-6.7.8-.8 7.4 7.5z"
                                            fill="#414141"
                                          />
                                        </svg>
                                      </div>
                                    </div>
                                  }
                                  className="MuiTooltip-popper HvTooltip-popper"
                                  id={null}
                                  open={false}
                                  placement="top"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </HvTooltip>
                        </WithStyles(HvTooltip)>
                      </Component>
                    </span>
                  </button>
                </ForwardRef(ButtonBase)>
              </WithStyles(ForwardRef(ButtonBase))>
            </ForwardRef(IconButton)>
          </WithStyles(ForwardRef(IconButton))>
          <WithStyles(ForwardRef(IconButton))
            aria-label="Last Page"
            className="HvPagination-iconContainer"
            disabled={false}
            id="pagination-lastPage-button"
            onClick={[Function]}
          >
            <ForwardRef(IconButton)
              aria-label="Last Page"
              className="HvPagination-iconContainer"
              classes={
                Object {
                  "colorInherit": "MuiIconButton-colorInherit",
                  "colorPrimary": "MuiIconButton-colorPrimary",
                  "colorSecondary": "MuiIconButton-colorSecondary",
                  "disabled": "Mui-disabled",
                  "edgeEnd": "MuiIconButton-edgeEnd",
                  "edgeStart": "MuiIconButton-edgeStart",
                  "label": "MuiIconButton-label",
                  "root": "MuiIconButton-root",
                  "sizeSmall": "MuiIconButton-sizeSmall",
                }
              }
              disabled={false}
              id="pagination-lastPage-button"
              onClick={[Function]}
            >
              <WithStyles(ForwardRef(ButtonBase))
                aria-label="Last Page"
                centerRipple={true}
                className="MuiIconButton-root HvPagination-iconContainer"
                disabled={false}
                focusRipple={true}
                id="pagination-lastPage-button"
                onClick={[Function]}
              >
                <ForwardRef(ButtonBase)
                  aria-label="Last Page"
                  centerRipple={true}
                  className="MuiIconButton-root HvPagination-iconContainer"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "root": "MuiButtonBase-root",
                    }
                  }
                  disableRipple={true}
                  disabled={false}
                  focusRipple={true}
                  id="pagination-lastPage-button"
                  onClick={[Function]}
                >
                  <button
                    aria-label="Last Page"
                    className="MuiButtonBase-root MuiIconButton-root HvPagination-iconContainer"
                    disabled={false}
                    id="pagination-lastPage-button"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={0}
                    type="button"
                  >
                    <span
                      className="MuiIconButton-label"
                    >
                      <Component>
                        <WithStyles(HvTooltip)
                          disableFocusListener={true}
                          disableTouchListener={true}
                          open={false}
                          style={
                            Object {
                              "overflow": "hidden",
                              "textOverflow": "ellipsis",
                              "whiteSpace": "nowrap",
                            }
                          }
                          title={
                            <WithStyles(ForwardRef)
                              variant="infoText"
                            >
                              Last page
                            </WithStyles(ForwardRef)>
                          }
                        >
                          <HvTooltip
                            classes={
                              Object {
                                "color": "HvTooltip-color",
                                "popper": "HvTooltip-popper",
                                "root": "HvTooltip-root",
                                "separator": "HvTooltip-separator",
                                "separatorColor": "HvTooltip-separatorColor",
                                "title": "HvTooltip-title",
                                "tooltip": "HvTooltip-tooltip",
                                "tooltipMulti": "HvTooltip-tooltipMulti",
                                "valueWrapper": "HvTooltip-valueWrapper",
                                "values": "HvTooltip-values",
                                "valuesContainer": "HvTooltip-valuesContainer",
                              }
                            }
                            disableFocusListener={true}
                            disableTouchListener={true}
                            open={false}
                            style={
                              Object {
                                "overflow": "hidden",
                                "textOverflow": "ellipsis",
                                "whiteSpace": "nowrap",
                              }
                            }
                            title={
                              <WithStyles(ForwardRef)
                                variant="infoText"
                              >
                                Last page
                              </WithStyles(ForwardRef)>
                            }
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              TransitionComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "children": [Function],
                                    "in": [Function],
                                    "onEnter": [Function],
                                    "onExit": [Function],
                                    "style": [Function],
                                    "timeout": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              TransitionProps={
                                Object {
                                  "timeout": 400,
                                }
                              }
                              classes={
                                Object {
                                  "popper": "HvTooltip-popper",
                                  "tooltip": "HvTooltip-tooltip",
                                }
                              }
                              disableFocusListener={true}
                              disableTouchListener={true}
                              enterDelay={300}
                              open={false}
                              placement="top"
                              style={
                                Object {
                                  "overflow": "hidden",
                                  "textOverflow": "ellipsis",
                                  "whiteSpace": "nowrap",
                                }
                              }
                              title={
                                <WithStyles(ForwardRef)
                                  variant="infoText"
                                >
                                  Last page
                                </WithStyles(ForwardRef)>
                              }
                            >
                              <ForwardRef(Tooltip)
                                TransitionComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "children": [Function],
                                      "in": [Function],
                                      "onEnter": [Function],
                                      "onExit": [Function],
                                      "style": [Function],
                                      "timeout": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                TransitionProps={
                                  Object {
                                    "timeout": 400,
                                  }
                                }
                                classes={
                                  Object {
                                    "arrow": "MuiTooltip-arrow",
                                    "popper": "MuiTooltip-popper HvTooltip-popper",
                                    "popperArrow": "MuiTooltip-popperArrow",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip HvTooltip-tooltip",
                                    "tooltipArrow": "MuiTooltip-tooltipArrow",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableFocusListener={true}
                                disableTouchListener={true}
                                enterDelay={300}
                                open={false}
                                placement="top"
                                style={
                                  Object {
                                    "overflow": "hidden",
                                    "textOverflow": "ellipsis",
                                    "whiteSpace": "nowrap",
                                  }
                                }
                                title={
                                  <WithStyles(ForwardRef)
                                    variant="infoText"
                                  >
                                    Last page
                                  </WithStyles(ForwardRef)>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseOver={[Function]}
                                  style={
                                    Object {
                                      "overflow": "hidden",
                                      "textOverflow": "ellipsis",
                                      "whiteSpace": "nowrap",
                                    }
                                  }
                                  title={null}
                                >
                                  <LastPage>
                                    <WithStyles(End)
                                      className="HvPagination-icon"
                                    >
                                      <End
                                        className="HvPagination-icon"
                                        classes={
                                          Object {
                                            "root": "HvIconEnd-root",
                                            "rootL": "HvIconEnd-rootL",
                                            "rootM": "HvIconEnd-rootM",
                                            "rootS": "HvIconEnd-rootS",
                                            "rootXs": "HvIconEnd-rootXs",
                                          }
                                        }
                                      >
                                        <div
                                          className="HvPagination-icon HvIconEnd-root HvIconEnd-rootS"
                                        >
                                          <svg
                                            focusable={false}
                                            height="16px"
                                            viewBox="0 0 16 16"
                                            width="16px"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              className="color0"
                                              d="M3.70227 15.4056l-.8-.80005 6.8-6.69995-6.8-6.69995.8-.7 7.4 7.3999zM12.1 0h1v16h-1z"
                                              fill="#414141"
                                            />
                                          </svg>
                                        </div>
                                      </End>
                                    </WithStyles(End)>
                                  </LastPage>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                      style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;"
                                    >
                                      <div
                                        class="HvPagination-icon HvIconEnd-root HvIconEnd-rootS"
                                      >
                                        <svg
                                          focusable="false"
                                          height="16px"
                                          viewBox="0 0 16 16"
                                          width="16px"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            class="color0"
                                            d="M3.70227 15.4056l-.8-.80005 6.8-6.69995-6.8-6.69995.8-.7 7.4 7.3999zM12.1 0h1v16h-1z"
                                            fill="#414141"
                                          />
                                        </svg>
                                      </div>
                                    </div>
                                  }
                                  className="MuiTooltip-popper HvTooltip-popper"
                                  id={null}
                                  open={false}
                                  placement="top"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </HvTooltip>
                        </WithStyles(HvTooltip)>
                      </Component>
                    </span>
                  </button>
                </ForwardRef(ButtonBase)>
              </WithStyles(ForwardRef(ButtonBase))>
            </ForwardRef(IconButton)>
          </WithStyles(ForwardRef(IconButton))>
        </div>
      </div>
    </Pagination>
  </WithLabels>
</WithStyles(WithLabels)>
`;
