// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Custom Pagination should render correctly 1`] = `
<WithStyles(WithLabels)
  canNext={true}
  canPrevious={true}
  page={2}
  pageSize={5}
  pageSizeOptions={
    Array [
      5,
      10,
    ]
  }
  pages={4}
  showPageJump={false}
  showPageSizeOptions={true}
>
  <WithLabels
    canNext={true}
    canPrevious={true}
    classes={
      Object {
        "icon": "HvPagination-icon",
        "iconContainer": "HvPagination-iconContainer",
        "pageInfo": "HvPagination-pageInfo",
        "pageJump": "HvPagination-pageJump",
        "pageNavigator": "HvPagination-pageNavigator",
        "pageSizeInput": "HvPagination-pageSizeInput",
        "pageSizeInputContainer": "HvPagination-pageSizeInputContainer",
        "pageSizeInputRoot": "HvPagination-pageSizeInputRoot",
        "pageSizeOptions": "HvPagination-pageSizeOptions",
        "pageSizeOptionsSelect": "HvPagination-pageSizeOptionsSelect",
        "root": "HvPagination-root",
        "selectDownIcon": "HvPagination-selectDownIcon",
      }
    }
    page={2}
    pageSize={5}
    pageSizeOptions={
      Array [
        5,
        10,
      ]
    }
    pages={4}
    showPageJump={false}
    showPageSizeOptions={true}
  >
    <Pagination
      canNext={true}
      canPrevious={true}
      classes={
        Object {
          "icon": "HvPagination-icon",
          "iconContainer": "HvPagination-iconContainer",
          "pageInfo": "HvPagination-pageInfo",
          "pageJump": "HvPagination-pageJump",
          "pageNavigator": "HvPagination-pageNavigator",
          "pageSizeInput": "HvPagination-pageSizeInput",
          "pageSizeInputContainer": "HvPagination-pageSizeInputContainer",
          "pageSizeInputRoot": "HvPagination-pageSizeInputRoot",
          "pageSizeOptions": "HvPagination-pageSizeOptions",
          "pageSizeOptionsSelect": "HvPagination-pageSizeOptionsSelect",
          "root": "HvPagination-root",
          "selectDownIcon": "HvPagination-selectDownIcon",
        }
      }
      labels={
        Object {
          "pageSizeEntryName": "rows",
          "pageSizePrev": "Show",
          "pageSizeSelectorDescription": "Select how many to display",
          "pagesSeparator": "of",
          "paginationFirstPageTitle": "First page",
          "paginationInputLabel": "Total pages for page input",
          "paginationLastPageTitle": "Last page",
          "paginationNextPageTitle": "Next page",
          "paginationPreviousPageTitle": "Previous page",
        }
      }
      page={2}
      pageSize={5}
      pageSizeOptions={
        Array [
          5,
          10,
        ]
      }
      pages={4}
      showPageJump={false}
      showPageSizeOptions={true}
    >
      <div
        className="HvPagination-root"
      >
        <div
          className="HvPagination-pageSizeOptions"
        >
          <WithStyles(ForwardRef)
            component="span"
            variant="sText"
          >
            <ForwardRef
              classes={
                Object {
                  "3xlTitle": "HvTypography-3xlTitle",
                  "4xlTitle": "HvTypography-4xlTitle",
                  "5xlTitle": "HvTypography-5xlTitle",
                  "disabledButtonText": "HvTypography-disabledButtonText",
                  "highlightText": "HvTypography-highlightText",
                  "infoText": "HvTypography-infoText",
                  "inlineLink": "HvTypography-inlineLink",
                  "lTitle": "HvTypography-lTitle",
                  "labelText": "HvTypography-labelText",
                  "mTitle": "HvTypography-mTitle",
                  "normalText": "HvTypography-normalText",
                  "placeholderText": "HvTypography-placeholderText",
                  "root": "HvTypography-root",
                  "sLink": "HvTypography-sLink",
                  "sText": "HvTypography-sText",
                  "sTitle": "HvTypography-sTitle",
                  "selectedNavText": "HvTypography-selectedNavText",
                  "selectedText": "HvTypography-selectedText",
                  "vizText": "HvTypography-vizText",
                  "xlTitle": "HvTypography-xlTitle",
                  "xsTitle": "HvTypography-xsTitle",
                  "xxlTitle": "HvTypography-xxlTitle",
                  "xxsTitle": "HvTypography-xxsTitle",
                }
              }
              component="span"
              variant="sText"
            >
              <span
                className="HvTypography-root HvTypography-sText"
              >
                Show
              </span>
            </ForwardRef>
          </WithStyles(ForwardRef)>
          <select
            aria-label="Select how many to display"
            className="HvPagination-pageSizeOptionsSelect"
            disabled={false}
            onChange={[Function]}
            value={5}
          >
            <option
              key="5"
              value={5}
            >
              5
            </option>
            <option
              key="10"
              value={10}
            >
              10
            </option>
          </select>
          <WithStyles(DropDownXS)
            className="HvPagination-selectDownIcon"
          >
            <DropDownXS
              className="HvPagination-selectDownIcon"
              classes={
                Object {
                  "root": "HvIconDropDownXS-root",
                  "rootL": "HvIconDropDownXS-rootL",
                  "rootM": "HvIconDropDownXS-rootM",
                  "rootS": "HvIconDropDownXS-rootS",
                  "rootXs": "HvIconDropDownXS-rootXs",
                }
              }
            >
              <div
                className="HvPagination-selectDownIcon HvIconDropDownXS-root HvIconDropDownXS-rootXs"
              >
                <svg
                  focusable={false}
                  height="12px"
                  viewBox="0 0 12 12"
                  width="12px"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    className="color0"
                    d="M5.99994 8.65L1.4 4.05l.7-.7L6 7.25l3.9-3.9.7.7z"
                    fill="#414141"
                  />
                </svg>
              </div>
            </DropDownXS>
          </WithStyles(DropDownXS)>
          <WithStyles(ForwardRef)
            component="span"
            variant="sText"
          >
            <ForwardRef
              classes={
                Object {
                  "3xlTitle": "HvTypography-3xlTitle",
                  "4xlTitle": "HvTypography-4xlTitle",
                  "5xlTitle": "HvTypography-5xlTitle",
                  "disabledButtonText": "HvTypography-disabledButtonText",
                  "highlightText": "HvTypography-highlightText",
                  "infoText": "HvTypography-infoText",
                  "inlineLink": "HvTypography-inlineLink",
                  "lTitle": "HvTypography-lTitle",
                  "labelText": "HvTypography-labelText",
                  "mTitle": "HvTypography-mTitle",
                  "normalText": "HvTypography-normalText",
                  "placeholderText": "HvTypography-placeholderText",
                  "root": "HvTypography-root",
                  "sLink": "HvTypography-sLink",
                  "sText": "HvTypography-sText",
                  "sTitle": "HvTypography-sTitle",
                  "selectedNavText": "HvTypography-selectedNavText",
                  "selectedText": "HvTypography-selectedText",
                  "vizText": "HvTypography-vizText",
                  "xlTitle": "HvTypography-xlTitle",
                  "xsTitle": "HvTypography-xsTitle",
                  "xxlTitle": "HvTypography-xxlTitle",
                  "xxsTitle": "HvTypography-xxsTitle",
                }
              }
              component="span"
              variant="sText"
            >
              <span
                className="HvTypography-root HvTypography-sText"
              >
                rows
              </span>
            </ForwardRef>
          </WithStyles(ForwardRef)>
        </div>
        <div
          className="HvPagination-pageNavigator"
        >
          <WithStyles(ForwardRef(IconButton))
            className="HvPagination-iconContainer"
            disabled={false}
            onClick={[Function]}
          >
            <ForwardRef(IconButton)
              className="HvPagination-iconContainer"
              classes={
                Object {
                  "colorInherit": "MuiIconButton-colorInherit",
                  "colorPrimary": "MuiIconButton-colorPrimary",
                  "colorSecondary": "MuiIconButton-colorSecondary",
                  "disabled": "Mui-disabled",
                  "edgeEnd": "MuiIconButton-edgeEnd",
                  "edgeStart": "MuiIconButton-edgeStart",
                  "label": "MuiIconButton-label",
                  "root": "MuiIconButton-root",
                  "sizeSmall": "MuiIconButton-sizeSmall",
                }
              }
              disabled={false}
              onClick={[Function]}
            >
              <WithStyles(ForwardRef(ButtonBase))
                centerRipple={true}
                className="MuiIconButton-root HvPagination-iconContainer"
                disabled={false}
                focusRipple={true}
                onClick={[Function]}
              >
                <ForwardRef(ButtonBase)
                  centerRipple={true}
                  className="MuiIconButton-root HvPagination-iconContainer"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "root": "MuiButtonBase-root",
                    }
                  }
                  disableRipple={true}
                  disabled={false}
                  focusRipple={true}
                  onClick={[Function]}
                >
                  <button
                    className="MuiButtonBase-root MuiIconButton-root HvPagination-iconContainer"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={0}
                    type="button"
                  >
                    <span
                      className="MuiIconButton-label"
                    >
                      <Component>
                        <WithStyles(HvTooltip)
                          disableFocusListener={true}
                          disableTouchListener={true}
                          open={false}
                          style={
                            Object {
                              "overflow": "hidden",
                              "textOverflow": "ellipsis",
                              "whiteSpace": "nowrap",
                            }
                          }
                          title={
                            <ForwardRef(WithStyles)
                              variant="infoText"
                            >
                              First page
                            </ForwardRef(WithStyles)>
                          }
                        >
                          <HvTooltip
                            classes={
                              Object {
                                "color": "HvTooltip-color",
                                "popper": "HvTooltip-popper",
                                "root": "HvTooltip-root",
                                "separator": "HvTooltip-separator",
                                "separatorColor": "HvTooltip-separatorColor",
                                "title": "HvTooltip-title",
                                "tooltip": "HvTooltip-tooltip",
                                "tooltipMulti": "HvTooltip-tooltipMulti",
                                "valueWrapper": "HvTooltip-valueWrapper",
                                "values": "HvTooltip-values",
                                "valuesContainer": "HvTooltip-valuesContainer",
                              }
                            }
                            disableFocusListener={true}
                            disableTouchListener={true}
                            open={false}
                            style={
                              Object {
                                "overflow": "hidden",
                                "textOverflow": "ellipsis",
                                "whiteSpace": "nowrap",
                              }
                            }
                            title={
                              <ForwardRef(WithStyles)
                                variant="infoText"
                              >
                                First page
                              </ForwardRef(WithStyles)>
                            }
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              TransitionComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "children": [Function],
                                    "disableStrictModeCompat": [Function],
                                    "in": [Function],
                                    "onEnter": [Function],
                                    "onEntered": [Function],
                                    "onEntering": [Function],
                                    "onExit": [Function],
                                    "onExited": [Function],
                                    "onExiting": [Function],
                                    "style": [Function],
                                    "timeout": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              TransitionProps={
                                Object {
                                  "timeout": 400,
                                }
                              }
                              classes={
                                Object {
                                  "popper": "HvTooltip-popper",
                                  "tooltip": "HvTooltip-tooltip",
                                }
                              }
                              disableFocusListener={true}
                              disableTouchListener={true}
                              enterDelay={300}
                              placement="top"
                              style={
                                Object {
                                  "overflow": "hidden",
                                  "textOverflow": "ellipsis",
                                  "whiteSpace": "nowrap",
                                }
                              }
                              title={
                                <ForwardRef(WithStyles)
                                  variant="infoText"
                                >
                                  First page
                                </ForwardRef(WithStyles)>
                              }
                            >
                              <ForwardRef(Tooltip)
                                TransitionComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "children": [Function],
                                      "disableStrictModeCompat": [Function],
                                      "in": [Function],
                                      "onEnter": [Function],
                                      "onEntered": [Function],
                                      "onEntering": [Function],
                                      "onExit": [Function],
                                      "onExited": [Function],
                                      "onExiting": [Function],
                                      "style": [Function],
                                      "timeout": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                TransitionProps={
                                  Object {
                                    "timeout": 400,
                                  }
                                }
                                classes={
                                  Object {
                                    "arrow": "MuiTooltip-arrow",
                                    "popper": "MuiTooltip-popper HvTooltip-popper",
                                    "popperArrow": "MuiTooltip-popperArrow",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip HvTooltip-tooltip",
                                    "tooltipArrow": "MuiTooltip-tooltipArrow",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableFocusListener={true}
                                disableTouchListener={true}
                                enterDelay={300}
                                placement="top"
                                style={
                                  Object {
                                    "overflow": "hidden",
                                    "textOverflow": "ellipsis",
                                    "whiteSpace": "nowrap",
                                  }
                                }
                                title={
                                  <ForwardRef(WithStyles)
                                    variant="infoText"
                                  >
                                    First page
                                  </ForwardRef(WithStyles)>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseOver={[Function]}
                                  onTouchStart={[Function]}
                                  style={
                                    Object {
                                      "overflow": "hidden",
                                      "textOverflow": "ellipsis",
                                      "whiteSpace": "nowrap",
                                    }
                                  }
                                  title={null}
                                >
                                  <FirstPage>
                                    <WithStyles(Start)
                                      className="HvPagination-icon"
                                    >
                                      <Start
                                        className="HvPagination-icon"
                                        classes={
                                          Object {
                                            "root": "HvIconStart-root",
                                            "rootL": "HvIconStart-rootL",
                                            "rootM": "HvIconStart-rootM",
                                            "rootS": "HvIconStart-rootS",
                                            "rootXs": "HvIconStart-rootXs",
                                          }
                                        }
                                      >
                                        <div
                                          className="HvPagination-icon HvIconStart-root HvIconStart-rootS"
                                        >
                                          <svg
                                            focusable={false}
                                            height="16px"
                                            viewBox="0 0 16 16"
                                            width="16px"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              className="color0"
                                              d="M12.7 15.5L5.3 8.1001l7.4-7.5.7.80005-6.7 6.7 6.7 6.7zM3 0h1v16H3z"
                                              fill="#414141"
                                            />
                                          </svg>
                                        </div>
                                      </Start>
                                    </WithStyles(Start)>
                                  </FirstPage>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                      style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;"
                                    >
                                      <div
                                        class="HvPagination-icon HvIconStart-root HvIconStart-rootS"
                                      >
                                        <svg
                                          focusable="false"
                                          height="16px"
                                          viewBox="0 0 16 16"
                                          width="16px"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            class="color0"
                                            d="M12.7 15.5L5.3 8.1001l7.4-7.5.7.80005-6.7 6.7 6.7 6.7zM3 0h1v16H3z"
                                            fill="#414141"
                                          />
                                        </svg>
                                      </div>
                                    </div>
                                  }
                                  className="MuiTooltip-popper HvTooltip-popper"
                                  id={null}
                                  open={false}
                                  placement="top"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </HvTooltip>
                        </WithStyles(HvTooltip)>
                      </Component>
                    </span>
                  </button>
                </ForwardRef(ButtonBase)>
              </WithStyles(ForwardRef(ButtonBase))>
            </ForwardRef(IconButton)>
          </WithStyles(ForwardRef(IconButton))>
          <WithStyles(ForwardRef(IconButton))
            className="HvPagination-iconContainer"
            disabled={false}
            onClick={[Function]}
          >
            <ForwardRef(IconButton)
              className="HvPagination-iconContainer"
              classes={
                Object {
                  "colorInherit": "MuiIconButton-colorInherit",
                  "colorPrimary": "MuiIconButton-colorPrimary",
                  "colorSecondary": "MuiIconButton-colorSecondary",
                  "disabled": "Mui-disabled",
                  "edgeEnd": "MuiIconButton-edgeEnd",
                  "edgeStart": "MuiIconButton-edgeStart",
                  "label": "MuiIconButton-label",
                  "root": "MuiIconButton-root",
                  "sizeSmall": "MuiIconButton-sizeSmall",
                }
              }
              disabled={false}
              onClick={[Function]}
            >
              <WithStyles(ForwardRef(ButtonBase))
                centerRipple={true}
                className="MuiIconButton-root HvPagination-iconContainer"
                disabled={false}
                focusRipple={true}
                onClick={[Function]}
              >
                <ForwardRef(ButtonBase)
                  centerRipple={true}
                  className="MuiIconButton-root HvPagination-iconContainer"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "root": "MuiButtonBase-root",
                    }
                  }
                  disableRipple={true}
                  disabled={false}
                  focusRipple={true}
                  onClick={[Function]}
                >
                  <button
                    className="MuiButtonBase-root MuiIconButton-root HvPagination-iconContainer"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={0}
                    type="button"
                  >
                    <span
                      className="MuiIconButton-label"
                    >
                      <Component>
                        <WithStyles(HvTooltip)
                          disableFocusListener={true}
                          disableTouchListener={true}
                          open={false}
                          style={
                            Object {
                              "overflow": "hidden",
                              "textOverflow": "ellipsis",
                              "whiteSpace": "nowrap",
                            }
                          }
                          title={
                            <ForwardRef(WithStyles)
                              variant="infoText"
                            >
                              Previous page
                            </ForwardRef(WithStyles)>
                          }
                        >
                          <HvTooltip
                            classes={
                              Object {
                                "color": "HvTooltip-color",
                                "popper": "HvTooltip-popper",
                                "root": "HvTooltip-root",
                                "separator": "HvTooltip-separator",
                                "separatorColor": "HvTooltip-separatorColor",
                                "title": "HvTooltip-title",
                                "tooltip": "HvTooltip-tooltip",
                                "tooltipMulti": "HvTooltip-tooltipMulti",
                                "valueWrapper": "HvTooltip-valueWrapper",
                                "values": "HvTooltip-values",
                                "valuesContainer": "HvTooltip-valuesContainer",
                              }
                            }
                            disableFocusListener={true}
                            disableTouchListener={true}
                            open={false}
                            style={
                              Object {
                                "overflow": "hidden",
                                "textOverflow": "ellipsis",
                                "whiteSpace": "nowrap",
                              }
                            }
                            title={
                              <ForwardRef(WithStyles)
                                variant="infoText"
                              >
                                Previous page
                              </ForwardRef(WithStyles)>
                            }
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              TransitionComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "children": [Function],
                                    "disableStrictModeCompat": [Function],
                                    "in": [Function],
                                    "onEnter": [Function],
                                    "onEntered": [Function],
                                    "onEntering": [Function],
                                    "onExit": [Function],
                                    "onExited": [Function],
                                    "onExiting": [Function],
                                    "style": [Function],
                                    "timeout": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              TransitionProps={
                                Object {
                                  "timeout": 400,
                                }
                              }
                              classes={
                                Object {
                                  "popper": "HvTooltip-popper",
                                  "tooltip": "HvTooltip-tooltip",
                                }
                              }
                              disableFocusListener={true}
                              disableTouchListener={true}
                              enterDelay={300}
                              placement="top"
                              style={
                                Object {
                                  "overflow": "hidden",
                                  "textOverflow": "ellipsis",
                                  "whiteSpace": "nowrap",
                                }
                              }
                              title={
                                <ForwardRef(WithStyles)
                                  variant="infoText"
                                >
                                  Previous page
                                </ForwardRef(WithStyles)>
                              }
                            >
                              <ForwardRef(Tooltip)
                                TransitionComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "children": [Function],
                                      "disableStrictModeCompat": [Function],
                                      "in": [Function],
                                      "onEnter": [Function],
                                      "onEntered": [Function],
                                      "onEntering": [Function],
                                      "onExit": [Function],
                                      "onExited": [Function],
                                      "onExiting": [Function],
                                      "style": [Function],
                                      "timeout": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                TransitionProps={
                                  Object {
                                    "timeout": 400,
                                  }
                                }
                                classes={
                                  Object {
                                    "arrow": "MuiTooltip-arrow",
                                    "popper": "MuiTooltip-popper HvTooltip-popper",
                                    "popperArrow": "MuiTooltip-popperArrow",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip HvTooltip-tooltip",
                                    "tooltipArrow": "MuiTooltip-tooltipArrow",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableFocusListener={true}
                                disableTouchListener={true}
                                enterDelay={300}
                                placement="top"
                                style={
                                  Object {
                                    "overflow": "hidden",
                                    "textOverflow": "ellipsis",
                                    "whiteSpace": "nowrap",
                                  }
                                }
                                title={
                                  <ForwardRef(WithStyles)
                                    variant="infoText"
                                  >
                                    Previous page
                                  </ForwardRef(WithStyles)>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseOver={[Function]}
                                  onTouchStart={[Function]}
                                  style={
                                    Object {
                                      "overflow": "hidden",
                                      "textOverflow": "ellipsis",
                                      "whiteSpace": "nowrap",
                                    }
                                  }
                                  title={null}
                                >
                                  <PreviousPage>
                                    <WithStyles(Backwards)
                                      className="HvPagination-icon"
                                    >
                                      <Backwards
                                        className="HvPagination-icon"
                                        classes={
                                          Object {
                                            "root": "HvIconBackwards-root",
                                            "rootL": "HvIconBackwards-rootL",
                                            "rootM": "HvIconBackwards-rootM",
                                            "rootS": "HvIconBackwards-rootS",
                                            "rootXs": "HvIconBackwards-rootXs",
                                          }
                                        }
                                      >
                                        <div
                                          className="HvPagination-icon HvIconBackwards-root HvIconBackwards-rootS"
                                        >
                                          <svg
                                            focusable={false}
                                            height="16px"
                                            viewBox="0 0 16 16"
                                            width="16px"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              className="color0"
                                              d="M11.35 15.45l-7.4-7.4 7.4-7.5.7.8-6.7 6.7 6.7 6.7z"
                                              fill="#414141"
                                            />
                                          </svg>
                                        </div>
                                      </Backwards>
                                    </WithStyles(Backwards)>
                                  </PreviousPage>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                      style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;"
                                    >
                                      <div
                                        class="HvPagination-icon HvIconBackwards-root HvIconBackwards-rootS"
                                      >
                                        <svg
                                          focusable="false"
                                          height="16px"
                                          viewBox="0 0 16 16"
                                          width="16px"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            class="color0"
                                            d="M11.35 15.45l-7.4-7.4 7.4-7.5.7.8-6.7 6.7 6.7 6.7z"
                                            fill="#414141"
                                          />
                                        </svg>
                                      </div>
                                    </div>
                                  }
                                  className="MuiTooltip-popper HvTooltip-popper"
                                  id={null}
                                  open={false}
                                  placement="top"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </HvTooltip>
                        </WithStyles(HvTooltip)>
                      </Component>
                    </span>
                  </button>
                </ForwardRef(ButtonBase)>
              </WithStyles(ForwardRef(ButtonBase))>
            </ForwardRef(IconButton)>
          </WithStyles(ForwardRef(IconButton))>
          <div
            className="HvPagination-pageInfo"
          >
            <WithStyles(ForwardRef)
              component="span"
              variant="sText"
            >
              <ForwardRef
                classes={
                  Object {
                    "3xlTitle": "HvTypography-3xlTitle",
                    "4xlTitle": "HvTypography-4xlTitle",
                    "5xlTitle": "HvTypography-5xlTitle",
                    "disabledButtonText": "HvTypography-disabledButtonText",
                    "highlightText": "HvTypography-highlightText",
                    "infoText": "HvTypography-infoText",
                    "inlineLink": "HvTypography-inlineLink",
                    "lTitle": "HvTypography-lTitle",
                    "labelText": "HvTypography-labelText",
                    "mTitle": "HvTypography-mTitle",
                    "normalText": "HvTypography-normalText",
                    "placeholderText": "HvTypography-placeholderText",
                    "root": "HvTypography-root",
                    "sLink": "HvTypography-sLink",
                    "sText": "HvTypography-sText",
                    "sTitle": "HvTypography-sTitle",
                    "selectedNavText": "HvTypography-selectedNavText",
                    "selectedText": "HvTypography-selectedText",
                    "vizText": "HvTypography-vizText",
                    "xlTitle": "HvTypography-xlTitle",
                    "xsTitle": "HvTypography-xsTitle",
                    "xxlTitle": "HvTypography-xxlTitle",
                    "xxsTitle": "HvTypography-xxsTitle",
                  }
                }
                component="span"
                variant="sText"
              >
                <span
                  className="HvTypography-root HvTypography-sText"
                >
                  3
                </span>
              </ForwardRef>
            </WithStyles(ForwardRef)>
            <WithStyles(ForwardRef)
              component="span"
              variant="sText"
            >
              <ForwardRef
                classes={
                  Object {
                    "3xlTitle": "HvTypography-3xlTitle",
                    "4xlTitle": "HvTypography-4xlTitle",
                    "5xlTitle": "HvTypography-5xlTitle",
                    "disabledButtonText": "HvTypography-disabledButtonText",
                    "highlightText": "HvTypography-highlightText",
                    "infoText": "HvTypography-infoText",
                    "inlineLink": "HvTypography-inlineLink",
                    "lTitle": "HvTypography-lTitle",
                    "labelText": "HvTypography-labelText",
                    "mTitle": "HvTypography-mTitle",
                    "normalText": "HvTypography-normalText",
                    "placeholderText": "HvTypography-placeholderText",
                    "root": "HvTypography-root",
                    "sLink": "HvTypography-sLink",
                    "sText": "HvTypography-sText",
                    "sTitle": "HvTypography-sTitle",
                    "selectedNavText": "HvTypography-selectedNavText",
                    "selectedText": "HvTypography-selectedText",
                    "vizText": "HvTypography-vizText",
                    "xlTitle": "HvTypography-xlTitle",
                    "xsTitle": "HvTypography-xsTitle",
                    "xxlTitle": "HvTypography-xxlTitle",
                    "xxsTitle": "HvTypography-xxsTitle",
                  }
                }
                component="span"
                variant="sText"
              >
                <span
                  className="HvTypography-root HvTypography-sText"
                >
                   of 
                </span>
              </ForwardRef>
            </WithStyles(ForwardRef)>
            <WithStyles(ForwardRef)
              component="span"
              variant="sText"
            >
              <ForwardRef
                classes={
                  Object {
                    "3xlTitle": "HvTypography-3xlTitle",
                    "4xlTitle": "HvTypography-4xlTitle",
                    "5xlTitle": "HvTypography-5xlTitle",
                    "disabledButtonText": "HvTypography-disabledButtonText",
                    "highlightText": "HvTypography-highlightText",
                    "infoText": "HvTypography-infoText",
                    "inlineLink": "HvTypography-inlineLink",
                    "lTitle": "HvTypography-lTitle",
                    "labelText": "HvTypography-labelText",
                    "mTitle": "HvTypography-mTitle",
                    "normalText": "HvTypography-normalText",
                    "placeholderText": "HvTypography-placeholderText",
                    "root": "HvTypography-root",
                    "sLink": "HvTypography-sLink",
                    "sText": "HvTypography-sText",
                    "sTitle": "HvTypography-sTitle",
                    "selectedNavText": "HvTypography-selectedNavText",
                    "selectedText": "HvTypography-selectedText",
                    "vizText": "HvTypography-vizText",
                    "xlTitle": "HvTypography-xlTitle",
                    "xsTitle": "HvTypography-xsTitle",
                    "xxlTitle": "HvTypography-xxlTitle",
                    "xxsTitle": "HvTypography-xxsTitle",
                  }
                }
                component="span"
                variant="sText"
              >
                <span
                  className="HvTypography-root HvTypography-sText"
                >
                  4
                </span>
              </ForwardRef>
            </WithStyles(ForwardRef)>
          </div>
          <WithStyles(ForwardRef(IconButton))
            className="HvPagination-iconContainer"
            disabled={false}
            onClick={[Function]}
          >
            <ForwardRef(IconButton)
              className="HvPagination-iconContainer"
              classes={
                Object {
                  "colorInherit": "MuiIconButton-colorInherit",
                  "colorPrimary": "MuiIconButton-colorPrimary",
                  "colorSecondary": "MuiIconButton-colorSecondary",
                  "disabled": "Mui-disabled",
                  "edgeEnd": "MuiIconButton-edgeEnd",
                  "edgeStart": "MuiIconButton-edgeStart",
                  "label": "MuiIconButton-label",
                  "root": "MuiIconButton-root",
                  "sizeSmall": "MuiIconButton-sizeSmall",
                }
              }
              disabled={false}
              onClick={[Function]}
            >
              <WithStyles(ForwardRef(ButtonBase))
                centerRipple={true}
                className="MuiIconButton-root HvPagination-iconContainer"
                disabled={false}
                focusRipple={true}
                onClick={[Function]}
              >
                <ForwardRef(ButtonBase)
                  centerRipple={true}
                  className="MuiIconButton-root HvPagination-iconContainer"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "root": "MuiButtonBase-root",
                    }
                  }
                  disableRipple={true}
                  disabled={false}
                  focusRipple={true}
                  onClick={[Function]}
                >
                  <button
                    className="MuiButtonBase-root MuiIconButton-root HvPagination-iconContainer"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={0}
                    type="button"
                  >
                    <span
                      className="MuiIconButton-label"
                    >
                      <Component>
                        <WithStyles(HvTooltip)
                          disableFocusListener={true}
                          disableTouchListener={true}
                          open={false}
                          style={
                            Object {
                              "overflow": "hidden",
                              "textOverflow": "ellipsis",
                              "whiteSpace": "nowrap",
                            }
                          }
                          title={
                            <ForwardRef(WithStyles)
                              variant="infoText"
                            >
                              Next page
                            </ForwardRef(WithStyles)>
                          }
                        >
                          <HvTooltip
                            classes={
                              Object {
                                "color": "HvTooltip-color",
                                "popper": "HvTooltip-popper",
                                "root": "HvTooltip-root",
                                "separator": "HvTooltip-separator",
                                "separatorColor": "HvTooltip-separatorColor",
                                "title": "HvTooltip-title",
                                "tooltip": "HvTooltip-tooltip",
                                "tooltipMulti": "HvTooltip-tooltipMulti",
                                "valueWrapper": "HvTooltip-valueWrapper",
                                "values": "HvTooltip-values",
                                "valuesContainer": "HvTooltip-valuesContainer",
                              }
                            }
                            disableFocusListener={true}
                            disableTouchListener={true}
                            open={false}
                            style={
                              Object {
                                "overflow": "hidden",
                                "textOverflow": "ellipsis",
                                "whiteSpace": "nowrap",
                              }
                            }
                            title={
                              <ForwardRef(WithStyles)
                                variant="infoText"
                              >
                                Next page
                              </ForwardRef(WithStyles)>
                            }
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              TransitionComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "children": [Function],
                                    "disableStrictModeCompat": [Function],
                                    "in": [Function],
                                    "onEnter": [Function],
                                    "onEntered": [Function],
                                    "onEntering": [Function],
                                    "onExit": [Function],
                                    "onExited": [Function],
                                    "onExiting": [Function],
                                    "style": [Function],
                                    "timeout": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              TransitionProps={
                                Object {
                                  "timeout": 400,
                                }
                              }
                              classes={
                                Object {
                                  "popper": "HvTooltip-popper",
                                  "tooltip": "HvTooltip-tooltip",
                                }
                              }
                              disableFocusListener={true}
                              disableTouchListener={true}
                              enterDelay={300}
                              placement="top"
                              style={
                                Object {
                                  "overflow": "hidden",
                                  "textOverflow": "ellipsis",
                                  "whiteSpace": "nowrap",
                                }
                              }
                              title={
                                <ForwardRef(WithStyles)
                                  variant="infoText"
                                >
                                  Next page
                                </ForwardRef(WithStyles)>
                              }
                            >
                              <ForwardRef(Tooltip)
                                TransitionComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "children": [Function],
                                      "disableStrictModeCompat": [Function],
                                      "in": [Function],
                                      "onEnter": [Function],
                                      "onEntered": [Function],
                                      "onEntering": [Function],
                                      "onExit": [Function],
                                      "onExited": [Function],
                                      "onExiting": [Function],
                                      "style": [Function],
                                      "timeout": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                TransitionProps={
                                  Object {
                                    "timeout": 400,
                                  }
                                }
                                classes={
                                  Object {
                                    "arrow": "MuiTooltip-arrow",
                                    "popper": "MuiTooltip-popper HvTooltip-popper",
                                    "popperArrow": "MuiTooltip-popperArrow",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip HvTooltip-tooltip",
                                    "tooltipArrow": "MuiTooltip-tooltipArrow",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableFocusListener={true}
                                disableTouchListener={true}
                                enterDelay={300}
                                placement="top"
                                style={
                                  Object {
                                    "overflow": "hidden",
                                    "textOverflow": "ellipsis",
                                    "whiteSpace": "nowrap",
                                  }
                                }
                                title={
                                  <ForwardRef(WithStyles)
                                    variant="infoText"
                                  >
                                    Next page
                                  </ForwardRef(WithStyles)>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseOver={[Function]}
                                  onTouchStart={[Function]}
                                  style={
                                    Object {
                                      "overflow": "hidden",
                                      "textOverflow": "ellipsis",
                                      "whiteSpace": "nowrap",
                                    }
                                  }
                                  title={null}
                                >
                                  <NextPage>
                                    <WithStyles(Forwards)
                                      className="HvPagination-icon"
                                    >
                                      <Forwards
                                        className="HvPagination-icon"
                                        classes={
                                          Object {
                                            "root": "HvIconForwards-root",
                                            "rootL": "HvIconForwards-rootL",
                                            "rootM": "HvIconForwards-rootM",
                                            "rootS": "HvIconForwards-rootS",
                                            "rootXs": "HvIconForwards-rootXs",
                                          }
                                        }
                                      >
                                        <div
                                          className="HvPagination-icon HvIconForwards-root HvIconForwards-rootS"
                                        >
                                          <svg
                                            focusable={false}
                                            height="16px"
                                            viewBox="0 0 16 16"
                                            width="16px"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              className="color0"
                                              d="M4.7 15.45l-.8-.7 6.8-6.7-6.8-6.7.8-.8 7.4 7.5z"
                                              fill="#414141"
                                            />
                                          </svg>
                                        </div>
                                      </Forwards>
                                    </WithStyles(Forwards)>
                                  </NextPage>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                      style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;"
                                    >
                                      <div
                                        class="HvPagination-icon HvIconForwards-root HvIconForwards-rootS"
                                      >
                                        <svg
                                          focusable="false"
                                          height="16px"
                                          viewBox="0 0 16 16"
                                          width="16px"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            class="color0"
                                            d="M4.7 15.45l-.8-.7 6.8-6.7-6.8-6.7.8-.8 7.4 7.5z"
                                            fill="#414141"
                                          />
                                        </svg>
                                      </div>
                                    </div>
                                  }
                                  className="MuiTooltip-popper HvTooltip-popper"
                                  id={null}
                                  open={false}
                                  placement="top"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </HvTooltip>
                        </WithStyles(HvTooltip)>
                      </Component>
                    </span>
                  </button>
                </ForwardRef(ButtonBase)>
              </WithStyles(ForwardRef(ButtonBase))>
            </ForwardRef(IconButton)>
          </WithStyles(ForwardRef(IconButton))>
          <WithStyles(ForwardRef(IconButton))
            className="HvPagination-iconContainer"
            disabled={false}
            onClick={[Function]}
          >
            <ForwardRef(IconButton)
              className="HvPagination-iconContainer"
              classes={
                Object {
                  "colorInherit": "MuiIconButton-colorInherit",
                  "colorPrimary": "MuiIconButton-colorPrimary",
                  "colorSecondary": "MuiIconButton-colorSecondary",
                  "disabled": "Mui-disabled",
                  "edgeEnd": "MuiIconButton-edgeEnd",
                  "edgeStart": "MuiIconButton-edgeStart",
                  "label": "MuiIconButton-label",
                  "root": "MuiIconButton-root",
                  "sizeSmall": "MuiIconButton-sizeSmall",
                }
              }
              disabled={false}
              onClick={[Function]}
            >
              <WithStyles(ForwardRef(ButtonBase))
                centerRipple={true}
                className="MuiIconButton-root HvPagination-iconContainer"
                disabled={false}
                focusRipple={true}
                onClick={[Function]}
              >
                <ForwardRef(ButtonBase)
                  centerRipple={true}
                  className="MuiIconButton-root HvPagination-iconContainer"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "root": "MuiButtonBase-root",
                    }
                  }
                  disableRipple={true}
                  disabled={false}
                  focusRipple={true}
                  onClick={[Function]}
                >
                  <button
                    className="MuiButtonBase-root MuiIconButton-root HvPagination-iconContainer"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={0}
                    type="button"
                  >
                    <span
                      className="MuiIconButton-label"
                    >
                      <Component>
                        <WithStyles(HvTooltip)
                          disableFocusListener={true}
                          disableTouchListener={true}
                          open={false}
                          style={
                            Object {
                              "overflow": "hidden",
                              "textOverflow": "ellipsis",
                              "whiteSpace": "nowrap",
                            }
                          }
                          title={
                            <ForwardRef(WithStyles)
                              variant="infoText"
                            >
                              Last page
                            </ForwardRef(WithStyles)>
                          }
                        >
                          <HvTooltip
                            classes={
                              Object {
                                "color": "HvTooltip-color",
                                "popper": "HvTooltip-popper",
                                "root": "HvTooltip-root",
                                "separator": "HvTooltip-separator",
                                "separatorColor": "HvTooltip-separatorColor",
                                "title": "HvTooltip-title",
                                "tooltip": "HvTooltip-tooltip",
                                "tooltipMulti": "HvTooltip-tooltipMulti",
                                "valueWrapper": "HvTooltip-valueWrapper",
                                "values": "HvTooltip-values",
                                "valuesContainer": "HvTooltip-valuesContainer",
                              }
                            }
                            disableFocusListener={true}
                            disableTouchListener={true}
                            open={false}
                            style={
                              Object {
                                "overflow": "hidden",
                                "textOverflow": "ellipsis",
                                "whiteSpace": "nowrap",
                              }
                            }
                            title={
                              <ForwardRef(WithStyles)
                                variant="infoText"
                              >
                                Last page
                              </ForwardRef(WithStyles)>
                            }
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              TransitionComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "children": [Function],
                                    "disableStrictModeCompat": [Function],
                                    "in": [Function],
                                    "onEnter": [Function],
                                    "onEntered": [Function],
                                    "onEntering": [Function],
                                    "onExit": [Function],
                                    "onExited": [Function],
                                    "onExiting": [Function],
                                    "style": [Function],
                                    "timeout": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              TransitionProps={
                                Object {
                                  "timeout": 400,
                                }
                              }
                              classes={
                                Object {
                                  "popper": "HvTooltip-popper",
                                  "tooltip": "HvTooltip-tooltip",
                                }
                              }
                              disableFocusListener={true}
                              disableTouchListener={true}
                              enterDelay={300}
                              placement="top"
                              style={
                                Object {
                                  "overflow": "hidden",
                                  "textOverflow": "ellipsis",
                                  "whiteSpace": "nowrap",
                                }
                              }
                              title={
                                <ForwardRef(WithStyles)
                                  variant="infoText"
                                >
                                  Last page
                                </ForwardRef(WithStyles)>
                              }
                            >
                              <ForwardRef(Tooltip)
                                TransitionComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "children": [Function],
                                      "disableStrictModeCompat": [Function],
                                      "in": [Function],
                                      "onEnter": [Function],
                                      "onEntered": [Function],
                                      "onEntering": [Function],
                                      "onExit": [Function],
                                      "onExited": [Function],
                                      "onExiting": [Function],
                                      "style": [Function],
                                      "timeout": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                TransitionProps={
                                  Object {
                                    "timeout": 400,
                                  }
                                }
                                classes={
                                  Object {
                                    "arrow": "MuiTooltip-arrow",
                                    "popper": "MuiTooltip-popper HvTooltip-popper",
                                    "popperArrow": "MuiTooltip-popperArrow",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip HvTooltip-tooltip",
                                    "tooltipArrow": "MuiTooltip-tooltipArrow",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                disableFocusListener={true}
                                disableTouchListener={true}
                                enterDelay={300}
                                placement="top"
                                style={
                                  Object {
                                    "overflow": "hidden",
                                    "textOverflow": "ellipsis",
                                    "whiteSpace": "nowrap",
                                  }
                                }
                                title={
                                  <ForwardRef(WithStyles)
                                    variant="infoText"
                                  >
                                    Last page
                                  </ForwardRef(WithStyles)>
                                }
                              >
                                <div
                                  aria-describedby={null}
                                  className=""
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseOver={[Function]}
                                  onTouchStart={[Function]}
                                  style={
                                    Object {
                                      "overflow": "hidden",
                                      "textOverflow": "ellipsis",
                                      "whiteSpace": "nowrap",
                                    }
                                  }
                                  title={null}
                                >
                                  <LastPage>
                                    <WithStyles(End)
                                      className="HvPagination-icon"
                                    >
                                      <End
                                        className="HvPagination-icon"
                                        classes={
                                          Object {
                                            "root": "HvIconEnd-root",
                                            "rootL": "HvIconEnd-rootL",
                                            "rootM": "HvIconEnd-rootM",
                                            "rootS": "HvIconEnd-rootS",
                                            "rootXs": "HvIconEnd-rootXs",
                                          }
                                        }
                                      >
                                        <div
                                          className="HvPagination-icon HvIconEnd-root HvIconEnd-rootS"
                                        >
                                          <svg
                                            focusable={false}
                                            height="16px"
                                            viewBox="0 0 16 16"
                                            width="16px"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              className="color0"
                                              d="M3.70227 15.4056l-.8-.80005 6.8-6.69995-6.8-6.69995.8-.7 7.4 7.3999zM12.1 0h1v16h-1z"
                                              fill="#414141"
                                            />
                                          </svg>
                                        </div>
                                      </End>
                                    </WithStyles(End)>
                                  </LastPage>
                                </div>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <div
                                      class=""
                                      style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;"
                                    >
                                      <div
                                        class="HvPagination-icon HvIconEnd-root HvIconEnd-rootS"
                                      >
                                        <svg
                                          focusable="false"
                                          height="16px"
                                          viewBox="0 0 16 16"
                                          width="16px"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            class="color0"
                                            d="M3.70227 15.4056l-.8-.80005 6.8-6.69995-6.8-6.69995.8-.7 7.4 7.3999zM12.1 0h1v16h-1z"
                                            fill="#414141"
                                          />
                                        </svg>
                                      </div>
                                    </div>
                                  }
                                  className="MuiTooltip-popper HvTooltip-popper"
                                  id={null}
                                  open={false}
                                  placement="top"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </HvTooltip>
                        </WithStyles(HvTooltip)>
                      </Component>
                    </span>
                  </button>
                </ForwardRef(ButtonBase)>
              </WithStyles(ForwardRef(ButtonBase))>
            </ForwardRef(IconButton)>
          </WithStyles(ForwardRef(IconButton))>
        </div>
      </div>
    </Pagination>
  </WithLabels>
</WithStyles(WithLabels)>
`;
