// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Multi Line Tooltip - No Header should render multiple line tooltip correctly 1`] = `
<WithStyles(ForwardRef)
  title={
    <div>
      <WithStyles(ForwardRef)
        variant="highlightText"
      >
        
      </WithStyles(ForwardRef)>
      <div>
        <WithStyles(ForwardRef)
          variant="highlightText"
        >
          Status
        </WithStyles(ForwardRef)>
        <div />
        <WithStyles(ForwardRef)>
          Open
        </WithStyles(ForwardRef)>
      </div>
      <div>
        <WithStyles(ForwardRef)
          variant="highlightText"
        >
          Date
        </WithStyles(ForwardRef)>
        <div />
        <WithStyles(ForwardRef)>
          12/08/2018
        </WithStyles(ForwardRef)>
      </div>
      <div>
        <WithStyles(ForwardRef)
          variant="highlightText"
        >
          Assignee
        </WithStyles(ForwardRef)>
        <div />
        <WithStyles(ForwardRef)>
          Management
        </WithStyles(ForwardRef)>
      </div>
      <div>
        <WithStyles(ForwardRef)
          variant="highlightText"
        >
          Approval
        </WithStyles(ForwardRef)>
        <div />
        <WithStyles(ForwardRef)>
          Not yet requested
        </WithStyles(ForwardRef)>
      </div>
    </div>
  }
  useSingle={false}
>
  <ForwardRef
    classes={
      Object {
        "color": "HvTooltip-color",
        "popper": "HvTooltip-popper",
        "root": "HvTooltip-root",
        "separator": "HvTooltip-separator",
        "separatorColor": "HvTooltip-separatorColor",
        "title": "HvTooltip-title",
        "tooltip": "HvTooltip-tooltip",
        "tooltipMulti": "HvTooltip-tooltipMulti",
        "valueWrapper": "HvTooltip-valueWrapper",
        "values": "HvTooltip-values",
        "valuesContainer": "HvTooltip-valuesContainer",
      }
    }
    title={
      <div>
        <WithStyles(ForwardRef)
          variant="highlightText"
        >
          
        </WithStyles(ForwardRef)>
        <div>
          <WithStyles(ForwardRef)
            variant="highlightText"
          >
            Status
          </WithStyles(ForwardRef)>
          <div />
          <WithStyles(ForwardRef)>
            Open
          </WithStyles(ForwardRef)>
        </div>
        <div>
          <WithStyles(ForwardRef)
            variant="highlightText"
          >
            Date
          </WithStyles(ForwardRef)>
          <div />
          <WithStyles(ForwardRef)>
            12/08/2018
          </WithStyles(ForwardRef)>
        </div>
        <div>
          <WithStyles(ForwardRef)
            variant="highlightText"
          >
            Assignee
          </WithStyles(ForwardRef)>
          <div />
          <WithStyles(ForwardRef)>
            Management
          </WithStyles(ForwardRef)>
        </div>
        <div>
          <WithStyles(ForwardRef)
            variant="highlightText"
          >
            Approval
          </WithStyles(ForwardRef)>
          <div />
          <WithStyles(ForwardRef)>
            Not yet requested
          </WithStyles(ForwardRef)>
        </div>
      </div>
    }
    useSingle={false}
  >
    <ForwardRef(Tooltip)
      TransitionComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "propTypes": Object {
            "addEndListener": [Function],
            "appear": [Function],
            "children": [Function],
            "easing": [Function],
            "in": [Function],
            "onEnter": [Function],
            "onEntered": [Function],
            "onEntering": [Function],
            "onExit": [Function],
            "onExited": [Function],
            "onExiting": [Function],
            "style": [Function],
            "timeout": [Function],
          },
          "render": [Function],
        }
      }
      TransitionProps={
        Object {
          "timeout": 400,
        }
      }
      classes={
        Object {
          "popper": "HvTooltip-popper",
          "tooltip": "HvTooltip-tooltipMulti",
        }
      }
      enterDelay={300}
      placement="top"
      title={
        <div>
          <WithStyles(ForwardRef)
            variant="highlightText"
          >
            
          </WithStyles(ForwardRef)>
          <div>
            <WithStyles(ForwardRef)
              variant="highlightText"
            >
              Status
            </WithStyles(ForwardRef)>
            <div />
            <WithStyles(ForwardRef)>
              Open
            </WithStyles(ForwardRef)>
          </div>
          <div>
            <WithStyles(ForwardRef)
              variant="highlightText"
            >
              Date
            </WithStyles(ForwardRef)>
            <div />
            <WithStyles(ForwardRef)>
              12/08/2018
            </WithStyles(ForwardRef)>
          </div>
          <div>
            <WithStyles(ForwardRef)
              variant="highlightText"
            >
              Assignee
            </WithStyles(ForwardRef)>
            <div />
            <WithStyles(ForwardRef)>
              Management
            </WithStyles(ForwardRef)>
          </div>
          <div>
            <WithStyles(ForwardRef)
              variant="highlightText"
            >
              Approval
            </WithStyles(ForwardRef)>
            <div />
            <WithStyles(ForwardRef)>
              Not yet requested
            </WithStyles(ForwardRef)>
          </div>
        </div>
      }
    >
      <button
        aria-label={null}
        aria-labelledby={null}
        className=""
        data-mui-internal-clone-element={true}
        id="testChild"
        onBlur={[Function]}
        onFocus={[Function]}
        onMouseLeave={[Function]}
        onMouseOver={[Function]}
        onTouchEnd={[Function]}
        onTouchStart={[Function]}
        type="submit"
      >
        Hello World
      </button>
      <MuiTooltipPopper
        anchorEl={
          <button
            class=""
            data-mui-internal-clone-element="true"
            id="testChild"
            type="submit"
          >
            Hello World
          </button>
        }
        as={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "propTypes": Object {
              "anchorEl": [Function],
              "children": [Function],
              "container": [Function],
              "disablePortal": [Function],
              "keepMounted": [Function],
              "modifiers": [Function],
              "open": [Function],
              "placement": [Function],
              "popperOptions": [Function],
              "popperRef": [Function],
              "sx": [Function],
              "transition": [Function],
            },
            "render": [Function],
          }
        }
        className="HvTooltip-popper MuiTooltip-popper MuiTooltip-popperInteractive"
        id="mui-5"
        onBlur={[Function]}
        onFocus={[Function]}
        onMouseLeave={[Function]}
        onMouseOver={[Function]}
        open={false}
        ownerState={
          Object {
            "PopperComponentProp": undefined,
            "TransitionComponent": Object {
              "$$typeof": Symbol(react.forward_ref),
              "propTypes": Object {
                "addEndListener": [Function],
                "appear": [Function],
                "children": [Function],
                "easing": [Function],
                "in": [Function],
                "onEnter": [Function],
                "onEntered": [Function],
                "onEntering": [Function],
                "onExit": [Function],
                "onExited": [Function],
                "onExiting": [Function],
                "style": [Function],
                "timeout": [Function],
              },
              "render": [Function],
            },
            "TransitionProps": Object {
              "timeout": 400,
            },
            "arrow": false,
            "children": <button
              id="testChild"
              type="submit"
            >
              Hello World
            </button>,
            "className": undefined,
            "classes": Object {
              "popper": "HvTooltip-popper",
              "tooltip": "HvTooltip-tooltipMulti",
            },
            "disableInteractive": false,
            "enterDelay": 300,
            "isRtl": false,
            "open": undefined,
            "placement": "top",
            "title": <div>
              <WithStyles(ForwardRef)
                variant="highlightText"
              >
                
              </WithStyles(ForwardRef)>
              <div>
                <WithStyles(ForwardRef)
                  variant="highlightText"
                >
                  Status
                </WithStyles(ForwardRef)>
                <div />
                <WithStyles(ForwardRef)>
                  Open
                </WithStyles(ForwardRef)>
              </div>
              <div>
                <WithStyles(ForwardRef)
                  variant="highlightText"
                >
                  Date
                </WithStyles(ForwardRef)>
                <div />
                <WithStyles(ForwardRef)>
                  12/08/2018
                </WithStyles(ForwardRef)>
              </div>
              <div>
                <WithStyles(ForwardRef)
                  variant="highlightText"
                >
                  Assignee
                </WithStyles(ForwardRef)>
                <div />
                <WithStyles(ForwardRef)>
                  Management
                </WithStyles(ForwardRef)>
              </div>
              <div>
                <WithStyles(ForwardRef)
                  variant="highlightText"
                >
                  Approval
                </WithStyles(ForwardRef)>
                <div />
                <WithStyles(ForwardRef)>
                  Not yet requested
                </WithStyles(ForwardRef)>
              </div>
            </div>,
            "touch": false,
          }
        }
        placement="top"
        popperOptions={
          Object {
            "modifiers": Array [
              Object {
                "enabled": false,
                "name": "arrow",
                "options": Object {
                  "element": null,
                  "padding": 4,
                },
              },
            ],
          }
        }
        popperRef={
          Object {
            "current": undefined,
          }
        }
        transition={true}
      >
        <Insertion
          cache={
            Object {
              "insert": [Function],
              "inserted": Object {
                "1433tg5-MuiTooltip-popper": true,
                "179vq5o-MuiPopper-root-MuiTooltip-popper": true,
              },
              "key": "css",
              "nonce": undefined,
              "registered": Object {
                "css-1433tg5-MuiTooltip-popper": "label:MuiTooltip-popper;z-index:1500;pointer-events:none;",
                "css-179vq5o-MuiPopper-root-MuiTooltip-popper": "label:MuiPopper-root;label:MuiTooltip-popper;z-index:1500;pointer-events:none;;",
              },
              "sheet": StyleSheet {
                "_alreadyInsertedOrderInsensitiveRule": true,
                "_insertTag": [Function],
                "before": null,
                "container": <head>
                  <style
                    data-jss=""
                    data-meta="HvTooltip"
                  >
                    
.HvTooltip-root {
  pointer-events: none;
}
.HvTooltip-tooltip {
  width: fit-content;
  display: flex;
  padding: 15px 20px;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltip p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  word-break: break-word;
  text-overflow: ellipsis;
}
.HvTooltip-tooltipMulti {
  width: fit-content;
  display: flex;
  padding: 0;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltipMulti p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  text-overflow: ellipsis;
}
.HvTooltip-popper {
  opacity: 1;
}
.HvTooltip-title {
  padding: 15px 20px;
  border-bottom: 3px solid #F0F0F0;
}
.HvTooltip-valuesContainer {
  padding: 20px;
}
.HvTooltip-values {
  display: flex;
  padding-bottom: 10px;
  justify-content: space-between;
}
.HvTooltip-values:last-child {
  padding-bottom: 0;
}
.HvTooltip-color {
  width: 10px;
  height: 15px;
}
.HvTooltip-separator {
  width: 10px;
}
.HvTooltip-separatorColor {
  width: 5px;
}
.HvTooltip-valueWrapper {
  padding: 20px;
}

                  </style>
                  <style
                    data-jss=""
                    data-meta="HvTooltip"
                  >
                    
.HvTooltip-root {
  pointer-events: none;
}
.HvTooltip-tooltip {
  width: fit-content;
  display: flex;
  padding: 15px 20px;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltip p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  word-break: break-word;
  text-overflow: ellipsis;
}
.HvTooltip-tooltipMulti {
  width: fit-content;
  display: flex;
  padding: 0;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltipMulti p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  text-overflow: ellipsis;
}
.HvTooltip-popper {
  opacity: 1;
}
.HvTooltip-title {
  padding: 15px 20px;
  border-bottom: 3px solid #F0F0F0;
}
.HvTooltip-valuesContainer {
  padding: 20px;
}
.HvTooltip-values {
  display: flex;
  padding-bottom: 10px;
  justify-content: space-between;
}
.HvTooltip-values:last-child {
  padding-bottom: 0;
}
.HvTooltip-color {
  width: 10px;
  height: 15px;
}
.HvTooltip-separator {
  width: 10px;
}
.HvTooltip-separatorColor {
  width: 5px;
}
.HvTooltip-valueWrapper {
  padding: 20px;
}

                  </style>
                  <style
                    data-jss=""
                    data-meta="HvTooltip"
                  >
                    
.HvTooltip-root {
  pointer-events: none;
}
.HvTooltip-tooltip {
  width: fit-content;
  display: flex;
  padding: 15px 20px;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltip p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  word-break: break-word;
  text-overflow: ellipsis;
}
.HvTooltip-tooltipMulti {
  width: fit-content;
  display: flex;
  padding: 0;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltipMulti p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  text-overflow: ellipsis;
}
.HvTooltip-popper {
  opacity: 1;
}
.HvTooltip-title {
  padding: 15px 20px;
  border-bottom: 3px solid #F0F0F0;
}
.HvTooltip-valuesContainer {
  padding: 20px;
}
.HvTooltip-values {
  display: flex;
  padding-bottom: 10px;
  justify-content: space-between;
}
.HvTooltip-values:last-child {
  padding-bottom: 0;
}
.HvTooltip-color {
  width: 10px;
  height: 15px;
}
.HvTooltip-separator {
  width: 10px;
}
.HvTooltip-separatorColor {
  width: 5px;
}
.HvTooltip-valueWrapper {
  padding: 20px;
}

                  </style>
                  <style
                    data-jss=""
                    data-meta="HvTooltip"
                  >
                    
.HvTooltip-root {
  pointer-events: none;
}
.HvTooltip-tooltip {
  width: fit-content;
  display: flex;
  padding: 15px 20px;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltip p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  word-break: break-word;
  text-overflow: ellipsis;
}
.HvTooltip-tooltipMulti {
  width: fit-content;
  display: flex;
  padding: 0;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltipMulti p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  text-overflow: ellipsis;
}
.HvTooltip-popper {
  opacity: 1;
}
.HvTooltip-title {
  padding: 15px 20px;
  border-bottom: 3px solid #F0F0F0;
}
.HvTooltip-valuesContainer {
  padding: 20px;
}
.HvTooltip-values {
  display: flex;
  padding-bottom: 10px;
  justify-content: space-between;
}
.HvTooltip-values:last-child {
  padding-bottom: 0;
}
.HvTooltip-color {
  width: 10px;
  height: 15px;
}
.HvTooltip-separator {
  width: 10px;
}
.HvTooltip-separatorColor {
  width: 5px;
}
.HvTooltip-valueWrapper {
  padding: 20px;
}

                  </style>
                  <style
                    data-jss=""
                    data-meta="HvTooltip"
                  >
                    
.HvTooltip-root {
  pointer-events: none;
}
.HvTooltip-tooltip {
  width: fit-content;
  display: flex;
  padding: 15px 20px;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltip p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  word-break: break-word;
  text-overflow: ellipsis;
}
.HvTooltip-tooltipMulti {
  width: fit-content;
  display: flex;
  padding: 0;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltipMulti p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  text-overflow: ellipsis;
}
.HvTooltip-popper {
  opacity: 1;
}
.HvTooltip-title {
  padding: 15px 20px;
  border-bottom: 3px solid #F0F0F0;
}
.HvTooltip-valuesContainer {
  padding: 20px;
}
.HvTooltip-values {
  display: flex;
  padding-bottom: 10px;
  justify-content: space-between;
}
.HvTooltip-values:last-child {
  padding-bottom: 0;
}
.HvTooltip-color {
  width: 10px;
  height: 15px;
}
.HvTooltip-separator {
  width: 10px;
}
.HvTooltip-separatorColor {
  width: 5px;
}
.HvTooltip-valueWrapper {
  padding: 20px;
}

                  </style>
                  <style
                    data-emotion="css"
                    data-s=""
                  >
                    
                    .css-1433tg5-MuiTooltip-popper{z-index:1500;pointer-events:none;}
                  </style>
                  <style
                    data-emotion="css"
                    data-s=""
                  >
                    
                    .css-179vq5o-MuiPopper-root-MuiTooltip-popper{z-index:1500;pointer-events:none;}
                  </style>
                </head>,
                "ctr": 2,
                "insertionPoint": undefined,
                "isSpeedy": false,
                "key": "css",
                "nonce": undefined,
                "prepend": undefined,
                "tags": Array [
                  <style
                    data-emotion="css"
                    data-s=""
                  >
                    
                    .css-1433tg5-MuiTooltip-popper{z-index:1500;pointer-events:none;}
                  </style>,
                  <style
                    data-emotion="css"
                    data-s=""
                  >
                    
                    .css-179vq5o-MuiPopper-root-MuiTooltip-popper{z-index:1500;pointer-events:none;}
                  </style>,
                ],
              },
            }
          }
          isStringTag={false}
          serialized={
            Object {
              "map": undefined,
              "name": "1433tg5-MuiTooltip-popper",
              "next": undefined,
              "styles": "label:MuiTooltip-popper;z-index:1500;pointer-events:none;",
              "toString": [Function],
            }
          }
        />
        <ForwardRef(Popper)
          anchorEl={
            <button
              class=""
              data-mui-internal-clone-element="true"
              id="testChild"
              type="submit"
            >
              Hello World
            </button>
          }
          className="HvTooltip-popper MuiTooltip-popper MuiTooltip-popperInteractive css-1433tg5-MuiTooltip-popper"
          id="mui-5"
          onBlur={[Function]}
          onFocus={[Function]}
          onMouseLeave={[Function]}
          onMouseOver={[Function]}
          open={false}
          placement="top"
          popperOptions={
            Object {
              "modifiers": Array [
                Object {
                  "enabled": false,
                  "name": "arrow",
                  "options": Object {
                    "element": null,
                    "padding": 4,
                  },
                },
              ],
            }
          }
          popperRef={
            Object {
              "current": undefined,
            }
          }
          transition={true}
        >
          <MuiPopperRoot
            anchorEl={
              <button
                class=""
                data-mui-internal-clone-element="true"
                id="testChild"
                type="submit"
              >
                Hello World
              </button>
            }
            className="HvTooltip-popper MuiTooltip-popper MuiTooltip-popperInteractive css-1433tg5-MuiTooltip-popper"
            direction="ltr"
            id="mui-5"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseLeave={[Function]}
            onMouseOver={[Function]}
            open={false}
            placement="top"
            popperOptions={
              Object {
                "modifiers": Array [
                  Object {
                    "enabled": false,
                    "name": "arrow",
                    "options": Object {
                      "element": null,
                      "padding": 4,
                    },
                  },
                ],
              }
            }
            popperRef={
              Object {
                "current": undefined,
              }
            }
            transition={true}
          >
            <Insertion
              cache={
                Object {
                  "insert": [Function],
                  "inserted": Object {
                    "1433tg5-MuiTooltip-popper": true,
                    "179vq5o-MuiPopper-root-MuiTooltip-popper": true,
                  },
                  "key": "css",
                  "nonce": undefined,
                  "registered": Object {
                    "css-1433tg5-MuiTooltip-popper": "label:MuiTooltip-popper;z-index:1500;pointer-events:none;",
                    "css-179vq5o-MuiPopper-root-MuiTooltip-popper": "label:MuiPopper-root;label:MuiTooltip-popper;z-index:1500;pointer-events:none;;",
                  },
                  "sheet": StyleSheet {
                    "_alreadyInsertedOrderInsensitiveRule": true,
                    "_insertTag": [Function],
                    "before": null,
                    "container": <head>
                      <style
                        data-jss=""
                        data-meta="HvTooltip"
                      >
                        
.HvTooltip-root {
  pointer-events: none;
}
.HvTooltip-tooltip {
  width: fit-content;
  display: flex;
  padding: 15px 20px;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltip p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  word-break: break-word;
  text-overflow: ellipsis;
}
.HvTooltip-tooltipMulti {
  width: fit-content;
  display: flex;
  padding: 0;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltipMulti p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  text-overflow: ellipsis;
}
.HvTooltip-popper {
  opacity: 1;
}
.HvTooltip-title {
  padding: 15px 20px;
  border-bottom: 3px solid #F0F0F0;
}
.HvTooltip-valuesContainer {
  padding: 20px;
}
.HvTooltip-values {
  display: flex;
  padding-bottom: 10px;
  justify-content: space-between;
}
.HvTooltip-values:last-child {
  padding-bottom: 0;
}
.HvTooltip-color {
  width: 10px;
  height: 15px;
}
.HvTooltip-separator {
  width: 10px;
}
.HvTooltip-separatorColor {
  width: 5px;
}
.HvTooltip-valueWrapper {
  padding: 20px;
}

                      </style>
                      <style
                        data-jss=""
                        data-meta="HvTooltip"
                      >
                        
.HvTooltip-root {
  pointer-events: none;
}
.HvTooltip-tooltip {
  width: fit-content;
  display: flex;
  padding: 15px 20px;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltip p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  word-break: break-word;
  text-overflow: ellipsis;
}
.HvTooltip-tooltipMulti {
  width: fit-content;
  display: flex;
  padding: 0;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltipMulti p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  text-overflow: ellipsis;
}
.HvTooltip-popper {
  opacity: 1;
}
.HvTooltip-title {
  padding: 15px 20px;
  border-bottom: 3px solid #F0F0F0;
}
.HvTooltip-valuesContainer {
  padding: 20px;
}
.HvTooltip-values {
  display: flex;
  padding-bottom: 10px;
  justify-content: space-between;
}
.HvTooltip-values:last-child {
  padding-bottom: 0;
}
.HvTooltip-color {
  width: 10px;
  height: 15px;
}
.HvTooltip-separator {
  width: 10px;
}
.HvTooltip-separatorColor {
  width: 5px;
}
.HvTooltip-valueWrapper {
  padding: 20px;
}

                      </style>
                      <style
                        data-jss=""
                        data-meta="HvTooltip"
                      >
                        
.HvTooltip-root {
  pointer-events: none;
}
.HvTooltip-tooltip {
  width: fit-content;
  display: flex;
  padding: 15px 20px;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltip p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  word-break: break-word;
  text-overflow: ellipsis;
}
.HvTooltip-tooltipMulti {
  width: fit-content;
  display: flex;
  padding: 0;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltipMulti p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  text-overflow: ellipsis;
}
.HvTooltip-popper {
  opacity: 1;
}
.HvTooltip-title {
  padding: 15px 20px;
  border-bottom: 3px solid #F0F0F0;
}
.HvTooltip-valuesContainer {
  padding: 20px;
}
.HvTooltip-values {
  display: flex;
  padding-bottom: 10px;
  justify-content: space-between;
}
.HvTooltip-values:last-child {
  padding-bottom: 0;
}
.HvTooltip-color {
  width: 10px;
  height: 15px;
}
.HvTooltip-separator {
  width: 10px;
}
.HvTooltip-separatorColor {
  width: 5px;
}
.HvTooltip-valueWrapper {
  padding: 20px;
}

                      </style>
                      <style
                        data-jss=""
                        data-meta="HvTooltip"
                      >
                        
.HvTooltip-root {
  pointer-events: none;
}
.HvTooltip-tooltip {
  width: fit-content;
  display: flex;
  padding: 15px 20px;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltip p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  word-break: break-word;
  text-overflow: ellipsis;
}
.HvTooltip-tooltipMulti {
  width: fit-content;
  display: flex;
  padding: 0;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltipMulti p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  text-overflow: ellipsis;
}
.HvTooltip-popper {
  opacity: 1;
}
.HvTooltip-title {
  padding: 15px 20px;
  border-bottom: 3px solid #F0F0F0;
}
.HvTooltip-valuesContainer {
  padding: 20px;
}
.HvTooltip-values {
  display: flex;
  padding-bottom: 10px;
  justify-content: space-between;
}
.HvTooltip-values:last-child {
  padding-bottom: 0;
}
.HvTooltip-color {
  width: 10px;
  height: 15px;
}
.HvTooltip-separator {
  width: 10px;
}
.HvTooltip-separatorColor {
  width: 5px;
}
.HvTooltip-valueWrapper {
  padding: 20px;
}

                      </style>
                      <style
                        data-jss=""
                        data-meta="HvTooltip"
                      >
                        
.HvTooltip-root {
  pointer-events: none;
}
.HvTooltip-tooltip {
  width: fit-content;
  display: flex;
  padding: 15px 20px;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltip p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  word-break: break-word;
  text-overflow: ellipsis;
}
.HvTooltip-tooltipMulti {
  width: fit-content;
  display: flex;
  padding: 0;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltipMulti p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  text-overflow: ellipsis;
}
.HvTooltip-popper {
  opacity: 1;
}
.HvTooltip-title {
  padding: 15px 20px;
  border-bottom: 3px solid #F0F0F0;
}
.HvTooltip-valuesContainer {
  padding: 20px;
}
.HvTooltip-values {
  display: flex;
  padding-bottom: 10px;
  justify-content: space-between;
}
.HvTooltip-values:last-child {
  padding-bottom: 0;
}
.HvTooltip-color {
  width: 10px;
  height: 15px;
}
.HvTooltip-separator {
  width: 10px;
}
.HvTooltip-separatorColor {
  width: 5px;
}
.HvTooltip-valueWrapper {
  padding: 20px;
}

                      </style>
                      <style
                        data-emotion="css"
                        data-s=""
                      >
                        
                        .css-1433tg5-MuiTooltip-popper{z-index:1500;pointer-events:none;}
                      </style>
                      <style
                        data-emotion="css"
                        data-s=""
                      >
                        
                        .css-179vq5o-MuiPopper-root-MuiTooltip-popper{z-index:1500;pointer-events:none;}
                      </style>
                    </head>,
                    "ctr": 2,
                    "insertionPoint": undefined,
                    "isSpeedy": false,
                    "key": "css",
                    "nonce": undefined,
                    "prepend": undefined,
                    "tags": Array [
                      <style
                        data-emotion="css"
                        data-s=""
                      >
                        
                        .css-1433tg5-MuiTooltip-popper{z-index:1500;pointer-events:none;}
                      </style>,
                      <style
                        data-emotion="css"
                        data-s=""
                      >
                        
                        .css-179vq5o-MuiPopper-root-MuiTooltip-popper{z-index:1500;pointer-events:none;}
                      </style>,
                    ],
                  },
                }
              }
              isStringTag={false}
              serialized={
                Object {
                  "map": undefined,
                  "name": "179vq5o-MuiPopper-root-MuiTooltip-popper",
                  "next": undefined,
                  "styles": "label:MuiPopper-root;label:MuiTooltip-popper;z-index:1500;pointer-events:none;;",
                  "toString": [Function],
                }
              }
            />
            <ForwardRef(PopperUnstyled)
              anchorEl={
                <button
                  class=""
                  data-mui-internal-clone-element="true"
                  id="testChild"
                  type="submit"
                >
                  Hello World
                </button>
              }
              className="HvTooltip-popper MuiTooltip-popper MuiTooltip-popperInteractive css-179vq5o-MuiPopper-root-MuiTooltip-popper"
              direction="ltr"
              id="mui-5"
              onBlur={[Function]}
              onFocus={[Function]}
              onMouseLeave={[Function]}
              onMouseOver={[Function]}
              open={false}
              placement="top"
              popperOptions={
                Object {
                  "modifiers": Array [
                    Object {
                      "enabled": false,
                      "name": "arrow",
                      "options": Object {
                        "element": null,
                        "padding": 4,
                      },
                    },
                  ],
                }
              }
              popperRef={
                Object {
                  "current": undefined,
                }
              }
              transition={true}
            />
          </MuiPopperRoot>
        </ForwardRef(Popper)>
      </MuiTooltipPopper>
    </ForwardRef(Tooltip)>
  </ForwardRef>
</WithStyles(ForwardRef)>
`;

exports[`Multi Line Tooltip - With Header should render multiple line tooltip with header correctly 1`] = `
<WithStyles(ForwardRef)
  title={
    <div>
      <WithStyles(ForwardRef)
        variant="highlightText"
      >
        January
      </WithStyles(ForwardRef)>
      <div>
        <WithStyles(ForwardRef)
          variant="highlightText"
        >
          Sales
        </WithStyles(ForwardRef)>
        <div />
        <WithStyles(ForwardRef)>
          52,000 units
        </WithStyles(ForwardRef)>
      </div>
      <div>
        <WithStyles(ForwardRef)
          variant="highlightText"
        >
          Profit
        </WithStyles(ForwardRef)>
        <div />
        <WithStyles(ForwardRef)>
          50%
        </WithStyles(ForwardRef)>
      </div>
    </div>
  }
  useSingle={false}
>
  <ForwardRef
    classes={
      Object {
        "color": "HvTooltip-color",
        "popper": "HvTooltip-popper",
        "root": "HvTooltip-root",
        "separator": "HvTooltip-separator",
        "separatorColor": "HvTooltip-separatorColor",
        "title": "HvTooltip-title",
        "tooltip": "HvTooltip-tooltip",
        "tooltipMulti": "HvTooltip-tooltipMulti",
        "valueWrapper": "HvTooltip-valueWrapper",
        "values": "HvTooltip-values",
        "valuesContainer": "HvTooltip-valuesContainer",
      }
    }
    title={
      <div>
        <WithStyles(ForwardRef)
          variant="highlightText"
        >
          January
        </WithStyles(ForwardRef)>
        <div>
          <WithStyles(ForwardRef)
            variant="highlightText"
          >
            Sales
          </WithStyles(ForwardRef)>
          <div />
          <WithStyles(ForwardRef)>
            52,000 units
          </WithStyles(ForwardRef)>
        </div>
        <div>
          <WithStyles(ForwardRef)
            variant="highlightText"
          >
            Profit
          </WithStyles(ForwardRef)>
          <div />
          <WithStyles(ForwardRef)>
            50%
          </WithStyles(ForwardRef)>
        </div>
      </div>
    }
    useSingle={false}
  >
    <ForwardRef(Tooltip)
      TransitionComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "propTypes": Object {
            "addEndListener": [Function],
            "appear": [Function],
            "children": [Function],
            "easing": [Function],
            "in": [Function],
            "onEnter": [Function],
            "onEntered": [Function],
            "onEntering": [Function],
            "onExit": [Function],
            "onExited": [Function],
            "onExiting": [Function],
            "style": [Function],
            "timeout": [Function],
          },
          "render": [Function],
        }
      }
      TransitionProps={
        Object {
          "timeout": 400,
        }
      }
      classes={
        Object {
          "popper": "HvTooltip-popper",
          "tooltip": "HvTooltip-tooltipMulti",
        }
      }
      enterDelay={300}
      placement="top"
      title={
        <div>
          <WithStyles(ForwardRef)
            variant="highlightText"
          >
            January
          </WithStyles(ForwardRef)>
          <div>
            <WithStyles(ForwardRef)
              variant="highlightText"
            >
              Sales
            </WithStyles(ForwardRef)>
            <div />
            <WithStyles(ForwardRef)>
              52,000 units
            </WithStyles(ForwardRef)>
          </div>
          <div>
            <WithStyles(ForwardRef)
              variant="highlightText"
            >
              Profit
            </WithStyles(ForwardRef)>
            <div />
            <WithStyles(ForwardRef)>
              50%
            </WithStyles(ForwardRef)>
          </div>
        </div>
      }
    >
      <button
        aria-label={null}
        aria-labelledby={null}
        className=""
        data-mui-internal-clone-element={true}
        id="testChild"
        onBlur={[Function]}
        onFocus={[Function]}
        onMouseLeave={[Function]}
        onMouseOver={[Function]}
        onTouchEnd={[Function]}
        onTouchStart={[Function]}
        type="submit"
      >
        Hello World
      </button>
      <MuiTooltipPopper
        anchorEl={
          <button
            class=""
            data-mui-internal-clone-element="true"
            id="testChild"
            type="submit"
          >
            Hello World
          </button>
        }
        as={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "propTypes": Object {
              "anchorEl": [Function],
              "children": [Function],
              "container": [Function],
              "disablePortal": [Function],
              "keepMounted": [Function],
              "modifiers": [Function],
              "open": [Function],
              "placement": [Function],
              "popperOptions": [Function],
              "popperRef": [Function],
              "sx": [Function],
              "transition": [Function],
            },
            "render": [Function],
          }
        }
        className="HvTooltip-popper MuiTooltip-popper MuiTooltip-popperInteractive"
        id="mui-8"
        onBlur={[Function]}
        onFocus={[Function]}
        onMouseLeave={[Function]}
        onMouseOver={[Function]}
        open={false}
        ownerState={
          Object {
            "PopperComponentProp": undefined,
            "TransitionComponent": Object {
              "$$typeof": Symbol(react.forward_ref),
              "propTypes": Object {
                "addEndListener": [Function],
                "appear": [Function],
                "children": [Function],
                "easing": [Function],
                "in": [Function],
                "onEnter": [Function],
                "onEntered": [Function],
                "onEntering": [Function],
                "onExit": [Function],
                "onExited": [Function],
                "onExiting": [Function],
                "style": [Function],
                "timeout": [Function],
              },
              "render": [Function],
            },
            "TransitionProps": Object {
              "timeout": 400,
            },
            "arrow": false,
            "children": <button
              id="testChild"
              type="submit"
            >
              Hello World
            </button>,
            "className": undefined,
            "classes": Object {
              "popper": "HvTooltip-popper",
              "tooltip": "HvTooltip-tooltipMulti",
            },
            "disableInteractive": false,
            "enterDelay": 300,
            "isRtl": false,
            "open": undefined,
            "placement": "top",
            "title": <div>
              <WithStyles(ForwardRef)
                variant="highlightText"
              >
                January
              </WithStyles(ForwardRef)>
              <div>
                <WithStyles(ForwardRef)
                  variant="highlightText"
                >
                  Sales
                </WithStyles(ForwardRef)>
                <div />
                <WithStyles(ForwardRef)>
                  52,000 units
                </WithStyles(ForwardRef)>
              </div>
              <div>
                <WithStyles(ForwardRef)
                  variant="highlightText"
                >
                  Profit
                </WithStyles(ForwardRef)>
                <div />
                <WithStyles(ForwardRef)>
                  50%
                </WithStyles(ForwardRef)>
              </div>
            </div>,
            "touch": false,
          }
        }
        placement="top"
        popperOptions={
          Object {
            "modifiers": Array [
              Object {
                "enabled": false,
                "name": "arrow",
                "options": Object {
                  "element": null,
                  "padding": 4,
                },
              },
            ],
          }
        }
        popperRef={
          Object {
            "current": undefined,
          }
        }
        transition={true}
      >
        <Insertion
          cache={
            Object {
              "insert": [Function],
              "inserted": Object {
                "1433tg5-MuiTooltip-popper": true,
                "179vq5o-MuiPopper-root-MuiTooltip-popper": true,
              },
              "key": "css",
              "nonce": undefined,
              "registered": Object {
                "css-1433tg5-MuiTooltip-popper": "label:MuiTooltip-popper;z-index:1500;pointer-events:none;",
                "css-179vq5o-MuiPopper-root-MuiTooltip-popper": "label:MuiPopper-root;label:MuiTooltip-popper;z-index:1500;pointer-events:none;;",
              },
              "sheet": StyleSheet {
                "_alreadyInsertedOrderInsensitiveRule": true,
                "_insertTag": [Function],
                "before": null,
                "container": <head>
                  <style
                    data-jss=""
                    data-meta="HvTooltip"
                  >
                    
.HvTooltip-root {
  pointer-events: none;
}
.HvTooltip-tooltip {
  width: fit-content;
  display: flex;
  padding: 15px 20px;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltip p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  word-break: break-word;
  text-overflow: ellipsis;
}
.HvTooltip-tooltipMulti {
  width: fit-content;
  display: flex;
  padding: 0;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltipMulti p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  text-overflow: ellipsis;
}
.HvTooltip-popper {
  opacity: 1;
}
.HvTooltip-title {
  padding: 15px 20px;
  border-bottom: 3px solid #F0F0F0;
}
.HvTooltip-valuesContainer {
  padding: 20px;
}
.HvTooltip-values {
  display: flex;
  padding-bottom: 10px;
  justify-content: space-between;
}
.HvTooltip-values:last-child {
  padding-bottom: 0;
}
.HvTooltip-color {
  width: 10px;
  height: 15px;
}
.HvTooltip-separator {
  width: 10px;
}
.HvTooltip-separatorColor {
  width: 5px;
}
.HvTooltip-valueWrapper {
  padding: 20px;
}

                  </style>
                  <style
                    data-jss=""
                    data-meta="HvTooltip"
                  >
                    
.HvTooltip-root {
  pointer-events: none;
}
.HvTooltip-tooltip {
  width: fit-content;
  display: flex;
  padding: 15px 20px;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltip p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  word-break: break-word;
  text-overflow: ellipsis;
}
.HvTooltip-tooltipMulti {
  width: fit-content;
  display: flex;
  padding: 0;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltipMulti p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  text-overflow: ellipsis;
}
.HvTooltip-popper {
  opacity: 1;
}
.HvTooltip-title {
  padding: 15px 20px;
  border-bottom: 3px solid #F0F0F0;
}
.HvTooltip-valuesContainer {
  padding: 20px;
}
.HvTooltip-values {
  display: flex;
  padding-bottom: 10px;
  justify-content: space-between;
}
.HvTooltip-values:last-child {
  padding-bottom: 0;
}
.HvTooltip-color {
  width: 10px;
  height: 15px;
}
.HvTooltip-separator {
  width: 10px;
}
.HvTooltip-separatorColor {
  width: 5px;
}
.HvTooltip-valueWrapper {
  padding: 20px;
}

                  </style>
                  <style
                    data-jss=""
                    data-meta="HvTooltip"
                  >
                    
.HvTooltip-root {
  pointer-events: none;
}
.HvTooltip-tooltip {
  width: fit-content;
  display: flex;
  padding: 15px 20px;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltip p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  word-break: break-word;
  text-overflow: ellipsis;
}
.HvTooltip-tooltipMulti {
  width: fit-content;
  display: flex;
  padding: 0;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltipMulti p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  text-overflow: ellipsis;
}
.HvTooltip-popper {
  opacity: 1;
}
.HvTooltip-title {
  padding: 15px 20px;
  border-bottom: 3px solid #F0F0F0;
}
.HvTooltip-valuesContainer {
  padding: 20px;
}
.HvTooltip-values {
  display: flex;
  padding-bottom: 10px;
  justify-content: space-between;
}
.HvTooltip-values:last-child {
  padding-bottom: 0;
}
.HvTooltip-color {
  width: 10px;
  height: 15px;
}
.HvTooltip-separator {
  width: 10px;
}
.HvTooltip-separatorColor {
  width: 5px;
}
.HvTooltip-valueWrapper {
  padding: 20px;
}

                  </style>
                  <style
                    data-jss=""
                    data-meta="HvTooltip"
                  >
                    
.HvTooltip-root {
  pointer-events: none;
}
.HvTooltip-tooltip {
  width: fit-content;
  display: flex;
  padding: 15px 20px;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltip p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  word-break: break-word;
  text-overflow: ellipsis;
}
.HvTooltip-tooltipMulti {
  width: fit-content;
  display: flex;
  padding: 0;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltipMulti p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  text-overflow: ellipsis;
}
.HvTooltip-popper {
  opacity: 1;
}
.HvTooltip-title {
  padding: 15px 20px;
  border-bottom: 3px solid #F0F0F0;
}
.HvTooltip-valuesContainer {
  padding: 20px;
}
.HvTooltip-values {
  display: flex;
  padding-bottom: 10px;
  justify-content: space-between;
}
.HvTooltip-values:last-child {
  padding-bottom: 0;
}
.HvTooltip-color {
  width: 10px;
  height: 15px;
}
.HvTooltip-separator {
  width: 10px;
}
.HvTooltip-separatorColor {
  width: 5px;
}
.HvTooltip-valueWrapper {
  padding: 20px;
}

                  </style>
                  <style
                    data-jss=""
                    data-meta="HvTooltip"
                  >
                    
.HvTooltip-root {
  pointer-events: none;
}
.HvTooltip-tooltip {
  width: fit-content;
  display: flex;
  padding: 15px 20px;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltip p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  word-break: break-word;
  text-overflow: ellipsis;
}
.HvTooltip-tooltipMulti {
  width: fit-content;
  display: flex;
  padding: 0;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltipMulti p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  text-overflow: ellipsis;
}
.HvTooltip-popper {
  opacity: 1;
}
.HvTooltip-title {
  padding: 15px 20px;
  border-bottom: 3px solid #F0F0F0;
}
.HvTooltip-valuesContainer {
  padding: 20px;
}
.HvTooltip-values {
  display: flex;
  padding-bottom: 10px;
  justify-content: space-between;
}
.HvTooltip-values:last-child {
  padding-bottom: 0;
}
.HvTooltip-color {
  width: 10px;
  height: 15px;
}
.HvTooltip-separator {
  width: 10px;
}
.HvTooltip-separatorColor {
  width: 5px;
}
.HvTooltip-valueWrapper {
  padding: 20px;
}

                  </style>
                  <style
                    data-jss=""
                    data-meta="HvTooltip"
                  >
                    
.HvTooltip-root {
  pointer-events: none;
}
.HvTooltip-tooltip {
  width: fit-content;
  display: flex;
  padding: 15px 20px;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltip p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  word-break: break-word;
  text-overflow: ellipsis;
}
.HvTooltip-tooltipMulti {
  width: fit-content;
  display: flex;
  padding: 0;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltipMulti p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  text-overflow: ellipsis;
}
.HvTooltip-popper {
  opacity: 1;
}
.HvTooltip-title {
  padding: 15px 20px;
  border-bottom: 3px solid #F0F0F0;
}
.HvTooltip-valuesContainer {
  padding: 20px;
}
.HvTooltip-values {
  display: flex;
  padding-bottom: 10px;
  justify-content: space-between;
}
.HvTooltip-values:last-child {
  padding-bottom: 0;
}
.HvTooltip-color {
  width: 10px;
  height: 15px;
}
.HvTooltip-separator {
  width: 10px;
}
.HvTooltip-separatorColor {
  width: 5px;
}
.HvTooltip-valueWrapper {
  padding: 20px;
}

                  </style>
                  <style
                    data-jss=""
                    data-meta="HvTooltip"
                  >
                    
.HvTooltip-root {
  pointer-events: none;
}
.HvTooltip-tooltip {
  width: fit-content;
  display: flex;
  padding: 15px 20px;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltip p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  word-break: break-word;
  text-overflow: ellipsis;
}
.HvTooltip-tooltipMulti {
  width: fit-content;
  display: flex;
  padding: 0;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltipMulti p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  text-overflow: ellipsis;
}
.HvTooltip-popper {
  opacity: 1;
}
.HvTooltip-title {
  padding: 15px 20px;
  border-bottom: 3px solid #F0F0F0;
}
.HvTooltip-valuesContainer {
  padding: 20px;
}
.HvTooltip-values {
  display: flex;
  padding-bottom: 10px;
  justify-content: space-between;
}
.HvTooltip-values:last-child {
  padding-bottom: 0;
}
.HvTooltip-color {
  width: 10px;
  height: 15px;
}
.HvTooltip-separator {
  width: 10px;
}
.HvTooltip-separatorColor {
  width: 5px;
}
.HvTooltip-valueWrapper {
  padding: 20px;
}

                  </style>
                  <style
                    data-jss=""
                    data-meta="HvTooltip"
                  >
                    
.HvTooltip-root {
  pointer-events: none;
}
.HvTooltip-tooltip {
  width: fit-content;
  display: flex;
  padding: 15px 20px;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltip p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  word-break: break-word;
  text-overflow: ellipsis;
}
.HvTooltip-tooltipMulti {
  width: fit-content;
  display: flex;
  padding: 0;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltipMulti p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  text-overflow: ellipsis;
}
.HvTooltip-popper {
  opacity: 1;
}
.HvTooltip-title {
  padding: 15px 20px;
  border-bottom: 3px solid #F0F0F0;
}
.HvTooltip-valuesContainer {
  padding: 20px;
}
.HvTooltip-values {
  display: flex;
  padding-bottom: 10px;
  justify-content: space-between;
}
.HvTooltip-values:last-child {
  padding-bottom: 0;
}
.HvTooltip-color {
  width: 10px;
  height: 15px;
}
.HvTooltip-separator {
  width: 10px;
}
.HvTooltip-separatorColor {
  width: 5px;
}
.HvTooltip-valueWrapper {
  padding: 20px;
}

                  </style>
                  <style
                    data-emotion="css"
                    data-s=""
                  >
                    
                    .css-1433tg5-MuiTooltip-popper{z-index:1500;pointer-events:none;}
                  </style>
                  <style
                    data-emotion="css"
                    data-s=""
                  >
                    
                    .css-179vq5o-MuiPopper-root-MuiTooltip-popper{z-index:1500;pointer-events:none;}
                  </style>
                </head>,
                "ctr": 2,
                "insertionPoint": undefined,
                "isSpeedy": false,
                "key": "css",
                "nonce": undefined,
                "prepend": undefined,
                "tags": Array [
                  <style
                    data-emotion="css"
                    data-s=""
                  >
                    
                    .css-1433tg5-MuiTooltip-popper{z-index:1500;pointer-events:none;}
                  </style>,
                  <style
                    data-emotion="css"
                    data-s=""
                  >
                    
                    .css-179vq5o-MuiPopper-root-MuiTooltip-popper{z-index:1500;pointer-events:none;}
                  </style>,
                ],
              },
            }
          }
          isStringTag={false}
          serialized={
            Object {
              "map": undefined,
              "name": "1433tg5-MuiTooltip-popper",
              "next": undefined,
              "styles": "label:MuiTooltip-popper;z-index:1500;pointer-events:none;",
              "toString": [Function],
            }
          }
        />
        <ForwardRef(Popper)
          anchorEl={
            <button
              class=""
              data-mui-internal-clone-element="true"
              id="testChild"
              type="submit"
            >
              Hello World
            </button>
          }
          className="HvTooltip-popper MuiTooltip-popper MuiTooltip-popperInteractive css-1433tg5-MuiTooltip-popper"
          id="mui-8"
          onBlur={[Function]}
          onFocus={[Function]}
          onMouseLeave={[Function]}
          onMouseOver={[Function]}
          open={false}
          placement="top"
          popperOptions={
            Object {
              "modifiers": Array [
                Object {
                  "enabled": false,
                  "name": "arrow",
                  "options": Object {
                    "element": null,
                    "padding": 4,
                  },
                },
              ],
            }
          }
          popperRef={
            Object {
              "current": undefined,
            }
          }
          transition={true}
        >
          <MuiPopperRoot
            anchorEl={
              <button
                class=""
                data-mui-internal-clone-element="true"
                id="testChild"
                type="submit"
              >
                Hello World
              </button>
            }
            className="HvTooltip-popper MuiTooltip-popper MuiTooltip-popperInteractive css-1433tg5-MuiTooltip-popper"
            direction="ltr"
            id="mui-8"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseLeave={[Function]}
            onMouseOver={[Function]}
            open={false}
            placement="top"
            popperOptions={
              Object {
                "modifiers": Array [
                  Object {
                    "enabled": false,
                    "name": "arrow",
                    "options": Object {
                      "element": null,
                      "padding": 4,
                    },
                  },
                ],
              }
            }
            popperRef={
              Object {
                "current": undefined,
              }
            }
            transition={true}
          >
            <Insertion
              cache={
                Object {
                  "insert": [Function],
                  "inserted": Object {
                    "1433tg5-MuiTooltip-popper": true,
                    "179vq5o-MuiPopper-root-MuiTooltip-popper": true,
                  },
                  "key": "css",
                  "nonce": undefined,
                  "registered": Object {
                    "css-1433tg5-MuiTooltip-popper": "label:MuiTooltip-popper;z-index:1500;pointer-events:none;",
                    "css-179vq5o-MuiPopper-root-MuiTooltip-popper": "label:MuiPopper-root;label:MuiTooltip-popper;z-index:1500;pointer-events:none;;",
                  },
                  "sheet": StyleSheet {
                    "_alreadyInsertedOrderInsensitiveRule": true,
                    "_insertTag": [Function],
                    "before": null,
                    "container": <head>
                      <style
                        data-jss=""
                        data-meta="HvTooltip"
                      >
                        
.HvTooltip-root {
  pointer-events: none;
}
.HvTooltip-tooltip {
  width: fit-content;
  display: flex;
  padding: 15px 20px;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltip p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  word-break: break-word;
  text-overflow: ellipsis;
}
.HvTooltip-tooltipMulti {
  width: fit-content;
  display: flex;
  padding: 0;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltipMulti p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  text-overflow: ellipsis;
}
.HvTooltip-popper {
  opacity: 1;
}
.HvTooltip-title {
  padding: 15px 20px;
  border-bottom: 3px solid #F0F0F0;
}
.HvTooltip-valuesContainer {
  padding: 20px;
}
.HvTooltip-values {
  display: flex;
  padding-bottom: 10px;
  justify-content: space-between;
}
.HvTooltip-values:last-child {
  padding-bottom: 0;
}
.HvTooltip-color {
  width: 10px;
  height: 15px;
}
.HvTooltip-separator {
  width: 10px;
}
.HvTooltip-separatorColor {
  width: 5px;
}
.HvTooltip-valueWrapper {
  padding: 20px;
}

                      </style>
                      <style
                        data-jss=""
                        data-meta="HvTooltip"
                      >
                        
.HvTooltip-root {
  pointer-events: none;
}
.HvTooltip-tooltip {
  width: fit-content;
  display: flex;
  padding: 15px 20px;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltip p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  word-break: break-word;
  text-overflow: ellipsis;
}
.HvTooltip-tooltipMulti {
  width: fit-content;
  display: flex;
  padding: 0;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltipMulti p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  text-overflow: ellipsis;
}
.HvTooltip-popper {
  opacity: 1;
}
.HvTooltip-title {
  padding: 15px 20px;
  border-bottom: 3px solid #F0F0F0;
}
.HvTooltip-valuesContainer {
  padding: 20px;
}
.HvTooltip-values {
  display: flex;
  padding-bottom: 10px;
  justify-content: space-between;
}
.HvTooltip-values:last-child {
  padding-bottom: 0;
}
.HvTooltip-color {
  width: 10px;
  height: 15px;
}
.HvTooltip-separator {
  width: 10px;
}
.HvTooltip-separatorColor {
  width: 5px;
}
.HvTooltip-valueWrapper {
  padding: 20px;
}

                      </style>
                      <style
                        data-jss=""
                        data-meta="HvTooltip"
                      >
                        
.HvTooltip-root {
  pointer-events: none;
}
.HvTooltip-tooltip {
  width: fit-content;
  display: flex;
  padding: 15px 20px;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltip p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  word-break: break-word;
  text-overflow: ellipsis;
}
.HvTooltip-tooltipMulti {
  width: fit-content;
  display: flex;
  padding: 0;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltipMulti p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  text-overflow: ellipsis;
}
.HvTooltip-popper {
  opacity: 1;
}
.HvTooltip-title {
  padding: 15px 20px;
  border-bottom: 3px solid #F0F0F0;
}
.HvTooltip-valuesContainer {
  padding: 20px;
}
.HvTooltip-values {
  display: flex;
  padding-bottom: 10px;
  justify-content: space-between;
}
.HvTooltip-values:last-child {
  padding-bottom: 0;
}
.HvTooltip-color {
  width: 10px;
  height: 15px;
}
.HvTooltip-separator {
  width: 10px;
}
.HvTooltip-separatorColor {
  width: 5px;
}
.HvTooltip-valueWrapper {
  padding: 20px;
}

                      </style>
                      <style
                        data-jss=""
                        data-meta="HvTooltip"
                      >
                        
.HvTooltip-root {
  pointer-events: none;
}
.HvTooltip-tooltip {
  width: fit-content;
  display: flex;
  padding: 15px 20px;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltip p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  word-break: break-word;
  text-overflow: ellipsis;
}
.HvTooltip-tooltipMulti {
  width: fit-content;
  display: flex;
  padding: 0;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltipMulti p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  text-overflow: ellipsis;
}
.HvTooltip-popper {
  opacity: 1;
}
.HvTooltip-title {
  padding: 15px 20px;
  border-bottom: 3px solid #F0F0F0;
}
.HvTooltip-valuesContainer {
  padding: 20px;
}
.HvTooltip-values {
  display: flex;
  padding-bottom: 10px;
  justify-content: space-between;
}
.HvTooltip-values:last-child {
  padding-bottom: 0;
}
.HvTooltip-color {
  width: 10px;
  height: 15px;
}
.HvTooltip-separator {
  width: 10px;
}
.HvTooltip-separatorColor {
  width: 5px;
}
.HvTooltip-valueWrapper {
  padding: 20px;
}

                      </style>
                      <style
                        data-jss=""
                        data-meta="HvTooltip"
                      >
                        
.HvTooltip-root {
  pointer-events: none;
}
.HvTooltip-tooltip {
  width: fit-content;
  display: flex;
  padding: 15px 20px;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltip p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  word-break: break-word;
  text-overflow: ellipsis;
}
.HvTooltip-tooltipMulti {
  width: fit-content;
  display: flex;
  padding: 0;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltipMulti p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  text-overflow: ellipsis;
}
.HvTooltip-popper {
  opacity: 1;
}
.HvTooltip-title {
  padding: 15px 20px;
  border-bottom: 3px solid #F0F0F0;
}
.HvTooltip-valuesContainer {
  padding: 20px;
}
.HvTooltip-values {
  display: flex;
  padding-bottom: 10px;
  justify-content: space-between;
}
.HvTooltip-values:last-child {
  padding-bottom: 0;
}
.HvTooltip-color {
  width: 10px;
  height: 15px;
}
.HvTooltip-separator {
  width: 10px;
}
.HvTooltip-separatorColor {
  width: 5px;
}
.HvTooltip-valueWrapper {
  padding: 20px;
}

                      </style>
                      <style
                        data-jss=""
                        data-meta="HvTooltip"
                      >
                        
.HvTooltip-root {
  pointer-events: none;
}
.HvTooltip-tooltip {
  width: fit-content;
  display: flex;
  padding: 15px 20px;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltip p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  word-break: break-word;
  text-overflow: ellipsis;
}
.HvTooltip-tooltipMulti {
  width: fit-content;
  display: flex;
  padding: 0;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltipMulti p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  text-overflow: ellipsis;
}
.HvTooltip-popper {
  opacity: 1;
}
.HvTooltip-title {
  padding: 15px 20px;
  border-bottom: 3px solid #F0F0F0;
}
.HvTooltip-valuesContainer {
  padding: 20px;
}
.HvTooltip-values {
  display: flex;
  padding-bottom: 10px;
  justify-content: space-between;
}
.HvTooltip-values:last-child {
  padding-bottom: 0;
}
.HvTooltip-color {
  width: 10px;
  height: 15px;
}
.HvTooltip-separator {
  width: 10px;
}
.HvTooltip-separatorColor {
  width: 5px;
}
.HvTooltip-valueWrapper {
  padding: 20px;
}

                      </style>
                      <style
                        data-jss=""
                        data-meta="HvTooltip"
                      >
                        
.HvTooltip-root {
  pointer-events: none;
}
.HvTooltip-tooltip {
  width: fit-content;
  display: flex;
  padding: 15px 20px;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltip p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  word-break: break-word;
  text-overflow: ellipsis;
}
.HvTooltip-tooltipMulti {
  width: fit-content;
  display: flex;
  padding: 0;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltipMulti p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  text-overflow: ellipsis;
}
.HvTooltip-popper {
  opacity: 1;
}
.HvTooltip-title {
  padding: 15px 20px;
  border-bottom: 3px solid #F0F0F0;
}
.HvTooltip-valuesContainer {
  padding: 20px;
}
.HvTooltip-values {
  display: flex;
  padding-bottom: 10px;
  justify-content: space-between;
}
.HvTooltip-values:last-child {
  padding-bottom: 0;
}
.HvTooltip-color {
  width: 10px;
  height: 15px;
}
.HvTooltip-separator {
  width: 10px;
}
.HvTooltip-separatorColor {
  width: 5px;
}
.HvTooltip-valueWrapper {
  padding: 20px;
}

                      </style>
                      <style
                        data-jss=""
                        data-meta="HvTooltip"
                      >
                        
.HvTooltip-root {
  pointer-events: none;
}
.HvTooltip-tooltip {
  width: fit-content;
  display: flex;
  padding: 15px 20px;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltip p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  word-break: break-word;
  text-overflow: ellipsis;
}
.HvTooltip-tooltipMulti {
  width: fit-content;
  display: flex;
  padding: 0;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltipMulti p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  text-overflow: ellipsis;
}
.HvTooltip-popper {
  opacity: 1;
}
.HvTooltip-title {
  padding: 15px 20px;
  border-bottom: 3px solid #F0F0F0;
}
.HvTooltip-valuesContainer {
  padding: 20px;
}
.HvTooltip-values {
  display: flex;
  padding-bottom: 10px;
  justify-content: space-between;
}
.HvTooltip-values:last-child {
  padding-bottom: 0;
}
.HvTooltip-color {
  width: 10px;
  height: 15px;
}
.HvTooltip-separator {
  width: 10px;
}
.HvTooltip-separatorColor {
  width: 5px;
}
.HvTooltip-valueWrapper {
  padding: 20px;
}

                      </style>
                      <style
                        data-emotion="css"
                        data-s=""
                      >
                        
                        .css-1433tg5-MuiTooltip-popper{z-index:1500;pointer-events:none;}
                      </style>
                      <style
                        data-emotion="css"
                        data-s=""
                      >
                        
                        .css-179vq5o-MuiPopper-root-MuiTooltip-popper{z-index:1500;pointer-events:none;}
                      </style>
                    </head>,
                    "ctr": 2,
                    "insertionPoint": undefined,
                    "isSpeedy": false,
                    "key": "css",
                    "nonce": undefined,
                    "prepend": undefined,
                    "tags": Array [
                      <style
                        data-emotion="css"
                        data-s=""
                      >
                        
                        .css-1433tg5-MuiTooltip-popper{z-index:1500;pointer-events:none;}
                      </style>,
                      <style
                        data-emotion="css"
                        data-s=""
                      >
                        
                        .css-179vq5o-MuiPopper-root-MuiTooltip-popper{z-index:1500;pointer-events:none;}
                      </style>,
                    ],
                  },
                }
              }
              isStringTag={false}
              serialized={
                Object {
                  "map": undefined,
                  "name": "179vq5o-MuiPopper-root-MuiTooltip-popper",
                  "next": undefined,
                  "styles": "label:MuiPopper-root;label:MuiTooltip-popper;z-index:1500;pointer-events:none;;",
                  "toString": [Function],
                }
              }
            />
            <ForwardRef(PopperUnstyled)
              anchorEl={
                <button
                  class=""
                  data-mui-internal-clone-element="true"
                  id="testChild"
                  type="submit"
                >
                  Hello World
                </button>
              }
              className="HvTooltip-popper MuiTooltip-popper MuiTooltip-popperInteractive css-179vq5o-MuiPopper-root-MuiTooltip-popper"
              direction="ltr"
              id="mui-8"
              onBlur={[Function]}
              onFocus={[Function]}
              onMouseLeave={[Function]}
              onMouseOver={[Function]}
              open={false}
              placement="top"
              popperOptions={
                Object {
                  "modifiers": Array [
                    Object {
                      "enabled": false,
                      "name": "arrow",
                      "options": Object {
                        "element": null,
                        "padding": 4,
                      },
                    },
                  ],
                }
              }
              popperRef={
                Object {
                  "current": undefined,
                }
              }
              transition={true}
            />
          </MuiPopperRoot>
        </ForwardRef(Popper)>
      </MuiTooltipPopper>
    </ForwardRef(Tooltip)>
  </ForwardRef>
</WithStyles(ForwardRef)>
`;

exports[`Single Line Tooltip should render single line tooltip correctly 1`] = `
<WithStyles(ForwardRef)
  title={
    <WithStyles(ForwardRef)
      variant="highlightText"
    >
      Grid View
    </WithStyles(ForwardRef)>
  }
>
  <ForwardRef
    classes={
      Object {
        "color": "HvTooltip-color",
        "popper": "HvTooltip-popper",
        "root": "HvTooltip-root",
        "separator": "HvTooltip-separator",
        "separatorColor": "HvTooltip-separatorColor",
        "title": "HvTooltip-title",
        "tooltip": "HvTooltip-tooltip",
        "tooltipMulti": "HvTooltip-tooltipMulti",
        "valueWrapper": "HvTooltip-valueWrapper",
        "values": "HvTooltip-values",
        "valuesContainer": "HvTooltip-valuesContainer",
      }
    }
    title={
      <WithStyles(ForwardRef)
        variant="highlightText"
      >
        Grid View
      </WithStyles(ForwardRef)>
    }
  >
    <ForwardRef(Tooltip)
      TransitionComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "propTypes": Object {
            "addEndListener": [Function],
            "appear": [Function],
            "children": [Function],
            "easing": [Function],
            "in": [Function],
            "onEnter": [Function],
            "onEntered": [Function],
            "onEntering": [Function],
            "onExit": [Function],
            "onExited": [Function],
            "onExiting": [Function],
            "style": [Function],
            "timeout": [Function],
          },
          "render": [Function],
        }
      }
      TransitionProps={
        Object {
          "timeout": 400,
        }
      }
      classes={
        Object {
          "popper": "HvTooltip-popper",
          "tooltip": "HvTooltip-tooltip",
        }
      }
      enterDelay={300}
      placement="top"
      title={
        <WithStyles(ForwardRef)
          variant="highlightText"
        >
          Grid View
        </WithStyles(ForwardRef)>
      }
    >
      <button
        aria-label={null}
        aria-labelledby={null}
        className=""
        data-mui-internal-clone-element={true}
        id="testChild"
        onBlur={[Function]}
        onFocus={[Function]}
        onMouseLeave={[Function]}
        onMouseOver={[Function]}
        onTouchEnd={[Function]}
        onTouchStart={[Function]}
        type="submit"
      >
        Hello World
      </button>
      <MuiTooltipPopper
        anchorEl={
          <button
            class=""
            data-mui-internal-clone-element="true"
            id="testChild"
            type="submit"
          >
            Hello World
          </button>
        }
        as={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "propTypes": Object {
              "anchorEl": [Function],
              "children": [Function],
              "container": [Function],
              "disablePortal": [Function],
              "keepMounted": [Function],
              "modifiers": [Function],
              "open": [Function],
              "placement": [Function],
              "popperOptions": [Function],
              "popperRef": [Function],
              "sx": [Function],
              "transition": [Function],
            },
            "render": [Function],
          }
        }
        className="HvTooltip-popper MuiTooltip-popper MuiTooltip-popperInteractive"
        id="mui-2"
        onBlur={[Function]}
        onFocus={[Function]}
        onMouseLeave={[Function]}
        onMouseOver={[Function]}
        open={false}
        ownerState={
          Object {
            "PopperComponentProp": undefined,
            "TransitionComponent": Object {
              "$$typeof": Symbol(react.forward_ref),
              "propTypes": Object {
                "addEndListener": [Function],
                "appear": [Function],
                "children": [Function],
                "easing": [Function],
                "in": [Function],
                "onEnter": [Function],
                "onEntered": [Function],
                "onEntering": [Function],
                "onExit": [Function],
                "onExited": [Function],
                "onExiting": [Function],
                "style": [Function],
                "timeout": [Function],
              },
              "render": [Function],
            },
            "TransitionProps": Object {
              "timeout": 400,
            },
            "arrow": false,
            "children": <button
              id="testChild"
              type="submit"
            >
              Hello World
            </button>,
            "className": undefined,
            "classes": Object {
              "popper": "HvTooltip-popper",
              "tooltip": "HvTooltip-tooltip",
            },
            "disableInteractive": false,
            "enterDelay": 300,
            "isRtl": false,
            "open": undefined,
            "placement": "top",
            "title": <WithStyles(ForwardRef)
              variant="highlightText"
            >
              Grid View
            </WithStyles(ForwardRef)>,
            "touch": false,
          }
        }
        placement="top"
        popperOptions={
          Object {
            "modifiers": Array [
              Object {
                "enabled": false,
                "name": "arrow",
                "options": Object {
                  "element": null,
                  "padding": 4,
                },
              },
            ],
          }
        }
        popperRef={
          Object {
            "current": undefined,
          }
        }
        transition={true}
      >
        <Insertion
          cache={
            Object {
              "insert": [Function],
              "inserted": Object {
                "1433tg5-MuiTooltip-popper": true,
                "179vq5o-MuiPopper-root-MuiTooltip-popper": true,
              },
              "key": "css",
              "nonce": undefined,
              "registered": Object {
                "css-1433tg5-MuiTooltip-popper": "label:MuiTooltip-popper;z-index:1500;pointer-events:none;",
                "css-179vq5o-MuiPopper-root-MuiTooltip-popper": "label:MuiPopper-root;label:MuiTooltip-popper;z-index:1500;pointer-events:none;;",
              },
              "sheet": StyleSheet {
                "_alreadyInsertedOrderInsensitiveRule": true,
                "_insertTag": [Function],
                "before": null,
                "container": <head>
                  <style
                    data-jss=""
                    data-meta="HvTooltip"
                  >
                    
.HvTooltip-root {
  pointer-events: none;
}
.HvTooltip-tooltip {
  width: fit-content;
  display: flex;
  padding: 15px 20px;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltip p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  word-break: break-word;
  text-overflow: ellipsis;
}
.HvTooltip-tooltipMulti {
  width: fit-content;
  display: flex;
  padding: 0;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltipMulti p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  text-overflow: ellipsis;
}
.HvTooltip-popper {
  opacity: 1;
}
.HvTooltip-title {
  padding: 15px 20px;
  border-bottom: 3px solid #F0F0F0;
}
.HvTooltip-valuesContainer {
  padding: 20px;
}
.HvTooltip-values {
  display: flex;
  padding-bottom: 10px;
  justify-content: space-between;
}
.HvTooltip-values:last-child {
  padding-bottom: 0;
}
.HvTooltip-color {
  width: 10px;
  height: 15px;
}
.HvTooltip-separator {
  width: 10px;
}
.HvTooltip-separatorColor {
  width: 5px;
}
.HvTooltip-valueWrapper {
  padding: 20px;
}

                  </style>
                  <style
                    data-jss=""
                    data-meta="HvTooltip"
                  >
                    
.HvTooltip-root {
  pointer-events: none;
}
.HvTooltip-tooltip {
  width: fit-content;
  display: flex;
  padding: 15px 20px;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltip p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  word-break: break-word;
  text-overflow: ellipsis;
}
.HvTooltip-tooltipMulti {
  width: fit-content;
  display: flex;
  padding: 0;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltipMulti p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  text-overflow: ellipsis;
}
.HvTooltip-popper {
  opacity: 1;
}
.HvTooltip-title {
  padding: 15px 20px;
  border-bottom: 3px solid #F0F0F0;
}
.HvTooltip-valuesContainer {
  padding: 20px;
}
.HvTooltip-values {
  display: flex;
  padding-bottom: 10px;
  justify-content: space-between;
}
.HvTooltip-values:last-child {
  padding-bottom: 0;
}
.HvTooltip-color {
  width: 10px;
  height: 15px;
}
.HvTooltip-separator {
  width: 10px;
}
.HvTooltip-separatorColor {
  width: 5px;
}
.HvTooltip-valueWrapper {
  padding: 20px;
}

                  </style>
                  <style
                    data-emotion="css"
                    data-s=""
                  >
                    
                    .css-1433tg5-MuiTooltip-popper{z-index:1500;pointer-events:none;}
                  </style>
                  <style
                    data-emotion="css"
                    data-s=""
                  >
                    
                    .css-179vq5o-MuiPopper-root-MuiTooltip-popper{z-index:1500;pointer-events:none;}
                  </style>
                </head>,
                "ctr": 2,
                "insertionPoint": undefined,
                "isSpeedy": false,
                "key": "css",
                "nonce": undefined,
                "prepend": undefined,
                "tags": Array [
                  <style
                    data-emotion="css"
                    data-s=""
                  >
                    
                    .css-1433tg5-MuiTooltip-popper{z-index:1500;pointer-events:none;}
                  </style>,
                  <style
                    data-emotion="css"
                    data-s=""
                  >
                    
                    .css-179vq5o-MuiPopper-root-MuiTooltip-popper{z-index:1500;pointer-events:none;}
                  </style>,
                ],
              },
            }
          }
          isStringTag={false}
          serialized={
            Object {
              "map": undefined,
              "name": "1433tg5-MuiTooltip-popper",
              "next": undefined,
              "styles": "label:MuiTooltip-popper;z-index:1500;pointer-events:none;",
              "toString": [Function],
            }
          }
        />
        <ForwardRef(Popper)
          anchorEl={
            <button
              class=""
              data-mui-internal-clone-element="true"
              id="testChild"
              type="submit"
            >
              Hello World
            </button>
          }
          className="HvTooltip-popper MuiTooltip-popper MuiTooltip-popperInteractive css-1433tg5-MuiTooltip-popper"
          id="mui-2"
          onBlur={[Function]}
          onFocus={[Function]}
          onMouseLeave={[Function]}
          onMouseOver={[Function]}
          open={false}
          placement="top"
          popperOptions={
            Object {
              "modifiers": Array [
                Object {
                  "enabled": false,
                  "name": "arrow",
                  "options": Object {
                    "element": null,
                    "padding": 4,
                  },
                },
              ],
            }
          }
          popperRef={
            Object {
              "current": undefined,
            }
          }
          transition={true}
        >
          <MuiPopperRoot
            anchorEl={
              <button
                class=""
                data-mui-internal-clone-element="true"
                id="testChild"
                type="submit"
              >
                Hello World
              </button>
            }
            className="HvTooltip-popper MuiTooltip-popper MuiTooltip-popperInteractive css-1433tg5-MuiTooltip-popper"
            direction="ltr"
            id="mui-2"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseLeave={[Function]}
            onMouseOver={[Function]}
            open={false}
            placement="top"
            popperOptions={
              Object {
                "modifiers": Array [
                  Object {
                    "enabled": false,
                    "name": "arrow",
                    "options": Object {
                      "element": null,
                      "padding": 4,
                    },
                  },
                ],
              }
            }
            popperRef={
              Object {
                "current": undefined,
              }
            }
            transition={true}
          >
            <Insertion
              cache={
                Object {
                  "insert": [Function],
                  "inserted": Object {
                    "1433tg5-MuiTooltip-popper": true,
                    "179vq5o-MuiPopper-root-MuiTooltip-popper": true,
                  },
                  "key": "css",
                  "nonce": undefined,
                  "registered": Object {
                    "css-1433tg5-MuiTooltip-popper": "label:MuiTooltip-popper;z-index:1500;pointer-events:none;",
                    "css-179vq5o-MuiPopper-root-MuiTooltip-popper": "label:MuiPopper-root;label:MuiTooltip-popper;z-index:1500;pointer-events:none;;",
                  },
                  "sheet": StyleSheet {
                    "_alreadyInsertedOrderInsensitiveRule": true,
                    "_insertTag": [Function],
                    "before": null,
                    "container": <head>
                      <style
                        data-jss=""
                        data-meta="HvTooltip"
                      >
                        
.HvTooltip-root {
  pointer-events: none;
}
.HvTooltip-tooltip {
  width: fit-content;
  display: flex;
  padding: 15px 20px;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltip p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  word-break: break-word;
  text-overflow: ellipsis;
}
.HvTooltip-tooltipMulti {
  width: fit-content;
  display: flex;
  padding: 0;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltipMulti p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  text-overflow: ellipsis;
}
.HvTooltip-popper {
  opacity: 1;
}
.HvTooltip-title {
  padding: 15px 20px;
  border-bottom: 3px solid #F0F0F0;
}
.HvTooltip-valuesContainer {
  padding: 20px;
}
.HvTooltip-values {
  display: flex;
  padding-bottom: 10px;
  justify-content: space-between;
}
.HvTooltip-values:last-child {
  padding-bottom: 0;
}
.HvTooltip-color {
  width: 10px;
  height: 15px;
}
.HvTooltip-separator {
  width: 10px;
}
.HvTooltip-separatorColor {
  width: 5px;
}
.HvTooltip-valueWrapper {
  padding: 20px;
}

                      </style>
                      <style
                        data-jss=""
                        data-meta="HvTooltip"
                      >
                        
.HvTooltip-root {
  pointer-events: none;
}
.HvTooltip-tooltip {
  width: fit-content;
  display: flex;
  padding: 15px 20px;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltip p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  word-break: break-word;
  text-overflow: ellipsis;
}
.HvTooltip-tooltipMulti {
  width: fit-content;
  display: flex;
  padding: 0;
  max-width: 532px;
  box-shadow: 0 2px 12px rgba(65,65,65,0.12);
  background-color: #FBFCFC;
}
.HvTooltip-tooltipMulti p {
  color: #414141;
  width: fit-content;
  display: -webkit-box;
  overflow: hidden;
  box-orient: vertical;
  text-overflow: ellipsis;
}
.HvTooltip-popper {
  opacity: 1;
}
.HvTooltip-title {
  padding: 15px 20px;
  border-bottom: 3px solid #F0F0F0;
}
.HvTooltip-valuesContainer {
  padding: 20px;
}
.HvTooltip-values {
  display: flex;
  padding-bottom: 10px;
  justify-content: space-between;
}
.HvTooltip-values:last-child {
  padding-bottom: 0;
}
.HvTooltip-color {
  width: 10px;
  height: 15px;
}
.HvTooltip-separator {
  width: 10px;
}
.HvTooltip-separatorColor {
  width: 5px;
}
.HvTooltip-valueWrapper {
  padding: 20px;
}

                      </style>
                      <style
                        data-emotion="css"
                        data-s=""
                      >
                        
                        .css-1433tg5-MuiTooltip-popper{z-index:1500;pointer-events:none;}
                      </style>
                      <style
                        data-emotion="css"
                        data-s=""
                      >
                        
                        .css-179vq5o-MuiPopper-root-MuiTooltip-popper{z-index:1500;pointer-events:none;}
                      </style>
                    </head>,
                    "ctr": 2,
                    "insertionPoint": undefined,
                    "isSpeedy": false,
                    "key": "css",
                    "nonce": undefined,
                    "prepend": undefined,
                    "tags": Array [
                      <style
                        data-emotion="css"
                        data-s=""
                      >
                        
                        .css-1433tg5-MuiTooltip-popper{z-index:1500;pointer-events:none;}
                      </style>,
                      <style
                        data-emotion="css"
                        data-s=""
                      >
                        
                        .css-179vq5o-MuiPopper-root-MuiTooltip-popper{z-index:1500;pointer-events:none;}
                      </style>,
                    ],
                  },
                }
              }
              isStringTag={false}
              serialized={
                Object {
                  "map": undefined,
                  "name": "179vq5o-MuiPopper-root-MuiTooltip-popper",
                  "next": undefined,
                  "styles": "label:MuiPopper-root;label:MuiTooltip-popper;z-index:1500;pointer-events:none;;",
                  "toString": [Function],
                }
              }
            />
            <ForwardRef(PopperUnstyled)
              anchorEl={
                <button
                  class=""
                  data-mui-internal-clone-element="true"
                  id="testChild"
                  type="submit"
                >
                  Hello World
                </button>
              }
              className="HvTooltip-popper MuiTooltip-popper MuiTooltip-popperInteractive css-179vq5o-MuiPopper-root-MuiTooltip-popper"
              direction="ltr"
              id="mui-2"
              onBlur={[Function]}
              onFocus={[Function]}
              onMouseLeave={[Function]}
              onMouseOver={[Function]}
              open={false}
              placement="top"
              popperOptions={
                Object {
                  "modifiers": Array [
                    Object {
                      "enabled": false,
                      "name": "arrow",
                      "options": Object {
                        "element": null,
                        "padding": 4,
                      },
                    },
                  ],
                }
              }
              popperRef={
                Object {
                  "current": undefined,
                }
              }
              transition={true}
            />
          </MuiPopperRoot>
        </ForwardRef(Popper)>
      </MuiTooltipPopper>
    </ForwardRef(Tooltip)>
  </ForwardRef>
</WithStyles(ForwardRef)>
`;
