// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[v3] <VerticalNavigation /> [v3] collapsable closed vertical navigation should render correctly 1`] = `
<WithStyles(VerticalNavigation)
  id="sample3"
  isCollapsable={true}
>
  <VerticalNavigation
    classes={
      Object {
        "noCollapse": "HvVerticalNavigation-noCollapse",
        "root": "HvVerticalNavigation-root",
      }
    }
    id="sample3"
    isCollapsable={true}
  >
    <WithStyles(VerticalContainer)
      closeOnExit={false}
      id="sample3-container"
      isAnchorBarVisible={true}
      isOpen={false}
      position="static"
    >
      <VerticalContainer
        classes={
          Object {
            "absolute": "HvVerticalNavigationVerticalContainer-absolute",
            "anchorBar": "HvVerticalNavigationVerticalContainer-anchorBar",
            "button": "HvVerticalNavigationVerticalContainer-button",
            "contentContainer": "HvVerticalNavigationVerticalContainer-contentContainer",
            "fixed": "HvVerticalNavigationVerticalContainer-fixed",
            "relative": "HvVerticalNavigationVerticalContainer-relative",
            "root": "HvVerticalNavigationVerticalContainer-root",
            "separator": "HvVerticalNavigationVerticalContainer-separator",
            "static": "HvVerticalNavigationVerticalContainer-static",
            "verticalContainer": "HvVerticalNavigationVerticalContainer-verticalContainer",
            "withAnchorBar": "HvVerticalNavigationVerticalContainer-withAnchorBar",
          }
        }
        closeOnExit={false}
        id="sample3-container"
        isAnchorBarVisible={true}
        isOpen={false}
        position="static"
      >
        <div
          className="HvVerticalNavigationVerticalContainer-root HvVerticalNavigationVerticalContainer-withAnchorBar HvVerticalNavigationVerticalContainer-static"
        >
          <ForwardRef(ClickAwayListener)
            onClickAway={[Function]}
          >
            <div
              className="HvVerticalNavigationVerticalContainer-verticalContainer"
              id="sample3-container"
            >
              <div
                className="HvVerticalNavigationVerticalContainer-anchorBar"
                id="sample3-container-anchor-bar"
              >
                <WithStyles(HvButton)
                  aria-label="open"
                  buttonRef={
                    Object {
                      "current": <button
                        aria-label="open"
                        class="MuiButtonBase-root MuiButton-root HvButton-root MuiButton-text HvVerticalNavigationVerticalContainer-button HvButton-icon HvButton-ghostSVG MuiButton-textPrimary HvButton-ghost"
                        id="sample3-container-hamburger-button"
                        tabindex="0"
                        type="button"
                      >
                        <span
                          class="MuiButton-label"
                        >
                          <div
                            class="HvIconBase-root HvIconBase-s"
                            name="Menu"
                          >
                            <svg
                              focusable="false"
                              height="16"
                              viewBox="0 0 16 16"
                              width="16"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M0 7.4h16v1H0zM0 3h16V2H0zm0 11h16v-1H0z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                        </span>
                      </button>,
                    }
                  }
                  className="HvVerticalNavigationVerticalContainer-button"
                  icon={true}
                  id="sample3-container-hamburger-button"
                  onClick={[Function]}
                >
                  <HvButton
                    aria-label="open"
                    buttonRef={
                      Object {
                        "current": <button
                          aria-label="open"
                          class="MuiButtonBase-root MuiButton-root HvButton-root MuiButton-text HvVerticalNavigationVerticalContainer-button HvButton-icon HvButton-ghostSVG MuiButton-textPrimary HvButton-ghost"
                          id="sample3-container-hamburger-button"
                          tabindex="0"
                          type="button"
                        >
                          <span
                            class="MuiButton-label"
                          >
                            <div
                              class="HvIconBase-root HvIconBase-s"
                              name="Menu"
                            >
                              <svg
                                focusable="false"
                                height="16"
                                viewBox="0 0 16 16"
                                width="16"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M0 7.4h16v1H0zM0 3h16V2H0zm0 11h16v-1H0z"
                                  fill="#414141"
                                />
                              </svg>
                            </div>
                          </span>
                        </button>,
                      }
                    }
                    className="HvVerticalNavigationVerticalContainer-button"
                    classes={
                      Object {
                        "focusVisible": "HvButton-focusVisible",
                        "ghost": "HvButton-ghost",
                        "ghostDisabled": "HvButton-ghostDisabled",
                        "ghostSVG": "HvButton-ghostSVG",
                        "icon": "HvButton-icon",
                        "iconSVG": "HvButton-iconSVG",
                        "primary": "HvButton-primary",
                        "primaryDisabled": "HvButton-primaryDisabled",
                        "primarySVG": "HvButton-primarySVG",
                        "root": "HvButton-root",
                        "secondary": "HvButton-secondary",
                        "secondaryDisabled": "HvButton-secondaryDisabled",
                        "secondarySVG": "HvButton-secondarySVG",
                        "semantic": "HvButton-semantic",
                        "semanticDisabled": "HvButton-semanticDisabled",
                        "semanticSVG": "HvButton-semanticSVG",
                        "startIcon": "HvButton-startIcon",
                      }
                    }
                    icon={true}
                    id="sample3-container-hamburger-button"
                    onClick={[Function]}
                  >
                    <WithStyles(ForwardRef(Button))
                      aria-label="open"
                      buttonRef={
                        Object {
                          "current": <button
                            aria-label="open"
                            class="MuiButtonBase-root MuiButton-root HvButton-root MuiButton-text HvVerticalNavigationVerticalContainer-button HvButton-icon HvButton-ghostSVG MuiButton-textPrimary HvButton-ghost"
                            id="sample3-container-hamburger-button"
                            tabindex="0"
                            type="button"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              <div
                                class="HvIconBase-root HvIconBase-s"
                                name="Menu"
                              >
                                <svg
                                  focusable="false"
                                  height="16"
                                  viewBox="0 0 16 16"
                                  width="16"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M0 7.4h16v1H0zM0 3h16V2H0zm0 11h16v-1H0z"
                                    fill="#414141"
                                  />
                                </svg>
                              </div>
                            </span>
                          </button>,
                        }
                      }
                      className="HvVerticalNavigationVerticalContainer-button HvButton-icon HvButton-ghostSVG"
                      classes={
                        Object {
                          "containedPrimary": "HvButton-primary",
                          "disabled": "HvButton-ghostDisabled",
                          "outlinedPrimary": "HvButton-secondary",
                          "root": "HvButton-root",
                          "startIcon": "HvButton-startIcon",
                          "textPrimary": "HvButton-ghost",
                        }
                      }
                      color="primary"
                      disableRipple={true}
                      focusVisibleClassName="HvButton-focusVisible"
                      id="sample3-container-hamburger-button"
                      onClick={[Function]}
                      variant="text"
                    >
                      <ForwardRef(Button)
                        aria-label="open"
                        buttonRef={
                          Object {
                            "current": <button
                              aria-label="open"
                              class="MuiButtonBase-root MuiButton-root HvButton-root MuiButton-text HvVerticalNavigationVerticalContainer-button HvButton-icon HvButton-ghostSVG MuiButton-textPrimary HvButton-ghost"
                              id="sample3-container-hamburger-button"
                              tabindex="0"
                              type="button"
                            >
                              <span
                                class="MuiButton-label"
                              >
                                <div
                                  class="HvIconBase-root HvIconBase-s"
                                  name="Menu"
                                >
                                  <svg
                                    focusable="false"
                                    height="16"
                                    viewBox="0 0 16 16"
                                    width="16"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M0 7.4h16v1H0zM0 3h16V2H0zm0 11h16v-1H0z"
                                      fill="#414141"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </button>,
                          }
                        }
                        className="HvVerticalNavigationVerticalContainer-button HvButton-icon HvButton-ghostSVG"
                        classes={
                          Object {
                            "colorInherit": "MuiButton-colorInherit",
                            "contained": "MuiButton-contained",
                            "containedPrimary": "MuiButton-containedPrimary HvButton-primary",
                            "containedSecondary": "MuiButton-containedSecondary",
                            "containedSizeLarge": "MuiButton-containedSizeLarge",
                            "containedSizeSmall": "MuiButton-containedSizeSmall",
                            "disableElevation": "MuiButton-disableElevation",
                            "disabled": "Mui-disabled HvButton-ghostDisabled",
                            "endIcon": "MuiButton-endIcon",
                            "focusVisible": "Mui-focusVisible",
                            "fullWidth": "MuiButton-fullWidth",
                            "iconSizeLarge": "MuiButton-iconSizeLarge",
                            "iconSizeMedium": "MuiButton-iconSizeMedium",
                            "iconSizeSmall": "MuiButton-iconSizeSmall",
                            "label": "MuiButton-label",
                            "outlined": "MuiButton-outlined",
                            "outlinedPrimary": "MuiButton-outlinedPrimary HvButton-secondary",
                            "outlinedSecondary": "MuiButton-outlinedSecondary",
                            "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                            "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                            "root": "MuiButton-root HvButton-root",
                            "sizeLarge": "MuiButton-sizeLarge",
                            "sizeSmall": "MuiButton-sizeSmall",
                            "startIcon": "MuiButton-startIcon HvButton-startIcon",
                            "text": "MuiButton-text",
                            "textPrimary": "MuiButton-textPrimary HvButton-ghost",
                            "textSecondary": "MuiButton-textSecondary",
                            "textSizeLarge": "MuiButton-textSizeLarge",
                            "textSizeSmall": "MuiButton-textSizeSmall",
                          }
                        }
                        color="primary"
                        disableRipple={true}
                        focusVisibleClassName="HvButton-focusVisible"
                        id="sample3-container-hamburger-button"
                        onClick={[Function]}
                        variant="text"
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          aria-label="open"
                          buttonRef={
                            Object {
                              "current": <button
                                aria-label="open"
                                class="MuiButtonBase-root MuiButton-root HvButton-root MuiButton-text HvVerticalNavigationVerticalContainer-button HvButton-icon HvButton-ghostSVG MuiButton-textPrimary HvButton-ghost"
                                id="sample3-container-hamburger-button"
                                tabindex="0"
                                type="button"
                              >
                                <span
                                  class="MuiButton-label"
                                >
                                  <div
                                    class="HvIconBase-root HvIconBase-s"
                                    name="Menu"
                                  >
                                    <svg
                                      focusable="false"
                                      height="16"
                                      viewBox="0 0 16 16"
                                      width="16"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        class="color0"
                                        d="M0 7.4h16v1H0zM0 3h16V2H0zm0 11h16v-1H0z"
                                        fill="#414141"
                                      />
                                    </svg>
                                  </div>
                                </span>
                              </button>,
                            }
                          }
                          className="MuiButton-root HvButton-root MuiButton-text HvVerticalNavigationVerticalContainer-button HvButton-icon HvButton-ghostSVG MuiButton-textPrimary HvButton-ghost"
                          component="button"
                          disableRipple={true}
                          disabled={false}
                          focusRipple={true}
                          focusVisibleClassName="Mui-focusVisible HvButton-focusVisible"
                          id="sample3-container-hamburger-button"
                          onClick={[Function]}
                          type="button"
                        >
                          <ForwardRef(ButtonBase)
                            aria-label="open"
                            buttonRef={
                              Object {
                                "current": <button
                                  aria-label="open"
                                  class="MuiButtonBase-root MuiButton-root HvButton-root MuiButton-text HvVerticalNavigationVerticalContainer-button HvButton-icon HvButton-ghostSVG MuiButton-textPrimary HvButton-ghost"
                                  id="sample3-container-hamburger-button"
                                  tabindex="0"
                                  type="button"
                                >
                                  <span
                                    class="MuiButton-label"
                                  >
                                    <div
                                      class="HvIconBase-root HvIconBase-s"
                                      name="Menu"
                                    >
                                      <svg
                                        focusable="false"
                                        height="16"
                                        viewBox="0 0 16 16"
                                        width="16"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          class="color0"
                                          d="M0 7.4h16v1H0zM0 3h16V2H0zm0 11h16v-1H0z"
                                          fill="#414141"
                                        />
                                      </svg>
                                    </div>
                                  </span>
                                </button>,
                              }
                            }
                            className="MuiButton-root HvButton-root MuiButton-text HvVerticalNavigationVerticalContainer-button HvButton-icon HvButton-ghostSVG MuiButton-textPrimary HvButton-ghost"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="button"
                            disableRipple={true}
                            disabled={false}
                            focusRipple={true}
                            focusVisibleClassName="Mui-focusVisible HvButton-focusVisible"
                            id="sample3-container-hamburger-button"
                            onClick={[Function]}
                            type="button"
                          >
                            <button
                              aria-label="open"
                              className="MuiButtonBase-root MuiButton-root HvButton-root MuiButton-text HvVerticalNavigationVerticalContainer-button HvButton-icon HvButton-ghostSVG MuiButton-textPrimary HvButton-ghost"
                              disabled={false}
                              id="sample3-container-hamburger-button"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              tabIndex={0}
                              type="button"
                            >
                              <span
                                className="MuiButton-label"
                              >
                                <Menu>
                                  <WithStyles(HvIconBase)
                                    iconSize="S"
                                    name="Menu"
                                  >
                                    <HvIconBase
                                      classes={
                                        Object {
                                          "l": "HvIconBase-l",
                                          "m": "HvIconBase-m",
                                          "root": "HvIconBase-root",
                                          "s": "HvIconBase-s",
                                          "xs": "HvIconBase-xs",
                                        }
                                      }
                                      iconSize="S"
                                      name="Menu"
                                    >
                                      <div
                                        className="HvIconBase-root HvIconBase-s"
                                        name="Menu"
                                      >
                                        <svg
                                          focusable={false}
                                          height={16}
                                          viewBox="0 0 16 16"
                                          width={16}
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            className="color0"
                                            d="M0 7.4h16v1H0zM0 3h16V2H0zm0 11h16v-1H0z"
                                            fill="#414141"
                                          />
                                        </svg>
                                      </div>
                                    </HvIconBase>
                                  </WithStyles(HvIconBase)>
                                </Menu>
                              </span>
                            </button>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(Button)>
                    </WithStyles(ForwardRef(Button))>
                  </HvButton>
                </WithStyles(HvButton)>
              </div>
            </div>
          </ForwardRef(ClickAwayListener)>
        </div>
      </VerticalContainer>
    </WithStyles(VerticalContainer)>
  </VerticalNavigation>
</WithStyles(VerticalNavigation)>
`;

exports[`[v3] <VerticalNavigation /> [v3] collapsable open vertical navigation should render correctly 1`] = `
<WithStyles(VerticalNavigation)
  id="sample3"
  isCollapsable={true}
>
  <VerticalNavigation
    classes={
      Object {
        "noCollapse": "HvVerticalNavigation-noCollapse",
        "root": "HvVerticalNavigation-root",
      }
    }
    id="sample3"
    isCollapsable={true}
  >
    <WithStyles(VerticalContainer)
      closeOnExit={false}
      id="sample3-container"
      isAnchorBarVisible={true}
      isOpen={false}
      position="static"
    >
      <VerticalContainer
        classes={
          Object {
            "absolute": "HvVerticalNavigationVerticalContainer-absolute",
            "anchorBar": "HvVerticalNavigationVerticalContainer-anchorBar",
            "button": "HvVerticalNavigationVerticalContainer-button",
            "contentContainer": "HvVerticalNavigationVerticalContainer-contentContainer",
            "fixed": "HvVerticalNavigationVerticalContainer-fixed",
            "relative": "HvVerticalNavigationVerticalContainer-relative",
            "root": "HvVerticalNavigationVerticalContainer-root",
            "separator": "HvVerticalNavigationVerticalContainer-separator",
            "static": "HvVerticalNavigationVerticalContainer-static",
            "verticalContainer": "HvVerticalNavigationVerticalContainer-verticalContainer",
            "withAnchorBar": "HvVerticalNavigationVerticalContainer-withAnchorBar",
          }
        }
        closeOnExit={false}
        id="sample3-container"
        isAnchorBarVisible={true}
        isOpen={false}
        position="static"
      >
        <div
          className="HvVerticalNavigationVerticalContainer-root HvVerticalNavigationVerticalContainer-withAnchorBar HvVerticalNavigationVerticalContainer-static"
        >
          <ForwardRef(ClickAwayListener)
            onClickAway={[Function]}
          >
            <div
              className="HvVerticalNavigationVerticalContainer-verticalContainer"
              id="sample3-container"
            >
              <div
                className="HvVerticalNavigationVerticalContainer-anchorBar"
                id="sample3-container-anchor-bar"
              >
                <WithStyles(HvButton)
                  aria-label="open"
                  buttonRef={
                    Object {
                      "current": <button
                        aria-label="open"
                        class="MuiButtonBase-root MuiButton-root HvButton-root MuiButton-text HvVerticalNavigationVerticalContainer-button HvButton-icon HvButton-ghostSVG MuiButton-textPrimary HvButton-ghost"
                        id="sample3-container-hamburger-button"
                        tabindex="0"
                        type="button"
                      >
                        <span
                          class="MuiButton-label"
                        >
                          <div
                            class="HvIconBase-root HvIconBase-s"
                            name="Menu"
                          >
                            <svg
                              focusable="false"
                              height="16"
                              viewBox="0 0 16 16"
                              width="16"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M0 7.4h16v1H0zM0 3h16V2H0zm0 11h16v-1H0z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                        </span>
                      </button>,
                    }
                  }
                  className="HvVerticalNavigationVerticalContainer-button"
                  icon={true}
                  id="sample3-container-hamburger-button"
                  onClick={[Function]}
                >
                  <HvButton
                    aria-label="open"
                    buttonRef={
                      Object {
                        "current": <button
                          aria-label="open"
                          class="MuiButtonBase-root MuiButton-root HvButton-root MuiButton-text HvVerticalNavigationVerticalContainer-button HvButton-icon HvButton-ghostSVG MuiButton-textPrimary HvButton-ghost"
                          id="sample3-container-hamburger-button"
                          tabindex="0"
                          type="button"
                        >
                          <span
                            class="MuiButton-label"
                          >
                            <div
                              class="HvIconBase-root HvIconBase-s"
                              name="Menu"
                            >
                              <svg
                                focusable="false"
                                height="16"
                                viewBox="0 0 16 16"
                                width="16"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M0 7.4h16v1H0zM0 3h16V2H0zm0 11h16v-1H0z"
                                  fill="#414141"
                                />
                              </svg>
                            </div>
                          </span>
                        </button>,
                      }
                    }
                    className="HvVerticalNavigationVerticalContainer-button"
                    classes={
                      Object {
                        "focusVisible": "HvButton-focusVisible",
                        "ghost": "HvButton-ghost",
                        "ghostDisabled": "HvButton-ghostDisabled",
                        "ghostSVG": "HvButton-ghostSVG",
                        "icon": "HvButton-icon",
                        "iconSVG": "HvButton-iconSVG",
                        "primary": "HvButton-primary",
                        "primaryDisabled": "HvButton-primaryDisabled",
                        "primarySVG": "HvButton-primarySVG",
                        "root": "HvButton-root",
                        "secondary": "HvButton-secondary",
                        "secondaryDisabled": "HvButton-secondaryDisabled",
                        "secondarySVG": "HvButton-secondarySVG",
                        "semantic": "HvButton-semantic",
                        "semanticDisabled": "HvButton-semanticDisabled",
                        "semanticSVG": "HvButton-semanticSVG",
                        "startIcon": "HvButton-startIcon",
                      }
                    }
                    icon={true}
                    id="sample3-container-hamburger-button"
                    onClick={[Function]}
                  >
                    <WithStyles(ForwardRef(Button))
                      aria-label="open"
                      buttonRef={
                        Object {
                          "current": <button
                            aria-label="open"
                            class="MuiButtonBase-root MuiButton-root HvButton-root MuiButton-text HvVerticalNavigationVerticalContainer-button HvButton-icon HvButton-ghostSVG MuiButton-textPrimary HvButton-ghost"
                            id="sample3-container-hamburger-button"
                            tabindex="0"
                            type="button"
                          >
                            <span
                              class="MuiButton-label"
                            >
                              <div
                                class="HvIconBase-root HvIconBase-s"
                                name="Menu"
                              >
                                <svg
                                  focusable="false"
                                  height="16"
                                  viewBox="0 0 16 16"
                                  width="16"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M0 7.4h16v1H0zM0 3h16V2H0zm0 11h16v-1H0z"
                                    fill="#414141"
                                  />
                                </svg>
                              </div>
                            </span>
                          </button>,
                        }
                      }
                      className="HvVerticalNavigationVerticalContainer-button HvButton-icon HvButton-ghostSVG"
                      classes={
                        Object {
                          "containedPrimary": "HvButton-primary",
                          "disabled": "HvButton-ghostDisabled",
                          "outlinedPrimary": "HvButton-secondary",
                          "root": "HvButton-root",
                          "startIcon": "HvButton-startIcon",
                          "textPrimary": "HvButton-ghost",
                        }
                      }
                      color="primary"
                      disableRipple={true}
                      focusVisibleClassName="HvButton-focusVisible"
                      id="sample3-container-hamburger-button"
                      onClick={[Function]}
                      variant="text"
                    >
                      <ForwardRef(Button)
                        aria-label="open"
                        buttonRef={
                          Object {
                            "current": <button
                              aria-label="open"
                              class="MuiButtonBase-root MuiButton-root HvButton-root MuiButton-text HvVerticalNavigationVerticalContainer-button HvButton-icon HvButton-ghostSVG MuiButton-textPrimary HvButton-ghost"
                              id="sample3-container-hamburger-button"
                              tabindex="0"
                              type="button"
                            >
                              <span
                                class="MuiButton-label"
                              >
                                <div
                                  class="HvIconBase-root HvIconBase-s"
                                  name="Menu"
                                >
                                  <svg
                                    focusable="false"
                                    height="16"
                                    viewBox="0 0 16 16"
                                    width="16"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M0 7.4h16v1H0zM0 3h16V2H0zm0 11h16v-1H0z"
                                      fill="#414141"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </button>,
                          }
                        }
                        className="HvVerticalNavigationVerticalContainer-button HvButton-icon HvButton-ghostSVG"
                        classes={
                          Object {
                            "colorInherit": "MuiButton-colorInherit",
                            "contained": "MuiButton-contained",
                            "containedPrimary": "MuiButton-containedPrimary HvButton-primary",
                            "containedSecondary": "MuiButton-containedSecondary",
                            "containedSizeLarge": "MuiButton-containedSizeLarge",
                            "containedSizeSmall": "MuiButton-containedSizeSmall",
                            "disableElevation": "MuiButton-disableElevation",
                            "disabled": "Mui-disabled HvButton-ghostDisabled",
                            "endIcon": "MuiButton-endIcon",
                            "focusVisible": "Mui-focusVisible",
                            "fullWidth": "MuiButton-fullWidth",
                            "iconSizeLarge": "MuiButton-iconSizeLarge",
                            "iconSizeMedium": "MuiButton-iconSizeMedium",
                            "iconSizeSmall": "MuiButton-iconSizeSmall",
                            "label": "MuiButton-label",
                            "outlined": "MuiButton-outlined",
                            "outlinedPrimary": "MuiButton-outlinedPrimary HvButton-secondary",
                            "outlinedSecondary": "MuiButton-outlinedSecondary",
                            "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                            "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                            "root": "MuiButton-root HvButton-root",
                            "sizeLarge": "MuiButton-sizeLarge",
                            "sizeSmall": "MuiButton-sizeSmall",
                            "startIcon": "MuiButton-startIcon HvButton-startIcon",
                            "text": "MuiButton-text",
                            "textPrimary": "MuiButton-textPrimary HvButton-ghost",
                            "textSecondary": "MuiButton-textSecondary",
                            "textSizeLarge": "MuiButton-textSizeLarge",
                            "textSizeSmall": "MuiButton-textSizeSmall",
                          }
                        }
                        color="primary"
                        disableRipple={true}
                        focusVisibleClassName="HvButton-focusVisible"
                        id="sample3-container-hamburger-button"
                        onClick={[Function]}
                        variant="text"
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          aria-label="open"
                          buttonRef={
                            Object {
                              "current": <button
                                aria-label="open"
                                class="MuiButtonBase-root MuiButton-root HvButton-root MuiButton-text HvVerticalNavigationVerticalContainer-button HvButton-icon HvButton-ghostSVG MuiButton-textPrimary HvButton-ghost"
                                id="sample3-container-hamburger-button"
                                tabindex="0"
                                type="button"
                              >
                                <span
                                  class="MuiButton-label"
                                >
                                  <div
                                    class="HvIconBase-root HvIconBase-s"
                                    name="Menu"
                                  >
                                    <svg
                                      focusable="false"
                                      height="16"
                                      viewBox="0 0 16 16"
                                      width="16"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        class="color0"
                                        d="M0 7.4h16v1H0zM0 3h16V2H0zm0 11h16v-1H0z"
                                        fill="#414141"
                                      />
                                    </svg>
                                  </div>
                                </span>
                              </button>,
                            }
                          }
                          className="MuiButton-root HvButton-root MuiButton-text HvVerticalNavigationVerticalContainer-button HvButton-icon HvButton-ghostSVG MuiButton-textPrimary HvButton-ghost"
                          component="button"
                          disableRipple={true}
                          disabled={false}
                          focusRipple={true}
                          focusVisibleClassName="Mui-focusVisible HvButton-focusVisible"
                          id="sample3-container-hamburger-button"
                          onClick={[Function]}
                          type="button"
                        >
                          <ForwardRef(ButtonBase)
                            aria-label="open"
                            buttonRef={
                              Object {
                                "current": <button
                                  aria-label="open"
                                  class="MuiButtonBase-root MuiButton-root HvButton-root MuiButton-text HvVerticalNavigationVerticalContainer-button HvButton-icon HvButton-ghostSVG MuiButton-textPrimary HvButton-ghost"
                                  id="sample3-container-hamburger-button"
                                  tabindex="0"
                                  type="button"
                                >
                                  <span
                                    class="MuiButton-label"
                                  >
                                    <div
                                      class="HvIconBase-root HvIconBase-s"
                                      name="Menu"
                                    >
                                      <svg
                                        focusable="false"
                                        height="16"
                                        viewBox="0 0 16 16"
                                        width="16"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          class="color0"
                                          d="M0 7.4h16v1H0zM0 3h16V2H0zm0 11h16v-1H0z"
                                          fill="#414141"
                                        />
                                      </svg>
                                    </div>
                                  </span>
                                </button>,
                              }
                            }
                            className="MuiButton-root HvButton-root MuiButton-text HvVerticalNavigationVerticalContainer-button HvButton-icon HvButton-ghostSVG MuiButton-textPrimary HvButton-ghost"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="button"
                            disableRipple={true}
                            disabled={false}
                            focusRipple={true}
                            focusVisibleClassName="Mui-focusVisible HvButton-focusVisible"
                            id="sample3-container-hamburger-button"
                            onClick={[Function]}
                            type="button"
                          >
                            <button
                              aria-label="open"
                              className="MuiButtonBase-root MuiButton-root HvButton-root MuiButton-text HvVerticalNavigationVerticalContainer-button HvButton-icon HvButton-ghostSVG MuiButton-textPrimary HvButton-ghost"
                              disabled={false}
                              id="sample3-container-hamburger-button"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              tabIndex={0}
                              type="button"
                            >
                              <span
                                className="MuiButton-label"
                              >
                                <Menu>
                                  <WithStyles(HvIconBase)
                                    iconSize="S"
                                    name="Menu"
                                  >
                                    <HvIconBase
                                      classes={
                                        Object {
                                          "l": "HvIconBase-l",
                                          "m": "HvIconBase-m",
                                          "root": "HvIconBase-root",
                                          "s": "HvIconBase-s",
                                          "xs": "HvIconBase-xs",
                                        }
                                      }
                                      iconSize="S"
                                      name="Menu"
                                    >
                                      <div
                                        className="HvIconBase-root HvIconBase-s"
                                        name="Menu"
                                      >
                                        <svg
                                          focusable={false}
                                          height={16}
                                          viewBox="0 0 16 16"
                                          width={16}
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            className="color0"
                                            d="M0 7.4h16v1H0zM0 3h16V2H0zm0 11h16v-1H0z"
                                            fill="#414141"
                                          />
                                        </svg>
                                      </div>
                                    </HvIconBase>
                                  </WithStyles(HvIconBase)>
                                </Menu>
                              </span>
                            </button>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(Button)>
                    </WithStyles(ForwardRef(Button))>
                  </HvButton>
                </WithStyles(HvButton)>
              </div>
            </div>
          </ForwardRef(ClickAwayListener)>
        </div>
      </VerticalContainer>
    </WithStyles(VerticalContainer)>
  </VerticalNavigation>
</WithStyles(VerticalNavigation)>
`;

exports[`[v3] <VerticalNavigation /> [v3] non-collapsable open vertical navigation should render correctly 1`] = `
<WithStyles(VerticalNavigation)
  isCollapsable={false}
  isOpen={true}
  position="fixed"
  toggleOpenCallback={[MockFunction]}
>
  <VerticalNavigation
    classes={
      Object {
        "noCollapse": "HvVerticalNavigation-noCollapse",
        "root": "HvVerticalNavigation-root",
      }
    }
    isCollapsable={false}
    isOpen={true}
    position="fixed"
    toggleOpenCallback={[MockFunction]}
  >
    <WithStyles(VerticalContainer)
      closeOnExit={false}
      isAnchorBarVisible={false}
      isOpen={true}
      position="fixed"
      toggleOpenCallback={[MockFunction]}
    >
      <VerticalContainer
        classes={
          Object {
            "absolute": "HvVerticalNavigationVerticalContainer-absolute",
            "anchorBar": "HvVerticalNavigationVerticalContainer-anchorBar",
            "button": "HvVerticalNavigationVerticalContainer-button",
            "contentContainer": "HvVerticalNavigationVerticalContainer-contentContainer",
            "fixed": "HvVerticalNavigationVerticalContainer-fixed",
            "relative": "HvVerticalNavigationVerticalContainer-relative",
            "root": "HvVerticalNavigationVerticalContainer-root",
            "separator": "HvVerticalNavigationVerticalContainer-separator",
            "static": "HvVerticalNavigationVerticalContainer-static",
            "verticalContainer": "HvVerticalNavigationVerticalContainer-verticalContainer",
            "withAnchorBar": "HvVerticalNavigationVerticalContainer-withAnchorBar",
          }
        }
        closeOnExit={false}
        isAnchorBarVisible={false}
        isOpen={true}
        position="fixed"
        toggleOpenCallback={[MockFunction]}
      >
        <div
          className="HvVerticalNavigationVerticalContainer-root HvVerticalNavigationVerticalContainer-fixed"
        >
          <ForwardRef(ClickAwayListener)
            onClickAway={[Function]}
          >
            <div
              className="HvVerticalNavigationVerticalContainer-verticalContainer"
            >
              <div
                className="HvVerticalNavigationVerticalContainer-contentContainer"
                onKeyDown={[Function]}
              >
                <div
                  className="HvVerticalNavigation-root"
                >
                  <div>
                    1
                  </div>
                  <div>
                    2
                  </div>
                </div>
              </div>
            </div>
          </ForwardRef(ClickAwayListener)>
        </div>
      </VerticalContainer>
    </WithStyles(VerticalContainer)>
  </VerticalNavigation>
</WithStyles(VerticalNavigation)>
`;

exports[`[v3] <VerticalNavigation /> [v3] non-collapsable open vertical navigation should render correctly 2`] = `
<WithStyles(VerticalNavigation)
  isCollapsable={false}
  isOpen={false}
  position="fixed"
  toggleOpenCallback={[MockFunction]}
>
  <VerticalNavigation
    classes={
      Object {
        "noCollapse": "HvVerticalNavigation-noCollapse",
        "root": "HvVerticalNavigation-root",
      }
    }
    isCollapsable={false}
    isOpen={false}
    position="fixed"
    toggleOpenCallback={[MockFunction]}
  >
    <WithStyles(VerticalContainer)
      closeOnExit={false}
      isAnchorBarVisible={false}
      isOpen={false}
      position="fixed"
      toggleOpenCallback={[MockFunction]}
    >
      <VerticalContainer
        classes={
          Object {
            "absolute": "HvVerticalNavigationVerticalContainer-absolute",
            "anchorBar": "HvVerticalNavigationVerticalContainer-anchorBar",
            "button": "HvVerticalNavigationVerticalContainer-button",
            "contentContainer": "HvVerticalNavigationVerticalContainer-contentContainer",
            "fixed": "HvVerticalNavigationVerticalContainer-fixed",
            "relative": "HvVerticalNavigationVerticalContainer-relative",
            "root": "HvVerticalNavigationVerticalContainer-root",
            "separator": "HvVerticalNavigationVerticalContainer-separator",
            "static": "HvVerticalNavigationVerticalContainer-static",
            "verticalContainer": "HvVerticalNavigationVerticalContainer-verticalContainer",
            "withAnchorBar": "HvVerticalNavigationVerticalContainer-withAnchorBar",
          }
        }
        closeOnExit={false}
        isAnchorBarVisible={false}
        isOpen={false}
        position="fixed"
        toggleOpenCallback={[MockFunction]}
      >
        <div
          className="HvVerticalNavigationVerticalContainer-root HvVerticalNavigationVerticalContainer-fixed"
        >
          <ForwardRef(ClickAwayListener)
            onClickAway={[Function]}
          >
            <div
              className="HvVerticalNavigationVerticalContainer-verticalContainer"
            />
          </ForwardRef(ClickAwayListener)>
        </div>
      </VerticalContainer>
    </WithStyles(VerticalContainer)>
  </VerticalNavigation>
</WithStyles(VerticalNavigation)>
`;
