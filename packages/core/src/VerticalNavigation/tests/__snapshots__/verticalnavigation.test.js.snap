// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<VerticalNavigation /> collapsable closed vertical navigation should render correctly 1`] = `
<WithStyles(VerticalNavigation)
  id="sample1"
>
  <VerticalNavigation
    classes={
      Object {
        "legacyMode": "HvVerticalNavigation-legacyMode",
        "noCollapse": "HvVerticalNavigation-noCollapse",
        "root": "HvVerticalNavigation-root",
      }
    }
    id="sample1"
  >
    <div
      className="HvVerticalNavigation-root"
      id="sample1"
    >
      <WithStyles(Navigation)
        aria-label="Example 1 navigation"
        data={
          Array [
            Object {
              "id": "00",
              "label": "Overview",
            },
            Object {
              "id": "01",
              "label": "Analytics",
              "selectable": false,
            },
            Object {
              "data": Array [
                Object {
                  "data": Array [
                    Object {
                      "id": "02-01-01",
                      "label": "Servers",
                    },
                    Object {
                      "id": "02-01-02",
                      "label": "HCP Anywhere",
                    },
                    Object {
                      "disabled": true,
                      "id": "02-01-03",
                      "label": "This Computer",
                    },
                  ],
                  "id": "02-01",
                  "label": "Cloud",
                },
              ],
              "id": "02",
              "label": "Storage",
            },
            Object {
              "data": Array [
                Object {
                  "data": Array [
                    Object {
                      "id": "03-01-01",
                      "label": "Log Bundle",
                    },
                  ],
                  "id": "03-01",
                  "label": "Rest API",
                },
              ],
              "id": "03",
              "label": "Administration",
            },
          ]
        }
        onChange={[Function]}
        selected="00"
      >
        <Navigation
          aria-label="Example 1 navigation"
          classes={
            Object {
              "list": "HvVerticalNavigationNavigation-list",
              "listItem": "HvVerticalNavigationNavigation-listItem",
              "root": "HvVerticalNavigationNavigation-root",
            }
          }
          data={
            Array [
              Object {
                "id": "00",
                "label": "Overview",
              },
              Object {
                "id": "01",
                "label": "Analytics",
                "selectable": false,
              },
              Object {
                "data": Array [
                  Object {
                    "data": Array [
                      Object {
                        "id": "02-01-01",
                        "label": "Servers",
                      },
                      Object {
                        "id": "02-01-02",
                        "label": "HCP Anywhere",
                      },
                      Object {
                        "disabled": true,
                        "id": "02-01-03",
                        "label": "This Computer",
                      },
                    ],
                    "id": "02-01",
                    "label": "Cloud",
                  },
                ],
                "id": "02",
                "label": "Storage",
              },
              Object {
                "data": Array [
                  Object {
                    "data": Array [
                      Object {
                        "id": "03-01-01",
                        "label": "Log Bundle",
                      },
                    ],
                    "id": "03-01",
                    "label": "Rest API",
                  },
                ],
                "id": "03",
                "label": "Administration",
              },
            ]
          }
          onChange={[Function]}
          selected="00"
        >
          <nav
            aria-label="Example 1 navigation"
            className="HvVerticalNavigationNavigation-root"
          >
            <WithStyles(ForwardRef)
              className="HvVerticalNavigationNavigation-list"
              collapsible={false}
              expanded={Array []}
              mode="navigation"
              onChange={[Function]}
              onToggle={[Function]}
              selectable={true}
              selected="00"
            >
              <ForwardRef
                className="HvVerticalNavigationNavigation-list"
                classes={
                  Object {
                    "collapsed": "HvVerticalNavigationTreeView-collapsed",
                    "content": "HvVerticalNavigationTreeView-content",
                    "disabled": "HvVerticalNavigationTreeView-disabled",
                    "expandable": "HvVerticalNavigationTreeView-expandable",
                    "expanded": "HvVerticalNavigationTreeView-expanded",
                    "focused": "HvVerticalNavigationTreeView-focused",
                    "group": "HvVerticalNavigationTreeView-group",
                    "noIcon": "HvVerticalNavigationTreeView-noIcon",
                    "node": "HvVerticalNavigationTreeView-node",
                    "root": "HvVerticalNavigationTreeView-root",
                    "selectable": "HvVerticalNavigationTreeView-selectable",
                    "selected": "HvVerticalNavigationTreeView-selected",
                    "unselectable": "HvVerticalNavigationTreeView-unselectable",
                    "unselected": "HvVerticalNavigationTreeView-unselected",
                    "withIcon": "HvVerticalNavigationTreeView-withIcon",
                  }
                }
                collapsible={false}
                expanded={Array []}
                mode="navigation"
                onChange={[Function]}
                onToggle={[Function]}
                selectable={true}
                selected="00"
              >
                <DescendantProvider>
                  <ul
                    className="HvVerticalNavigationTreeView-root HvVerticalNavigationNavigation-list"
                  >
                    <WithStyles(ForwardRef)
                      className="HvVerticalNavigationNavigation-listItem"
                      key="00"
                      label={<Unknown />}
                      nodeId="00"
                      payload={
                        Object {
                          "id": "00",
                          "label": "Overview",
                        }
                      }
                    >
                      <ForwardRef
                        className="HvVerticalNavigationNavigation-listItem"
                        classes={
                          Object {
                            "collapsed": "HvVerticalNavigationTreeViewItem-collapsed",
                            "content": "HvVerticalNavigationTreeViewItem-content",
                            "disabled": "HvVerticalNavigationTreeViewItem-disabled",
                            "expandable": "HvVerticalNavigationTreeViewItem-expandable",
                            "expanded": "HvVerticalNavigationTreeViewItem-expanded",
                            "focused": "HvVerticalNavigationTreeViewItem-focused",
                            "group": "HvVerticalNavigationTreeViewItem-group",
                            "noIcon": "HvVerticalNavigationTreeViewItem-noIcon",
                            "node": "HvVerticalNavigationTreeViewItem-node",
                            "root": "HvVerticalNavigationTreeViewItem-root",
                            "selectable": "HvVerticalNavigationTreeViewItem-selectable",
                            "selected": "HvVerticalNavigationTreeViewItem-selected",
                            "unselectable": "HvVerticalNavigationTreeViewItem-unselectable",
                            "unselected": "HvVerticalNavigationTreeViewItem-unselected",
                            "withIcon": "HvVerticalNavigationTreeViewItem-withIcon",
                          }
                        }
                        label={<Unknown />}
                        nodeId="00"
                        payload={
                          Object {
                            "id": "00",
                            "label": "Overview",
                          }
                        }
                      >
                        <li
                          className="HvVerticalNavigationTreeViewItem-node HvVerticalNavigationNavigation-listItem HvVerticalNavigationTreeViewItem-selectable HvVerticalNavigationTreeViewItem-selected"
                          id="hvtreeview1-00"
                        >
                          <WithStyles(ForwardRef)
                            aria-current="page"
                            className="HvVerticalNavigationTreeViewItem-content"
                            component="div"
                            id="hvtreeview1-00-button"
                            innerRef={
                              Object {
                                "current": <div
                                  aria-current="page"
                                  class="HvVerticalNavigationTreeViewItem-content HvTypography-root HvTypography-normalText"
                                  id="hvtreeview1-00-button"
                                  role="button"
                                  style="padding-left: 10px;"
                                  tabindex="0"
                                >
                                  <div
                                    class=""
                                    style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;"
                                  >
                                    Overview
                                  </div>
                                </div>,
                              }
                            }
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            role="button"
                            style={
                              Object {
                                "paddingLeft": 10,
                              }
                            }
                            tabIndex={0}
                            variant="normalText"
                          >
                            <ForwardRef
                              aria-current="page"
                              className="HvVerticalNavigationTreeViewItem-content"
                              classes={
                                Object {
                                  "3xlTitle": "HvTypography-3xlTitle",
                                  "4xlTitle": "HvTypography-4xlTitle",
                                  "5xlTitle": "HvTypography-5xlTitle",
                                  "disabledText": "HvTypography-disabledText",
                                  "highlightText": "HvTypography-highlightText",
                                  "lTitle": "HvTypography-lTitle",
                                  "link": "HvTypography-link",
                                  "mTitle": "HvTypography-mTitle",
                                  "noWrap": "HvTypography-noWrap",
                                  "normalText": "HvTypography-normalText",
                                  "placeholderText": "HvTypography-placeholderText",
                                  "root": "HvTypography-root",
                                  "sTitle": "HvTypography-sTitle",
                                  "sectionTitle": "HvTypography-sectionTitle",
                                  "selectedNavText": "HvTypography-selectedNavText",
                                  "vizText": "HvTypography-vizText",
                                  "vizTextDisabled": "HvTypography-vizTextDisabled",
                                  "xlTitle": "HvTypography-xlTitle",
                                  "xsInlineLink": "HvTypography-xsInlineLink",
                                  "xsTitle": "HvTypography-xsTitle",
                                  "xxlTitle": "HvTypography-xxlTitle",
                                  "xxsTitle": "HvTypography-xxsTitle",
                                }
                              }
                              component="div"
                              id="hvtreeview1-00-button"
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              onMouseDown={[Function]}
                              role="button"
                              style={
                                Object {
                                  "paddingLeft": 10,
                                }
                              }
                              tabIndex={0}
                              variant="normalText"
                            >
                              <div
                                aria-current="page"
                                className="HvVerticalNavigationTreeViewItem-content HvTypography-root HvTypography-normalText"
                                id="hvtreeview1-00-button"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                onMouseDown={[Function]}
                                role="button"
                                style={
                                  Object {
                                    "paddingLeft": 10,
                                  }
                                }
                                tabIndex={0}
                              >
                                <Component>
                                  <WithStyles(ForwardRef)
                                    disableFocusListener={true}
                                    disableHoverListener={false}
                                    disableTouchListener={true}
                                    open={false}
                                    placement="top"
                                    style={
                                      Object {
                                        "overflow": "hidden",
                                        "textOverflow": "ellipsis",
                                        "whiteSpace": "nowrap",
                                      }
                                    }
                                    title={
                                      <WithStyles(ForwardRef)>
                                        Overview
                                      </WithStyles(ForwardRef)>
                                    }
                                  >
                                    <ForwardRef
                                      classes={
                                        Object {
                                          "color": "HvTooltip-color",
                                          "popper": "HvTooltip-popper",
                                          "root": "HvTooltip-root",
                                          "separator": "HvTooltip-separator",
                                          "separatorColor": "HvTooltip-separatorColor",
                                          "title": "HvTooltip-title",
                                          "tooltip": "HvTooltip-tooltip",
                                          "tooltipMulti": "HvTooltip-tooltipMulti",
                                          "valueWrapper": "HvTooltip-valueWrapper",
                                          "values": "HvTooltip-values",
                                          "valuesContainer": "HvTooltip-valuesContainer",
                                        }
                                      }
                                      disableFocusListener={true}
                                      disableHoverListener={false}
                                      disableTouchListener={true}
                                      open={false}
                                      placement="top"
                                      style={
                                        Object {
                                          "overflow": "hidden",
                                          "textOverflow": "ellipsis",
                                          "whiteSpace": "nowrap",
                                        }
                                      }
                                      title={
                                        <WithStyles(ForwardRef)>
                                          Overview
                                        </WithStyles(ForwardRef)>
                                      }
                                    >
                                      <WithStyles(ForwardRef(Tooltip))
                                        TransitionComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "propTypes": Object {
                                              "children": [Function],
                                              "disableStrictModeCompat": [Function],
                                              "in": [Function],
                                              "onEnter": [Function],
                                              "onEntered": [Function],
                                              "onEntering": [Function],
                                              "onExit": [Function],
                                              "onExited": [Function],
                                              "onExiting": [Function],
                                              "style": [Function],
                                              "timeout": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        TransitionProps={
                                          Object {
                                            "timeout": 400,
                                          }
                                        }
                                        classes={
                                          Object {
                                            "popper": "HvTooltip-popper",
                                            "tooltip": "HvTooltip-tooltip",
                                          }
                                        }
                                        disableFocusListener={true}
                                        disableHoverListener={false}
                                        disableTouchListener={true}
                                        enterDelay={300}
                                        open={false}
                                        placement="top"
                                        style={
                                          Object {
                                            "overflow": "hidden",
                                            "textOverflow": "ellipsis",
                                            "whiteSpace": "nowrap",
                                          }
                                        }
                                        title={
                                          <WithStyles(ForwardRef)>
                                            Overview
                                          </WithStyles(ForwardRef)>
                                        }
                                      >
                                        <ForwardRef(Tooltip)
                                          TransitionComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "propTypes": Object {
                                                "children": [Function],
                                                "disableStrictModeCompat": [Function],
                                                "in": [Function],
                                                "onEnter": [Function],
                                                "onEntered": [Function],
                                                "onEntering": [Function],
                                                "onExit": [Function],
                                                "onExited": [Function],
                                                "onExiting": [Function],
                                                "style": [Function],
                                                "timeout": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          TransitionProps={
                                            Object {
                                              "timeout": 400,
                                            }
                                          }
                                          classes={
                                            Object {
                                              "arrow": "MuiTooltip-arrow",
                                              "popper": "MuiTooltip-popper HvTooltip-popper",
                                              "popperArrow": "MuiTooltip-popperArrow",
                                              "popperInteractive": "MuiTooltip-popperInteractive",
                                              "tooltip": "MuiTooltip-tooltip HvTooltip-tooltip",
                                              "tooltipArrow": "MuiTooltip-tooltipArrow",
                                              "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                              "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                              "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                              "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                              "touch": "MuiTooltip-touch",
                                            }
                                          }
                                          disableFocusListener={true}
                                          disableHoverListener={false}
                                          disableTouchListener={true}
                                          enterDelay={300}
                                          open={false}
                                          placement="top"
                                          style={
                                            Object {
                                              "overflow": "hidden",
                                              "textOverflow": "ellipsis",
                                              "whiteSpace": "nowrap",
                                            }
                                          }
                                          title={
                                            <WithStyles(ForwardRef)>
                                              Overview
                                            </WithStyles(ForwardRef)>
                                          }
                                        >
                                          <div
                                            aria-describedby={null}
                                            className=""
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseOver={[Function]}
                                            onTouchStart={[Function]}
                                            style={
                                              Object {
                                                "overflow": "hidden",
                                                "textOverflow": "ellipsis",
                                                "whiteSpace": "nowrap",
                                              }
                                            }
                                            title={null}
                                          >
                                            <ComponentFunction>
                                              Overview
                                            </ComponentFunction>
                                          </div>
                                          <ForwardRef(Popper)
                                            anchorEl={
                                              <div
                                                class=""
                                                style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;"
                                              >
                                                Overview
                                              </div>
                                            }
                                            className="MuiTooltip-popper HvTooltip-popper"
                                            id={null}
                                            open={false}
                                            placement="top"
                                            popperOptions={
                                              Object {
                                                "modifiers": Object {
                                                  "arrow": Object {
                                                    "element": null,
                                                    "enabled": false,
                                                  },
                                                },
                                              }
                                            }
                                            transition={true}
                                          />
                                        </ForwardRef(Tooltip)>
                                      </WithStyles(ForwardRef(Tooltip))>
                                    </ForwardRef>
                                  </WithStyles(ForwardRef)>
                                </Component>
                              </div>
                            </ForwardRef>
                          </WithStyles(ForwardRef)>
                          <DescendantProvider
                            id="00"
                            level={1}
                          />
                        </li>
                      </ForwardRef>
                    </WithStyles(ForwardRef)>
                    <WithStyles(ForwardRef)
                      className="HvVerticalNavigationNavigation-listItem"
                      key="01"
                      label={<Unknown />}
                      nodeId="01"
                      payload={
                        Object {
                          "id": "01",
                          "label": "Analytics",
                          "selectable": false,
                        }
                      }
                      selectable={false}
                    >
                      <ForwardRef
                        className="HvVerticalNavigationNavigation-listItem"
                        classes={
                          Object {
                            "collapsed": "HvVerticalNavigationTreeViewItem-collapsed",
                            "content": "HvVerticalNavigationTreeViewItem-content",
                            "disabled": "HvVerticalNavigationTreeViewItem-disabled",
                            "expandable": "HvVerticalNavigationTreeViewItem-expandable",
                            "expanded": "HvVerticalNavigationTreeViewItem-expanded",
                            "focused": "HvVerticalNavigationTreeViewItem-focused",
                            "group": "HvVerticalNavigationTreeViewItem-group",
                            "noIcon": "HvVerticalNavigationTreeViewItem-noIcon",
                            "node": "HvVerticalNavigationTreeViewItem-node",
                            "root": "HvVerticalNavigationTreeViewItem-root",
                            "selectable": "HvVerticalNavigationTreeViewItem-selectable",
                            "selected": "HvVerticalNavigationTreeViewItem-selected",
                            "unselectable": "HvVerticalNavigationTreeViewItem-unselectable",
                            "unselected": "HvVerticalNavigationTreeViewItem-unselected",
                            "withIcon": "HvVerticalNavigationTreeViewItem-withIcon",
                          }
                        }
                        label={<Unknown />}
                        nodeId="01"
                        payload={
                          Object {
                            "id": "01",
                            "label": "Analytics",
                            "selectable": false,
                          }
                        }
                        selectable={false}
                      >
                        <li
                          className="HvVerticalNavigationTreeViewItem-node HvVerticalNavigationNavigation-listItem HvVerticalNavigationTreeViewItem-unselectable"
                          id="hvtreeview1-01"
                        >
                          <WithStyles(ForwardRef)
                            className="HvVerticalNavigationTreeViewItem-content"
                            component="div"
                            id="hvtreeview1-01-button"
                            innerRef={
                              Object {
                                "current": <div
                                  class="HvVerticalNavigationTreeViewItem-content HvTypography-root HvTypography-normalText"
                                  id="hvtreeview1-01-button"
                                  role="button"
                                  style="padding-left: 10px;"
                                  tabindex="-1"
                                >
                                  <div
                                    class=""
                                    style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;"
                                  >
                                    Analytics
                                  </div>
                                </div>,
                              }
                            }
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            role="button"
                            style={
                              Object {
                                "paddingLeft": 10,
                              }
                            }
                            tabIndex={-1}
                            variant="normalText"
                          >
                            <ForwardRef
                              className="HvVerticalNavigationTreeViewItem-content"
                              classes={
                                Object {
                                  "3xlTitle": "HvTypography-3xlTitle",
                                  "4xlTitle": "HvTypography-4xlTitle",
                                  "5xlTitle": "HvTypography-5xlTitle",
                                  "disabledText": "HvTypography-disabledText",
                                  "highlightText": "HvTypography-highlightText",
                                  "lTitle": "HvTypography-lTitle",
                                  "link": "HvTypography-link",
                                  "mTitle": "HvTypography-mTitle",
                                  "noWrap": "HvTypography-noWrap",
                                  "normalText": "HvTypography-normalText",
                                  "placeholderText": "HvTypography-placeholderText",
                                  "root": "HvTypography-root",
                                  "sTitle": "HvTypography-sTitle",
                                  "sectionTitle": "HvTypography-sectionTitle",
                                  "selectedNavText": "HvTypography-selectedNavText",
                                  "vizText": "HvTypography-vizText",
                                  "vizTextDisabled": "HvTypography-vizTextDisabled",
                                  "xlTitle": "HvTypography-xlTitle",
                                  "xsInlineLink": "HvTypography-xsInlineLink",
                                  "xsTitle": "HvTypography-xsTitle",
                                  "xxlTitle": "HvTypography-xxlTitle",
                                  "xxsTitle": "HvTypography-xxsTitle",
                                }
                              }
                              component="div"
                              id="hvtreeview1-01-button"
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              onMouseDown={[Function]}
                              role="button"
                              style={
                                Object {
                                  "paddingLeft": 10,
                                }
                              }
                              tabIndex={-1}
                              variant="normalText"
                            >
                              <div
                                className="HvVerticalNavigationTreeViewItem-content HvTypography-root HvTypography-normalText"
                                id="hvtreeview1-01-button"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                onMouseDown={[Function]}
                                role="button"
                                style={
                                  Object {
                                    "paddingLeft": 10,
                                  }
                                }
                                tabIndex={-1}
                              >
                                <Component>
                                  <WithStyles(ForwardRef)
                                    disableFocusListener={true}
                                    disableHoverListener={false}
                                    disableTouchListener={true}
                                    open={false}
                                    placement="top"
                                    style={
                                      Object {
                                        "overflow": "hidden",
                                        "textOverflow": "ellipsis",
                                        "whiteSpace": "nowrap",
                                      }
                                    }
                                    title={
                                      <WithStyles(ForwardRef)>
                                        Analytics
                                      </WithStyles(ForwardRef)>
                                    }
                                  >
                                    <ForwardRef
                                      classes={
                                        Object {
                                          "color": "HvTooltip-color",
                                          "popper": "HvTooltip-popper",
                                          "root": "HvTooltip-root",
                                          "separator": "HvTooltip-separator",
                                          "separatorColor": "HvTooltip-separatorColor",
                                          "title": "HvTooltip-title",
                                          "tooltip": "HvTooltip-tooltip",
                                          "tooltipMulti": "HvTooltip-tooltipMulti",
                                          "valueWrapper": "HvTooltip-valueWrapper",
                                          "values": "HvTooltip-values",
                                          "valuesContainer": "HvTooltip-valuesContainer",
                                        }
                                      }
                                      disableFocusListener={true}
                                      disableHoverListener={false}
                                      disableTouchListener={true}
                                      open={false}
                                      placement="top"
                                      style={
                                        Object {
                                          "overflow": "hidden",
                                          "textOverflow": "ellipsis",
                                          "whiteSpace": "nowrap",
                                        }
                                      }
                                      title={
                                        <WithStyles(ForwardRef)>
                                          Analytics
                                        </WithStyles(ForwardRef)>
                                      }
                                    >
                                      <WithStyles(ForwardRef(Tooltip))
                                        TransitionComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "propTypes": Object {
                                              "children": [Function],
                                              "disableStrictModeCompat": [Function],
                                              "in": [Function],
                                              "onEnter": [Function],
                                              "onEntered": [Function],
                                              "onEntering": [Function],
                                              "onExit": [Function],
                                              "onExited": [Function],
                                              "onExiting": [Function],
                                              "style": [Function],
                                              "timeout": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        TransitionProps={
                                          Object {
                                            "timeout": 400,
                                          }
                                        }
                                        classes={
                                          Object {
                                            "popper": "HvTooltip-popper",
                                            "tooltip": "HvTooltip-tooltip",
                                          }
                                        }
                                        disableFocusListener={true}
                                        disableHoverListener={false}
                                        disableTouchListener={true}
                                        enterDelay={300}
                                        open={false}
                                        placement="top"
                                        style={
                                          Object {
                                            "overflow": "hidden",
                                            "textOverflow": "ellipsis",
                                            "whiteSpace": "nowrap",
                                          }
                                        }
                                        title={
                                          <WithStyles(ForwardRef)>
                                            Analytics
                                          </WithStyles(ForwardRef)>
                                        }
                                      >
                                        <ForwardRef(Tooltip)
                                          TransitionComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "propTypes": Object {
                                                "children": [Function],
                                                "disableStrictModeCompat": [Function],
                                                "in": [Function],
                                                "onEnter": [Function],
                                                "onEntered": [Function],
                                                "onEntering": [Function],
                                                "onExit": [Function],
                                                "onExited": [Function],
                                                "onExiting": [Function],
                                                "style": [Function],
                                                "timeout": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          TransitionProps={
                                            Object {
                                              "timeout": 400,
                                            }
                                          }
                                          classes={
                                            Object {
                                              "arrow": "MuiTooltip-arrow",
                                              "popper": "MuiTooltip-popper HvTooltip-popper",
                                              "popperArrow": "MuiTooltip-popperArrow",
                                              "popperInteractive": "MuiTooltip-popperInteractive",
                                              "tooltip": "MuiTooltip-tooltip HvTooltip-tooltip",
                                              "tooltipArrow": "MuiTooltip-tooltipArrow",
                                              "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                              "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                              "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                              "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                              "touch": "MuiTooltip-touch",
                                            }
                                          }
                                          disableFocusListener={true}
                                          disableHoverListener={false}
                                          disableTouchListener={true}
                                          enterDelay={300}
                                          open={false}
                                          placement="top"
                                          style={
                                            Object {
                                              "overflow": "hidden",
                                              "textOverflow": "ellipsis",
                                              "whiteSpace": "nowrap",
                                            }
                                          }
                                          title={
                                            <WithStyles(ForwardRef)>
                                              Analytics
                                            </WithStyles(ForwardRef)>
                                          }
                                        >
                                          <div
                                            aria-describedby={null}
                                            className=""
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseOver={[Function]}
                                            onTouchStart={[Function]}
                                            style={
                                              Object {
                                                "overflow": "hidden",
                                                "textOverflow": "ellipsis",
                                                "whiteSpace": "nowrap",
                                              }
                                            }
                                            title={null}
                                          >
                                            <ComponentFunction>
                                              Analytics
                                            </ComponentFunction>
                                          </div>
                                          <ForwardRef(Popper)
                                            anchorEl={
                                              <div
                                                class=""
                                                style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;"
                                              >
                                                Analytics
                                              </div>
                                            }
                                            className="MuiTooltip-popper HvTooltip-popper"
                                            id={null}
                                            open={false}
                                            placement="top"
                                            popperOptions={
                                              Object {
                                                "modifiers": Object {
                                                  "arrow": Object {
                                                    "element": null,
                                                    "enabled": false,
                                                  },
                                                },
                                              }
                                            }
                                            transition={true}
                                          />
                                        </ForwardRef(Tooltip)>
                                      </WithStyles(ForwardRef(Tooltip))>
                                    </ForwardRef>
                                  </WithStyles(ForwardRef)>
                                </Component>
                              </div>
                            </ForwardRef>
                          </WithStyles(ForwardRef)>
                          <DescendantProvider
                            id="01"
                            level={1}
                          />
                        </li>
                      </ForwardRef>
                    </WithStyles(ForwardRef)>
                    <WithStyles(ForwardRef)
                      className="HvVerticalNavigationNavigation-listItem"
                      key="02"
                      label={<Unknown />}
                      nodeId="02"
                      payload={
                        Object {
                          "data": Array [
                            Object {
                              "data": Array [
                                Object {
                                  "id": "02-01-01",
                                  "label": "Servers",
                                },
                                Object {
                                  "id": "02-01-02",
                                  "label": "HCP Anywhere",
                                },
                                Object {
                                  "disabled": true,
                                  "id": "02-01-03",
                                  "label": "This Computer",
                                },
                              ],
                              "id": "02-01",
                              "label": "Cloud",
                            },
                          ],
                          "id": "02",
                          "label": "Storage",
                        }
                      }
                    >
                      <ForwardRef
                        className="HvVerticalNavigationNavigation-listItem"
                        classes={
                          Object {
                            "collapsed": "HvVerticalNavigationTreeViewItem-collapsed",
                            "content": "HvVerticalNavigationTreeViewItem-content",
                            "disabled": "HvVerticalNavigationTreeViewItem-disabled",
                            "expandable": "HvVerticalNavigationTreeViewItem-expandable",
                            "expanded": "HvVerticalNavigationTreeViewItem-expanded",
                            "focused": "HvVerticalNavigationTreeViewItem-focused",
                            "group": "HvVerticalNavigationTreeViewItem-group",
                            "noIcon": "HvVerticalNavigationTreeViewItem-noIcon",
                            "node": "HvVerticalNavigationTreeViewItem-node",
                            "root": "HvVerticalNavigationTreeViewItem-root",
                            "selectable": "HvVerticalNavigationTreeViewItem-selectable",
                            "selected": "HvVerticalNavigationTreeViewItem-selected",
                            "unselectable": "HvVerticalNavigationTreeViewItem-unselectable",
                            "unselected": "HvVerticalNavigationTreeViewItem-unselected",
                            "withIcon": "HvVerticalNavigationTreeViewItem-withIcon",
                          }
                        }
                        label={<Unknown />}
                        nodeId="02"
                        payload={
                          Object {
                            "data": Array [
                              Object {
                                "data": Array [
                                  Object {
                                    "id": "02-01-01",
                                    "label": "Servers",
                                  },
                                  Object {
                                    "id": "02-01-02",
                                    "label": "HCP Anywhere",
                                  },
                                  Object {
                                    "disabled": true,
                                    "id": "02-01-03",
                                    "label": "This Computer",
                                  },
                                ],
                                "id": "02-01",
                                "label": "Cloud",
                              },
                            ],
                            "id": "02",
                            "label": "Storage",
                          }
                        }
                      >
                        <li
                          className="HvVerticalNavigationTreeViewItem-node HvVerticalNavigationNavigation-listItem HvVerticalNavigationTreeViewItem-selectable HvVerticalNavigationTreeViewItem-unselected"
                          id="hvtreeview1-02"
                        >
                          <WithStyles(ForwardRef)
                            className="HvVerticalNavigationTreeViewItem-content"
                            component="div"
                            id="hvtreeview1-02-button"
                            innerRef={
                              Object {
                                "current": <div
                                  class="HvVerticalNavigationTreeViewItem-content HvTypography-root HvTypography-normalText"
                                  id="hvtreeview1-02-button"
                                  role="button"
                                  style="padding-left: 10px;"
                                  tabindex="0"
                                >
                                  <div
                                    class=""
                                    style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;"
                                  >
                                    Storage
                                  </div>
                                </div>,
                              }
                            }
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            role="button"
                            style={
                              Object {
                                "paddingLeft": 10,
                              }
                            }
                            tabIndex={0}
                            variant="normalText"
                          >
                            <ForwardRef
                              className="HvVerticalNavigationTreeViewItem-content"
                              classes={
                                Object {
                                  "3xlTitle": "HvTypography-3xlTitle",
                                  "4xlTitle": "HvTypography-4xlTitle",
                                  "5xlTitle": "HvTypography-5xlTitle",
                                  "disabledText": "HvTypography-disabledText",
                                  "highlightText": "HvTypography-highlightText",
                                  "lTitle": "HvTypography-lTitle",
                                  "link": "HvTypography-link",
                                  "mTitle": "HvTypography-mTitle",
                                  "noWrap": "HvTypography-noWrap",
                                  "normalText": "HvTypography-normalText",
                                  "placeholderText": "HvTypography-placeholderText",
                                  "root": "HvTypography-root",
                                  "sTitle": "HvTypography-sTitle",
                                  "sectionTitle": "HvTypography-sectionTitle",
                                  "selectedNavText": "HvTypography-selectedNavText",
                                  "vizText": "HvTypography-vizText",
                                  "vizTextDisabled": "HvTypography-vizTextDisabled",
                                  "xlTitle": "HvTypography-xlTitle",
                                  "xsInlineLink": "HvTypography-xsInlineLink",
                                  "xsTitle": "HvTypography-xsTitle",
                                  "xxlTitle": "HvTypography-xxlTitle",
                                  "xxsTitle": "HvTypography-xxsTitle",
                                }
                              }
                              component="div"
                              id="hvtreeview1-02-button"
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              onMouseDown={[Function]}
                              role="button"
                              style={
                                Object {
                                  "paddingLeft": 10,
                                }
                              }
                              tabIndex={0}
                              variant="normalText"
                            >
                              <div
                                className="HvVerticalNavigationTreeViewItem-content HvTypography-root HvTypography-normalText"
                                id="hvtreeview1-02-button"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                onMouseDown={[Function]}
                                role="button"
                                style={
                                  Object {
                                    "paddingLeft": 10,
                                  }
                                }
                                tabIndex={0}
                              >
                                <Component>
                                  <WithStyles(ForwardRef)
                                    disableFocusListener={true}
                                    disableHoverListener={false}
                                    disableTouchListener={true}
                                    open={false}
                                    placement="top"
                                    style={
                                      Object {
                                        "overflow": "hidden",
                                        "textOverflow": "ellipsis",
                                        "whiteSpace": "nowrap",
                                      }
                                    }
                                    title={
                                      <WithStyles(ForwardRef)>
                                        Storage
                                      </WithStyles(ForwardRef)>
                                    }
                                  >
                                    <ForwardRef
                                      classes={
                                        Object {
                                          "color": "HvTooltip-color",
                                          "popper": "HvTooltip-popper",
                                          "root": "HvTooltip-root",
                                          "separator": "HvTooltip-separator",
                                          "separatorColor": "HvTooltip-separatorColor",
                                          "title": "HvTooltip-title",
                                          "tooltip": "HvTooltip-tooltip",
                                          "tooltipMulti": "HvTooltip-tooltipMulti",
                                          "valueWrapper": "HvTooltip-valueWrapper",
                                          "values": "HvTooltip-values",
                                          "valuesContainer": "HvTooltip-valuesContainer",
                                        }
                                      }
                                      disableFocusListener={true}
                                      disableHoverListener={false}
                                      disableTouchListener={true}
                                      open={false}
                                      placement="top"
                                      style={
                                        Object {
                                          "overflow": "hidden",
                                          "textOverflow": "ellipsis",
                                          "whiteSpace": "nowrap",
                                        }
                                      }
                                      title={
                                        <WithStyles(ForwardRef)>
                                          Storage
                                        </WithStyles(ForwardRef)>
                                      }
                                    >
                                      <WithStyles(ForwardRef(Tooltip))
                                        TransitionComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "propTypes": Object {
                                              "children": [Function],
                                              "disableStrictModeCompat": [Function],
                                              "in": [Function],
                                              "onEnter": [Function],
                                              "onEntered": [Function],
                                              "onEntering": [Function],
                                              "onExit": [Function],
                                              "onExited": [Function],
                                              "onExiting": [Function],
                                              "style": [Function],
                                              "timeout": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        TransitionProps={
                                          Object {
                                            "timeout": 400,
                                          }
                                        }
                                        classes={
                                          Object {
                                            "popper": "HvTooltip-popper",
                                            "tooltip": "HvTooltip-tooltip",
                                          }
                                        }
                                        disableFocusListener={true}
                                        disableHoverListener={false}
                                        disableTouchListener={true}
                                        enterDelay={300}
                                        open={false}
                                        placement="top"
                                        style={
                                          Object {
                                            "overflow": "hidden",
                                            "textOverflow": "ellipsis",
                                            "whiteSpace": "nowrap",
                                          }
                                        }
                                        title={
                                          <WithStyles(ForwardRef)>
                                            Storage
                                          </WithStyles(ForwardRef)>
                                        }
                                      >
                                        <ForwardRef(Tooltip)
                                          TransitionComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "propTypes": Object {
                                                "children": [Function],
                                                "disableStrictModeCompat": [Function],
                                                "in": [Function],
                                                "onEnter": [Function],
                                                "onEntered": [Function],
                                                "onEntering": [Function],
                                                "onExit": [Function],
                                                "onExited": [Function],
                                                "onExiting": [Function],
                                                "style": [Function],
                                                "timeout": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          TransitionProps={
                                            Object {
                                              "timeout": 400,
                                            }
                                          }
                                          classes={
                                            Object {
                                              "arrow": "MuiTooltip-arrow",
                                              "popper": "MuiTooltip-popper HvTooltip-popper",
                                              "popperArrow": "MuiTooltip-popperArrow",
                                              "popperInteractive": "MuiTooltip-popperInteractive",
                                              "tooltip": "MuiTooltip-tooltip HvTooltip-tooltip",
                                              "tooltipArrow": "MuiTooltip-tooltipArrow",
                                              "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                              "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                              "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                              "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                              "touch": "MuiTooltip-touch",
                                            }
                                          }
                                          disableFocusListener={true}
                                          disableHoverListener={false}
                                          disableTouchListener={true}
                                          enterDelay={300}
                                          open={false}
                                          placement="top"
                                          style={
                                            Object {
                                              "overflow": "hidden",
                                              "textOverflow": "ellipsis",
                                              "whiteSpace": "nowrap",
                                            }
                                          }
                                          title={
                                            <WithStyles(ForwardRef)>
                                              Storage
                                            </WithStyles(ForwardRef)>
                                          }
                                        >
                                          <div
                                            aria-describedby={null}
                                            className=""
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseOver={[Function]}
                                            onTouchStart={[Function]}
                                            style={
                                              Object {
                                                "overflow": "hidden",
                                                "textOverflow": "ellipsis",
                                                "whiteSpace": "nowrap",
                                              }
                                            }
                                            title={null}
                                          >
                                            <ComponentFunction>
                                              Storage
                                            </ComponentFunction>
                                          </div>
                                          <ForwardRef(Popper)
                                            anchorEl={
                                              <div
                                                class=""
                                                style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;"
                                              >
                                                Storage
                                              </div>
                                            }
                                            className="MuiTooltip-popper HvTooltip-popper"
                                            id={null}
                                            open={false}
                                            placement="top"
                                            popperOptions={
                                              Object {
                                                "modifiers": Object {
                                                  "arrow": Object {
                                                    "element": null,
                                                    "enabled": false,
                                                  },
                                                },
                                              }
                                            }
                                            transition={true}
                                          />
                                        </ForwardRef(Tooltip)>
                                      </WithStyles(ForwardRef(Tooltip))>
                                    </ForwardRef>
                                  </WithStyles(ForwardRef)>
                                </Component>
                              </div>
                            </ForwardRef>
                          </WithStyles(ForwardRef)>
                          <DescendantProvider
                            id="02"
                            level={1}
                          >
                            <ul
                              className="HvVerticalNavigationTreeViewItem-group"
                              id="hvtreeview1-02-group"
                            >
                              <WithStyles(ForwardRef)
                                className="HvVerticalNavigationNavigation-listItem"
                                key="02-01"
                                label={<Unknown />}
                                nodeId="02-01"
                                payload={
                                  Object {
                                    "data": Array [
                                      Object {
                                        "id": "02-01-01",
                                        "label": "Servers",
                                      },
                                      Object {
                                        "id": "02-01-02",
                                        "label": "HCP Anywhere",
                                      },
                                      Object {
                                        "disabled": true,
                                        "id": "02-01-03",
                                        "label": "This Computer",
                                      },
                                    ],
                                    "id": "02-01",
                                    "label": "Cloud",
                                  }
                                }
                              >
                                <ForwardRef
                                  className="HvVerticalNavigationNavigation-listItem"
                                  classes={
                                    Object {
                                      "collapsed": "HvVerticalNavigationTreeViewItem-collapsed",
                                      "content": "HvVerticalNavigationTreeViewItem-content",
                                      "disabled": "HvVerticalNavigationTreeViewItem-disabled",
                                      "expandable": "HvVerticalNavigationTreeViewItem-expandable",
                                      "expanded": "HvVerticalNavigationTreeViewItem-expanded",
                                      "focused": "HvVerticalNavigationTreeViewItem-focused",
                                      "group": "HvVerticalNavigationTreeViewItem-group",
                                      "noIcon": "HvVerticalNavigationTreeViewItem-noIcon",
                                      "node": "HvVerticalNavigationTreeViewItem-node",
                                      "root": "HvVerticalNavigationTreeViewItem-root",
                                      "selectable": "HvVerticalNavigationTreeViewItem-selectable",
                                      "selected": "HvVerticalNavigationTreeViewItem-selected",
                                      "unselectable": "HvVerticalNavigationTreeViewItem-unselectable",
                                      "unselected": "HvVerticalNavigationTreeViewItem-unselected",
                                      "withIcon": "HvVerticalNavigationTreeViewItem-withIcon",
                                    }
                                  }
                                  label={<Unknown />}
                                  nodeId="02-01"
                                  payload={
                                    Object {
                                      "data": Array [
                                        Object {
                                          "id": "02-01-01",
                                          "label": "Servers",
                                        },
                                        Object {
                                          "id": "02-01-02",
                                          "label": "HCP Anywhere",
                                        },
                                        Object {
                                          "disabled": true,
                                          "id": "02-01-03",
                                          "label": "This Computer",
                                        },
                                      ],
                                      "id": "02-01",
                                      "label": "Cloud",
                                    }
                                  }
                                >
                                  <li
                                    className="HvVerticalNavigationTreeViewItem-node HvVerticalNavigationNavigation-listItem HvVerticalNavigationTreeViewItem-selectable HvVerticalNavigationTreeViewItem-unselected"
                                    id="hvtreeview1-02-01"
                                  >
                                    <WithStyles(ForwardRef)
                                      className="HvVerticalNavigationTreeViewItem-content"
                                      component="div"
                                      id="hvtreeview1-02-01-button"
                                      innerRef={
                                        Object {
                                          "current": <div
                                            class="HvVerticalNavigationTreeViewItem-content HvTypography-root HvTypography-normalText"
                                            id="hvtreeview1-02-01-button"
                                            role="button"
                                            style="padding-left: 20px;"
                                            tabindex="0"
                                          >
                                            <div
                                              class=""
                                              style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;"
                                            >
                                              Cloud
                                            </div>
                                          </div>,
                                        }
                                      }
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      onMouseDown={[Function]}
                                      role="button"
                                      style={
                                        Object {
                                          "paddingLeft": 20,
                                        }
                                      }
                                      tabIndex={0}
                                      variant="normalText"
                                    >
                                      <ForwardRef
                                        className="HvVerticalNavigationTreeViewItem-content"
                                        classes={
                                          Object {
                                            "3xlTitle": "HvTypography-3xlTitle",
                                            "4xlTitle": "HvTypography-4xlTitle",
                                            "5xlTitle": "HvTypography-5xlTitle",
                                            "disabledText": "HvTypography-disabledText",
                                            "highlightText": "HvTypography-highlightText",
                                            "lTitle": "HvTypography-lTitle",
                                            "link": "HvTypography-link",
                                            "mTitle": "HvTypography-mTitle",
                                            "noWrap": "HvTypography-noWrap",
                                            "normalText": "HvTypography-normalText",
                                            "placeholderText": "HvTypography-placeholderText",
                                            "root": "HvTypography-root",
                                            "sTitle": "HvTypography-sTitle",
                                            "sectionTitle": "HvTypography-sectionTitle",
                                            "selectedNavText": "HvTypography-selectedNavText",
                                            "vizText": "HvTypography-vizText",
                                            "vizTextDisabled": "HvTypography-vizTextDisabled",
                                            "xlTitle": "HvTypography-xlTitle",
                                            "xsInlineLink": "HvTypography-xsInlineLink",
                                            "xsTitle": "HvTypography-xsTitle",
                                            "xxlTitle": "HvTypography-xxlTitle",
                                            "xxsTitle": "HvTypography-xxsTitle",
                                          }
                                        }
                                        component="div"
                                        id="hvtreeview1-02-01-button"
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        onMouseDown={[Function]}
                                        role="button"
                                        style={
                                          Object {
                                            "paddingLeft": 20,
                                          }
                                        }
                                        tabIndex={0}
                                        variant="normalText"
                                      >
                                        <div
                                          className="HvVerticalNavigationTreeViewItem-content HvTypography-root HvTypography-normalText"
                                          id="hvtreeview1-02-01-button"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onMouseDown={[Function]}
                                          role="button"
                                          style={
                                            Object {
                                              "paddingLeft": 20,
                                            }
                                          }
                                          tabIndex={0}
                                        >
                                          <Component>
                                            <WithStyles(ForwardRef)
                                              disableFocusListener={true}
                                              disableHoverListener={false}
                                              disableTouchListener={true}
                                              open={false}
                                              placement="top"
                                              style={
                                                Object {
                                                  "overflow": "hidden",
                                                  "textOverflow": "ellipsis",
                                                  "whiteSpace": "nowrap",
                                                }
                                              }
                                              title={
                                                <WithStyles(ForwardRef)>
                                                  Cloud
                                                </WithStyles(ForwardRef)>
                                              }
                                            >
                                              <ForwardRef
                                                classes={
                                                  Object {
                                                    "color": "HvTooltip-color",
                                                    "popper": "HvTooltip-popper",
                                                    "root": "HvTooltip-root",
                                                    "separator": "HvTooltip-separator",
                                                    "separatorColor": "HvTooltip-separatorColor",
                                                    "title": "HvTooltip-title",
                                                    "tooltip": "HvTooltip-tooltip",
                                                    "tooltipMulti": "HvTooltip-tooltipMulti",
                                                    "valueWrapper": "HvTooltip-valueWrapper",
                                                    "values": "HvTooltip-values",
                                                    "valuesContainer": "HvTooltip-valuesContainer",
                                                  }
                                                }
                                                disableFocusListener={true}
                                                disableHoverListener={false}
                                                disableTouchListener={true}
                                                open={false}
                                                placement="top"
                                                style={
                                                  Object {
                                                    "overflow": "hidden",
                                                    "textOverflow": "ellipsis",
                                                    "whiteSpace": "nowrap",
                                                  }
                                                }
                                                title={
                                                  <WithStyles(ForwardRef)>
                                                    Cloud
                                                  </WithStyles(ForwardRef)>
                                                }
                                              >
                                                <WithStyles(ForwardRef(Tooltip))
                                                  TransitionComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "propTypes": Object {
                                                        "children": [Function],
                                                        "disableStrictModeCompat": [Function],
                                                        "in": [Function],
                                                        "onEnter": [Function],
                                                        "onEntered": [Function],
                                                        "onEntering": [Function],
                                                        "onExit": [Function],
                                                        "onExited": [Function],
                                                        "onExiting": [Function],
                                                        "style": [Function],
                                                        "timeout": [Function],
                                                      },
                                                      "render": [Function],
                                                    }
                                                  }
                                                  TransitionProps={
                                                    Object {
                                                      "timeout": 400,
                                                    }
                                                  }
                                                  classes={
                                                    Object {
                                                      "popper": "HvTooltip-popper",
                                                      "tooltip": "HvTooltip-tooltip",
                                                    }
                                                  }
                                                  disableFocusListener={true}
                                                  disableHoverListener={false}
                                                  disableTouchListener={true}
                                                  enterDelay={300}
                                                  open={false}
                                                  placement="top"
                                                  style={
                                                    Object {
                                                      "overflow": "hidden",
                                                      "textOverflow": "ellipsis",
                                                      "whiteSpace": "nowrap",
                                                    }
                                                  }
                                                  title={
                                                    <WithStyles(ForwardRef)>
                                                      Cloud
                                                    </WithStyles(ForwardRef)>
                                                  }
                                                >
                                                  <ForwardRef(Tooltip)
                                                    TransitionComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "propTypes": Object {
                                                          "children": [Function],
                                                          "disableStrictModeCompat": [Function],
                                                          "in": [Function],
                                                          "onEnter": [Function],
                                                          "onEntered": [Function],
                                                          "onEntering": [Function],
                                                          "onExit": [Function],
                                                          "onExited": [Function],
                                                          "onExiting": [Function],
                                                          "style": [Function],
                                                          "timeout": [Function],
                                                        },
                                                        "render": [Function],
                                                      }
                                                    }
                                                    TransitionProps={
                                                      Object {
                                                        "timeout": 400,
                                                      }
                                                    }
                                                    classes={
                                                      Object {
                                                        "arrow": "MuiTooltip-arrow",
                                                        "popper": "MuiTooltip-popper HvTooltip-popper",
                                                        "popperArrow": "MuiTooltip-popperArrow",
                                                        "popperInteractive": "MuiTooltip-popperInteractive",
                                                        "tooltip": "MuiTooltip-tooltip HvTooltip-tooltip",
                                                        "tooltipArrow": "MuiTooltip-tooltipArrow",
                                                        "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                                        "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                                        "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                                        "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                                        "touch": "MuiTooltip-touch",
                                                      }
                                                    }
                                                    disableFocusListener={true}
                                                    disableHoverListener={false}
                                                    disableTouchListener={true}
                                                    enterDelay={300}
                                                    open={false}
                                                    placement="top"
                                                    style={
                                                      Object {
                                                        "overflow": "hidden",
                                                        "textOverflow": "ellipsis",
                                                        "whiteSpace": "nowrap",
                                                      }
                                                    }
                                                    title={
                                                      <WithStyles(ForwardRef)>
                                                        Cloud
                                                      </WithStyles(ForwardRef)>
                                                    }
                                                  >
                                                    <div
                                                      aria-describedby={null}
                                                      className=""
                                                      onMouseEnter={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseOver={[Function]}
                                                      onTouchStart={[Function]}
                                                      style={
                                                        Object {
                                                          "overflow": "hidden",
                                                          "textOverflow": "ellipsis",
                                                          "whiteSpace": "nowrap",
                                                        }
                                                      }
                                                      title={null}
                                                    >
                                                      <ComponentFunction>
                                                        Cloud
                                                      </ComponentFunction>
                                                    </div>
                                                    <ForwardRef(Popper)
                                                      anchorEl={
                                                        <div
                                                          class=""
                                                          style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;"
                                                        >
                                                          Cloud
                                                        </div>
                                                      }
                                                      className="MuiTooltip-popper HvTooltip-popper"
                                                      id={null}
                                                      open={false}
                                                      placement="top"
                                                      popperOptions={
                                                        Object {
                                                          "modifiers": Object {
                                                            "arrow": Object {
                                                              "element": null,
                                                              "enabled": false,
                                                            },
                                                          },
                                                        }
                                                      }
                                                      transition={true}
                                                    />
                                                  </ForwardRef(Tooltip)>
                                                </WithStyles(ForwardRef(Tooltip))>
                                              </ForwardRef>
                                            </WithStyles(ForwardRef)>
                                          </Component>
                                        </div>
                                      </ForwardRef>
                                    </WithStyles(ForwardRef)>
                                    <DescendantProvider
                                      id="02-01"
                                      level={2}
                                    >
                                      <ul
                                        className="HvVerticalNavigationTreeViewItem-group"
                                        id="hvtreeview1-02-01-group"
                                      >
                                        <WithStyles(ForwardRef)
                                          className="HvVerticalNavigationNavigation-listItem"
                                          key="02-01-01"
                                          label={<Unknown />}
                                          nodeId="02-01-01"
                                          payload={
                                            Object {
                                              "id": "02-01-01",
                                              "label": "Servers",
                                            }
                                          }
                                        >
                                          <ForwardRef
                                            className="HvVerticalNavigationNavigation-listItem"
                                            classes={
                                              Object {
                                                "collapsed": "HvVerticalNavigationTreeViewItem-collapsed",
                                                "content": "HvVerticalNavigationTreeViewItem-content",
                                                "disabled": "HvVerticalNavigationTreeViewItem-disabled",
                                                "expandable": "HvVerticalNavigationTreeViewItem-expandable",
                                                "expanded": "HvVerticalNavigationTreeViewItem-expanded",
                                                "focused": "HvVerticalNavigationTreeViewItem-focused",
                                                "group": "HvVerticalNavigationTreeViewItem-group",
                                                "noIcon": "HvVerticalNavigationTreeViewItem-noIcon",
                                                "node": "HvVerticalNavigationTreeViewItem-node",
                                                "root": "HvVerticalNavigationTreeViewItem-root",
                                                "selectable": "HvVerticalNavigationTreeViewItem-selectable",
                                                "selected": "HvVerticalNavigationTreeViewItem-selected",
                                                "unselectable": "HvVerticalNavigationTreeViewItem-unselectable",
                                                "unselected": "HvVerticalNavigationTreeViewItem-unselected",
                                                "withIcon": "HvVerticalNavigationTreeViewItem-withIcon",
                                              }
                                            }
                                            label={<Unknown />}
                                            nodeId="02-01-01"
                                            payload={
                                              Object {
                                                "id": "02-01-01",
                                                "label": "Servers",
                                              }
                                            }
                                          >
                                            <li
                                              className="HvVerticalNavigationTreeViewItem-node HvVerticalNavigationNavigation-listItem HvVerticalNavigationTreeViewItem-selectable HvVerticalNavigationTreeViewItem-unselected"
                                              id="hvtreeview1-02-01-01"
                                            >
                                              <WithStyles(ForwardRef)
                                                className="HvVerticalNavigationTreeViewItem-content"
                                                component="div"
                                                id="hvtreeview1-02-01-01-button"
                                                innerRef={
                                                  Object {
                                                    "current": <div
                                                      class="HvVerticalNavigationTreeViewItem-content HvTypography-root HvTypography-normalText"
                                                      id="hvtreeview1-02-01-01-button"
                                                      role="button"
                                                      style="padding-left: 30px;"
                                                      tabindex="0"
                                                    >
                                                      <div
                                                        class=""
                                                        style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;"
                                                      >
                                                        Servers
                                                      </div>
                                                    </div>,
                                                  }
                                                }
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                onMouseDown={[Function]}
                                                role="button"
                                                style={
                                                  Object {
                                                    "paddingLeft": 30,
                                                  }
                                                }
                                                tabIndex={0}
                                                variant="normalText"
                                              >
                                                <ForwardRef
                                                  className="HvVerticalNavigationTreeViewItem-content"
                                                  classes={
                                                    Object {
                                                      "3xlTitle": "HvTypography-3xlTitle",
                                                      "4xlTitle": "HvTypography-4xlTitle",
                                                      "5xlTitle": "HvTypography-5xlTitle",
                                                      "disabledText": "HvTypography-disabledText",
                                                      "highlightText": "HvTypography-highlightText",
                                                      "lTitle": "HvTypography-lTitle",
                                                      "link": "HvTypography-link",
                                                      "mTitle": "HvTypography-mTitle",
                                                      "noWrap": "HvTypography-noWrap",
                                                      "normalText": "HvTypography-normalText",
                                                      "placeholderText": "HvTypography-placeholderText",
                                                      "root": "HvTypography-root",
                                                      "sTitle": "HvTypography-sTitle",
                                                      "sectionTitle": "HvTypography-sectionTitle",
                                                      "selectedNavText": "HvTypography-selectedNavText",
                                                      "vizText": "HvTypography-vizText",
                                                      "vizTextDisabled": "HvTypography-vizTextDisabled",
                                                      "xlTitle": "HvTypography-xlTitle",
                                                      "xsInlineLink": "HvTypography-xsInlineLink",
                                                      "xsTitle": "HvTypography-xsTitle",
                                                      "xxlTitle": "HvTypography-xxlTitle",
                                                      "xxsTitle": "HvTypography-xxsTitle",
                                                    }
                                                  }
                                                  component="div"
                                                  id="hvtreeview1-02-01-01-button"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  onMouseDown={[Function]}
                                                  role="button"
                                                  style={
                                                    Object {
                                                      "paddingLeft": 30,
                                                    }
                                                  }
                                                  tabIndex={0}
                                                  variant="normalText"
                                                >
                                                  <div
                                                    className="HvVerticalNavigationTreeViewItem-content HvTypography-root HvTypography-normalText"
                                                    id="hvtreeview1-02-01-01-button"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    onMouseDown={[Function]}
                                                    role="button"
                                                    style={
                                                      Object {
                                                        "paddingLeft": 30,
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <Component>
                                                      <WithStyles(ForwardRef)
                                                        disableFocusListener={true}
                                                        disableHoverListener={false}
                                                        disableTouchListener={true}
                                                        open={false}
                                                        placement="top"
                                                        style={
                                                          Object {
                                                            "overflow": "hidden",
                                                            "textOverflow": "ellipsis",
                                                            "whiteSpace": "nowrap",
                                                          }
                                                        }
                                                        title={
                                                          <WithStyles(ForwardRef)>
                                                            Servers
                                                          </WithStyles(ForwardRef)>
                                                        }
                                                      >
                                                        <ForwardRef
                                                          classes={
                                                            Object {
                                                              "color": "HvTooltip-color",
                                                              "popper": "HvTooltip-popper",
                                                              "root": "HvTooltip-root",
                                                              "separator": "HvTooltip-separator",
                                                              "separatorColor": "HvTooltip-separatorColor",
                                                              "title": "HvTooltip-title",
                                                              "tooltip": "HvTooltip-tooltip",
                                                              "tooltipMulti": "HvTooltip-tooltipMulti",
                                                              "valueWrapper": "HvTooltip-valueWrapper",
                                                              "values": "HvTooltip-values",
                                                              "valuesContainer": "HvTooltip-valuesContainer",
                                                            }
                                                          }
                                                          disableFocusListener={true}
                                                          disableHoverListener={false}
                                                          disableTouchListener={true}
                                                          open={false}
                                                          placement="top"
                                                          style={
                                                            Object {
                                                              "overflow": "hidden",
                                                              "textOverflow": "ellipsis",
                                                              "whiteSpace": "nowrap",
                                                            }
                                                          }
                                                          title={
                                                            <WithStyles(ForwardRef)>
                                                              Servers
                                                            </WithStyles(ForwardRef)>
                                                          }
                                                        >
                                                          <WithStyles(ForwardRef(Tooltip))
                                                            TransitionComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "propTypes": Object {
                                                                  "children": [Function],
                                                                  "disableStrictModeCompat": [Function],
                                                                  "in": [Function],
                                                                  "onEnter": [Function],
                                                                  "onEntered": [Function],
                                                                  "onEntering": [Function],
                                                                  "onExit": [Function],
                                                                  "onExited": [Function],
                                                                  "onExiting": [Function],
                                                                  "style": [Function],
                                                                  "timeout": [Function],
                                                                },
                                                                "render": [Function],
                                                              }
                                                            }
                                                            TransitionProps={
                                                              Object {
                                                                "timeout": 400,
                                                              }
                                                            }
                                                            classes={
                                                              Object {
                                                                "popper": "HvTooltip-popper",
                                                                "tooltip": "HvTooltip-tooltip",
                                                              }
                                                            }
                                                            disableFocusListener={true}
                                                            disableHoverListener={false}
                                                            disableTouchListener={true}
                                                            enterDelay={300}
                                                            open={false}
                                                            placement="top"
                                                            style={
                                                              Object {
                                                                "overflow": "hidden",
                                                                "textOverflow": "ellipsis",
                                                                "whiteSpace": "nowrap",
                                                              }
                                                            }
                                                            title={
                                                              <WithStyles(ForwardRef)>
                                                                Servers
                                                              </WithStyles(ForwardRef)>
                                                            }
                                                          >
                                                            <ForwardRef(Tooltip)
                                                              TransitionComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "propTypes": Object {
                                                                    "children": [Function],
                                                                    "disableStrictModeCompat": [Function],
                                                                    "in": [Function],
                                                                    "onEnter": [Function],
                                                                    "onEntered": [Function],
                                                                    "onEntering": [Function],
                                                                    "onExit": [Function],
                                                                    "onExited": [Function],
                                                                    "onExiting": [Function],
                                                                    "style": [Function],
                                                                    "timeout": [Function],
                                                                  },
                                                                  "render": [Function],
                                                                }
                                                              }
                                                              TransitionProps={
                                                                Object {
                                                                  "timeout": 400,
                                                                }
                                                              }
                                                              classes={
                                                                Object {
                                                                  "arrow": "MuiTooltip-arrow",
                                                                  "popper": "MuiTooltip-popper HvTooltip-popper",
                                                                  "popperArrow": "MuiTooltip-popperArrow",
                                                                  "popperInteractive": "MuiTooltip-popperInteractive",
                                                                  "tooltip": "MuiTooltip-tooltip HvTooltip-tooltip",
                                                                  "tooltipArrow": "MuiTooltip-tooltipArrow",
                                                                  "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                                                  "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                                                  "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                                                  "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                                                  "touch": "MuiTooltip-touch",
                                                                }
                                                              }
                                                              disableFocusListener={true}
                                                              disableHoverListener={false}
                                                              disableTouchListener={true}
                                                              enterDelay={300}
                                                              open={false}
                                                              placement="top"
                                                              style={
                                                                Object {
                                                                  "overflow": "hidden",
                                                                  "textOverflow": "ellipsis",
                                                                  "whiteSpace": "nowrap",
                                                                }
                                                              }
                                                              title={
                                                                <WithStyles(ForwardRef)>
                                                                  Servers
                                                                </WithStyles(ForwardRef)>
                                                              }
                                                            >
                                                              <div
                                                                aria-describedby={null}
                                                                className=""
                                                                onMouseEnter={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseOver={[Function]}
                                                                onTouchStart={[Function]}
                                                                style={
                                                                  Object {
                                                                    "overflow": "hidden",
                                                                    "textOverflow": "ellipsis",
                                                                    "whiteSpace": "nowrap",
                                                                  }
                                                                }
                                                                title={null}
                                                              >
                                                                <ComponentFunction>
                                                                  Servers
                                                                </ComponentFunction>
                                                              </div>
                                                              <ForwardRef(Popper)
                                                                anchorEl={
                                                                  <div
                                                                    class=""
                                                                    style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;"
                                                                  >
                                                                    Servers
                                                                  </div>
                                                                }
                                                                className="MuiTooltip-popper HvTooltip-popper"
                                                                id={null}
                                                                open={false}
                                                                placement="top"
                                                                popperOptions={
                                                                  Object {
                                                                    "modifiers": Object {
                                                                      "arrow": Object {
                                                                        "element": null,
                                                                        "enabled": false,
                                                                      },
                                                                    },
                                                                  }
                                                                }
                                                                transition={true}
                                                              />
                                                            </ForwardRef(Tooltip)>
                                                          </WithStyles(ForwardRef(Tooltip))>
                                                        </ForwardRef>
                                                      </WithStyles(ForwardRef)>
                                                    </Component>
                                                  </div>
                                                </ForwardRef>
                                              </WithStyles(ForwardRef)>
                                              <DescendantProvider
                                                id="02-01-01"
                                                level={3}
                                              />
                                            </li>
                                          </ForwardRef>
                                        </WithStyles(ForwardRef)>
                                        <WithStyles(ForwardRef)
                                          className="HvVerticalNavigationNavigation-listItem"
                                          key="02-01-02"
                                          label={<Unknown />}
                                          nodeId="02-01-02"
                                          payload={
                                            Object {
                                              "id": "02-01-02",
                                              "label": "HCP Anywhere",
                                            }
                                          }
                                        >
                                          <ForwardRef
                                            className="HvVerticalNavigationNavigation-listItem"
                                            classes={
                                              Object {
                                                "collapsed": "HvVerticalNavigationTreeViewItem-collapsed",
                                                "content": "HvVerticalNavigationTreeViewItem-content",
                                                "disabled": "HvVerticalNavigationTreeViewItem-disabled",
                                                "expandable": "HvVerticalNavigationTreeViewItem-expandable",
                                                "expanded": "HvVerticalNavigationTreeViewItem-expanded",
                                                "focused": "HvVerticalNavigationTreeViewItem-focused",
                                                "group": "HvVerticalNavigationTreeViewItem-group",
                                                "noIcon": "HvVerticalNavigationTreeViewItem-noIcon",
                                                "node": "HvVerticalNavigationTreeViewItem-node",
                                                "root": "HvVerticalNavigationTreeViewItem-root",
                                                "selectable": "HvVerticalNavigationTreeViewItem-selectable",
                                                "selected": "HvVerticalNavigationTreeViewItem-selected",
                                                "unselectable": "HvVerticalNavigationTreeViewItem-unselectable",
                                                "unselected": "HvVerticalNavigationTreeViewItem-unselected",
                                                "withIcon": "HvVerticalNavigationTreeViewItem-withIcon",
                                              }
                                            }
                                            label={<Unknown />}
                                            nodeId="02-01-02"
                                            payload={
                                              Object {
                                                "id": "02-01-02",
                                                "label": "HCP Anywhere",
                                              }
                                            }
                                          >
                                            <li
                                              className="HvVerticalNavigationTreeViewItem-node HvVerticalNavigationNavigation-listItem HvVerticalNavigationTreeViewItem-selectable HvVerticalNavigationTreeViewItem-unselected"
                                              id="hvtreeview1-02-01-02"
                                            >
                                              <WithStyles(ForwardRef)
                                                className="HvVerticalNavigationTreeViewItem-content"
                                                component="div"
                                                id="hvtreeview1-02-01-02-button"
                                                innerRef={
                                                  Object {
                                                    "current": <div
                                                      class="HvVerticalNavigationTreeViewItem-content HvTypography-root HvTypography-normalText"
                                                      id="hvtreeview1-02-01-02-button"
                                                      role="button"
                                                      style="padding-left: 30px;"
                                                      tabindex="0"
                                                    >
                                                      <div
                                                        class=""
                                                        style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;"
                                                      >
                                                        HCP Anywhere
                                                      </div>
                                                    </div>,
                                                  }
                                                }
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                onMouseDown={[Function]}
                                                role="button"
                                                style={
                                                  Object {
                                                    "paddingLeft": 30,
                                                  }
                                                }
                                                tabIndex={0}
                                                variant="normalText"
                                              >
                                                <ForwardRef
                                                  className="HvVerticalNavigationTreeViewItem-content"
                                                  classes={
                                                    Object {
                                                      "3xlTitle": "HvTypography-3xlTitle",
                                                      "4xlTitle": "HvTypography-4xlTitle",
                                                      "5xlTitle": "HvTypography-5xlTitle",
                                                      "disabledText": "HvTypography-disabledText",
                                                      "highlightText": "HvTypography-highlightText",
                                                      "lTitle": "HvTypography-lTitle",
                                                      "link": "HvTypography-link",
                                                      "mTitle": "HvTypography-mTitle",
                                                      "noWrap": "HvTypography-noWrap",
                                                      "normalText": "HvTypography-normalText",
                                                      "placeholderText": "HvTypography-placeholderText",
                                                      "root": "HvTypography-root",
                                                      "sTitle": "HvTypography-sTitle",
                                                      "sectionTitle": "HvTypography-sectionTitle",
                                                      "selectedNavText": "HvTypography-selectedNavText",
                                                      "vizText": "HvTypography-vizText",
                                                      "vizTextDisabled": "HvTypography-vizTextDisabled",
                                                      "xlTitle": "HvTypography-xlTitle",
                                                      "xsInlineLink": "HvTypography-xsInlineLink",
                                                      "xsTitle": "HvTypography-xsTitle",
                                                      "xxlTitle": "HvTypography-xxlTitle",
                                                      "xxsTitle": "HvTypography-xxsTitle",
                                                    }
                                                  }
                                                  component="div"
                                                  id="hvtreeview1-02-01-02-button"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  onMouseDown={[Function]}
                                                  role="button"
                                                  style={
                                                    Object {
                                                      "paddingLeft": 30,
                                                    }
                                                  }
                                                  tabIndex={0}
                                                  variant="normalText"
                                                >
                                                  <div
                                                    className="HvVerticalNavigationTreeViewItem-content HvTypography-root HvTypography-normalText"
                                                    id="hvtreeview1-02-01-02-button"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    onMouseDown={[Function]}
                                                    role="button"
                                                    style={
                                                      Object {
                                                        "paddingLeft": 30,
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <Component>
                                                      <WithStyles(ForwardRef)
                                                        disableFocusListener={true}
                                                        disableHoverListener={false}
                                                        disableTouchListener={true}
                                                        open={false}
                                                        placement="top"
                                                        style={
                                                          Object {
                                                            "overflow": "hidden",
                                                            "textOverflow": "ellipsis",
                                                            "whiteSpace": "nowrap",
                                                          }
                                                        }
                                                        title={
                                                          <WithStyles(ForwardRef)>
                                                            HCP Anywhere
                                                          </WithStyles(ForwardRef)>
                                                        }
                                                      >
                                                        <ForwardRef
                                                          classes={
                                                            Object {
                                                              "color": "HvTooltip-color",
                                                              "popper": "HvTooltip-popper",
                                                              "root": "HvTooltip-root",
                                                              "separator": "HvTooltip-separator",
                                                              "separatorColor": "HvTooltip-separatorColor",
                                                              "title": "HvTooltip-title",
                                                              "tooltip": "HvTooltip-tooltip",
                                                              "tooltipMulti": "HvTooltip-tooltipMulti",
                                                              "valueWrapper": "HvTooltip-valueWrapper",
                                                              "values": "HvTooltip-values",
                                                              "valuesContainer": "HvTooltip-valuesContainer",
                                                            }
                                                          }
                                                          disableFocusListener={true}
                                                          disableHoverListener={false}
                                                          disableTouchListener={true}
                                                          open={false}
                                                          placement="top"
                                                          style={
                                                            Object {
                                                              "overflow": "hidden",
                                                              "textOverflow": "ellipsis",
                                                              "whiteSpace": "nowrap",
                                                            }
                                                          }
                                                          title={
                                                            <WithStyles(ForwardRef)>
                                                              HCP Anywhere
                                                            </WithStyles(ForwardRef)>
                                                          }
                                                        >
                                                          <WithStyles(ForwardRef(Tooltip))
                                                            TransitionComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "propTypes": Object {
                                                                  "children": [Function],
                                                                  "disableStrictModeCompat": [Function],
                                                                  "in": [Function],
                                                                  "onEnter": [Function],
                                                                  "onEntered": [Function],
                                                                  "onEntering": [Function],
                                                                  "onExit": [Function],
                                                                  "onExited": [Function],
                                                                  "onExiting": [Function],
                                                                  "style": [Function],
                                                                  "timeout": [Function],
                                                                },
                                                                "render": [Function],
                                                              }
                                                            }
                                                            TransitionProps={
                                                              Object {
                                                                "timeout": 400,
                                                              }
                                                            }
                                                            classes={
                                                              Object {
                                                                "popper": "HvTooltip-popper",
                                                                "tooltip": "HvTooltip-tooltip",
                                                              }
                                                            }
                                                            disableFocusListener={true}
                                                            disableHoverListener={false}
                                                            disableTouchListener={true}
                                                            enterDelay={300}
                                                            open={false}
                                                            placement="top"
                                                            style={
                                                              Object {
                                                                "overflow": "hidden",
                                                                "textOverflow": "ellipsis",
                                                                "whiteSpace": "nowrap",
                                                              }
                                                            }
                                                            title={
                                                              <WithStyles(ForwardRef)>
                                                                HCP Anywhere
                                                              </WithStyles(ForwardRef)>
                                                            }
                                                          >
                                                            <ForwardRef(Tooltip)
                                                              TransitionComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "propTypes": Object {
                                                                    "children": [Function],
                                                                    "disableStrictModeCompat": [Function],
                                                                    "in": [Function],
                                                                    "onEnter": [Function],
                                                                    "onEntered": [Function],
                                                                    "onEntering": [Function],
                                                                    "onExit": [Function],
                                                                    "onExited": [Function],
                                                                    "onExiting": [Function],
                                                                    "style": [Function],
                                                                    "timeout": [Function],
                                                                  },
                                                                  "render": [Function],
                                                                }
                                                              }
                                                              TransitionProps={
                                                                Object {
                                                                  "timeout": 400,
                                                                }
                                                              }
                                                              classes={
                                                                Object {
                                                                  "arrow": "MuiTooltip-arrow",
                                                                  "popper": "MuiTooltip-popper HvTooltip-popper",
                                                                  "popperArrow": "MuiTooltip-popperArrow",
                                                                  "popperInteractive": "MuiTooltip-popperInteractive",
                                                                  "tooltip": "MuiTooltip-tooltip HvTooltip-tooltip",
                                                                  "tooltipArrow": "MuiTooltip-tooltipArrow",
                                                                  "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                                                  "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                                                  "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                                                  "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                                                  "touch": "MuiTooltip-touch",
                                                                }
                                                              }
                                                              disableFocusListener={true}
                                                              disableHoverListener={false}
                                                              disableTouchListener={true}
                                                              enterDelay={300}
                                                              open={false}
                                                              placement="top"
                                                              style={
                                                                Object {
                                                                  "overflow": "hidden",
                                                                  "textOverflow": "ellipsis",
                                                                  "whiteSpace": "nowrap",
                                                                }
                                                              }
                                                              title={
                                                                <WithStyles(ForwardRef)>
                                                                  HCP Anywhere
                                                                </WithStyles(ForwardRef)>
                                                              }
                                                            >
                                                              <div
                                                                aria-describedby={null}
                                                                className=""
                                                                onMouseEnter={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseOver={[Function]}
                                                                onTouchStart={[Function]}
                                                                style={
                                                                  Object {
                                                                    "overflow": "hidden",
                                                                    "textOverflow": "ellipsis",
                                                                    "whiteSpace": "nowrap",
                                                                  }
                                                                }
                                                                title={null}
                                                              >
                                                                <ComponentFunction>
                                                                  HCP Anywhere
                                                                </ComponentFunction>
                                                              </div>
                                                              <ForwardRef(Popper)
                                                                anchorEl={
                                                                  <div
                                                                    class=""
                                                                    style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;"
                                                                  >
                                                                    HCP Anywhere
                                                                  </div>
                                                                }
                                                                className="MuiTooltip-popper HvTooltip-popper"
                                                                id={null}
                                                                open={false}
                                                                placement="top"
                                                                popperOptions={
                                                                  Object {
                                                                    "modifiers": Object {
                                                                      "arrow": Object {
                                                                        "element": null,
                                                                        "enabled": false,
                                                                      },
                                                                    },
                                                                  }
                                                                }
                                                                transition={true}
                                                              />
                                                            </ForwardRef(Tooltip)>
                                                          </WithStyles(ForwardRef(Tooltip))>
                                                        </ForwardRef>
                                                      </WithStyles(ForwardRef)>
                                                    </Component>
                                                  </div>
                                                </ForwardRef>
                                              </WithStyles(ForwardRef)>
                                              <DescendantProvider
                                                id="02-01-02"
                                                level={3}
                                              />
                                            </li>
                                          </ForwardRef>
                                        </WithStyles(ForwardRef)>
                                        <WithStyles(ForwardRef)
                                          className="HvVerticalNavigationNavigation-listItem"
                                          disabled={true}
                                          key="02-01-03"
                                          label={<Unknown />}
                                          nodeId="02-01-03"
                                          payload={
                                            Object {
                                              "disabled": true,
                                              "id": "02-01-03",
                                              "label": "This Computer",
                                            }
                                          }
                                        >
                                          <ForwardRef
                                            className="HvVerticalNavigationNavigation-listItem"
                                            classes={
                                              Object {
                                                "collapsed": "HvVerticalNavigationTreeViewItem-collapsed",
                                                "content": "HvVerticalNavigationTreeViewItem-content",
                                                "disabled": "HvVerticalNavigationTreeViewItem-disabled",
                                                "expandable": "HvVerticalNavigationTreeViewItem-expandable",
                                                "expanded": "HvVerticalNavigationTreeViewItem-expanded",
                                                "focused": "HvVerticalNavigationTreeViewItem-focused",
                                                "group": "HvVerticalNavigationTreeViewItem-group",
                                                "noIcon": "HvVerticalNavigationTreeViewItem-noIcon",
                                                "node": "HvVerticalNavigationTreeViewItem-node",
                                                "root": "HvVerticalNavigationTreeViewItem-root",
                                                "selectable": "HvVerticalNavigationTreeViewItem-selectable",
                                                "selected": "HvVerticalNavigationTreeViewItem-selected",
                                                "unselectable": "HvVerticalNavigationTreeViewItem-unselectable",
                                                "unselected": "HvVerticalNavigationTreeViewItem-unselected",
                                                "withIcon": "HvVerticalNavigationTreeViewItem-withIcon",
                                              }
                                            }
                                            disabled={true}
                                            label={<Unknown />}
                                            nodeId="02-01-03"
                                            payload={
                                              Object {
                                                "disabled": true,
                                                "id": "02-01-03",
                                                "label": "This Computer",
                                              }
                                            }
                                          >
                                            <li
                                              className="HvVerticalNavigationTreeViewItem-node HvVerticalNavigationNavigation-listItem HvVerticalNavigationTreeViewItem-disabled"
                                              id="hvtreeview1-02-01-03"
                                            >
                                              <WithStyles(ForwardRef)
                                                className="HvVerticalNavigationTreeViewItem-content"
                                                component="div"
                                                id="hvtreeview1-02-01-03-button"
                                                innerRef={
                                                  Object {
                                                    "current": <div
                                                      class="HvVerticalNavigationTreeViewItem-content HvTypography-root HvTypography-placeholderText"
                                                      id="hvtreeview1-02-01-03-button"
                                                      role="button"
                                                      style="padding-left: 30px;"
                                                      tabindex="0"
                                                    >
                                                      <div
                                                        class=""
                                                        style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;"
                                                      >
                                                        This Computer
                                                      </div>
                                                    </div>,
                                                  }
                                                }
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                onMouseDown={[Function]}
                                                role="button"
                                                style={
                                                  Object {
                                                    "paddingLeft": 30,
                                                  }
                                                }
                                                tabIndex={0}
                                                variant="placeholderText"
                                              >
                                                <ForwardRef
                                                  className="HvVerticalNavigationTreeViewItem-content"
                                                  classes={
                                                    Object {
                                                      "3xlTitle": "HvTypography-3xlTitle",
                                                      "4xlTitle": "HvTypography-4xlTitle",
                                                      "5xlTitle": "HvTypography-5xlTitle",
                                                      "disabledText": "HvTypography-disabledText",
                                                      "highlightText": "HvTypography-highlightText",
                                                      "lTitle": "HvTypography-lTitle",
                                                      "link": "HvTypography-link",
                                                      "mTitle": "HvTypography-mTitle",
                                                      "noWrap": "HvTypography-noWrap",
                                                      "normalText": "HvTypography-normalText",
                                                      "placeholderText": "HvTypography-placeholderText",
                                                      "root": "HvTypography-root",
                                                      "sTitle": "HvTypography-sTitle",
                                                      "sectionTitle": "HvTypography-sectionTitle",
                                                      "selectedNavText": "HvTypography-selectedNavText",
                                                      "vizText": "HvTypography-vizText",
                                                      "vizTextDisabled": "HvTypography-vizTextDisabled",
                                                      "xlTitle": "HvTypography-xlTitle",
                                                      "xsInlineLink": "HvTypography-xsInlineLink",
                                                      "xsTitle": "HvTypography-xsTitle",
                                                      "xxlTitle": "HvTypography-xxlTitle",
                                                      "xxsTitle": "HvTypography-xxsTitle",
                                                    }
                                                  }
                                                  component="div"
                                                  id="hvtreeview1-02-01-03-button"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  onMouseDown={[Function]}
                                                  role="button"
                                                  style={
                                                    Object {
                                                      "paddingLeft": 30,
                                                    }
                                                  }
                                                  tabIndex={0}
                                                  variant="placeholderText"
                                                >
                                                  <div
                                                    className="HvVerticalNavigationTreeViewItem-content HvTypography-root HvTypography-placeholderText"
                                                    id="hvtreeview1-02-01-03-button"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    onMouseDown={[Function]}
                                                    role="button"
                                                    style={
                                                      Object {
                                                        "paddingLeft": 30,
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <Component>
                                                      <WithStyles(ForwardRef)
                                                        disableFocusListener={true}
                                                        disableHoverListener={false}
                                                        disableTouchListener={true}
                                                        open={false}
                                                        placement="top"
                                                        style={
                                                          Object {
                                                            "overflow": "hidden",
                                                            "textOverflow": "ellipsis",
                                                            "whiteSpace": "nowrap",
                                                          }
                                                        }
                                                        title={
                                                          <WithStyles(ForwardRef)>
                                                            This Computer
                                                          </WithStyles(ForwardRef)>
                                                        }
                                                      >
                                                        <ForwardRef
                                                          classes={
                                                            Object {
                                                              "color": "HvTooltip-color",
                                                              "popper": "HvTooltip-popper",
                                                              "root": "HvTooltip-root",
                                                              "separator": "HvTooltip-separator",
                                                              "separatorColor": "HvTooltip-separatorColor",
                                                              "title": "HvTooltip-title",
                                                              "tooltip": "HvTooltip-tooltip",
                                                              "tooltipMulti": "HvTooltip-tooltipMulti",
                                                              "valueWrapper": "HvTooltip-valueWrapper",
                                                              "values": "HvTooltip-values",
                                                              "valuesContainer": "HvTooltip-valuesContainer",
                                                            }
                                                          }
                                                          disableFocusListener={true}
                                                          disableHoverListener={false}
                                                          disableTouchListener={true}
                                                          open={false}
                                                          placement="top"
                                                          style={
                                                            Object {
                                                              "overflow": "hidden",
                                                              "textOverflow": "ellipsis",
                                                              "whiteSpace": "nowrap",
                                                            }
                                                          }
                                                          title={
                                                            <WithStyles(ForwardRef)>
                                                              This Computer
                                                            </WithStyles(ForwardRef)>
                                                          }
                                                        >
                                                          <WithStyles(ForwardRef(Tooltip))
                                                            TransitionComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "propTypes": Object {
                                                                  "children": [Function],
                                                                  "disableStrictModeCompat": [Function],
                                                                  "in": [Function],
                                                                  "onEnter": [Function],
                                                                  "onEntered": [Function],
                                                                  "onEntering": [Function],
                                                                  "onExit": [Function],
                                                                  "onExited": [Function],
                                                                  "onExiting": [Function],
                                                                  "style": [Function],
                                                                  "timeout": [Function],
                                                                },
                                                                "render": [Function],
                                                              }
                                                            }
                                                            TransitionProps={
                                                              Object {
                                                                "timeout": 400,
                                                              }
                                                            }
                                                            classes={
                                                              Object {
                                                                "popper": "HvTooltip-popper",
                                                                "tooltip": "HvTooltip-tooltip",
                                                              }
                                                            }
                                                            disableFocusListener={true}
                                                            disableHoverListener={false}
                                                            disableTouchListener={true}
                                                            enterDelay={300}
                                                            open={false}
                                                            placement="top"
                                                            style={
                                                              Object {
                                                                "overflow": "hidden",
                                                                "textOverflow": "ellipsis",
                                                                "whiteSpace": "nowrap",
                                                              }
                                                            }
                                                            title={
                                                              <WithStyles(ForwardRef)>
                                                                This Computer
                                                              </WithStyles(ForwardRef)>
                                                            }
                                                          >
                                                            <ForwardRef(Tooltip)
                                                              TransitionComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "propTypes": Object {
                                                                    "children": [Function],
                                                                    "disableStrictModeCompat": [Function],
                                                                    "in": [Function],
                                                                    "onEnter": [Function],
                                                                    "onEntered": [Function],
                                                                    "onEntering": [Function],
                                                                    "onExit": [Function],
                                                                    "onExited": [Function],
                                                                    "onExiting": [Function],
                                                                    "style": [Function],
                                                                    "timeout": [Function],
                                                                  },
                                                                  "render": [Function],
                                                                }
                                                              }
                                                              TransitionProps={
                                                                Object {
                                                                  "timeout": 400,
                                                                }
                                                              }
                                                              classes={
                                                                Object {
                                                                  "arrow": "MuiTooltip-arrow",
                                                                  "popper": "MuiTooltip-popper HvTooltip-popper",
                                                                  "popperArrow": "MuiTooltip-popperArrow",
                                                                  "popperInteractive": "MuiTooltip-popperInteractive",
                                                                  "tooltip": "MuiTooltip-tooltip HvTooltip-tooltip",
                                                                  "tooltipArrow": "MuiTooltip-tooltipArrow",
                                                                  "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                                                  "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                                                  "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                                                  "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                                                  "touch": "MuiTooltip-touch",
                                                                }
                                                              }
                                                              disableFocusListener={true}
                                                              disableHoverListener={false}
                                                              disableTouchListener={true}
                                                              enterDelay={300}
                                                              open={false}
                                                              placement="top"
                                                              style={
                                                                Object {
                                                                  "overflow": "hidden",
                                                                  "textOverflow": "ellipsis",
                                                                  "whiteSpace": "nowrap",
                                                                }
                                                              }
                                                              title={
                                                                <WithStyles(ForwardRef)>
                                                                  This Computer
                                                                </WithStyles(ForwardRef)>
                                                              }
                                                            >
                                                              <div
                                                                aria-describedby={null}
                                                                className=""
                                                                onMouseEnter={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseOver={[Function]}
                                                                onTouchStart={[Function]}
                                                                style={
                                                                  Object {
                                                                    "overflow": "hidden",
                                                                    "textOverflow": "ellipsis",
                                                                    "whiteSpace": "nowrap",
                                                                  }
                                                                }
                                                                title={null}
                                                              >
                                                                <ComponentFunction>
                                                                  This Computer
                                                                </ComponentFunction>
                                                              </div>
                                                              <ForwardRef(Popper)
                                                                anchorEl={
                                                                  <div
                                                                    class=""
                                                                    style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;"
                                                                  >
                                                                    This Computer
                                                                  </div>
                                                                }
                                                                className="MuiTooltip-popper HvTooltip-popper"
                                                                id={null}
                                                                open={false}
                                                                placement="top"
                                                                popperOptions={
                                                                  Object {
                                                                    "modifiers": Object {
                                                                      "arrow": Object {
                                                                        "element": null,
                                                                        "enabled": false,
                                                                      },
                                                                    },
                                                                  }
                                                                }
                                                                transition={true}
                                                              />
                                                            </ForwardRef(Tooltip)>
                                                          </WithStyles(ForwardRef(Tooltip))>
                                                        </ForwardRef>
                                                      </WithStyles(ForwardRef)>
                                                    </Component>
                                                  </div>
                                                </ForwardRef>
                                              </WithStyles(ForwardRef)>
                                              <DescendantProvider
                                                id="02-01-03"
                                                level={3}
                                              />
                                            </li>
                                          </ForwardRef>
                                        </WithStyles(ForwardRef)>
                                      </ul>
                                    </DescendantProvider>
                                  </li>
                                </ForwardRef>
                              </WithStyles(ForwardRef)>
                            </ul>
                          </DescendantProvider>
                        </li>
                      </ForwardRef>
                    </WithStyles(ForwardRef)>
                    <WithStyles(ForwardRef)
                      className="HvVerticalNavigationNavigation-listItem"
                      key="03"
                      label={<Unknown />}
                      nodeId="03"
                      payload={
                        Object {
                          "data": Array [
                            Object {
                              "data": Array [
                                Object {
                                  "id": "03-01-01",
                                  "label": "Log Bundle",
                                },
                              ],
                              "id": "03-01",
                              "label": "Rest API",
                            },
                          ],
                          "id": "03",
                          "label": "Administration",
                        }
                      }
                    >
                      <ForwardRef
                        className="HvVerticalNavigationNavigation-listItem"
                        classes={
                          Object {
                            "collapsed": "HvVerticalNavigationTreeViewItem-collapsed",
                            "content": "HvVerticalNavigationTreeViewItem-content",
                            "disabled": "HvVerticalNavigationTreeViewItem-disabled",
                            "expandable": "HvVerticalNavigationTreeViewItem-expandable",
                            "expanded": "HvVerticalNavigationTreeViewItem-expanded",
                            "focused": "HvVerticalNavigationTreeViewItem-focused",
                            "group": "HvVerticalNavigationTreeViewItem-group",
                            "noIcon": "HvVerticalNavigationTreeViewItem-noIcon",
                            "node": "HvVerticalNavigationTreeViewItem-node",
                            "root": "HvVerticalNavigationTreeViewItem-root",
                            "selectable": "HvVerticalNavigationTreeViewItem-selectable",
                            "selected": "HvVerticalNavigationTreeViewItem-selected",
                            "unselectable": "HvVerticalNavigationTreeViewItem-unselectable",
                            "unselected": "HvVerticalNavigationTreeViewItem-unselected",
                            "withIcon": "HvVerticalNavigationTreeViewItem-withIcon",
                          }
                        }
                        label={<Unknown />}
                        nodeId="03"
                        payload={
                          Object {
                            "data": Array [
                              Object {
                                "data": Array [
                                  Object {
                                    "id": "03-01-01",
                                    "label": "Log Bundle",
                                  },
                                ],
                                "id": "03-01",
                                "label": "Rest API",
                              },
                            ],
                            "id": "03",
                            "label": "Administration",
                          }
                        }
                      >
                        <li
                          className="HvVerticalNavigationTreeViewItem-node HvVerticalNavigationNavigation-listItem HvVerticalNavigationTreeViewItem-selectable HvVerticalNavigationTreeViewItem-unselected"
                          id="hvtreeview1-03"
                        >
                          <WithStyles(ForwardRef)
                            className="HvVerticalNavigationTreeViewItem-content"
                            component="div"
                            id="hvtreeview1-03-button"
                            innerRef={
                              Object {
                                "current": <div
                                  class="HvVerticalNavigationTreeViewItem-content HvTypography-root HvTypography-normalText"
                                  id="hvtreeview1-03-button"
                                  role="button"
                                  style="padding-left: 10px;"
                                  tabindex="0"
                                >
                                  <div
                                    class=""
                                    style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;"
                                  >
                                    Administration
                                  </div>
                                </div>,
                              }
                            }
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            role="button"
                            style={
                              Object {
                                "paddingLeft": 10,
                              }
                            }
                            tabIndex={0}
                            variant="normalText"
                          >
                            <ForwardRef
                              className="HvVerticalNavigationTreeViewItem-content"
                              classes={
                                Object {
                                  "3xlTitle": "HvTypography-3xlTitle",
                                  "4xlTitle": "HvTypography-4xlTitle",
                                  "5xlTitle": "HvTypography-5xlTitle",
                                  "disabledText": "HvTypography-disabledText",
                                  "highlightText": "HvTypography-highlightText",
                                  "lTitle": "HvTypography-lTitle",
                                  "link": "HvTypography-link",
                                  "mTitle": "HvTypography-mTitle",
                                  "noWrap": "HvTypography-noWrap",
                                  "normalText": "HvTypography-normalText",
                                  "placeholderText": "HvTypography-placeholderText",
                                  "root": "HvTypography-root",
                                  "sTitle": "HvTypography-sTitle",
                                  "sectionTitle": "HvTypography-sectionTitle",
                                  "selectedNavText": "HvTypography-selectedNavText",
                                  "vizText": "HvTypography-vizText",
                                  "vizTextDisabled": "HvTypography-vizTextDisabled",
                                  "xlTitle": "HvTypography-xlTitle",
                                  "xsInlineLink": "HvTypography-xsInlineLink",
                                  "xsTitle": "HvTypography-xsTitle",
                                  "xxlTitle": "HvTypography-xxlTitle",
                                  "xxsTitle": "HvTypography-xxsTitle",
                                }
                              }
                              component="div"
                              id="hvtreeview1-03-button"
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              onMouseDown={[Function]}
                              role="button"
                              style={
                                Object {
                                  "paddingLeft": 10,
                                }
                              }
                              tabIndex={0}
                              variant="normalText"
                            >
                              <div
                                className="HvVerticalNavigationTreeViewItem-content HvTypography-root HvTypography-normalText"
                                id="hvtreeview1-03-button"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                onMouseDown={[Function]}
                                role="button"
                                style={
                                  Object {
                                    "paddingLeft": 10,
                                  }
                                }
                                tabIndex={0}
                              >
                                <Component>
                                  <WithStyles(ForwardRef)
                                    disableFocusListener={true}
                                    disableHoverListener={false}
                                    disableTouchListener={true}
                                    open={false}
                                    placement="top"
                                    style={
                                      Object {
                                        "overflow": "hidden",
                                        "textOverflow": "ellipsis",
                                        "whiteSpace": "nowrap",
                                      }
                                    }
                                    title={
                                      <WithStyles(ForwardRef)>
                                        Administration
                                      </WithStyles(ForwardRef)>
                                    }
                                  >
                                    <ForwardRef
                                      classes={
                                        Object {
                                          "color": "HvTooltip-color",
                                          "popper": "HvTooltip-popper",
                                          "root": "HvTooltip-root",
                                          "separator": "HvTooltip-separator",
                                          "separatorColor": "HvTooltip-separatorColor",
                                          "title": "HvTooltip-title",
                                          "tooltip": "HvTooltip-tooltip",
                                          "tooltipMulti": "HvTooltip-tooltipMulti",
                                          "valueWrapper": "HvTooltip-valueWrapper",
                                          "values": "HvTooltip-values",
                                          "valuesContainer": "HvTooltip-valuesContainer",
                                        }
                                      }
                                      disableFocusListener={true}
                                      disableHoverListener={false}
                                      disableTouchListener={true}
                                      open={false}
                                      placement="top"
                                      style={
                                        Object {
                                          "overflow": "hidden",
                                          "textOverflow": "ellipsis",
                                          "whiteSpace": "nowrap",
                                        }
                                      }
                                      title={
                                        <WithStyles(ForwardRef)>
                                          Administration
                                        </WithStyles(ForwardRef)>
                                      }
                                    >
                                      <WithStyles(ForwardRef(Tooltip))
                                        TransitionComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "propTypes": Object {
                                              "children": [Function],
                                              "disableStrictModeCompat": [Function],
                                              "in": [Function],
                                              "onEnter": [Function],
                                              "onEntered": [Function],
                                              "onEntering": [Function],
                                              "onExit": [Function],
                                              "onExited": [Function],
                                              "onExiting": [Function],
                                              "style": [Function],
                                              "timeout": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        TransitionProps={
                                          Object {
                                            "timeout": 400,
                                          }
                                        }
                                        classes={
                                          Object {
                                            "popper": "HvTooltip-popper",
                                            "tooltip": "HvTooltip-tooltip",
                                          }
                                        }
                                        disableFocusListener={true}
                                        disableHoverListener={false}
                                        disableTouchListener={true}
                                        enterDelay={300}
                                        open={false}
                                        placement="top"
                                        style={
                                          Object {
                                            "overflow": "hidden",
                                            "textOverflow": "ellipsis",
                                            "whiteSpace": "nowrap",
                                          }
                                        }
                                        title={
                                          <WithStyles(ForwardRef)>
                                            Administration
                                          </WithStyles(ForwardRef)>
                                        }
                                      >
                                        <ForwardRef(Tooltip)
                                          TransitionComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "propTypes": Object {
                                                "children": [Function],
                                                "disableStrictModeCompat": [Function],
                                                "in": [Function],
                                                "onEnter": [Function],
                                                "onEntered": [Function],
                                                "onEntering": [Function],
                                                "onExit": [Function],
                                                "onExited": [Function],
                                                "onExiting": [Function],
                                                "style": [Function],
                                                "timeout": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          TransitionProps={
                                            Object {
                                              "timeout": 400,
                                            }
                                          }
                                          classes={
                                            Object {
                                              "arrow": "MuiTooltip-arrow",
                                              "popper": "MuiTooltip-popper HvTooltip-popper",
                                              "popperArrow": "MuiTooltip-popperArrow",
                                              "popperInteractive": "MuiTooltip-popperInteractive",
                                              "tooltip": "MuiTooltip-tooltip HvTooltip-tooltip",
                                              "tooltipArrow": "MuiTooltip-tooltipArrow",
                                              "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                              "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                              "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                              "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                              "touch": "MuiTooltip-touch",
                                            }
                                          }
                                          disableFocusListener={true}
                                          disableHoverListener={false}
                                          disableTouchListener={true}
                                          enterDelay={300}
                                          open={false}
                                          placement="top"
                                          style={
                                            Object {
                                              "overflow": "hidden",
                                              "textOverflow": "ellipsis",
                                              "whiteSpace": "nowrap",
                                            }
                                          }
                                          title={
                                            <WithStyles(ForwardRef)>
                                              Administration
                                            </WithStyles(ForwardRef)>
                                          }
                                        >
                                          <div
                                            aria-describedby={null}
                                            className=""
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseOver={[Function]}
                                            onTouchStart={[Function]}
                                            style={
                                              Object {
                                                "overflow": "hidden",
                                                "textOverflow": "ellipsis",
                                                "whiteSpace": "nowrap",
                                              }
                                            }
                                            title={null}
                                          >
                                            <ComponentFunction>
                                              Administration
                                            </ComponentFunction>
                                          </div>
                                          <ForwardRef(Popper)
                                            anchorEl={
                                              <div
                                                class=""
                                                style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;"
                                              >
                                                Administration
                                              </div>
                                            }
                                            className="MuiTooltip-popper HvTooltip-popper"
                                            id={null}
                                            open={false}
                                            placement="top"
                                            popperOptions={
                                              Object {
                                                "modifiers": Object {
                                                  "arrow": Object {
                                                    "element": null,
                                                    "enabled": false,
                                                  },
                                                },
                                              }
                                            }
                                            transition={true}
                                          />
                                        </ForwardRef(Tooltip)>
                                      </WithStyles(ForwardRef(Tooltip))>
                                    </ForwardRef>
                                  </WithStyles(ForwardRef)>
                                </Component>
                              </div>
                            </ForwardRef>
                          </WithStyles(ForwardRef)>
                          <DescendantProvider
                            id="03"
                            level={1}
                          >
                            <ul
                              className="HvVerticalNavigationTreeViewItem-group"
                              id="hvtreeview1-03-group"
                            >
                              <WithStyles(ForwardRef)
                                className="HvVerticalNavigationNavigation-listItem"
                                key="03-01"
                                label={<Unknown />}
                                nodeId="03-01"
                                payload={
                                  Object {
                                    "data": Array [
                                      Object {
                                        "id": "03-01-01",
                                        "label": "Log Bundle",
                                      },
                                    ],
                                    "id": "03-01",
                                    "label": "Rest API",
                                  }
                                }
                              >
                                <ForwardRef
                                  className="HvVerticalNavigationNavigation-listItem"
                                  classes={
                                    Object {
                                      "collapsed": "HvVerticalNavigationTreeViewItem-collapsed",
                                      "content": "HvVerticalNavigationTreeViewItem-content",
                                      "disabled": "HvVerticalNavigationTreeViewItem-disabled",
                                      "expandable": "HvVerticalNavigationTreeViewItem-expandable",
                                      "expanded": "HvVerticalNavigationTreeViewItem-expanded",
                                      "focused": "HvVerticalNavigationTreeViewItem-focused",
                                      "group": "HvVerticalNavigationTreeViewItem-group",
                                      "noIcon": "HvVerticalNavigationTreeViewItem-noIcon",
                                      "node": "HvVerticalNavigationTreeViewItem-node",
                                      "root": "HvVerticalNavigationTreeViewItem-root",
                                      "selectable": "HvVerticalNavigationTreeViewItem-selectable",
                                      "selected": "HvVerticalNavigationTreeViewItem-selected",
                                      "unselectable": "HvVerticalNavigationTreeViewItem-unselectable",
                                      "unselected": "HvVerticalNavigationTreeViewItem-unselected",
                                      "withIcon": "HvVerticalNavigationTreeViewItem-withIcon",
                                    }
                                  }
                                  label={<Unknown />}
                                  nodeId="03-01"
                                  payload={
                                    Object {
                                      "data": Array [
                                        Object {
                                          "id": "03-01-01",
                                          "label": "Log Bundle",
                                        },
                                      ],
                                      "id": "03-01",
                                      "label": "Rest API",
                                    }
                                  }
                                >
                                  <li
                                    className="HvVerticalNavigationTreeViewItem-node HvVerticalNavigationNavigation-listItem HvVerticalNavigationTreeViewItem-selectable HvVerticalNavigationTreeViewItem-unselected"
                                    id="hvtreeview1-03-01"
                                  >
                                    <WithStyles(ForwardRef)
                                      className="HvVerticalNavigationTreeViewItem-content"
                                      component="div"
                                      id="hvtreeview1-03-01-button"
                                      innerRef={
                                        Object {
                                          "current": <div
                                            class="HvVerticalNavigationTreeViewItem-content HvTypography-root HvTypography-normalText"
                                            id="hvtreeview1-03-01-button"
                                            role="button"
                                            style="padding-left: 20px;"
                                            tabindex="0"
                                          >
                                            <div
                                              class=""
                                              style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;"
                                            >
                                              Rest API
                                            </div>
                                          </div>,
                                        }
                                      }
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      onMouseDown={[Function]}
                                      role="button"
                                      style={
                                        Object {
                                          "paddingLeft": 20,
                                        }
                                      }
                                      tabIndex={0}
                                      variant="normalText"
                                    >
                                      <ForwardRef
                                        className="HvVerticalNavigationTreeViewItem-content"
                                        classes={
                                          Object {
                                            "3xlTitle": "HvTypography-3xlTitle",
                                            "4xlTitle": "HvTypography-4xlTitle",
                                            "5xlTitle": "HvTypography-5xlTitle",
                                            "disabledText": "HvTypography-disabledText",
                                            "highlightText": "HvTypography-highlightText",
                                            "lTitle": "HvTypography-lTitle",
                                            "link": "HvTypography-link",
                                            "mTitle": "HvTypography-mTitle",
                                            "noWrap": "HvTypography-noWrap",
                                            "normalText": "HvTypography-normalText",
                                            "placeholderText": "HvTypography-placeholderText",
                                            "root": "HvTypography-root",
                                            "sTitle": "HvTypography-sTitle",
                                            "sectionTitle": "HvTypography-sectionTitle",
                                            "selectedNavText": "HvTypography-selectedNavText",
                                            "vizText": "HvTypography-vizText",
                                            "vizTextDisabled": "HvTypography-vizTextDisabled",
                                            "xlTitle": "HvTypography-xlTitle",
                                            "xsInlineLink": "HvTypography-xsInlineLink",
                                            "xsTitle": "HvTypography-xsTitle",
                                            "xxlTitle": "HvTypography-xxlTitle",
                                            "xxsTitle": "HvTypography-xxsTitle",
                                          }
                                        }
                                        component="div"
                                        id="hvtreeview1-03-01-button"
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        onMouseDown={[Function]}
                                        role="button"
                                        style={
                                          Object {
                                            "paddingLeft": 20,
                                          }
                                        }
                                        tabIndex={0}
                                        variant="normalText"
                                      >
                                        <div
                                          className="HvVerticalNavigationTreeViewItem-content HvTypography-root HvTypography-normalText"
                                          id="hvtreeview1-03-01-button"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onMouseDown={[Function]}
                                          role="button"
                                          style={
                                            Object {
                                              "paddingLeft": 20,
                                            }
                                          }
                                          tabIndex={0}
                                        >
                                          <Component>
                                            <WithStyles(ForwardRef)
                                              disableFocusListener={true}
                                              disableHoverListener={false}
                                              disableTouchListener={true}
                                              open={false}
                                              placement="top"
                                              style={
                                                Object {
                                                  "overflow": "hidden",
                                                  "textOverflow": "ellipsis",
                                                  "whiteSpace": "nowrap",
                                                }
                                              }
                                              title={
                                                <WithStyles(ForwardRef)>
                                                  Rest API
                                                </WithStyles(ForwardRef)>
                                              }
                                            >
                                              <ForwardRef
                                                classes={
                                                  Object {
                                                    "color": "HvTooltip-color",
                                                    "popper": "HvTooltip-popper",
                                                    "root": "HvTooltip-root",
                                                    "separator": "HvTooltip-separator",
                                                    "separatorColor": "HvTooltip-separatorColor",
                                                    "title": "HvTooltip-title",
                                                    "tooltip": "HvTooltip-tooltip",
                                                    "tooltipMulti": "HvTooltip-tooltipMulti",
                                                    "valueWrapper": "HvTooltip-valueWrapper",
                                                    "values": "HvTooltip-values",
                                                    "valuesContainer": "HvTooltip-valuesContainer",
                                                  }
                                                }
                                                disableFocusListener={true}
                                                disableHoverListener={false}
                                                disableTouchListener={true}
                                                open={false}
                                                placement="top"
                                                style={
                                                  Object {
                                                    "overflow": "hidden",
                                                    "textOverflow": "ellipsis",
                                                    "whiteSpace": "nowrap",
                                                  }
                                                }
                                                title={
                                                  <WithStyles(ForwardRef)>
                                                    Rest API
                                                  </WithStyles(ForwardRef)>
                                                }
                                              >
                                                <WithStyles(ForwardRef(Tooltip))
                                                  TransitionComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "propTypes": Object {
                                                        "children": [Function],
                                                        "disableStrictModeCompat": [Function],
                                                        "in": [Function],
                                                        "onEnter": [Function],
                                                        "onEntered": [Function],
                                                        "onEntering": [Function],
                                                        "onExit": [Function],
                                                        "onExited": [Function],
                                                        "onExiting": [Function],
                                                        "style": [Function],
                                                        "timeout": [Function],
                                                      },
                                                      "render": [Function],
                                                    }
                                                  }
                                                  TransitionProps={
                                                    Object {
                                                      "timeout": 400,
                                                    }
                                                  }
                                                  classes={
                                                    Object {
                                                      "popper": "HvTooltip-popper",
                                                      "tooltip": "HvTooltip-tooltip",
                                                    }
                                                  }
                                                  disableFocusListener={true}
                                                  disableHoverListener={false}
                                                  disableTouchListener={true}
                                                  enterDelay={300}
                                                  open={false}
                                                  placement="top"
                                                  style={
                                                    Object {
                                                      "overflow": "hidden",
                                                      "textOverflow": "ellipsis",
                                                      "whiteSpace": "nowrap",
                                                    }
                                                  }
                                                  title={
                                                    <WithStyles(ForwardRef)>
                                                      Rest API
                                                    </WithStyles(ForwardRef)>
                                                  }
                                                >
                                                  <ForwardRef(Tooltip)
                                                    TransitionComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "propTypes": Object {
                                                          "children": [Function],
                                                          "disableStrictModeCompat": [Function],
                                                          "in": [Function],
                                                          "onEnter": [Function],
                                                          "onEntered": [Function],
                                                          "onEntering": [Function],
                                                          "onExit": [Function],
                                                          "onExited": [Function],
                                                          "onExiting": [Function],
                                                          "style": [Function],
                                                          "timeout": [Function],
                                                        },
                                                        "render": [Function],
                                                      }
                                                    }
                                                    TransitionProps={
                                                      Object {
                                                        "timeout": 400,
                                                      }
                                                    }
                                                    classes={
                                                      Object {
                                                        "arrow": "MuiTooltip-arrow",
                                                        "popper": "MuiTooltip-popper HvTooltip-popper",
                                                        "popperArrow": "MuiTooltip-popperArrow",
                                                        "popperInteractive": "MuiTooltip-popperInteractive",
                                                        "tooltip": "MuiTooltip-tooltip HvTooltip-tooltip",
                                                        "tooltipArrow": "MuiTooltip-tooltipArrow",
                                                        "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                                        "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                                        "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                                        "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                                        "touch": "MuiTooltip-touch",
                                                      }
                                                    }
                                                    disableFocusListener={true}
                                                    disableHoverListener={false}
                                                    disableTouchListener={true}
                                                    enterDelay={300}
                                                    open={false}
                                                    placement="top"
                                                    style={
                                                      Object {
                                                        "overflow": "hidden",
                                                        "textOverflow": "ellipsis",
                                                        "whiteSpace": "nowrap",
                                                      }
                                                    }
                                                    title={
                                                      <WithStyles(ForwardRef)>
                                                        Rest API
                                                      </WithStyles(ForwardRef)>
                                                    }
                                                  >
                                                    <div
                                                      aria-describedby={null}
                                                      className=""
                                                      onMouseEnter={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseOver={[Function]}
                                                      onTouchStart={[Function]}
                                                      style={
                                                        Object {
                                                          "overflow": "hidden",
                                                          "textOverflow": "ellipsis",
                                                          "whiteSpace": "nowrap",
                                                        }
                                                      }
                                                      title={null}
                                                    >
                                                      <ComponentFunction>
                                                        Rest API
                                                      </ComponentFunction>
                                                    </div>
                                                    <ForwardRef(Popper)
                                                      anchorEl={
                                                        <div
                                                          class=""
                                                          style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;"
                                                        >
                                                          Rest API
                                                        </div>
                                                      }
                                                      className="MuiTooltip-popper HvTooltip-popper"
                                                      id={null}
                                                      open={false}
                                                      placement="top"
                                                      popperOptions={
                                                        Object {
                                                          "modifiers": Object {
                                                            "arrow": Object {
                                                              "element": null,
                                                              "enabled": false,
                                                            },
                                                          },
                                                        }
                                                      }
                                                      transition={true}
                                                    />
                                                  </ForwardRef(Tooltip)>
                                                </WithStyles(ForwardRef(Tooltip))>
                                              </ForwardRef>
                                            </WithStyles(ForwardRef)>
                                          </Component>
                                        </div>
                                      </ForwardRef>
                                    </WithStyles(ForwardRef)>
                                    <DescendantProvider
                                      id="03-01"
                                      level={2}
                                    >
                                      <ul
                                        className="HvVerticalNavigationTreeViewItem-group"
                                        id="hvtreeview1-03-01-group"
                                      >
                                        <WithStyles(ForwardRef)
                                          className="HvVerticalNavigationNavigation-listItem"
                                          key="03-01-01"
                                          label={<Unknown />}
                                          nodeId="03-01-01"
                                          payload={
                                            Object {
                                              "id": "03-01-01",
                                              "label": "Log Bundle",
                                            }
                                          }
                                        >
                                          <ForwardRef
                                            className="HvVerticalNavigationNavigation-listItem"
                                            classes={
                                              Object {
                                                "collapsed": "HvVerticalNavigationTreeViewItem-collapsed",
                                                "content": "HvVerticalNavigationTreeViewItem-content",
                                                "disabled": "HvVerticalNavigationTreeViewItem-disabled",
                                                "expandable": "HvVerticalNavigationTreeViewItem-expandable",
                                                "expanded": "HvVerticalNavigationTreeViewItem-expanded",
                                                "focused": "HvVerticalNavigationTreeViewItem-focused",
                                                "group": "HvVerticalNavigationTreeViewItem-group",
                                                "noIcon": "HvVerticalNavigationTreeViewItem-noIcon",
                                                "node": "HvVerticalNavigationTreeViewItem-node",
                                                "root": "HvVerticalNavigationTreeViewItem-root",
                                                "selectable": "HvVerticalNavigationTreeViewItem-selectable",
                                                "selected": "HvVerticalNavigationTreeViewItem-selected",
                                                "unselectable": "HvVerticalNavigationTreeViewItem-unselectable",
                                                "unselected": "HvVerticalNavigationTreeViewItem-unselected",
                                                "withIcon": "HvVerticalNavigationTreeViewItem-withIcon",
                                              }
                                            }
                                            label={<Unknown />}
                                            nodeId="03-01-01"
                                            payload={
                                              Object {
                                                "id": "03-01-01",
                                                "label": "Log Bundle",
                                              }
                                            }
                                          >
                                            <li
                                              className="HvVerticalNavigationTreeViewItem-node HvVerticalNavigationNavigation-listItem HvVerticalNavigationTreeViewItem-selectable HvVerticalNavigationTreeViewItem-unselected"
                                              id="hvtreeview1-03-01-01"
                                            >
                                              <WithStyles(ForwardRef)
                                                className="HvVerticalNavigationTreeViewItem-content"
                                                component="div"
                                                id="hvtreeview1-03-01-01-button"
                                                innerRef={
                                                  Object {
                                                    "current": <div
                                                      class="HvVerticalNavigationTreeViewItem-content HvTypography-root HvTypography-normalText"
                                                      id="hvtreeview1-03-01-01-button"
                                                      role="button"
                                                      style="padding-left: 30px;"
                                                      tabindex="0"
                                                    >
                                                      <div
                                                        class=""
                                                        style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;"
                                                      >
                                                        Log Bundle
                                                      </div>
                                                    </div>,
                                                  }
                                                }
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                onMouseDown={[Function]}
                                                role="button"
                                                style={
                                                  Object {
                                                    "paddingLeft": 30,
                                                  }
                                                }
                                                tabIndex={0}
                                                variant="normalText"
                                              >
                                                <ForwardRef
                                                  className="HvVerticalNavigationTreeViewItem-content"
                                                  classes={
                                                    Object {
                                                      "3xlTitle": "HvTypography-3xlTitle",
                                                      "4xlTitle": "HvTypography-4xlTitle",
                                                      "5xlTitle": "HvTypography-5xlTitle",
                                                      "disabledText": "HvTypography-disabledText",
                                                      "highlightText": "HvTypography-highlightText",
                                                      "lTitle": "HvTypography-lTitle",
                                                      "link": "HvTypography-link",
                                                      "mTitle": "HvTypography-mTitle",
                                                      "noWrap": "HvTypography-noWrap",
                                                      "normalText": "HvTypography-normalText",
                                                      "placeholderText": "HvTypography-placeholderText",
                                                      "root": "HvTypography-root",
                                                      "sTitle": "HvTypography-sTitle",
                                                      "sectionTitle": "HvTypography-sectionTitle",
                                                      "selectedNavText": "HvTypography-selectedNavText",
                                                      "vizText": "HvTypography-vizText",
                                                      "vizTextDisabled": "HvTypography-vizTextDisabled",
                                                      "xlTitle": "HvTypography-xlTitle",
                                                      "xsInlineLink": "HvTypography-xsInlineLink",
                                                      "xsTitle": "HvTypography-xsTitle",
                                                      "xxlTitle": "HvTypography-xxlTitle",
                                                      "xxsTitle": "HvTypography-xxsTitle",
                                                    }
                                                  }
                                                  component="div"
                                                  id="hvtreeview1-03-01-01-button"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  onMouseDown={[Function]}
                                                  role="button"
                                                  style={
                                                    Object {
                                                      "paddingLeft": 30,
                                                    }
                                                  }
                                                  tabIndex={0}
                                                  variant="normalText"
                                                >
                                                  <div
                                                    className="HvVerticalNavigationTreeViewItem-content HvTypography-root HvTypography-normalText"
                                                    id="hvtreeview1-03-01-01-button"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    onMouseDown={[Function]}
                                                    role="button"
                                                    style={
                                                      Object {
                                                        "paddingLeft": 30,
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <Component>
                                                      <WithStyles(ForwardRef)
                                                        disableFocusListener={true}
                                                        disableHoverListener={false}
                                                        disableTouchListener={true}
                                                        open={false}
                                                        placement="top"
                                                        style={
                                                          Object {
                                                            "overflow": "hidden",
                                                            "textOverflow": "ellipsis",
                                                            "whiteSpace": "nowrap",
                                                          }
                                                        }
                                                        title={
                                                          <WithStyles(ForwardRef)>
                                                            Log Bundle
                                                          </WithStyles(ForwardRef)>
                                                        }
                                                      >
                                                        <ForwardRef
                                                          classes={
                                                            Object {
                                                              "color": "HvTooltip-color",
                                                              "popper": "HvTooltip-popper",
                                                              "root": "HvTooltip-root",
                                                              "separator": "HvTooltip-separator",
                                                              "separatorColor": "HvTooltip-separatorColor",
                                                              "title": "HvTooltip-title",
                                                              "tooltip": "HvTooltip-tooltip",
                                                              "tooltipMulti": "HvTooltip-tooltipMulti",
                                                              "valueWrapper": "HvTooltip-valueWrapper",
                                                              "values": "HvTooltip-values",
                                                              "valuesContainer": "HvTooltip-valuesContainer",
                                                            }
                                                          }
                                                          disableFocusListener={true}
                                                          disableHoverListener={false}
                                                          disableTouchListener={true}
                                                          open={false}
                                                          placement="top"
                                                          style={
                                                            Object {
                                                              "overflow": "hidden",
                                                              "textOverflow": "ellipsis",
                                                              "whiteSpace": "nowrap",
                                                            }
                                                          }
                                                          title={
                                                            <WithStyles(ForwardRef)>
                                                              Log Bundle
                                                            </WithStyles(ForwardRef)>
                                                          }
                                                        >
                                                          <WithStyles(ForwardRef(Tooltip))
                                                            TransitionComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "propTypes": Object {
                                                                  "children": [Function],
                                                                  "disableStrictModeCompat": [Function],
                                                                  "in": [Function],
                                                                  "onEnter": [Function],
                                                                  "onEntered": [Function],
                                                                  "onEntering": [Function],
                                                                  "onExit": [Function],
                                                                  "onExited": [Function],
                                                                  "onExiting": [Function],
                                                                  "style": [Function],
                                                                  "timeout": [Function],
                                                                },
                                                                "render": [Function],
                                                              }
                                                            }
                                                            TransitionProps={
                                                              Object {
                                                                "timeout": 400,
                                                              }
                                                            }
                                                            classes={
                                                              Object {
                                                                "popper": "HvTooltip-popper",
                                                                "tooltip": "HvTooltip-tooltip",
                                                              }
                                                            }
                                                            disableFocusListener={true}
                                                            disableHoverListener={false}
                                                            disableTouchListener={true}
                                                            enterDelay={300}
                                                            open={false}
                                                            placement="top"
                                                            style={
                                                              Object {
                                                                "overflow": "hidden",
                                                                "textOverflow": "ellipsis",
                                                                "whiteSpace": "nowrap",
                                                              }
                                                            }
                                                            title={
                                                              <WithStyles(ForwardRef)>
                                                                Log Bundle
                                                              </WithStyles(ForwardRef)>
                                                            }
                                                          >
                                                            <ForwardRef(Tooltip)
                                                              TransitionComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "propTypes": Object {
                                                                    "children": [Function],
                                                                    "disableStrictModeCompat": [Function],
                                                                    "in": [Function],
                                                                    "onEnter": [Function],
                                                                    "onEntered": [Function],
                                                                    "onEntering": [Function],
                                                                    "onExit": [Function],
                                                                    "onExited": [Function],
                                                                    "onExiting": [Function],
                                                                    "style": [Function],
                                                                    "timeout": [Function],
                                                                  },
                                                                  "render": [Function],
                                                                }
                                                              }
                                                              TransitionProps={
                                                                Object {
                                                                  "timeout": 400,
                                                                }
                                                              }
                                                              classes={
                                                                Object {
                                                                  "arrow": "MuiTooltip-arrow",
                                                                  "popper": "MuiTooltip-popper HvTooltip-popper",
                                                                  "popperArrow": "MuiTooltip-popperArrow",
                                                                  "popperInteractive": "MuiTooltip-popperInteractive",
                                                                  "tooltip": "MuiTooltip-tooltip HvTooltip-tooltip",
                                                                  "tooltipArrow": "MuiTooltip-tooltipArrow",
                                                                  "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                                                  "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                                                  "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                                                  "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                                                  "touch": "MuiTooltip-touch",
                                                                }
                                                              }
                                                              disableFocusListener={true}
                                                              disableHoverListener={false}
                                                              disableTouchListener={true}
                                                              enterDelay={300}
                                                              open={false}
                                                              placement="top"
                                                              style={
                                                                Object {
                                                                  "overflow": "hidden",
                                                                  "textOverflow": "ellipsis",
                                                                  "whiteSpace": "nowrap",
                                                                }
                                                              }
                                                              title={
                                                                <WithStyles(ForwardRef)>
                                                                  Log Bundle
                                                                </WithStyles(ForwardRef)>
                                                              }
                                                            >
                                                              <div
                                                                aria-describedby={null}
                                                                className=""
                                                                onMouseEnter={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseOver={[Function]}
                                                                onTouchStart={[Function]}
                                                                style={
                                                                  Object {
                                                                    "overflow": "hidden",
                                                                    "textOverflow": "ellipsis",
                                                                    "whiteSpace": "nowrap",
                                                                  }
                                                                }
                                                                title={null}
                                                              >
                                                                <ComponentFunction>
                                                                  Log Bundle
                                                                </ComponentFunction>
                                                              </div>
                                                              <ForwardRef(Popper)
                                                                anchorEl={
                                                                  <div
                                                                    class=""
                                                                    style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;"
                                                                  >
                                                                    Log Bundle
                                                                  </div>
                                                                }
                                                                className="MuiTooltip-popper HvTooltip-popper"
                                                                id={null}
                                                                open={false}
                                                                placement="top"
                                                                popperOptions={
                                                                  Object {
                                                                    "modifiers": Object {
                                                                      "arrow": Object {
                                                                        "element": null,
                                                                        "enabled": false,
                                                                      },
                                                                    },
                                                                  }
                                                                }
                                                                transition={true}
                                                              />
                                                            </ForwardRef(Tooltip)>
                                                          </WithStyles(ForwardRef(Tooltip))>
                                                        </ForwardRef>
                                                      </WithStyles(ForwardRef)>
                                                    </Component>
                                                  </div>
                                                </ForwardRef>
                                              </WithStyles(ForwardRef)>
                                              <DescendantProvider
                                                id="03-01-01"
                                                level={3}
                                              />
                                            </li>
                                          </ForwardRef>
                                        </WithStyles(ForwardRef)>
                                      </ul>
                                    </DescendantProvider>
                                  </li>
                                </ForwardRef>
                              </WithStyles(ForwardRef)>
                            </ul>
                          </DescendantProvider>
                        </li>
                      </ForwardRef>
                    </WithStyles(ForwardRef)>
                  </ul>
                </DescendantProvider>
              </ForwardRef>
            </WithStyles(ForwardRef)>
          </nav>
        </Navigation>
      </WithStyles(Navigation)>
      <WithStyles(Actions)>
        <Actions
          classes={
            Object {
              "action": "HvVerticalNavigationActions-action",
              "noIcon": "HvVerticalNavigationActions-noIcon",
              "root": "HvVerticalNavigationActions-root",
            }
          }
        >
          <div
            className="HvVerticalNavigationActions-root"
          >
            <WithStyles(Action)
              icon={<User />}
              label="Profile"
            >
              <Action
                classes={
                  Object {
                    "action": "HvVerticalNavigationAction-action",
                    "noIcon": "HvVerticalNavigationAction-noIcon",
                    "root": "HvVerticalNavigationAction-root",
                  }
                }
                icon={<User />}
                label="Profile"
              >
                <WithStyles(ForwardRef)
                  className="HvVerticalNavigationAction-action"
                  component="div"
                  onKeyDown={[Function]}
                  role="button"
                  tabIndex={0}
                >
                  <ForwardRef
                    className="HvVerticalNavigationAction-action"
                    classes={
                      Object {
                        "3xlTitle": "HvTypography-3xlTitle",
                        "4xlTitle": "HvTypography-4xlTitle",
                        "5xlTitle": "HvTypography-5xlTitle",
                        "disabledText": "HvTypography-disabledText",
                        "highlightText": "HvTypography-highlightText",
                        "lTitle": "HvTypography-lTitle",
                        "link": "HvTypography-link",
                        "mTitle": "HvTypography-mTitle",
                        "noWrap": "HvTypography-noWrap",
                        "normalText": "HvTypography-normalText",
                        "placeholderText": "HvTypography-placeholderText",
                        "root": "HvTypography-root",
                        "sTitle": "HvTypography-sTitle",
                        "sectionTitle": "HvTypography-sectionTitle",
                        "selectedNavText": "HvTypography-selectedNavText",
                        "vizText": "HvTypography-vizText",
                        "vizTextDisabled": "HvTypography-vizTextDisabled",
                        "xlTitle": "HvTypography-xlTitle",
                        "xsInlineLink": "HvTypography-xsInlineLink",
                        "xsTitle": "HvTypography-xsTitle",
                        "xxlTitle": "HvTypography-xxlTitle",
                        "xxsTitle": "HvTypography-xxsTitle",
                      }
                    }
                    component="div"
                    onKeyDown={[Function]}
                    role="button"
                    tabIndex={0}
                  >
                    <div
                      className="HvVerticalNavigationAction-action HvTypography-root HvTypography-normalText"
                      onKeyDown={[Function]}
                      role="button"
                      tabIndex={0}
                    >
                      <User>
                        <HvIconBase
                          iconSize="S"
                          name="User"
                        >
                          <div
                            className="HvIconBase-root HvIconBase-s"
                            name="User"
                          >
                            <svg
                              focusable={false}
                              height={16}
                              viewBox="0 0 16 16"
                              width={16}
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                className="color0"
                                d="M9.6 8.7A4.49656 4.49656 0 008.03809 0Q8.019-.00007 8 0a4.481 4.481 0 00-4.5 4.46194q-.00009.019 0 .03808A4.563 4.563 0 006.4 8.7 7.687 7.687 0 00.5 16h1a6.487 6.487 0 016.474-6.5H8a6.487 6.487 0 016.5 6.474V16h1a7.493 7.493 0 00-5.9-7.3zM4.5 4.5A3.543 3.543 0 018 1a3.543 3.543 0 013.5 3.5A3.543 3.543 0 018 8a3.543 3.543 0 01-3.5-3.5z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                        </HvIconBase>
                      </User>
                      Profile
                    </div>
                  </ForwardRef>
                </WithStyles(ForwardRef)>
              </Action>
            </WithStyles(Action)>
            <WithStyles(Action)
              icon={<LogOut />}
              label="Logout"
            >
              <Action
                classes={
                  Object {
                    "action": "HvVerticalNavigationAction-action",
                    "noIcon": "HvVerticalNavigationAction-noIcon",
                    "root": "HvVerticalNavigationAction-root",
                  }
                }
                icon={<LogOut />}
                label="Logout"
              >
                <WithStyles(ForwardRef)
                  className="HvVerticalNavigationAction-action"
                  component="div"
                  onKeyDown={[Function]}
                  role="button"
                  tabIndex={0}
                >
                  <ForwardRef
                    className="HvVerticalNavigationAction-action"
                    classes={
                      Object {
                        "3xlTitle": "HvTypography-3xlTitle",
                        "4xlTitle": "HvTypography-4xlTitle",
                        "5xlTitle": "HvTypography-5xlTitle",
                        "disabledText": "HvTypography-disabledText",
                        "highlightText": "HvTypography-highlightText",
                        "lTitle": "HvTypography-lTitle",
                        "link": "HvTypography-link",
                        "mTitle": "HvTypography-mTitle",
                        "noWrap": "HvTypography-noWrap",
                        "normalText": "HvTypography-normalText",
                        "placeholderText": "HvTypography-placeholderText",
                        "root": "HvTypography-root",
                        "sTitle": "HvTypography-sTitle",
                        "sectionTitle": "HvTypography-sectionTitle",
                        "selectedNavText": "HvTypography-selectedNavText",
                        "vizText": "HvTypography-vizText",
                        "vizTextDisabled": "HvTypography-vizTextDisabled",
                        "xlTitle": "HvTypography-xlTitle",
                        "xsInlineLink": "HvTypography-xsInlineLink",
                        "xsTitle": "HvTypography-xsTitle",
                        "xxlTitle": "HvTypography-xxlTitle",
                        "xxsTitle": "HvTypography-xxsTitle",
                      }
                    }
                    component="div"
                    onKeyDown={[Function]}
                    role="button"
                    tabIndex={0}
                  >
                    <div
                      className="HvVerticalNavigationAction-action HvTypography-root HvTypography-normalText"
                      onKeyDown={[Function]}
                      role="button"
                      tabIndex={0}
                    >
                      <LogOut>
                        <HvIconBase
                          iconSize="S"
                          name="LogOut"
                        >
                          <div
                            className="HvIconBase-root HvIconBase-s"
                            name="LogOut"
                          >
                            <svg
                              focusable={false}
                              height={16}
                              viewBox="0 0 16 16"
                              width={16}
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                className="color0"
                                d="M16 16H6v-1h9V1H6V0h10zm-3-7.5v-1H2.7l3-3-.7-.7L.7 8 5 12.2l.7-.7-3-3z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                        </HvIconBase>
                      </LogOut>
                      Logout
                    </div>
                  </ForwardRef>
                </WithStyles(ForwardRef)>
              </Action>
            </WithStyles(Action)>
          </div>
        </Actions>
      </WithStyles(Actions)>
    </div>
  </VerticalNavigation>
</WithStyles(VerticalNavigation)>
`;

exports[`<VerticalNavigation /> collapsable open vertical navigation should render correctly 1`] = `
<WithStyles(VerticalNavigation)
  id="sample3"
  isCollapsable={true}
>
  <VerticalNavigation
    classes={
      Object {
        "legacyMode": "HvVerticalNavigation-legacyMode",
        "noCollapse": "HvVerticalNavigation-noCollapse",
        "root": "HvVerticalNavigation-root",
      }
    }
    id="sample3"
    isCollapsable={true}
  >
    <WithStyles(VerticalContainer)
      closeOnExit={false}
      id="sample3-container"
      isAnchorBarVisible={true}
      isOpen={false}
      position="static"
    >
      <VerticalContainer
        classes={
          Object {
            "absolute": "HvVerticalNavigationVerticalContainer-absolute",
            "anchorBar": "HvVerticalNavigationVerticalContainer-anchorBar",
            "button": "HvVerticalNavigationVerticalContainer-button",
            "contentContainer": "HvVerticalNavigationVerticalContainer-contentContainer",
            "fixed": "HvVerticalNavigationVerticalContainer-fixed",
            "relative": "HvVerticalNavigationVerticalContainer-relative",
            "root": "HvVerticalNavigationVerticalContainer-root",
            "separator": "HvVerticalNavigationVerticalContainer-separator",
            "static": "HvVerticalNavigationVerticalContainer-static",
            "verticalContainer": "HvVerticalNavigationVerticalContainer-verticalContainer",
            "withAnchorBar": "HvVerticalNavigationVerticalContainer-withAnchorBar",
          }
        }
        closeOnExit={false}
        id="sample3-container"
        isAnchorBarVisible={true}
        isOpen={false}
        position="static"
      >
        <div
          className="HvVerticalNavigationVerticalContainer-root HvVerticalNavigationVerticalContainer-withAnchorBar HvVerticalNavigationVerticalContainer-static"
        >
          <ClickAwayListener
            onClickAway={[Function]}
          >
            <div
              className="HvVerticalNavigationVerticalContainer-verticalContainer"
              id="sample3-container"
              onClick={[Function]}
              onTouchEnd={[Function]}
            >
              <div
                className="HvVerticalNavigationVerticalContainer-anchorBar"
                id="sample3-container-anchor-bar"
              >
                <WithStyles(ForwardRef)
                  aria-label="open"
                  className="HvVerticalNavigationVerticalContainer-button"
                  icon={true}
                  id="sample3-container-hamburger-button"
                  onClick={[Function]}
                >
                  <ForwardRef
                    aria-label="open"
                    className="HvVerticalNavigationVerticalContainer-button"
                    classes={
                      Object {
                        "focusVisible": "HvButton-focusVisible",
                        "ghost": "HvButton-ghost",
                        "ghostDisabled": "HvButton-ghostDisabled",
                        "ghostSVG": "HvButton-ghostSVG",
                        "icon": "HvButton-icon",
                        "iconSVG": "HvButton-iconSVG",
                        "primary": "HvButton-primary",
                        "primaryDisabled": "HvButton-primaryDisabled",
                        "primarySVG": "HvButton-primarySVG",
                        "root": "HvButton-root",
                        "secondary": "HvButton-secondary",
                        "secondaryDisabled": "HvButton-secondaryDisabled",
                        "secondarySVG": "HvButton-secondarySVG",
                        "semantic": "HvButton-semantic",
                        "semanticDisabled": "HvButton-semanticDisabled",
                        "semanticSVG": "HvButton-semanticSVG",
                        "startIcon": "HvButton-startIcon",
                      }
                    }
                    icon={true}
                    id="sample3-container-hamburger-button"
                    onClick={[Function]}
                  >
                    <WithStyles(ForwardRef(Button))
                      aria-label="open"
                      className="HvVerticalNavigationVerticalContainer-button HvButton-icon HvButton-ghostSVG"
                      classes={
                        Object {
                          "containedPrimary": "HvButton-primary",
                          "disabled": "HvButton-ghostDisabled",
                          "outlinedPrimary": "HvButton-secondary",
                          "root": "HvButton-root",
                          "startIcon": "HvButton-startIcon",
                          "textPrimary": "HvButton-ghost",
                        }
                      }
                      color="primary"
                      disableRipple={true}
                      focusVisibleClassName="HvIsFocusVisible HvButton-focusVisible"
                      id="sample3-container-hamburger-button"
                      onClick={[Function]}
                      variant="text"
                    >
                      <ForwardRef(Button)
                        aria-label="open"
                        className="HvVerticalNavigationVerticalContainer-button HvButton-icon HvButton-ghostSVG"
                        classes={
                          Object {
                            "colorInherit": "MuiButton-colorInherit",
                            "contained": "MuiButton-contained",
                            "containedPrimary": "MuiButton-containedPrimary HvButton-primary",
                            "containedSecondary": "MuiButton-containedSecondary",
                            "containedSizeLarge": "MuiButton-containedSizeLarge",
                            "containedSizeSmall": "MuiButton-containedSizeSmall",
                            "disableElevation": "MuiButton-disableElevation",
                            "disabled": "Mui-disabled HvButton-ghostDisabled",
                            "endIcon": "MuiButton-endIcon",
                            "focusVisible": "Mui-focusVisible",
                            "fullWidth": "MuiButton-fullWidth",
                            "iconSizeLarge": "MuiButton-iconSizeLarge",
                            "iconSizeMedium": "MuiButton-iconSizeMedium",
                            "iconSizeSmall": "MuiButton-iconSizeSmall",
                            "label": "MuiButton-label",
                            "outlined": "MuiButton-outlined",
                            "outlinedPrimary": "MuiButton-outlinedPrimary HvButton-secondary",
                            "outlinedSecondary": "MuiButton-outlinedSecondary",
                            "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                            "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                            "root": "MuiButton-root HvButton-root",
                            "sizeLarge": "MuiButton-sizeLarge",
                            "sizeSmall": "MuiButton-sizeSmall",
                            "startIcon": "MuiButton-startIcon HvButton-startIcon",
                            "text": "MuiButton-text",
                            "textPrimary": "MuiButton-textPrimary HvButton-ghost",
                            "textSecondary": "MuiButton-textSecondary",
                            "textSizeLarge": "MuiButton-textSizeLarge",
                            "textSizeSmall": "MuiButton-textSizeSmall",
                          }
                        }
                        color="primary"
                        disableRipple={true}
                        focusVisibleClassName="HvIsFocusVisible HvButton-focusVisible"
                        id="sample3-container-hamburger-button"
                        onClick={[Function]}
                        variant="text"
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          aria-label="open"
                          className="MuiButton-root HvButton-root MuiButton-text HvVerticalNavigationVerticalContainer-button HvButton-icon HvButton-ghostSVG MuiButton-textPrimary HvButton-ghost"
                          component="button"
                          disableRipple={true}
                          disabled={false}
                          focusRipple={true}
                          focusVisibleClassName="Mui-focusVisible HvIsFocusVisible HvButton-focusVisible"
                          id="sample3-container-hamburger-button"
                          onClick={[Function]}
                          type="button"
                        >
                          <ForwardRef(ButtonBase)
                            aria-label="open"
                            className="MuiButton-root HvButton-root MuiButton-text HvVerticalNavigationVerticalContainer-button HvButton-icon HvButton-ghostSVG MuiButton-textPrimary HvButton-ghost"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="button"
                            disableRipple={true}
                            disabled={false}
                            focusRipple={true}
                            focusVisibleClassName="Mui-focusVisible HvIsFocusVisible HvButton-focusVisible"
                            id="sample3-container-hamburger-button"
                            onClick={[Function]}
                            type="button"
                          >
                            <button
                              aria-label="open"
                              className="MuiButtonBase-root MuiButton-root HvButton-root MuiButton-text HvVerticalNavigationVerticalContainer-button HvButton-icon HvButton-ghostSVG MuiButton-textPrimary HvButton-ghost"
                              disabled={false}
                              id="sample3-container-hamburger-button"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              tabIndex={0}
                              type="button"
                            >
                              <span
                                className="MuiButton-label"
                              >
                                <Menu>
                                  <HvIconBase
                                    iconSize="S"
                                    name="Menu"
                                  >
                                    <div
                                      className="HvIconBase-root HvIconBase-s"
                                      name="Menu"
                                    >
                                      <svg
                                        focusable={false}
                                        height={16}
                                        viewBox="0 0 16 16"
                                        width={16}
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          className="color0"
                                          d="M0 7.4h16v1H0zM0 3h16V2H0zm0 11h16v-1H0z"
                                          fill="#414141"
                                        />
                                      </svg>
                                    </div>
                                  </HvIconBase>
                                </Menu>
                              </span>
                            </button>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(Button)>
                    </WithStyles(ForwardRef(Button))>
                  </ForwardRef>
                </WithStyles(ForwardRef)>
              </div>
            </div>
          </ClickAwayListener>
        </div>
      </VerticalContainer>
    </WithStyles(VerticalContainer)>
  </VerticalNavigation>
</WithStyles(VerticalNavigation)>
`;

exports[`<VerticalNavigation /> non-collapsable open vertical navigation should render correctly 1`] = `
<WithStyles(VerticalNavigation)
  isCollapsable={false}
  isOpen={true}
  position="fixed"
  toggleOpenCallback={[MockFunction]}
>
  <VerticalNavigation
    classes={
      Object {
        "legacyMode": "HvVerticalNavigation-legacyMode",
        "noCollapse": "HvVerticalNavigation-noCollapse",
        "root": "HvVerticalNavigation-root",
      }
    }
    isCollapsable={false}
    isOpen={true}
    position="fixed"
    toggleOpenCallback={[MockFunction]}
  >
    <WithStyles(VerticalContainer)
      closeOnExit={false}
      isAnchorBarVisible={false}
      isOpen={true}
      position="fixed"
      toggleOpenCallback={[MockFunction]}
    >
      <VerticalContainer
        classes={
          Object {
            "absolute": "HvVerticalNavigationVerticalContainer-absolute",
            "anchorBar": "HvVerticalNavigationVerticalContainer-anchorBar",
            "button": "HvVerticalNavigationVerticalContainer-button",
            "contentContainer": "HvVerticalNavigationVerticalContainer-contentContainer",
            "fixed": "HvVerticalNavigationVerticalContainer-fixed",
            "relative": "HvVerticalNavigationVerticalContainer-relative",
            "root": "HvVerticalNavigationVerticalContainer-root",
            "separator": "HvVerticalNavigationVerticalContainer-separator",
            "static": "HvVerticalNavigationVerticalContainer-static",
            "verticalContainer": "HvVerticalNavigationVerticalContainer-verticalContainer",
            "withAnchorBar": "HvVerticalNavigationVerticalContainer-withAnchorBar",
          }
        }
        closeOnExit={false}
        isAnchorBarVisible={false}
        isOpen={true}
        position="fixed"
        toggleOpenCallback={[MockFunction]}
      >
        <div
          className="HvVerticalNavigationVerticalContainer-root HvVerticalNavigationVerticalContainer-fixed"
        >
          <ClickAwayListener
            onClickAway={[Function]}
          >
            <div
              className="HvVerticalNavigationVerticalContainer-verticalContainer"
              onClick={[Function]}
              onTouchEnd={[Function]}
            >
              <div
                className="HvVerticalNavigationVerticalContainer-contentContainer"
                onKeyDown={[Function]}
              >
                <div
                  className="HvVerticalNavigation-root HvVerticalNavigation-legacyMode"
                >
                  <div>
                    1
                  </div>
                  <div>
                    2
                  </div>
                </div>
              </div>
            </div>
          </ClickAwayListener>
        </div>
      </VerticalContainer>
    </WithStyles(VerticalContainer)>
  </VerticalNavigation>
</WithStyles(VerticalNavigation)>
`;

exports[`<VerticalNavigation /> non-collapsable open vertical navigation should render correctly 2`] = `
<WithStyles(VerticalNavigation)
  isCollapsable={false}
  isOpen={false}
  position="fixed"
  toggleOpenCallback={[MockFunction]}
>
  <VerticalNavigation
    classes={
      Object {
        "legacyMode": "HvVerticalNavigation-legacyMode",
        "noCollapse": "HvVerticalNavigation-noCollapse",
        "root": "HvVerticalNavigation-root",
      }
    }
    isCollapsable={false}
    isOpen={false}
    position="fixed"
    toggleOpenCallback={[MockFunction]}
  >
    <WithStyles(VerticalContainer)
      closeOnExit={false}
      isAnchorBarVisible={false}
      isOpen={false}
      position="fixed"
      toggleOpenCallback={[MockFunction]}
    >
      <VerticalContainer
        classes={
          Object {
            "absolute": "HvVerticalNavigationVerticalContainer-absolute",
            "anchorBar": "HvVerticalNavigationVerticalContainer-anchorBar",
            "button": "HvVerticalNavigationVerticalContainer-button",
            "contentContainer": "HvVerticalNavigationVerticalContainer-contentContainer",
            "fixed": "HvVerticalNavigationVerticalContainer-fixed",
            "relative": "HvVerticalNavigationVerticalContainer-relative",
            "root": "HvVerticalNavigationVerticalContainer-root",
            "separator": "HvVerticalNavigationVerticalContainer-separator",
            "static": "HvVerticalNavigationVerticalContainer-static",
            "verticalContainer": "HvVerticalNavigationVerticalContainer-verticalContainer",
            "withAnchorBar": "HvVerticalNavigationVerticalContainer-withAnchorBar",
          }
        }
        closeOnExit={false}
        isAnchorBarVisible={false}
        isOpen={false}
        position="fixed"
        toggleOpenCallback={[MockFunction]}
      >
        <div
          className="HvVerticalNavigationVerticalContainer-root HvVerticalNavigationVerticalContainer-fixed"
        >
          <ClickAwayListener
            onClickAway={[Function]}
          >
            <div
              className="HvVerticalNavigationVerticalContainer-verticalContainer"
              onClick={[Function]}
              onTouchEnd={[Function]}
            />
          </ClickAwayListener>
        </div>
      </VerticalContainer>
    </WithStyles(VerticalContainer)>
  </VerticalNavigation>
</WithStyles(VerticalNavigation)>
`;
