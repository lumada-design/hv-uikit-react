// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Input should not have the validation section 1`] = `
<WithStyles(WithLabels)
  showInfo={false}
>
  <WithLabels
    classes={
      Object {
        "adornmentButton": "HvInput-adornmentButton",
        "adornmentsBox": "HvInput-adornmentsBox",
        "icon": "HvInput-icon",
        "iconClear": "HvInput-iconClear",
        "infoIcon": "HvInput-infoIcon",
        "infoIconContainer": "HvInput-infoIconContainer",
        "infoText": "HvInput-infoText",
        "input": "HvInput-input",
        "inputDisabled": "HvInput-inputDisabled",
        "inputRoot": "HvInput-inputRoot",
        "inputRootDisabled": "HvInput-inputRootDisabled",
        "inputRootFocused": "HvInput-inputRootFocused",
        "inputRootInvalid": "HvInput-inputRootInvalid",
        "label": "HvInput-label",
        "labelContainer": "HvInput-labelContainer",
        "labelDisabled": "HvInput-labelDisabled",
        "multiLine": "HvInput-multiLine",
        "root": "HvInput-root",
        "suggestionList": "HvInput-suggestionList",
        "suggestionsContainer": "HvInput-suggestionsContainer",
      }
    }
    showInfo={false}
  >
    <WithId
      classes={
        Object {
          "adornmentButton": "HvInput-adornmentButton",
          "adornmentsBox": "HvInput-adornmentsBox",
          "icon": "HvInput-icon",
          "iconClear": "HvInput-iconClear",
          "infoIcon": "HvInput-infoIcon",
          "infoIconContainer": "HvInput-infoIconContainer",
          "infoText": "HvInput-infoText",
          "input": "HvInput-input",
          "inputDisabled": "HvInput-inputDisabled",
          "inputRoot": "HvInput-inputRoot",
          "inputRootDisabled": "HvInput-inputRootDisabled",
          "inputRootFocused": "HvInput-inputRootFocused",
          "inputRootInvalid": "HvInput-inputRootInvalid",
          "label": "HvInput-label",
          "labelContainer": "HvInput-labelContainer",
          "labelDisabled": "HvInput-labelDisabled",
          "multiLine": "HvInput-multiLine",
          "root": "HvInput-root",
          "suggestionList": "HvInput-suggestionList",
          "suggestionsContainer": "HvInput-suggestionsContainer",
        }
      }
      labels={
        Object {
          "clearButtonLabel": "Clear the text",
          "infoText": "",
          "inputLabel": "",
          "maxCharQuantityWarningText": "The value is too big",
          "minCharQuantityWarningText": "The value is too short",
          "placeholder": "",
          "requiredWarningText": "The value is required",
          "warningText": "something wrong",
        }
      }
      showInfo={false}
    >
      <HvInput
        classes={
          Object {
            "adornmentButton": "HvInput-adornmentButton",
            "adornmentsBox": "HvInput-adornmentsBox",
            "icon": "HvInput-icon",
            "iconClear": "HvInput-iconClear",
            "infoIcon": "HvInput-infoIcon",
            "infoIconContainer": "HvInput-infoIconContainer",
            "infoText": "HvInput-infoText",
            "input": "HvInput-input",
            "inputDisabled": "HvInput-inputDisabled",
            "inputRoot": "HvInput-inputRoot",
            "inputRootDisabled": "HvInput-inputRootDisabled",
            "inputRootFocused": "HvInput-inputRootFocused",
            "inputRootInvalid": "HvInput-inputRootInvalid",
            "label": "HvInput-label",
            "labelContainer": "HvInput-labelContainer",
            "labelDisabled": "HvInput-labelDisabled",
            "multiLine": "HvInput-multiLine",
            "root": "HvInput-root",
            "suggestionList": "HvInput-suggestionList",
            "suggestionsContainer": "HvInput-suggestionsContainer",
          }
        }
        id="hv-input-7"
        labels={
          Object {
            "clearButtonLabel": "Clear the text",
            "infoText": "",
            "inputLabel": "",
            "maxCharQuantityWarningText": "The value is too big",
            "minCharQuantityWarningText": "The value is too short",
            "placeholder": "",
            "requiredWarningText": "The value is required",
            "warningText": "something wrong",
          }
        }
        showInfo={false}
      >
        <WithStyles(WithId)
          className="HvInput-root"
          disabled={false}
          id="hv-input-7"
          onBlur={[Function]}
        >
          <WithId
            className="HvInput-root"
            classes={
              Object {
                "root": "HvFormElement-root",
              }
            }
            disabled={false}
            id="hv-input-7"
            onBlur={[Function]}
          >
            <HvFormElement
              className="HvInput-root"
              classes={
                Object {
                  "root": "HvFormElement-root",
                }
              }
              disabled={false}
              id="hv-input-7"
              onBlur={[Function]}
            >
              <div
                className="HvInput-root HvFormElement-root"
                onBlur={[Function]}
              >
                <div
                  className="HvInput-labelContainer"
                />
                <WithStyles(HvBaseInput)
                  autoFocus={false}
                  className=""
                  classes={
                    Object {
                      "input": "HvInput-input",
                      "inputDisabled": "HvInput-inputDisabled",
                      "inputRoot": "HvInput-inputRoot",
                      "inputRootFocused": "HvInput-inputRootFocused",
                      "multiLine": "HvInput-multiLine",
                    }
                  }
                  endAdornment={null}
                  id="hv-input-7-input"
                  inputProps={
                    Object {
                      "ref": Object {
                        "current": <input
                          class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                          id="hv-input-7-input"
                          type="text"
                          value=""
                        />,
                      },
                    }
                  }
                  inputRef={
                    Object {
                      "current": <input
                        class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                        id="hv-input-7-input"
                        type="text"
                        value=""
                      />,
                    }
                  }
                  invalid={false}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  required={false}
                  type="text"
                >
                  <HvBaseInput
                    autoFocus={false}
                    className=""
                    classes={
                      Object {
                        "disabledRoot": "HvBaseInput-disabledRoot",
                        "input": "HvBaseInput-input HvInput-input",
                        "inputBorderContainer": "HvBaseInput-inputBorderContainer",
                        "inputDisabled": "HvBaseInput-inputDisabled HvInput-inputDisabled",
                        "inputLowerBorder": "HvBaseInput-inputLowerBorder",
                        "inputRoot": "HvBaseInput-inputRoot HvInput-inputRoot",
                        "inputRootDisabled": "HvBaseInput-inputRootDisabled",
                        "inputRootFocused": "HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                        "invalidRoot": "HvBaseInput-invalidRoot",
                        "multiLine": "HvBaseInput-multiLine HvInput-multiLine",
                        "root": "HvBaseInput-root",
                      }
                    }
                    endAdornment={null}
                    id="hv-input-7-input"
                    inputProps={
                      Object {
                        "ref": Object {
                          "current": <input
                            class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                            id="hv-input-7-input"
                            type="text"
                            value=""
                          />,
                        },
                      }
                    }
                    inputRef={
                      Object {
                        "current": <input
                          class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                          id="hv-input-7-input"
                          type="text"
                          value=""
                        />,
                      }
                    }
                    invalid={false}
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    required={false}
                    type="text"
                  >
                    <div
                      className="HvBaseInput-root"
                    >
                      <WithStyles(ForwardRef(Input))
                        autoFocus={false}
                        className="HvBaseInput-inputRoot HvInput-inputRoot"
                        classes={
                          Object {
                            "disabled": "HvBaseInput-inputDisabled HvInput-inputDisabled",
                            "focused": "HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                            "input": "HvBaseInput-input HvInput-input",
                            "multiline": "HvBaseInput-multiLine HvInput-multiLine",
                          }
                        }
                        disabled={false}
                        endAdornment={null}
                        id="hv-input-7-input"
                        inputProps={
                          Object {
                            "aria-controls": undefined,
                            "aria-describedby": undefined,
                            "aria-invalid": undefined,
                            "aria-labelledby": undefined,
                            "aria-required": undefined,
                            "ref": Object {
                              "current": <input
                                class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                id="hv-input-7-input"
                                type="text"
                                value=""
                              />,
                            },
                            "required": false,
                          }
                        }
                        inputRef={
                          Object {
                            "current": <input
                              class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                              id="hv-input-7-input"
                              type="text"
                              value=""
                            />,
                          }
                        }
                        multiline={false}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        type="text"
                      >
                        <ForwardRef(Input)
                          autoFocus={false}
                          className="HvBaseInput-inputRoot HvInput-inputRoot"
                          classes={
                            Object {
                              "colorSecondary": "MuiInput-colorSecondary",
                              "disabled": "Mui-disabled HvBaseInput-inputDisabled HvInput-inputDisabled",
                              "error": "Mui-error",
                              "focused": "Mui-focused HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                              "formControl": "MuiInput-formControl",
                              "fullWidth": "MuiInput-fullWidth",
                              "input": "MuiInput-input HvBaseInput-input HvInput-input",
                              "inputMarginDense": "MuiInput-inputMarginDense",
                              "inputMultiline": "MuiInput-inputMultiline",
                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                              "marginDense": "MuiInput-marginDense",
                              "multiline": "MuiInput-multiline HvBaseInput-multiLine HvInput-multiLine",
                              "root": "MuiInput-root",
                              "underline": "MuiInput-underline",
                            }
                          }
                          disableUnderline={true}
                          disabled={false}
                          endAdornment={null}
                          id="hv-input-7-input"
                          inputProps={
                            Object {
                              "aria-controls": undefined,
                              "aria-describedby": undefined,
                              "aria-invalid": undefined,
                              "aria-labelledby": undefined,
                              "aria-required": undefined,
                              "ref": Object {
                                "current": <input
                                  class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                  id="hv-input-7-input"
                                  type="text"
                                  value=""
                                />,
                              },
                              "required": false,
                            }
                          }
                          inputRef={
                            Object {
                              "current": <input
                                class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                id="hv-input-7-input"
                                type="text"
                                value=""
                              />,
                            }
                          }
                          multiline={false}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          type="text"
                        >
                          <WithStyles(ForwardRef(InputBase))
                            autoFocus={false}
                            className="HvBaseInput-inputRoot HvInput-inputRoot"
                            classes={
                              Object {
                                "colorSecondary": "MuiInput-colorSecondary",
                                "disabled": "Mui-disabled HvBaseInput-inputDisabled HvInput-inputDisabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                                "formControl": "MuiInput-formControl",
                                "fullWidth": "MuiInput-fullWidth",
                                "input": "MuiInput-input HvBaseInput-input HvInput-input",
                                "inputMarginDense": "MuiInput-inputMarginDense",
                                "inputMultiline": "MuiInput-inputMultiline",
                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                "marginDense": "MuiInput-marginDense",
                                "multiline": "MuiInput-multiline HvBaseInput-multiLine HvInput-multiLine",
                                "root": "MuiInput-root",
                                "underline": null,
                              }
                            }
                            disabled={false}
                            endAdornment={null}
                            fullWidth={false}
                            id="hv-input-7-input"
                            inputComponent="input"
                            inputProps={
                              Object {
                                "aria-controls": undefined,
                                "aria-describedby": undefined,
                                "aria-invalid": undefined,
                                "aria-labelledby": undefined,
                                "aria-required": undefined,
                                "ref": Object {
                                  "current": <input
                                    class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                    id="hv-input-7-input"
                                    type="text"
                                    value=""
                                  />,
                                },
                                "required": false,
                              }
                            }
                            inputRef={
                              Object {
                                "current": <input
                                  class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                  id="hv-input-7-input"
                                  type="text"
                                  value=""
                                />,
                              }
                            }
                            multiline={false}
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            type="text"
                          >
                            <ForwardRef(InputBase)
                              autoFocus={false}
                              className="HvBaseInput-inputRoot HvInput-inputRoot"
                              classes={
                                Object {
                                  "adornedEnd": "MuiInputBase-adornedEnd",
                                  "adornedStart": "MuiInputBase-adornedStart",
                                  "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                  "disabled": "Mui-disabled Mui-disabled HvBaseInput-inputDisabled HvInput-inputDisabled",
                                  "error": "Mui-error Mui-error",
                                  "focused": "Mui-focused Mui-focused HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                                  "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                  "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                  "input": "MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input",
                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                  "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                  "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                  "multiline": "MuiInputBase-multiline MuiInput-multiline HvBaseInput-multiLine HvInput-multiLine",
                                  "root": "MuiInputBase-root MuiInput-root",
                                }
                              }
                              disabled={false}
                              endAdornment={null}
                              fullWidth={false}
                              id="hv-input-7-input"
                              inputComponent="input"
                              inputProps={
                                Object {
                                  "aria-controls": undefined,
                                  "aria-describedby": undefined,
                                  "aria-invalid": undefined,
                                  "aria-labelledby": undefined,
                                  "aria-required": undefined,
                                  "ref": Object {
                                    "current": <input
                                      class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                      id="hv-input-7-input"
                                      type="text"
                                      value=""
                                    />,
                                  },
                                  "required": false,
                                }
                              }
                              inputRef={
                                Object {
                                  "current": <input
                                    class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                    id="hv-input-7-input"
                                    type="text"
                                    value=""
                                  />,
                                }
                              }
                              multiline={false}
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              type="text"
                            >
                              <div
                                className="MuiInputBase-root MuiInput-root HvBaseInput-inputRoot HvInput-inputRoot"
                                onClick={[Function]}
                              >
                                <input
                                  autoFocus={false}
                                  className="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                  disabled={false}
                                  id="hv-input-7-input"
                                  onAnimationStart={[Function]}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  required={false}
                                  type="text"
                                />
                              </div>
                            </ForwardRef(InputBase)>
                          </WithStyles(ForwardRef(InputBase))>
                        </ForwardRef(Input)>
                      </WithStyles(ForwardRef(Input))>
                      <div
                        className="HvBaseInput-inputBorderContainer"
                      >
                        <div
                          className="HvBaseInput-inputLowerBorder"
                        />
                      </div>
                    </div>
                  </HvBaseInput>
                </WithStyles(HvBaseInput)>
                <WithStyles(HvSuggestions)
                  classes={
                    Object {
                      "list": "HvInput-suggestionList",
                      "root": "HvInput-suggestionsContainer",
                    }
                  }
                  expanded={false}
                  id="hv-input-7-suggestions"
                  onClose={[Function]}
                  onKeyDown={[Function]}
                  onSuggestionSelected={[Function]}
                  suggestionValues={null}
                >
                  <HvSuggestions
                    classes={
                      Object {
                        "list": "HvSuggestions-list HvInput-suggestionList",
                        "popper": "HvSuggestions-popper",
                        "root": "HvSuggestions-root HvInput-suggestionsContainer",
                      }
                    }
                    expanded={false}
                    id="hv-input-7-suggestions"
                    onClose={[Function]}
                    onKeyDown={[Function]}
                    onSuggestionSelected={[Function]}
                    suggestionValues={null}
                  >
                    <div
                      className="HvSuggestions-root HvInput-suggestionsContainer"
                      id="hv-input-7-suggestions"
                      onKeyDown={[Function]}
                    >
                      <ForwardRef(Popper)
                        className="HvSuggestions-popper"
                        disablePortal={true}
                        open={false}
                      />
                    </div>
                  </HvSuggestions>
                </WithStyles(HvSuggestions)>
                <WithStyles(HvHelperText)
                  className="HvInput-infoText"
                  id="hv-input-7-description"
                  notification=""
                  style={
                    Object {
                      "display": "none",
                    }
                  }
                >
                  <HvHelperText
                    className="HvInput-infoText"
                    classes={
                      Object {
                        "helperDisabled": "HvHelperText-helperDisabled",
                        "helperText": "HvHelperText-helperText",
                        "showText": "HvHelperText-showText",
                        "topGutter": "HvHelperText-topGutter",
                      }
                    }
                    id="hv-input-7-description"
                    notification=""
                    style={
                      Object {
                        "display": "none",
                      }
                    }
                  >
                    <WithStyles(ForwardRef)
                      className="HvInput-infoText HvHelperText-helperText HvHelperText-showText HvHelperText-topGutter"
                      id="hv-input-7-description"
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                    >
                      <ForwardRef
                        className="HvInput-infoText HvHelperText-helperText HvHelperText-showText HvHelperText-topGutter"
                        classes={
                          Object {
                            "3xlTitle": "HvTypography-3xlTitle",
                            "4xlTitle": "HvTypography-4xlTitle",
                            "5xlTitle": "HvTypography-5xlTitle",
                            "disabledText": "HvTypography-disabledText",
                            "highlightText": "HvTypography-highlightText",
                            "lTitle": "HvTypography-lTitle",
                            "link": "HvTypography-link",
                            "mTitle": "HvTypography-mTitle",
                            "normalText": "HvTypography-normalText",
                            "placeholderText": "HvTypography-placeholderText",
                            "root": "HvTypography-root",
                            "sTitle": "HvTypography-sTitle",
                            "sectionTitle": "HvTypography-sectionTitle",
                            "selectedNavText": "HvTypography-selectedNavText",
                            "vizText": "HvTypography-vizText",
                            "vizTextDisabled": "HvTypography-vizTextDisabled",
                            "xlTitle": "HvTypography-xlTitle",
                            "xsInlineLink": "HvTypography-xsInlineLink",
                            "xsTitle": "HvTypography-xsTitle",
                            "xxlTitle": "HvTypography-xxlTitle",
                            "xxsTitle": "HvTypography-xxsTitle",
                          }
                        }
                        id="hv-input-7-description"
                        style={
                          Object {
                            "display": "none",
                          }
                        }
                      >
                        <p
                          className="HvInput-infoText HvHelperText-helperText HvHelperText-showText HvHelperText-topGutter HvTypography-root HvTypography-normalText"
                          id="hv-input-7-description"
                          style={
                            Object {
                              "display": "none",
                            }
                          }
                        />
                      </ForwardRef>
                    </WithStyles(ForwardRef)>
                    <WithStyles(ForwardRef)
                      aria-atomic="true"
                      aria-live="polite"
                      aria-relevant="additions text"
                      className="HvInput-infoText HvHelperText-helperText HvHelperText-topGutter"
                      id="hv-input-7-description-notification"
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                    >
                      <ForwardRef
                        aria-atomic="true"
                        aria-live="polite"
                        aria-relevant="additions text"
                        className="HvInput-infoText HvHelperText-helperText HvHelperText-topGutter"
                        classes={
                          Object {
                            "3xlTitle": "HvTypography-3xlTitle",
                            "4xlTitle": "HvTypography-4xlTitle",
                            "5xlTitle": "HvTypography-5xlTitle",
                            "disabledText": "HvTypography-disabledText",
                            "highlightText": "HvTypography-highlightText",
                            "lTitle": "HvTypography-lTitle",
                            "link": "HvTypography-link",
                            "mTitle": "HvTypography-mTitle",
                            "normalText": "HvTypography-normalText",
                            "placeholderText": "HvTypography-placeholderText",
                            "root": "HvTypography-root",
                            "sTitle": "HvTypography-sTitle",
                            "sectionTitle": "HvTypography-sectionTitle",
                            "selectedNavText": "HvTypography-selectedNavText",
                            "vizText": "HvTypography-vizText",
                            "vizTextDisabled": "HvTypography-vizTextDisabled",
                            "xlTitle": "HvTypography-xlTitle",
                            "xsInlineLink": "HvTypography-xsInlineLink",
                            "xsTitle": "HvTypography-xsTitle",
                            "xxlTitle": "HvTypography-xxlTitle",
                            "xxsTitle": "HvTypography-xxsTitle",
                          }
                        }
                        id="hv-input-7-description-notification"
                        style={
                          Object {
                            "display": "none",
                          }
                        }
                      >
                        <p
                          aria-atomic="true"
                          aria-live="polite"
                          aria-relevant="additions text"
                          className="HvInput-infoText HvHelperText-helperText HvHelperText-topGutter HvTypography-root HvTypography-normalText"
                          id="hv-input-7-description-notification"
                          style={
                            Object {
                              "display": "none",
                            }
                          }
                        />
                      </ForwardRef>
                    </WithStyles(ForwardRef)>
                  </HvHelperText>
                </WithStyles(HvHelperText)>
              </div>
            </HvFormElement>
          </WithId>
        </WithStyles(WithId)>
      </HvInput>
    </WithId>
  </WithLabels>
</WithStyles(WithLabels)>
`;

exports[`Input should pass other props to the child input component 1`] = `
<WithStyles(WithLabels)
  inputProps={
    Object {
      "maxLength": 250,
    }
  }
>
  <WithLabels
    classes={
      Object {
        "adornmentButton": "HvInput-adornmentButton",
        "adornmentsBox": "HvInput-adornmentsBox",
        "icon": "HvInput-icon",
        "iconClear": "HvInput-iconClear",
        "infoIcon": "HvInput-infoIcon",
        "infoIconContainer": "HvInput-infoIconContainer",
        "infoText": "HvInput-infoText",
        "input": "HvInput-input",
        "inputDisabled": "HvInput-inputDisabled",
        "inputRoot": "HvInput-inputRoot",
        "inputRootDisabled": "HvInput-inputRootDisabled",
        "inputRootFocused": "HvInput-inputRootFocused",
        "inputRootInvalid": "HvInput-inputRootInvalid",
        "label": "HvInput-label",
        "labelContainer": "HvInput-labelContainer",
        "labelDisabled": "HvInput-labelDisabled",
        "multiLine": "HvInput-multiLine",
        "root": "HvInput-root",
        "suggestionList": "HvInput-suggestionList",
        "suggestionsContainer": "HvInput-suggestionsContainer",
      }
    }
    inputProps={
      Object {
        "maxLength": 250,
      }
    }
  >
    <WithId
      classes={
        Object {
          "adornmentButton": "HvInput-adornmentButton",
          "adornmentsBox": "HvInput-adornmentsBox",
          "icon": "HvInput-icon",
          "iconClear": "HvInput-iconClear",
          "infoIcon": "HvInput-infoIcon",
          "infoIconContainer": "HvInput-infoIconContainer",
          "infoText": "HvInput-infoText",
          "input": "HvInput-input",
          "inputDisabled": "HvInput-inputDisabled",
          "inputRoot": "HvInput-inputRoot",
          "inputRootDisabled": "HvInput-inputRootDisabled",
          "inputRootFocused": "HvInput-inputRootFocused",
          "inputRootInvalid": "HvInput-inputRootInvalid",
          "label": "HvInput-label",
          "labelContainer": "HvInput-labelContainer",
          "labelDisabled": "HvInput-labelDisabled",
          "multiLine": "HvInput-multiLine",
          "root": "HvInput-root",
          "suggestionList": "HvInput-suggestionList",
          "suggestionsContainer": "HvInput-suggestionsContainer",
        }
      }
      inputProps={
        Object {
          "maxLength": 250,
        }
      }
      labels={
        Object {
          "clearButtonLabel": "Clear the text",
          "infoText": "",
          "inputLabel": "",
          "maxCharQuantityWarningText": "The value is too big",
          "minCharQuantityWarningText": "The value is too short",
          "placeholder": "",
          "requiredWarningText": "The value is required",
          "warningText": "something wrong",
        }
      }
    >
      <HvInput
        classes={
          Object {
            "adornmentButton": "HvInput-adornmentButton",
            "adornmentsBox": "HvInput-adornmentsBox",
            "icon": "HvInput-icon",
            "iconClear": "HvInput-iconClear",
            "infoIcon": "HvInput-infoIcon",
            "infoIconContainer": "HvInput-infoIconContainer",
            "infoText": "HvInput-infoText",
            "input": "HvInput-input",
            "inputDisabled": "HvInput-inputDisabled",
            "inputRoot": "HvInput-inputRoot",
            "inputRootDisabled": "HvInput-inputRootDisabled",
            "inputRootFocused": "HvInput-inputRootFocused",
            "inputRootInvalid": "HvInput-inputRootInvalid",
            "label": "HvInput-label",
            "labelContainer": "HvInput-labelContainer",
            "labelDisabled": "HvInput-labelDisabled",
            "multiLine": "HvInput-multiLine",
            "root": "HvInput-root",
            "suggestionList": "HvInput-suggestionList",
            "suggestionsContainer": "HvInput-suggestionsContainer",
          }
        }
        id="hv-input-9"
        inputProps={
          Object {
            "maxLength": 250,
          }
        }
        labels={
          Object {
            "clearButtonLabel": "Clear the text",
            "infoText": "",
            "inputLabel": "",
            "maxCharQuantityWarningText": "The value is too big",
            "minCharQuantityWarningText": "The value is too short",
            "placeholder": "",
            "requiredWarningText": "The value is required",
            "warningText": "something wrong",
          }
        }
      >
        <WithStyles(WithId)
          className="HvInput-root"
          disabled={false}
          id="hv-input-9"
          onBlur={[Function]}
        >
          <WithId
            className="HvInput-root"
            classes={
              Object {
                "root": "HvFormElement-root",
              }
            }
            disabled={false}
            id="hv-input-9"
            onBlur={[Function]}
          >
            <HvFormElement
              className="HvInput-root"
              classes={
                Object {
                  "root": "HvFormElement-root",
                }
              }
              disabled={false}
              id="hv-input-9"
              onBlur={[Function]}
            >
              <div
                className="HvInput-root HvFormElement-root"
                onBlur={[Function]}
              >
                <div
                  className="HvInput-labelContainer"
                />
                <WithStyles(HvBaseInput)
                  autoFocus={false}
                  className=""
                  classes={
                    Object {
                      "input": "HvInput-input",
                      "inputDisabled": "HvInput-inputDisabled",
                      "inputRoot": "HvInput-inputRoot",
                      "inputRootFocused": "HvInput-inputRootFocused",
                      "multiLine": "HvInput-multiLine",
                    }
                  }
                  endAdornment={null}
                  id="hv-input-9-input"
                  inputProps={
                    Object {
                      "maxLength": 250,
                      "ref": Object {
                        "current": <input
                          class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                          id="hv-input-9-input"
                          maxlength="250"
                          type="text"
                          value=""
                        />,
                      },
                    }
                  }
                  inputRef={
                    Object {
                      "current": <input
                        class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                        id="hv-input-9-input"
                        maxlength="250"
                        type="text"
                        value=""
                      />,
                    }
                  }
                  invalid={false}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  required={false}
                  type="text"
                >
                  <HvBaseInput
                    autoFocus={false}
                    className=""
                    classes={
                      Object {
                        "disabledRoot": "HvBaseInput-disabledRoot",
                        "input": "HvBaseInput-input HvInput-input",
                        "inputBorderContainer": "HvBaseInput-inputBorderContainer",
                        "inputDisabled": "HvBaseInput-inputDisabled HvInput-inputDisabled",
                        "inputLowerBorder": "HvBaseInput-inputLowerBorder",
                        "inputRoot": "HvBaseInput-inputRoot HvInput-inputRoot",
                        "inputRootDisabled": "HvBaseInput-inputRootDisabled",
                        "inputRootFocused": "HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                        "invalidRoot": "HvBaseInput-invalidRoot",
                        "multiLine": "HvBaseInput-multiLine HvInput-multiLine",
                        "root": "HvBaseInput-root",
                      }
                    }
                    endAdornment={null}
                    id="hv-input-9-input"
                    inputProps={
                      Object {
                        "maxLength": 250,
                        "ref": Object {
                          "current": <input
                            class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                            id="hv-input-9-input"
                            maxlength="250"
                            type="text"
                            value=""
                          />,
                        },
                      }
                    }
                    inputRef={
                      Object {
                        "current": <input
                          class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                          id="hv-input-9-input"
                          maxlength="250"
                          type="text"
                          value=""
                        />,
                      }
                    }
                    invalid={false}
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    required={false}
                    type="text"
                  >
                    <div
                      className="HvBaseInput-root"
                    >
                      <WithStyles(ForwardRef(Input))
                        autoFocus={false}
                        className="HvBaseInput-inputRoot HvInput-inputRoot"
                        classes={
                          Object {
                            "disabled": "HvBaseInput-inputDisabled HvInput-inputDisabled",
                            "focused": "HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                            "input": "HvBaseInput-input HvInput-input",
                            "multiline": "HvBaseInput-multiLine HvInput-multiLine",
                          }
                        }
                        disabled={false}
                        endAdornment={null}
                        id="hv-input-9-input"
                        inputProps={
                          Object {
                            "aria-controls": undefined,
                            "aria-describedby": undefined,
                            "aria-invalid": undefined,
                            "aria-labelledby": undefined,
                            "aria-required": undefined,
                            "maxLength": 250,
                            "ref": Object {
                              "current": <input
                                class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                id="hv-input-9-input"
                                maxlength="250"
                                type="text"
                                value=""
                              />,
                            },
                            "required": false,
                          }
                        }
                        inputRef={
                          Object {
                            "current": <input
                              class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                              id="hv-input-9-input"
                              maxlength="250"
                              type="text"
                              value=""
                            />,
                          }
                        }
                        multiline={false}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        type="text"
                      >
                        <ForwardRef(Input)
                          autoFocus={false}
                          className="HvBaseInput-inputRoot HvInput-inputRoot"
                          classes={
                            Object {
                              "colorSecondary": "MuiInput-colorSecondary",
                              "disabled": "Mui-disabled HvBaseInput-inputDisabled HvInput-inputDisabled",
                              "error": "Mui-error",
                              "focused": "Mui-focused HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                              "formControl": "MuiInput-formControl",
                              "fullWidth": "MuiInput-fullWidth",
                              "input": "MuiInput-input HvBaseInput-input HvInput-input",
                              "inputMarginDense": "MuiInput-inputMarginDense",
                              "inputMultiline": "MuiInput-inputMultiline",
                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                              "marginDense": "MuiInput-marginDense",
                              "multiline": "MuiInput-multiline HvBaseInput-multiLine HvInput-multiLine",
                              "root": "MuiInput-root",
                              "underline": "MuiInput-underline",
                            }
                          }
                          disableUnderline={true}
                          disabled={false}
                          endAdornment={null}
                          id="hv-input-9-input"
                          inputProps={
                            Object {
                              "aria-controls": undefined,
                              "aria-describedby": undefined,
                              "aria-invalid": undefined,
                              "aria-labelledby": undefined,
                              "aria-required": undefined,
                              "maxLength": 250,
                              "ref": Object {
                                "current": <input
                                  class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                  id="hv-input-9-input"
                                  maxlength="250"
                                  type="text"
                                  value=""
                                />,
                              },
                              "required": false,
                            }
                          }
                          inputRef={
                            Object {
                              "current": <input
                                class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                id="hv-input-9-input"
                                maxlength="250"
                                type="text"
                                value=""
                              />,
                            }
                          }
                          multiline={false}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          type="text"
                        >
                          <WithStyles(ForwardRef(InputBase))
                            autoFocus={false}
                            className="HvBaseInput-inputRoot HvInput-inputRoot"
                            classes={
                              Object {
                                "colorSecondary": "MuiInput-colorSecondary",
                                "disabled": "Mui-disabled HvBaseInput-inputDisabled HvInput-inputDisabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                                "formControl": "MuiInput-formControl",
                                "fullWidth": "MuiInput-fullWidth",
                                "input": "MuiInput-input HvBaseInput-input HvInput-input",
                                "inputMarginDense": "MuiInput-inputMarginDense",
                                "inputMultiline": "MuiInput-inputMultiline",
                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                "marginDense": "MuiInput-marginDense",
                                "multiline": "MuiInput-multiline HvBaseInput-multiLine HvInput-multiLine",
                                "root": "MuiInput-root",
                                "underline": null,
                              }
                            }
                            disabled={false}
                            endAdornment={null}
                            fullWidth={false}
                            id="hv-input-9-input"
                            inputComponent="input"
                            inputProps={
                              Object {
                                "aria-controls": undefined,
                                "aria-describedby": undefined,
                                "aria-invalid": undefined,
                                "aria-labelledby": undefined,
                                "aria-required": undefined,
                                "maxLength": 250,
                                "ref": Object {
                                  "current": <input
                                    class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                    id="hv-input-9-input"
                                    maxlength="250"
                                    type="text"
                                    value=""
                                  />,
                                },
                                "required": false,
                              }
                            }
                            inputRef={
                              Object {
                                "current": <input
                                  class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                  id="hv-input-9-input"
                                  maxlength="250"
                                  type="text"
                                  value=""
                                />,
                              }
                            }
                            multiline={false}
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            type="text"
                          >
                            <ForwardRef(InputBase)
                              autoFocus={false}
                              className="HvBaseInput-inputRoot HvInput-inputRoot"
                              classes={
                                Object {
                                  "adornedEnd": "MuiInputBase-adornedEnd",
                                  "adornedStart": "MuiInputBase-adornedStart",
                                  "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                  "disabled": "Mui-disabled Mui-disabled HvBaseInput-inputDisabled HvInput-inputDisabled",
                                  "error": "Mui-error Mui-error",
                                  "focused": "Mui-focused Mui-focused HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                                  "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                  "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                  "input": "MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input",
                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                  "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                  "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                  "multiline": "MuiInputBase-multiline MuiInput-multiline HvBaseInput-multiLine HvInput-multiLine",
                                  "root": "MuiInputBase-root MuiInput-root",
                                }
                              }
                              disabled={false}
                              endAdornment={null}
                              fullWidth={false}
                              id="hv-input-9-input"
                              inputComponent="input"
                              inputProps={
                                Object {
                                  "aria-controls": undefined,
                                  "aria-describedby": undefined,
                                  "aria-invalid": undefined,
                                  "aria-labelledby": undefined,
                                  "aria-required": undefined,
                                  "maxLength": 250,
                                  "ref": Object {
                                    "current": <input
                                      class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                      id="hv-input-9-input"
                                      maxlength="250"
                                      type="text"
                                      value=""
                                    />,
                                  },
                                  "required": false,
                                }
                              }
                              inputRef={
                                Object {
                                  "current": <input
                                    class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                    id="hv-input-9-input"
                                    maxlength="250"
                                    type="text"
                                    value=""
                                  />,
                                }
                              }
                              multiline={false}
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              type="text"
                            >
                              <div
                                className="MuiInputBase-root MuiInput-root HvBaseInput-inputRoot HvInput-inputRoot"
                                onClick={[Function]}
                              >
                                <input
                                  autoFocus={false}
                                  className="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                  disabled={false}
                                  id="hv-input-9-input"
                                  maxLength={250}
                                  onAnimationStart={[Function]}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  required={false}
                                  type="text"
                                />
                              </div>
                            </ForwardRef(InputBase)>
                          </WithStyles(ForwardRef(InputBase))>
                        </ForwardRef(Input)>
                      </WithStyles(ForwardRef(Input))>
                      <div
                        className="HvBaseInput-inputBorderContainer"
                      >
                        <div
                          className="HvBaseInput-inputLowerBorder"
                        />
                      </div>
                    </div>
                  </HvBaseInput>
                </WithStyles(HvBaseInput)>
                <WithStyles(HvSuggestions)
                  classes={
                    Object {
                      "list": "HvInput-suggestionList",
                      "root": "HvInput-suggestionsContainer",
                    }
                  }
                  expanded={false}
                  id="hv-input-9-suggestions"
                  onClose={[Function]}
                  onKeyDown={[Function]}
                  onSuggestionSelected={[Function]}
                  suggestionValues={null}
                >
                  <HvSuggestions
                    classes={
                      Object {
                        "list": "HvSuggestions-list HvInput-suggestionList",
                        "popper": "HvSuggestions-popper",
                        "root": "HvSuggestions-root HvInput-suggestionsContainer",
                      }
                    }
                    expanded={false}
                    id="hv-input-9-suggestions"
                    onClose={[Function]}
                    onKeyDown={[Function]}
                    onSuggestionSelected={[Function]}
                    suggestionValues={null}
                  >
                    <div
                      className="HvSuggestions-root HvInput-suggestionsContainer"
                      id="hv-input-9-suggestions"
                      onKeyDown={[Function]}
                    >
                      <ForwardRef(Popper)
                        className="HvSuggestions-popper"
                        disablePortal={true}
                        open={false}
                      />
                    </div>
                  </HvSuggestions>
                </WithStyles(HvSuggestions)>
                <WithStyles(HvHelperText)
                  className="HvInput-infoText"
                  id="hv-input-9-description"
                  notification=""
                  style={
                    Object {
                      "display": "none",
                    }
                  }
                >
                  <HvHelperText
                    className="HvInput-infoText"
                    classes={
                      Object {
                        "helperDisabled": "HvHelperText-helperDisabled",
                        "helperText": "HvHelperText-helperText",
                        "showText": "HvHelperText-showText",
                        "topGutter": "HvHelperText-topGutter",
                      }
                    }
                    id="hv-input-9-description"
                    notification=""
                    style={
                      Object {
                        "display": "none",
                      }
                    }
                  >
                    <WithStyles(ForwardRef)
                      className="HvInput-infoText HvHelperText-helperText HvHelperText-showText HvHelperText-topGutter"
                      id="hv-input-9-description"
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                    >
                      <ForwardRef
                        className="HvInput-infoText HvHelperText-helperText HvHelperText-showText HvHelperText-topGutter"
                        classes={
                          Object {
                            "3xlTitle": "HvTypography-3xlTitle",
                            "4xlTitle": "HvTypography-4xlTitle",
                            "5xlTitle": "HvTypography-5xlTitle",
                            "disabledText": "HvTypography-disabledText",
                            "highlightText": "HvTypography-highlightText",
                            "lTitle": "HvTypography-lTitle",
                            "link": "HvTypography-link",
                            "mTitle": "HvTypography-mTitle",
                            "normalText": "HvTypography-normalText",
                            "placeholderText": "HvTypography-placeholderText",
                            "root": "HvTypography-root",
                            "sTitle": "HvTypography-sTitle",
                            "sectionTitle": "HvTypography-sectionTitle",
                            "selectedNavText": "HvTypography-selectedNavText",
                            "vizText": "HvTypography-vizText",
                            "vizTextDisabled": "HvTypography-vizTextDisabled",
                            "xlTitle": "HvTypography-xlTitle",
                            "xsInlineLink": "HvTypography-xsInlineLink",
                            "xsTitle": "HvTypography-xsTitle",
                            "xxlTitle": "HvTypography-xxlTitle",
                            "xxsTitle": "HvTypography-xxsTitle",
                          }
                        }
                        id="hv-input-9-description"
                        style={
                          Object {
                            "display": "none",
                          }
                        }
                      >
                        <p
                          className="HvInput-infoText HvHelperText-helperText HvHelperText-showText HvHelperText-topGutter HvTypography-root HvTypography-normalText"
                          id="hv-input-9-description"
                          style={
                            Object {
                              "display": "none",
                            }
                          }
                        />
                      </ForwardRef>
                    </WithStyles(ForwardRef)>
                    <WithStyles(ForwardRef)
                      aria-atomic="true"
                      aria-live="polite"
                      aria-relevant="additions text"
                      className="HvInput-infoText HvHelperText-helperText HvHelperText-topGutter"
                      id="hv-input-9-description-notification"
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                    >
                      <ForwardRef
                        aria-atomic="true"
                        aria-live="polite"
                        aria-relevant="additions text"
                        className="HvInput-infoText HvHelperText-helperText HvHelperText-topGutter"
                        classes={
                          Object {
                            "3xlTitle": "HvTypography-3xlTitle",
                            "4xlTitle": "HvTypography-4xlTitle",
                            "5xlTitle": "HvTypography-5xlTitle",
                            "disabledText": "HvTypography-disabledText",
                            "highlightText": "HvTypography-highlightText",
                            "lTitle": "HvTypography-lTitle",
                            "link": "HvTypography-link",
                            "mTitle": "HvTypography-mTitle",
                            "normalText": "HvTypography-normalText",
                            "placeholderText": "HvTypography-placeholderText",
                            "root": "HvTypography-root",
                            "sTitle": "HvTypography-sTitle",
                            "sectionTitle": "HvTypography-sectionTitle",
                            "selectedNavText": "HvTypography-selectedNavText",
                            "vizText": "HvTypography-vizText",
                            "vizTextDisabled": "HvTypography-vizTextDisabled",
                            "xlTitle": "HvTypography-xlTitle",
                            "xsInlineLink": "HvTypography-xsInlineLink",
                            "xsTitle": "HvTypography-xsTitle",
                            "xxlTitle": "HvTypography-xxlTitle",
                            "xxsTitle": "HvTypography-xxsTitle",
                          }
                        }
                        id="hv-input-9-description-notification"
                        style={
                          Object {
                            "display": "none",
                          }
                        }
                      >
                        <p
                          aria-atomic="true"
                          aria-live="polite"
                          aria-relevant="additions text"
                          className="HvInput-infoText HvHelperText-helperText HvHelperText-topGutter HvTypography-root HvTypography-normalText"
                          id="hv-input-9-description-notification"
                          style={
                            Object {
                              "display": "none",
                            }
                          }
                        />
                      </ForwardRef>
                    </WithStyles(ForwardRef)>
                  </HvHelperText>
                </WithStyles(HvHelperText)>
              </div>
            </HvFormElement>
          </WithId>
        </WithStyles(WithId)>
      </HvInput>
    </WithId>
  </WithLabels>
</WithStyles(WithLabels)>
`;

exports[`Input should render correctly 1`] = `
<WithStyles(WithLabels)>
  <WithLabels
    classes={
      Object {
        "adornmentButton": "HvInput-adornmentButton",
        "adornmentsBox": "HvInput-adornmentsBox",
        "icon": "HvInput-icon",
        "iconClear": "HvInput-iconClear",
        "infoIcon": "HvInput-infoIcon",
        "infoIconContainer": "HvInput-infoIconContainer",
        "infoText": "HvInput-infoText",
        "input": "HvInput-input",
        "inputDisabled": "HvInput-inputDisabled",
        "inputRoot": "HvInput-inputRoot",
        "inputRootDisabled": "HvInput-inputRootDisabled",
        "inputRootFocused": "HvInput-inputRootFocused",
        "inputRootInvalid": "HvInput-inputRootInvalid",
        "label": "HvInput-label",
        "labelContainer": "HvInput-labelContainer",
        "labelDisabled": "HvInput-labelDisabled",
        "multiLine": "HvInput-multiLine",
        "root": "HvInput-root",
        "suggestionList": "HvInput-suggestionList",
        "suggestionsContainer": "HvInput-suggestionsContainer",
      }
    }
  >
    <WithId
      classes={
        Object {
          "adornmentButton": "HvInput-adornmentButton",
          "adornmentsBox": "HvInput-adornmentsBox",
          "icon": "HvInput-icon",
          "iconClear": "HvInput-iconClear",
          "infoIcon": "HvInput-infoIcon",
          "infoIconContainer": "HvInput-infoIconContainer",
          "infoText": "HvInput-infoText",
          "input": "HvInput-input",
          "inputDisabled": "HvInput-inputDisabled",
          "inputRoot": "HvInput-inputRoot",
          "inputRootDisabled": "HvInput-inputRootDisabled",
          "inputRootFocused": "HvInput-inputRootFocused",
          "inputRootInvalid": "HvInput-inputRootInvalid",
          "label": "HvInput-label",
          "labelContainer": "HvInput-labelContainer",
          "labelDisabled": "HvInput-labelDisabled",
          "multiLine": "HvInput-multiLine",
          "root": "HvInput-root",
          "suggestionList": "HvInput-suggestionList",
          "suggestionsContainer": "HvInput-suggestionsContainer",
        }
      }
      labels={
        Object {
          "clearButtonLabel": "Clear the text",
          "infoText": "",
          "inputLabel": "",
          "maxCharQuantityWarningText": "The value is too big",
          "minCharQuantityWarningText": "The value is too short",
          "placeholder": "",
          "requiredWarningText": "The value is required",
          "warningText": "something wrong",
        }
      }
    >
      <HvInput
        classes={
          Object {
            "adornmentButton": "HvInput-adornmentButton",
            "adornmentsBox": "HvInput-adornmentsBox",
            "icon": "HvInput-icon",
            "iconClear": "HvInput-iconClear",
            "infoIcon": "HvInput-infoIcon",
            "infoIconContainer": "HvInput-infoIconContainer",
            "infoText": "HvInput-infoText",
            "input": "HvInput-input",
            "inputDisabled": "HvInput-inputDisabled",
            "inputRoot": "HvInput-inputRoot",
            "inputRootDisabled": "HvInput-inputRootDisabled",
            "inputRootFocused": "HvInput-inputRootFocused",
            "inputRootInvalid": "HvInput-inputRootInvalid",
            "label": "HvInput-label",
            "labelContainer": "HvInput-labelContainer",
            "labelDisabled": "HvInput-labelDisabled",
            "multiLine": "HvInput-multiLine",
            "root": "HvInput-root",
            "suggestionList": "HvInput-suggestionList",
            "suggestionsContainer": "HvInput-suggestionsContainer",
          }
        }
        id="hv-input-2"
        labels={
          Object {
            "clearButtonLabel": "Clear the text",
            "infoText": "",
            "inputLabel": "",
            "maxCharQuantityWarningText": "The value is too big",
            "minCharQuantityWarningText": "The value is too short",
            "placeholder": "",
            "requiredWarningText": "The value is required",
            "warningText": "something wrong",
          }
        }
      >
        <WithStyles(WithId)
          className="HvInput-root"
          disabled={false}
          id="hv-input-2"
          onBlur={[Function]}
        >
          <WithId
            className="HvInput-root"
            classes={
              Object {
                "root": "HvFormElement-root",
              }
            }
            disabled={false}
            id="hv-input-2"
            onBlur={[Function]}
          >
            <HvFormElement
              className="HvInput-root"
              classes={
                Object {
                  "root": "HvFormElement-root",
                }
              }
              disabled={false}
              id="hv-input-2"
              onBlur={[Function]}
            >
              <div
                className="HvInput-root HvFormElement-root"
                onBlur={[Function]}
              >
                <div
                  className="HvInput-labelContainer"
                />
                <WithStyles(HvBaseInput)
                  autoFocus={false}
                  className=""
                  classes={
                    Object {
                      "input": "HvInput-input",
                      "inputDisabled": "HvInput-inputDisabled",
                      "inputRoot": "HvInput-inputRoot",
                      "inputRootFocused": "HvInput-inputRootFocused",
                      "multiLine": "HvInput-multiLine",
                    }
                  }
                  endAdornment={null}
                  id="hv-input-2-input"
                  inputProps={
                    Object {
                      "ref": Object {
                        "current": <input
                          class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                          id="hv-input-2-input"
                          type="text"
                          value=""
                        />,
                      },
                    }
                  }
                  inputRef={
                    Object {
                      "current": <input
                        class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                        id="hv-input-2-input"
                        type="text"
                        value=""
                      />,
                    }
                  }
                  invalid={false}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  required={false}
                  type="text"
                >
                  <HvBaseInput
                    autoFocus={false}
                    className=""
                    classes={
                      Object {
                        "disabledRoot": "HvBaseInput-disabledRoot",
                        "input": "HvBaseInput-input HvInput-input",
                        "inputBorderContainer": "HvBaseInput-inputBorderContainer",
                        "inputDisabled": "HvBaseInput-inputDisabled HvInput-inputDisabled",
                        "inputLowerBorder": "HvBaseInput-inputLowerBorder",
                        "inputRoot": "HvBaseInput-inputRoot HvInput-inputRoot",
                        "inputRootDisabled": "HvBaseInput-inputRootDisabled",
                        "inputRootFocused": "HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                        "invalidRoot": "HvBaseInput-invalidRoot",
                        "multiLine": "HvBaseInput-multiLine HvInput-multiLine",
                        "root": "HvBaseInput-root",
                      }
                    }
                    endAdornment={null}
                    id="hv-input-2-input"
                    inputProps={
                      Object {
                        "ref": Object {
                          "current": <input
                            class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                            id="hv-input-2-input"
                            type="text"
                            value=""
                          />,
                        },
                      }
                    }
                    inputRef={
                      Object {
                        "current": <input
                          class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                          id="hv-input-2-input"
                          type="text"
                          value=""
                        />,
                      }
                    }
                    invalid={false}
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    required={false}
                    type="text"
                  >
                    <div
                      className="HvBaseInput-root"
                    >
                      <WithStyles(ForwardRef(Input))
                        autoFocus={false}
                        className="HvBaseInput-inputRoot HvInput-inputRoot"
                        classes={
                          Object {
                            "disabled": "HvBaseInput-inputDisabled HvInput-inputDisabled",
                            "focused": "HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                            "input": "HvBaseInput-input HvInput-input",
                            "multiline": "HvBaseInput-multiLine HvInput-multiLine",
                          }
                        }
                        disabled={false}
                        endAdornment={null}
                        id="hv-input-2-input"
                        inputProps={
                          Object {
                            "aria-controls": undefined,
                            "aria-describedby": undefined,
                            "aria-invalid": undefined,
                            "aria-labelledby": undefined,
                            "aria-required": undefined,
                            "ref": Object {
                              "current": <input
                                class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                id="hv-input-2-input"
                                type="text"
                                value=""
                              />,
                            },
                            "required": false,
                          }
                        }
                        inputRef={
                          Object {
                            "current": <input
                              class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                              id="hv-input-2-input"
                              type="text"
                              value=""
                            />,
                          }
                        }
                        multiline={false}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        type="text"
                      >
                        <ForwardRef(Input)
                          autoFocus={false}
                          className="HvBaseInput-inputRoot HvInput-inputRoot"
                          classes={
                            Object {
                              "colorSecondary": "MuiInput-colorSecondary",
                              "disabled": "Mui-disabled HvBaseInput-inputDisabled HvInput-inputDisabled",
                              "error": "Mui-error",
                              "focused": "Mui-focused HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                              "formControl": "MuiInput-formControl",
                              "fullWidth": "MuiInput-fullWidth",
                              "input": "MuiInput-input HvBaseInput-input HvInput-input",
                              "inputMarginDense": "MuiInput-inputMarginDense",
                              "inputMultiline": "MuiInput-inputMultiline",
                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                              "marginDense": "MuiInput-marginDense",
                              "multiline": "MuiInput-multiline HvBaseInput-multiLine HvInput-multiLine",
                              "root": "MuiInput-root",
                              "underline": "MuiInput-underline",
                            }
                          }
                          disableUnderline={true}
                          disabled={false}
                          endAdornment={null}
                          id="hv-input-2-input"
                          inputProps={
                            Object {
                              "aria-controls": undefined,
                              "aria-describedby": undefined,
                              "aria-invalid": undefined,
                              "aria-labelledby": undefined,
                              "aria-required": undefined,
                              "ref": Object {
                                "current": <input
                                  class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                  id="hv-input-2-input"
                                  type="text"
                                  value=""
                                />,
                              },
                              "required": false,
                            }
                          }
                          inputRef={
                            Object {
                              "current": <input
                                class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                id="hv-input-2-input"
                                type="text"
                                value=""
                              />,
                            }
                          }
                          multiline={false}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          type="text"
                        >
                          <WithStyles(ForwardRef(InputBase))
                            autoFocus={false}
                            className="HvBaseInput-inputRoot HvInput-inputRoot"
                            classes={
                              Object {
                                "colorSecondary": "MuiInput-colorSecondary",
                                "disabled": "Mui-disabled HvBaseInput-inputDisabled HvInput-inputDisabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                                "formControl": "MuiInput-formControl",
                                "fullWidth": "MuiInput-fullWidth",
                                "input": "MuiInput-input HvBaseInput-input HvInput-input",
                                "inputMarginDense": "MuiInput-inputMarginDense",
                                "inputMultiline": "MuiInput-inputMultiline",
                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                "marginDense": "MuiInput-marginDense",
                                "multiline": "MuiInput-multiline HvBaseInput-multiLine HvInput-multiLine",
                                "root": "MuiInput-root",
                                "underline": null,
                              }
                            }
                            disabled={false}
                            endAdornment={null}
                            fullWidth={false}
                            id="hv-input-2-input"
                            inputComponent="input"
                            inputProps={
                              Object {
                                "aria-controls": undefined,
                                "aria-describedby": undefined,
                                "aria-invalid": undefined,
                                "aria-labelledby": undefined,
                                "aria-required": undefined,
                                "ref": Object {
                                  "current": <input
                                    class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                    id="hv-input-2-input"
                                    type="text"
                                    value=""
                                  />,
                                },
                                "required": false,
                              }
                            }
                            inputRef={
                              Object {
                                "current": <input
                                  class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                  id="hv-input-2-input"
                                  type="text"
                                  value=""
                                />,
                              }
                            }
                            multiline={false}
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            type="text"
                          >
                            <ForwardRef(InputBase)
                              autoFocus={false}
                              className="HvBaseInput-inputRoot HvInput-inputRoot"
                              classes={
                                Object {
                                  "adornedEnd": "MuiInputBase-adornedEnd",
                                  "adornedStart": "MuiInputBase-adornedStart",
                                  "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                  "disabled": "Mui-disabled Mui-disabled HvBaseInput-inputDisabled HvInput-inputDisabled",
                                  "error": "Mui-error Mui-error",
                                  "focused": "Mui-focused Mui-focused HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                                  "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                  "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                  "input": "MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input",
                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                  "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                  "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                  "multiline": "MuiInputBase-multiline MuiInput-multiline HvBaseInput-multiLine HvInput-multiLine",
                                  "root": "MuiInputBase-root MuiInput-root",
                                }
                              }
                              disabled={false}
                              endAdornment={null}
                              fullWidth={false}
                              id="hv-input-2-input"
                              inputComponent="input"
                              inputProps={
                                Object {
                                  "aria-controls": undefined,
                                  "aria-describedby": undefined,
                                  "aria-invalid": undefined,
                                  "aria-labelledby": undefined,
                                  "aria-required": undefined,
                                  "ref": Object {
                                    "current": <input
                                      class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                      id="hv-input-2-input"
                                      type="text"
                                      value=""
                                    />,
                                  },
                                  "required": false,
                                }
                              }
                              inputRef={
                                Object {
                                  "current": <input
                                    class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                    id="hv-input-2-input"
                                    type="text"
                                    value=""
                                  />,
                                }
                              }
                              multiline={false}
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              type="text"
                            >
                              <div
                                className="MuiInputBase-root MuiInput-root HvBaseInput-inputRoot HvInput-inputRoot"
                                onClick={[Function]}
                              >
                                <input
                                  autoFocus={false}
                                  className="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                  disabled={false}
                                  id="hv-input-2-input"
                                  onAnimationStart={[Function]}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  required={false}
                                  type="text"
                                />
                              </div>
                            </ForwardRef(InputBase)>
                          </WithStyles(ForwardRef(InputBase))>
                        </ForwardRef(Input)>
                      </WithStyles(ForwardRef(Input))>
                      <div
                        className="HvBaseInput-inputBorderContainer"
                      >
                        <div
                          className="HvBaseInput-inputLowerBorder"
                        />
                      </div>
                    </div>
                  </HvBaseInput>
                </WithStyles(HvBaseInput)>
                <WithStyles(HvSuggestions)
                  classes={
                    Object {
                      "list": "HvInput-suggestionList",
                      "root": "HvInput-suggestionsContainer",
                    }
                  }
                  expanded={false}
                  id="hv-input-2-suggestions"
                  onClose={[Function]}
                  onKeyDown={[Function]}
                  onSuggestionSelected={[Function]}
                  suggestionValues={null}
                >
                  <HvSuggestions
                    classes={
                      Object {
                        "list": "HvSuggestions-list HvInput-suggestionList",
                        "popper": "HvSuggestions-popper",
                        "root": "HvSuggestions-root HvInput-suggestionsContainer",
                      }
                    }
                    expanded={false}
                    id="hv-input-2-suggestions"
                    onClose={[Function]}
                    onKeyDown={[Function]}
                    onSuggestionSelected={[Function]}
                    suggestionValues={null}
                  >
                    <div
                      className="HvSuggestions-root HvInput-suggestionsContainer"
                      id="hv-input-2-suggestions"
                      onKeyDown={[Function]}
                    >
                      <ForwardRef(Popper)
                        className="HvSuggestions-popper"
                        disablePortal={true}
                        open={false}
                      />
                    </div>
                  </HvSuggestions>
                </WithStyles(HvSuggestions)>
                <WithStyles(HvHelperText)
                  className="HvInput-infoText"
                  id="hv-input-2-description"
                  notification=""
                  style={
                    Object {
                      "display": "none",
                    }
                  }
                >
                  <HvHelperText
                    className="HvInput-infoText"
                    classes={
                      Object {
                        "helperDisabled": "HvHelperText-helperDisabled",
                        "helperText": "HvHelperText-helperText",
                        "showText": "HvHelperText-showText",
                        "topGutter": "HvHelperText-topGutter",
                      }
                    }
                    id="hv-input-2-description"
                    notification=""
                    style={
                      Object {
                        "display": "none",
                      }
                    }
                  >
                    <WithStyles(ForwardRef)
                      className="HvInput-infoText HvHelperText-helperText HvHelperText-showText HvHelperText-topGutter"
                      id="hv-input-2-description"
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                    >
                      <ForwardRef
                        className="HvInput-infoText HvHelperText-helperText HvHelperText-showText HvHelperText-topGutter"
                        classes={
                          Object {
                            "3xlTitle": "HvTypography-3xlTitle",
                            "4xlTitle": "HvTypography-4xlTitle",
                            "5xlTitle": "HvTypography-5xlTitle",
                            "disabledText": "HvTypography-disabledText",
                            "highlightText": "HvTypography-highlightText",
                            "lTitle": "HvTypography-lTitle",
                            "link": "HvTypography-link",
                            "mTitle": "HvTypography-mTitle",
                            "normalText": "HvTypography-normalText",
                            "placeholderText": "HvTypography-placeholderText",
                            "root": "HvTypography-root",
                            "sTitle": "HvTypography-sTitle",
                            "sectionTitle": "HvTypography-sectionTitle",
                            "selectedNavText": "HvTypography-selectedNavText",
                            "vizText": "HvTypography-vizText",
                            "vizTextDisabled": "HvTypography-vizTextDisabled",
                            "xlTitle": "HvTypography-xlTitle",
                            "xsInlineLink": "HvTypography-xsInlineLink",
                            "xsTitle": "HvTypography-xsTitle",
                            "xxlTitle": "HvTypography-xxlTitle",
                            "xxsTitle": "HvTypography-xxsTitle",
                          }
                        }
                        id="hv-input-2-description"
                        style={
                          Object {
                            "display": "none",
                          }
                        }
                      >
                        <p
                          className="HvInput-infoText HvHelperText-helperText HvHelperText-showText HvHelperText-topGutter HvTypography-root HvTypography-normalText"
                          id="hv-input-2-description"
                          style={
                            Object {
                              "display": "none",
                            }
                          }
                        />
                      </ForwardRef>
                    </WithStyles(ForwardRef)>
                    <WithStyles(ForwardRef)
                      aria-atomic="true"
                      aria-live="polite"
                      aria-relevant="additions text"
                      className="HvInput-infoText HvHelperText-helperText HvHelperText-topGutter"
                      id="hv-input-2-description-notification"
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                    >
                      <ForwardRef
                        aria-atomic="true"
                        aria-live="polite"
                        aria-relevant="additions text"
                        className="HvInput-infoText HvHelperText-helperText HvHelperText-topGutter"
                        classes={
                          Object {
                            "3xlTitle": "HvTypography-3xlTitle",
                            "4xlTitle": "HvTypography-4xlTitle",
                            "5xlTitle": "HvTypography-5xlTitle",
                            "disabledText": "HvTypography-disabledText",
                            "highlightText": "HvTypography-highlightText",
                            "lTitle": "HvTypography-lTitle",
                            "link": "HvTypography-link",
                            "mTitle": "HvTypography-mTitle",
                            "normalText": "HvTypography-normalText",
                            "placeholderText": "HvTypography-placeholderText",
                            "root": "HvTypography-root",
                            "sTitle": "HvTypography-sTitle",
                            "sectionTitle": "HvTypography-sectionTitle",
                            "selectedNavText": "HvTypography-selectedNavText",
                            "vizText": "HvTypography-vizText",
                            "vizTextDisabled": "HvTypography-vizTextDisabled",
                            "xlTitle": "HvTypography-xlTitle",
                            "xsInlineLink": "HvTypography-xsInlineLink",
                            "xsTitle": "HvTypography-xsTitle",
                            "xxlTitle": "HvTypography-xxlTitle",
                            "xxsTitle": "HvTypography-xxsTitle",
                          }
                        }
                        id="hv-input-2-description-notification"
                        style={
                          Object {
                            "display": "none",
                          }
                        }
                      >
                        <p
                          aria-atomic="true"
                          aria-live="polite"
                          aria-relevant="additions text"
                          className="HvInput-infoText HvHelperText-helperText HvHelperText-topGutter HvTypography-root HvTypography-normalText"
                          id="hv-input-2-description-notification"
                          style={
                            Object {
                              "display": "none",
                            }
                          }
                        />
                      </ForwardRef>
                    </WithStyles(ForwardRef)>
                  </HvHelperText>
                </WithStyles(HvHelperText)>
              </div>
            </HvFormElement>
          </WithId>
        </WithStyles(WithId)>
      </HvInput>
    </WithId>
  </WithLabels>
</WithStyles(WithLabels)>
`;
