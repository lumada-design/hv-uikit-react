// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Input should render correctly 1`] = `
<WithStyles(HvBaseInput)
  inputProps={
    Object {
      "aria-label": "Input Label",
    }
  }
  placeholder="test"
>
  <HvBaseInput
    classes={
      Object {
        "input": "HvBaseInput-input",
        "inputDisabled": "HvBaseInput-inputDisabled",
        "inputRoot": "HvBaseInput-inputRoot",
        "inputRootDisabled": "HvBaseInput-inputRootDisabled",
        "inputRootFocused": "HvBaseInput-inputRootFocused",
        "inputRootInvalid": "HvBaseInput-inputRootInvalid",
        "multiLine": "HvBaseInput-multiLine",
        "root": "HvBaseInput-root",
      }
    }
    inputProps={
      Object {
        "aria-label": "Input Label",
      }
    }
    placeholder="test"
  >
    <WithStyles(ForwardRef(Input))
      className="HvBaseInput-inputRoot"
      classes={
        Object {
          "disabled": "HvBaseInput-inputDisabled",
          "focused": "HvBaseInput-inputRootFocused",
          "input": "HvBaseInput-input",
          "multiline": "HvBaseInput-multiLine",
        }
      }
      inputProps={
        Object {
          "aria-controls": undefined,
          "aria-describedby": undefined,
          "aria-invalid": undefined,
          "aria-label": "Input Label",
          "aria-labelledby": undefined,
          "aria-required": undefined,
          "id": undefined,
        }
      }
      multiline={false}
      onChange={[Function]}
      placeholder="test"
    >
      <ForwardRef(Input)
        className="HvBaseInput-inputRoot"
        classes={
          Object {
            "colorSecondary": "MuiInput-colorSecondary",
            "disabled": "Mui-disabled HvBaseInput-inputDisabled",
            "error": "Mui-error",
            "focused": "Mui-focused HvBaseInput-inputRootFocused",
            "formControl": "MuiInput-formControl",
            "fullWidth": "MuiInput-fullWidth",
            "input": "MuiInput-input HvBaseInput-input",
            "inputMarginDense": "MuiInput-inputMarginDense",
            "inputMultiline": "MuiInput-inputMultiline",
            "inputTypeSearch": "MuiInput-inputTypeSearch",
            "marginDense": "MuiInput-marginDense",
            "multiline": "MuiInput-multiline HvBaseInput-multiLine",
            "root": "MuiInput-root",
            "underline": "MuiInput-underline",
          }
        }
        disableUnderline={true}
        inputProps={
          Object {
            "aria-controls": undefined,
            "aria-describedby": undefined,
            "aria-invalid": undefined,
            "aria-label": "Input Label",
            "aria-labelledby": undefined,
            "aria-required": undefined,
            "id": undefined,
          }
        }
        multiline={false}
        onChange={[Function]}
        placeholder="test"
      >
        <WithStyles(ForwardRef(InputBase))
          className="HvBaseInput-inputRoot"
          classes={
            Object {
              "colorSecondary": "MuiInput-colorSecondary",
              "disabled": "Mui-disabled HvBaseInput-inputDisabled",
              "error": "Mui-error",
              "focused": "Mui-focused HvBaseInput-inputRootFocused",
              "formControl": "MuiInput-formControl",
              "fullWidth": "MuiInput-fullWidth",
              "input": "MuiInput-input HvBaseInput-input",
              "inputMarginDense": "MuiInput-inputMarginDense",
              "inputMultiline": "MuiInput-inputMultiline",
              "inputTypeSearch": "MuiInput-inputTypeSearch",
              "marginDense": "MuiInput-marginDense",
              "multiline": "MuiInput-multiline HvBaseInput-multiLine",
              "root": "MuiInput-root",
              "underline": null,
            }
          }
          fullWidth={false}
          inputComponent="input"
          inputProps={
            Object {
              "aria-controls": undefined,
              "aria-describedby": undefined,
              "aria-invalid": undefined,
              "aria-label": "Input Label",
              "aria-labelledby": undefined,
              "aria-required": undefined,
              "id": undefined,
            }
          }
          multiline={false}
          onChange={[Function]}
          placeholder="test"
          type="text"
        >
          <ForwardRef(InputBase)
            className="HvBaseInput-inputRoot"
            classes={
              Object {
                "adornedEnd": "MuiInputBase-adornedEnd",
                "adornedStart": "MuiInputBase-adornedStart",
                "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                "disabled": "Mui-disabled Mui-disabled HvBaseInput-inputDisabled",
                "error": "Mui-error Mui-error",
                "focused": "Mui-focused Mui-focused HvBaseInput-inputRootFocused",
                "formControl": "MuiInputBase-formControl MuiInput-formControl",
                "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                "input": "MuiInputBase-input MuiInput-input HvBaseInput-input",
                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                "multiline": "MuiInputBase-multiline MuiInput-multiline HvBaseInput-multiLine",
                "root": "MuiInputBase-root MuiInput-root",
              }
            }
            fullWidth={false}
            inputComponent="input"
            inputProps={
              Object {
                "aria-controls": undefined,
                "aria-describedby": undefined,
                "aria-invalid": undefined,
                "aria-label": "Input Label",
                "aria-labelledby": undefined,
                "aria-required": undefined,
                "id": undefined,
              }
            }
            multiline={false}
            onChange={[Function]}
            placeholder="test"
            type="text"
          >
            <div
              className="MuiInputBase-root MuiInput-root HvBaseInput-inputRoot"
              onClick={[Function]}
            >
              <input
                aria-label="Input Label"
                className="MuiInputBase-input MuiInput-input HvBaseInput-input"
                onAnimationStart={[Function]}
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                placeholder="test"
                type="text"
              />
            </div>
          </ForwardRef(InputBase)>
        </WithStyles(ForwardRef(InputBase))>
      </ForwardRef(Input)>
    </WithStyles(ForwardRef(Input))>
  </HvBaseInput>
</WithStyles(HvBaseInput)>
`;
