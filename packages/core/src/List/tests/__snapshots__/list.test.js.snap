// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[v3] <List /> Multi selection should render correctly 1`] = `
<WithStyles(List)
  multiSelect={true}
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          Array [
            Object {
              "label": "Value 1",
              "selected": true,
            },
            Object {
              "label": "Value 2",
              "selected": false,
            },
            Object {
              "label": "Value 3",
              "selected": false,
            },
          ],
        ],
        Array [
          Array [
            Object {
              "label": "Value 1",
              "selected": false,
            },
            Object {
              "label": "Value 2",
              "selected": true,
            },
            Object {
              "label": "Value 3",
              "selected": false,
            },
          ],
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  showSelectAll={true}
  values={
    Array [
      Object {
        "label": "Value 1",
        "selected": true,
      },
      Object {
        "label": "Value 2",
      },
      Object {
        "label": "Value 3",
        "selected": true,
      },
    ]
  }
>
  <List
    classes={
      Object {
        "box": "HvList-box",
        "icon": "HvList-icon",
        "itemSelector": "HvList-itemSelector",
        "link": "HvList-link",
        "root": "HvList-root",
        "selectorContainer": "HvList-selectorContainer",
        "truncate": "HvList-truncate",
      }
    }
    condensed={false}
    hasTooltips={false}
    labels={
      Object {
        "selectAll": "Select All",
        "selectionConjunction": "/",
      }
    }
    multiSelect={true}
    onChange={
      [MockFunction] {
        "calls": Array [
          Array [
            Array [
              Object {
                "label": "Value 1",
                "selected": true,
              },
              Object {
                "label": "Value 2",
                "selected": false,
              },
              Object {
                "label": "Value 3",
                "selected": false,
              },
            ],
          ],
          Array [
            Array [
              Object {
                "label": "Value 1",
                "selected": false,
              },
              Object {
                "label": "Value 2",
                "selected": true,
              },
              Object {
                "label": "Value 3",
                "selected": false,
              },
            ],
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    onClick={[Function]}
    selectable={true}
    showSelectAll={true}
    singleSelectionToggle={true}
    useSelector={false}
    values={
      Array [
        Object {
          "label": "Value 1",
          "selected": true,
        },
        Object {
          "label": "Value 2",
        },
        Object {
          "label": "Value 3",
          "selected": true,
        },
      ]
    }
  >
    <WithStyles(HvListContainer)
      className="HvList-root"
      condensed={false}
      disableGutters={false}
      interactive={true}
      multiSelect={true}
      role="listbox"
      selectable={true}
    >
      <HvListContainer
        className="HvList-root"
        classes={
          Object {
            "root": "HvListContainer-root",
          }
        }
        condensed={false}
        disableGutters={false}
        interactive={true}
        multiSelect={true}
        role="listbox"
        selectable={true}
      >
        <ul
          aria-multiselectable={true}
          className="HvList-root HvListContainer-root"
          role="listbox"
        >
          <WithStyles(HvListItem)
            classes={
              Object {
                "selected": "HvList-itemSelector",
              }
            }
            key=".$0"
            onClick={[Function]}
            role="option"
            selected={true}
            startAdornment={null}
            tabIndex={0}
          >
            <HvListItem
              classes={
                Object {
                  "condensed": "HvListItem-condensed",
                  "disabled": "HvListItem-disabled",
                  "endAdornment": "HvListItem-endAdornment",
                  "focus": "HvListItem-focus",
                  "gutters": "HvListItem-gutters",
                  "interactive": "HvListItem-interactive",
                  "root": "HvListItem-root",
                  "selected": "HvListItem-selected HvList-itemSelector",
                  "startAdornment": "HvListItem-startAdornment",
                  "withEndAdornment": "HvListItem-withEndAdornment",
                  "withStartAdornment": "HvListItem-withStartAdornment",
                }
              }
              onClick={[Function]}
              role="option"
              selected={true}
              startAdornment={null}
              tabIndex={0}
            >
              <WithStyles(Focus)
                classes={
                  Object {
                    "focus": "HvListItem-focus",
                  }
                }
                configuration={
                  Object {
                    "tabIndex": 0,
                  }
                }
                rootRef={
                  Object {
                    "current": <ul
                      aria-multiselectable="true"
                      class="HvList-root HvListContainer-root"
                      role="listbox"
                    >
                      <li
                        aria-selected="true"
                        class="HvListItem-root HvListItem-gutters HvListItem-interactive HvListItem-selected HvList-itemSelector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                        role="option"
                        tabindex="0"
                      >
                        Value 1
                      </li>
                      <li
                        aria-selected="false"
                        class="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        Value 2
                      </li>
                      <li
                        aria-selected="true"
                        class="HvListItem-root HvListItem-gutters HvListItem-interactive HvListItem-selected HvList-itemSelector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                        role="option"
                        tabindex="0"
                      >
                        Value 3
                      </li>
                    </ul>,
                  }
                }
                selected={true}
                strategy="listbox"
              >
                <Focus
                  classes={
                    Object {
                      "disabled": "HvFocus-disabled",
                      "externalReference": "HvFocus-externalReference",
                      "falseFocus": "HvFocus-falseFocus",
                      "focus": "HvFocus-focus HvListItem-focus",
                      "focusDisabled": "HvFocus-focusDisabled",
                      "focused": "HvFocus-focused",
                      "root": "HvFocus-root",
                      "selected": "HvFocus-selected",
                    }
                  }
                  configuration={
                    Object {
                      "tabIndex": 0,
                    }
                  }
                  rootRef={
                    Object {
                      "current": <ul
                        aria-multiselectable="true"
                        class="HvList-root HvListContainer-root"
                        role="listbox"
                      >
                        <li
                          aria-selected="true"
                          class="HvListItem-root HvListItem-gutters HvListItem-interactive HvListItem-selected HvList-itemSelector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                          role="option"
                          tabindex="0"
                        >
                          Value 1
                        </li>
                        <li
                          aria-selected="false"
                          class="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          Value 2
                        </li>
                        <li
                          aria-selected="true"
                          class="HvListItem-root HvListItem-gutters HvListItem-interactive HvListItem-selected HvList-itemSelector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                          role="option"
                          tabindex="0"
                        >
                          Value 3
                        </li>
                      </ul>,
                    }
                  }
                  selected={true}
                  strategy="listbox"
                >
                  <ConditionalWrapper
                    condition={false}
                    wrapper={[Function]}
                  >
                    <li
                      aria-selected={true}
                      className="HvListItem-root HvListItem-gutters HvListItem-interactive HvListItem-selected HvList-itemSelector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      role="option"
                      selected={true}
                    >
                      <ComponentFunction>
                        Value 1
                      </ComponentFunction>
                    </li>
                  </ConditionalWrapper>
                </Focus>
              </WithStyles(Focus)>
            </HvListItem>
          </WithStyles(HvListItem)>
          <WithStyles(HvListItem)
            classes={
              Object {
                "selected": "HvList-itemSelector",
              }
            }
            key=".$1"
            onClick={[Function]}
            role="option"
            selected={false}
            startAdornment={null}
            tabIndex={-1}
          >
            <HvListItem
              classes={
                Object {
                  "condensed": "HvListItem-condensed",
                  "disabled": "HvListItem-disabled",
                  "endAdornment": "HvListItem-endAdornment",
                  "focus": "HvListItem-focus",
                  "gutters": "HvListItem-gutters",
                  "interactive": "HvListItem-interactive",
                  "root": "HvListItem-root",
                  "selected": "HvListItem-selected HvList-itemSelector",
                  "startAdornment": "HvListItem-startAdornment",
                  "withEndAdornment": "HvListItem-withEndAdornment",
                  "withStartAdornment": "HvListItem-withStartAdornment",
                }
              }
              onClick={[Function]}
              role="option"
              selected={false}
              startAdornment={null}
              tabIndex={-1}
            >
              <WithStyles(Focus)
                classes={
                  Object {
                    "focus": "HvListItem-focus",
                  }
                }
                configuration={
                  Object {
                    "tabIndex": -1,
                  }
                }
                rootRef={
                  Object {
                    "current": <ul
                      aria-multiselectable="true"
                      class="HvList-root HvListContainer-root"
                      role="listbox"
                    >
                      <li
                        aria-selected="true"
                        class="HvListItem-root HvListItem-gutters HvListItem-interactive HvListItem-selected HvList-itemSelector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                        role="option"
                        tabindex="0"
                      >
                        Value 1
                      </li>
                      <li
                        aria-selected="false"
                        class="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        Value 2
                      </li>
                      <li
                        aria-selected="true"
                        class="HvListItem-root HvListItem-gutters HvListItem-interactive HvListItem-selected HvList-itemSelector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                        role="option"
                        tabindex="0"
                      >
                        Value 3
                      </li>
                    </ul>,
                  }
                }
                selected={false}
                strategy="listbox"
              >
                <Focus
                  classes={
                    Object {
                      "disabled": "HvFocus-disabled",
                      "externalReference": "HvFocus-externalReference",
                      "falseFocus": "HvFocus-falseFocus",
                      "focus": "HvFocus-focus HvListItem-focus",
                      "focusDisabled": "HvFocus-focusDisabled",
                      "focused": "HvFocus-focused",
                      "root": "HvFocus-root",
                      "selected": "HvFocus-selected",
                    }
                  }
                  configuration={
                    Object {
                      "tabIndex": -1,
                    }
                  }
                  rootRef={
                    Object {
                      "current": <ul
                        aria-multiselectable="true"
                        class="HvList-root HvListContainer-root"
                        role="listbox"
                      >
                        <li
                          aria-selected="true"
                          class="HvListItem-root HvListItem-gutters HvListItem-interactive HvListItem-selected HvList-itemSelector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                          role="option"
                          tabindex="0"
                        >
                          Value 1
                        </li>
                        <li
                          aria-selected="false"
                          class="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          Value 2
                        </li>
                        <li
                          aria-selected="true"
                          class="HvListItem-root HvListItem-gutters HvListItem-interactive HvListItem-selected HvList-itemSelector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                          role="option"
                          tabindex="0"
                        >
                          Value 3
                        </li>
                      </ul>,
                    }
                  }
                  selected={false}
                  strategy="listbox"
                >
                  <ConditionalWrapper
                    condition={false}
                    wrapper={[Function]}
                  >
                    <li
                      aria-selected={false}
                      className="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      role="option"
                      selected={false}
                    >
                      <ComponentFunction>
                        Value 2
                      </ComponentFunction>
                    </li>
                  </ConditionalWrapper>
                </Focus>
              </WithStyles(Focus)>
            </HvListItem>
          </WithStyles(HvListItem)>
          <WithStyles(HvListItem)
            classes={
              Object {
                "selected": "HvList-itemSelector",
              }
            }
            key=".$2"
            onClick={[Function]}
            role="option"
            selected={true}
            startAdornment={null}
            tabIndex={0}
          >
            <HvListItem
              classes={
                Object {
                  "condensed": "HvListItem-condensed",
                  "disabled": "HvListItem-disabled",
                  "endAdornment": "HvListItem-endAdornment",
                  "focus": "HvListItem-focus",
                  "gutters": "HvListItem-gutters",
                  "interactive": "HvListItem-interactive",
                  "root": "HvListItem-root",
                  "selected": "HvListItem-selected HvList-itemSelector",
                  "startAdornment": "HvListItem-startAdornment",
                  "withEndAdornment": "HvListItem-withEndAdornment",
                  "withStartAdornment": "HvListItem-withStartAdornment",
                }
              }
              onClick={[Function]}
              role="option"
              selected={true}
              startAdornment={null}
              tabIndex={0}
            >
              <WithStyles(Focus)
                classes={
                  Object {
                    "focus": "HvListItem-focus",
                  }
                }
                configuration={
                  Object {
                    "tabIndex": 0,
                  }
                }
                rootRef={
                  Object {
                    "current": <ul
                      aria-multiselectable="true"
                      class="HvList-root HvListContainer-root"
                      role="listbox"
                    >
                      <li
                        aria-selected="true"
                        class="HvListItem-root HvListItem-gutters HvListItem-interactive HvListItem-selected HvList-itemSelector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                        role="option"
                        tabindex="0"
                      >
                        Value 1
                      </li>
                      <li
                        aria-selected="false"
                        class="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        Value 2
                      </li>
                      <li
                        aria-selected="true"
                        class="HvListItem-root HvListItem-gutters HvListItem-interactive HvListItem-selected HvList-itemSelector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                        role="option"
                        tabindex="0"
                      >
                        Value 3
                      </li>
                    </ul>,
                  }
                }
                selected={true}
                strategy="listbox"
              >
                <Focus
                  classes={
                    Object {
                      "disabled": "HvFocus-disabled",
                      "externalReference": "HvFocus-externalReference",
                      "falseFocus": "HvFocus-falseFocus",
                      "focus": "HvFocus-focus HvListItem-focus",
                      "focusDisabled": "HvFocus-focusDisabled",
                      "focused": "HvFocus-focused",
                      "root": "HvFocus-root",
                      "selected": "HvFocus-selected",
                    }
                  }
                  configuration={
                    Object {
                      "tabIndex": 0,
                    }
                  }
                  rootRef={
                    Object {
                      "current": <ul
                        aria-multiselectable="true"
                        class="HvList-root HvListContainer-root"
                        role="listbox"
                      >
                        <li
                          aria-selected="true"
                          class="HvListItem-root HvListItem-gutters HvListItem-interactive HvListItem-selected HvList-itemSelector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                          role="option"
                          tabindex="0"
                        >
                          Value 1
                        </li>
                        <li
                          aria-selected="false"
                          class="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          Value 2
                        </li>
                        <li
                          aria-selected="true"
                          class="HvListItem-root HvListItem-gutters HvListItem-interactive HvListItem-selected HvList-itemSelector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                          role="option"
                          tabindex="0"
                        >
                          Value 3
                        </li>
                      </ul>,
                    }
                  }
                  selected={true}
                  strategy="listbox"
                >
                  <ConditionalWrapper
                    condition={false}
                    wrapper={[Function]}
                  >
                    <li
                      aria-selected={true}
                      className="HvListItem-root HvListItem-gutters HvListItem-interactive HvListItem-selected HvList-itemSelector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      role="option"
                      selected={true}
                    >
                      <ComponentFunction>
                        Value 3
                      </ComponentFunction>
                    </li>
                  </ConditionalWrapper>
                </Focus>
              </WithStyles(Focus)>
            </HvListItem>
          </WithStyles(HvListItem)>
        </ul>
      </HvListContainer>
    </WithStyles(HvListContainer)>
  </List>
</WithStyles(List)>
`;

exports[`[v3] <List /> Multi selection with selectors should render correctly 1`] = `
<WithStyles(List)
  multiSelect={true}
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          Array [
            Object {
              "label": "Value 1",
              "selected": true,
            },
            Object {
              "label": "Value 2",
              "selected": false,
            },
            Object {
              "label": "Value 3",
              "selected": false,
            },
          ],
        ],
        Array [
          Array [
            Object {
              "label": "Value 1",
              "selected": false,
            },
            Object {
              "label": "Value 2",
              "selected": true,
            },
            Object {
              "label": "Value 3",
              "selected": false,
            },
          ],
        ],
        Array [
          Array [
            Object {
              "label": "Value 1",
              "selected": true,
            },
            Object {
              "label": "Value 2",
              "selected": true,
            },
            Object {
              "label": "Value 3",
              "selected": true,
            },
          ],
        ],
        Array [
          Array [
            Object {
              "label": "Value 1",
              "selected": false,
            },
            Object {
              "label": "Value 2",
              "selected": false,
            },
            Object {
              "label": "Value 3",
              "selected": true,
            },
          ],
        ],
        Array [
          Array [
            Object {
              "label": "Value 1",
              "selected": false,
            },
            Object {
              "label": "Value 2",
              "selected": false,
            },
            Object {
              "label": "Value 3",
              "selected": false,
            },
          ],
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  showSelectAll={true}
  useSelector={true}
  values={
    Array [
      Object {
        "label": "Value 1",
        "selected": true,
      },
      Object {
        "label": "Value 2",
      },
      Object {
        "label": "Value 3",
        "selected": true,
      },
    ]
  }
>
  <List
    classes={
      Object {
        "box": "HvList-box",
        "icon": "HvList-icon",
        "itemSelector": "HvList-itemSelector",
        "link": "HvList-link",
        "root": "HvList-root",
        "selectorContainer": "HvList-selectorContainer",
        "truncate": "HvList-truncate",
      }
    }
    condensed={false}
    hasTooltips={false}
    labels={
      Object {
        "selectAll": "Select All",
        "selectionConjunction": "/",
      }
    }
    multiSelect={true}
    onChange={
      [MockFunction] {
        "calls": Array [
          Array [
            Array [
              Object {
                "label": "Value 1",
                "selected": true,
              },
              Object {
                "label": "Value 2",
                "selected": false,
              },
              Object {
                "label": "Value 3",
                "selected": false,
              },
            ],
          ],
          Array [
            Array [
              Object {
                "label": "Value 1",
                "selected": false,
              },
              Object {
                "label": "Value 2",
                "selected": true,
              },
              Object {
                "label": "Value 3",
                "selected": false,
              },
            ],
          ],
          Array [
            Array [
              Object {
                "label": "Value 1",
                "selected": true,
              },
              Object {
                "label": "Value 2",
                "selected": true,
              },
              Object {
                "label": "Value 3",
                "selected": true,
              },
            ],
          ],
          Array [
            Array [
              Object {
                "label": "Value 1",
                "selected": false,
              },
              Object {
                "label": "Value 2",
                "selected": false,
              },
              Object {
                "label": "Value 3",
                "selected": true,
              },
            ],
          ],
          Array [
            Array [
              Object {
                "label": "Value 1",
                "selected": false,
              },
              Object {
                "label": "Value 2",
                "selected": false,
              },
              Object {
                "label": "Value 3",
                "selected": false,
              },
            ],
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    onClick={[Function]}
    selectable={true}
    showSelectAll={true}
    singleSelectionToggle={true}
    useSelector={true}
    values={
      Array [
        Object {
          "label": "Value 1",
          "selected": true,
        },
        Object {
          "label": "Value 2",
        },
        Object {
          "label": "Value 3",
          "selected": true,
        },
      ]
    }
  >
    <WithStyles(WithStyles(HvBulkActions))
      numSelected={2}
      numTotal={3}
      onSelectAll={[Function]}
      selectAllLabel={
        <ForwardRef(WithStyles)
          component="span"
        >
          <React.Fragment>
            <b>
              2
            </b>
             / 
            3
          </React.Fragment>
        </ForwardRef(WithStyles)>
      }
    >
      <WithStyles(HvBulkActions)
        classes={
          Object {
            "editMode": "WithStyles(HvBulkActions)-editMode-6",
            "root": "WithStyles(HvBulkActions)-root-5",
            "selectAll": "WithStyles(HvBulkActions)-selectAll-8",
            "selectAllContainer": "WithStyles(HvBulkActions)-selectAllContainer-7",
          }
        }
        numSelected={2}
        numTotal={3}
        onSelectAll={[Function]}
        selectAllLabel={
          <ForwardRef(WithStyles)
            component="span"
          >
            <React.Fragment>
              <b>
                2
              </b>
               / 
              3
            </React.Fragment>
          </ForwardRef(WithStyles)>
        }
      >
        <HvBulkActions
          classes={
            Object {
              "actions": "HvBulkActions-actions",
              "editMode": "HvBulkActions-editMode WithStyles(HvBulkActions)-editMode-6",
              "root": "HvBulkActions-root WithStyles(HvBulkActions)-root-5",
              "selectAll": "HvBulkActions-selectAll WithStyles(HvBulkActions)-selectAll-8",
              "selectAllContainer": "HvBulkActions-selectAllContainer WithStyles(HvBulkActions)-selectAllContainer-7",
              "selectAllPages": "HvBulkActions-selectAllPages",
            }
          }
          numSelected={2}
          numTotal={3}
          onSelectAll={[Function]}
          selectAllLabel={
            <ForwardRef(WithStyles)
              component="span"
            >
              <React.Fragment>
                <b>
                  2
                </b>
                 / 
                3
              </React.Fragment>
            </ForwardRef(WithStyles)>
          }
        >
          <div
            className="HvBulkActions-root WithStyles(HvBulkActions)-root-5 HvBulkActions-editMode WithStyles(HvBulkActions)-editMode-6"
          >
            <div
              className="HvBulkActions-selectAllContainer WithStyles(HvBulkActions)-selectAllContainer-7"
            >
              <WithStyles(HvCheckbox)
                checked={true}
                className="HvBulkActions-selectAll WithStyles(HvBulkActions)-selectAll-8"
                indeterminate={true}
                label={
                  <ForwardRef(WithStyles)
                    component="span"
                  >
                    <React.Fragment>
                      <b>
                        2
                      </b>
                       / 
                      3
                    </React.Fragment>
                  </ForwardRef(WithStyles)>
                }
                onChange={[Function]}
                semantic={true}
              >
                <HvCheckbox
                  checked={true}
                  className="HvBulkActions-selectAll WithStyles(HvBulkActions)-selectAll-8"
                  classes={
                    Object {
                      "checkBox": "HvCheckBox-checkBox",
                      "container": "HvCheckBox-container",
                      "disableFocus": "HvCheckBox-disableFocus",
                      "disabledBorder": "HvCheckBox-disabledBorder",
                      "icon": "HvCheckBox-icon",
                      "labelDisabled": "HvCheckBox-labelDisabled",
                      "labelEnd": "HvCheckBox-labelEnd",
                      "labelStart": "HvCheckBox-labelStart",
                      "labelTypography": "HvCheckBox-labelTypography",
                    }
                  }
                  indeterminate={true}
                  label={
                    <ForwardRef(WithStyles)
                      component="span"
                    >
                      <React.Fragment>
                        <b>
                          2
                        </b>
                         / 
                        3
                      </React.Fragment>
                    </ForwardRef(WithStyles)>
                  }
                  onChange={[Function]}
                  semantic={true}
                >
                  <WithStyles(ForwardRef(FormControlLabel))
                    className="HvCheckBox-container HvCheckBox-labelEnd HvBulkActions-selectAll WithStyles(HvBulkActions)-selectAll-8"
                    classes={
                      Object {
                        "disabled": "HvCheckBox-labelDisabled",
                        "label": "HvCheckBox-labelTypography",
                      }
                    }
                    control={
                      <ForwardRef(WithStyles)
                        checked={true}
                        checkedIcon={
                          <CheckboxCheck
                            className="HvCheckBox-icon"
                            color={
                              Array [
                                "base2",
                                "base1",
                              ]
                            }
                          />
                        }
                        className="HvCheckBox-checkBox"
                        color="default"
                        disableRipple={true}
                        disabled={false}
                        icon={
                          <Checkbox
                            className="HvCheckBox-icon"
                            color={
                              Array [
                                "base1",
                                "base2",
                              ]
                            }
                          />
                        }
                        indeterminate={true}
                        indeterminateIcon={
                          <CheckboxPartial
                            className="HvCheckBox-icon"
                            color={
                              Array [
                                "base1",
                                "base2",
                              ]
                            }
                          />
                        }
                        onBlur={[Function]}
                        onChange={[Function]}
                        value=""
                      />
                    }
                    disabled={false}
                    label={
                      <ForwardRef(WithStyles)
                        component="span"
                      >
                        <React.Fragment>
                          <b>
                            2
                          </b>
                           / 
                          3
                        </React.Fragment>
                      </ForwardRef(WithStyles)>
                    }
                    labelPlacement="end"
                  >
                    <ForwardRef(FormControlLabel)
                      className="HvCheckBox-container HvCheckBox-labelEnd HvBulkActions-selectAll WithStyles(HvBulkActions)-selectAll-8"
                      classes={
                        Object {
                          "disabled": "Mui-disabled HvCheckBox-labelDisabled",
                          "label": "MuiFormControlLabel-label HvCheckBox-labelTypography",
                          "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                          "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                          "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                          "root": "MuiFormControlLabel-root",
                        }
                      }
                      control={
                        <ForwardRef(WithStyles)
                          checked={true}
                          checkedIcon={
                            <CheckboxCheck
                              className="HvCheckBox-icon"
                              color={
                                Array [
                                  "base2",
                                  "base1",
                                ]
                              }
                            />
                          }
                          className="HvCheckBox-checkBox"
                          color="default"
                          disableRipple={true}
                          disabled={false}
                          icon={
                            <Checkbox
                              className="HvCheckBox-icon"
                              color={
                                Array [
                                  "base1",
                                  "base2",
                                ]
                              }
                            />
                          }
                          indeterminate={true}
                          indeterminateIcon={
                            <CheckboxPartial
                              className="HvCheckBox-icon"
                              color={
                                Array [
                                  "base1",
                                  "base2",
                                ]
                              }
                            />
                          }
                          onBlur={[Function]}
                          onChange={[Function]}
                          value=""
                        />
                      }
                      disabled={false}
                      label={
                        <ForwardRef(WithStyles)
                          component="span"
                        >
                          <React.Fragment>
                            <b>
                              2
                            </b>
                             / 
                            3
                          </React.Fragment>
                        </ForwardRef(WithStyles)>
                      }
                      labelPlacement="end"
                    >
                      <label
                        className="MuiFormControlLabel-root HvCheckBox-container HvCheckBox-labelEnd HvBulkActions-selectAll WithStyles(HvBulkActions)-selectAll-8"
                      >
                        <WithStyles(ForwardRef(Checkbox))
                          checked={true}
                          checkedIcon={
                            <CheckboxCheck
                              className="HvCheckBox-icon"
                              color={
                                Array [
                                  "base2",
                                  "base1",
                                ]
                              }
                            />
                          }
                          className="HvCheckBox-checkBox"
                          color="default"
                          disableRipple={true}
                          disabled={false}
                          icon={
                            <Checkbox
                              className="HvCheckBox-icon"
                              color={
                                Array [
                                  "base1",
                                  "base2",
                                ]
                              }
                            />
                          }
                          indeterminate={true}
                          indeterminateIcon={
                            <CheckboxPartial
                              className="HvCheckBox-icon"
                              color={
                                Array [
                                  "base1",
                                  "base2",
                                ]
                              }
                            />
                          }
                          onBlur={[Function]}
                          onChange={[Function]}
                          value=""
                        >
                          <ForwardRef(Checkbox)
                            checked={true}
                            checkedIcon={
                              <CheckboxCheck
                                className="HvCheckBox-icon"
                                color={
                                  Array [
                                    "base2",
                                    "base1",
                                  ]
                                }
                              />
                            }
                            className="HvCheckBox-checkBox"
                            classes={
                              Object {
                                "checked": "Mui-checked",
                                "colorPrimary": "MuiCheckbox-colorPrimary",
                                "colorSecondary": "MuiCheckbox-colorSecondary",
                                "disabled": "Mui-disabled",
                                "indeterminate": "MuiCheckbox-indeterminate",
                                "root": "MuiCheckbox-root",
                              }
                            }
                            color="default"
                            disableRipple={true}
                            disabled={false}
                            icon={
                              <Checkbox
                                className="HvCheckBox-icon"
                                color={
                                  Array [
                                    "base1",
                                    "base2",
                                  ]
                                }
                              />
                            }
                            indeterminate={true}
                            indeterminateIcon={
                              <CheckboxPartial
                                className="HvCheckBox-icon"
                                color={
                                  Array [
                                    "base1",
                                    "base2",
                                  ]
                                }
                              />
                            }
                            onBlur={[Function]}
                            onChange={[Function]}
                            value=""
                          >
                            <WithStyles(ForwardRef(SwitchBase))
                              checked={true}
                              checkedIcon={
                                <CheckboxPartial
                                  className="HvCheckBox-icon"
                                  color={
                                    Array [
                                      "base1",
                                      "base2",
                                    ]
                                  }
                                  fontSize="default"
                                />
                              }
                              className="HvCheckBox-checkBox"
                              classes={
                                Object {
                                  "checked": "Mui-checked",
                                  "disabled": "Mui-disabled",
                                  "root": "MuiCheckbox-root MuiCheckbox-indeterminate",
                                }
                              }
                              color="default"
                              disableRipple={true}
                              disabled={false}
                              icon={
                                <CheckboxPartial
                                  className="HvCheckBox-icon"
                                  color={
                                    Array [
                                      "base1",
                                      "base2",
                                    ]
                                  }
                                  fontSize="default"
                                />
                              }
                              inputProps={
                                Object {
                                  "data-indeterminate": true,
                                }
                              }
                              onBlur={[Function]}
                              onChange={[Function]}
                              type="checkbox"
                              value=""
                            >
                              <ForwardRef(SwitchBase)
                                checked={true}
                                checkedIcon={
                                  <CheckboxPartial
                                    className="HvCheckBox-icon"
                                    color={
                                      Array [
                                        "base1",
                                        "base2",
                                      ]
                                    }
                                    fontSize="default"
                                  />
                                }
                                className="HvCheckBox-checkBox"
                                classes={
                                  Object {
                                    "checked": "PrivateSwitchBase-checked-10 Mui-checked",
                                    "disabled": "PrivateSwitchBase-disabled-11 Mui-disabled",
                                    "input": "PrivateSwitchBase-input-12",
                                    "root": "PrivateSwitchBase-root-9 MuiCheckbox-root MuiCheckbox-indeterminate",
                                  }
                                }
                                color="default"
                                disableRipple={true}
                                disabled={false}
                                icon={
                                  <CheckboxPartial
                                    className="HvCheckBox-icon"
                                    color={
                                      Array [
                                        "base1",
                                        "base2",
                                      ]
                                    }
                                    fontSize="default"
                                  />
                                }
                                inputProps={
                                  Object {
                                    "data-indeterminate": true,
                                  }
                                }
                                onBlur={[Function]}
                                onChange={[Function]}
                                type="checkbox"
                                value=""
                              >
                                <WithStyles(ForwardRef(IconButton))
                                  className="PrivateSwitchBase-root-9 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox PrivateSwitchBase-checked-10 Mui-checked"
                                  color="default"
                                  component="span"
                                  disableRipple={true}
                                  disabled={false}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                >
                                  <ForwardRef(IconButton)
                                    className="PrivateSwitchBase-root-9 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox PrivateSwitchBase-checked-10 Mui-checked"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit",
                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                        "edgeStart": "MuiIconButton-edgeStart",
                                        "label": "MuiIconButton-label",
                                        "root": "MuiIconButton-root",
                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                      }
                                    }
                                    color="default"
                                    component="span"
                                    disableRipple={true}
                                    disabled={false}
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    tabIndex={null}
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      centerRipple={true}
                                      className="MuiIconButton-root PrivateSwitchBase-root-9 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox PrivateSwitchBase-checked-10 Mui-checked"
                                      component="span"
                                      disableRipple={true}
                                      disabled={false}
                                      focusRipple={true}
                                      onBlur={[Function]}
                                      onFocus={[Function]}
                                      tabIndex={null}
                                    >
                                      <ForwardRef(ButtonBase)
                                        centerRipple={true}
                                        className="MuiIconButton-root PrivateSwitchBase-root-9 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox PrivateSwitchBase-checked-10 Mui-checked"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        component="span"
                                        disableRipple={true}
                                        disabled={false}
                                        focusRipple={true}
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={null}
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-9 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox PrivateSwitchBase-checked-10 Mui-checked"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              checked={true}
                                              className="PrivateSwitchBase-input-12"
                                              data-indeterminate={true}
                                              disabled={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                              value=""
                                            />
                                            <CheckboxPartial
                                              className="HvCheckBox-icon"
                                              color={
                                                Array [
                                                  "base1",
                                                  "base2",
                                                ]
                                              }
                                              fontSize="default"
                                            >
                                              <WithStyles(HvIconBase)
                                                className="HvCheckBox-icon"
                                                fontSize="default"
                                                iconSize="S"
                                                name="CheckboxPartial"
                                              >
                                                <HvIconBase
                                                  className="HvCheckBox-icon"
                                                  classes={
                                                    Object {
                                                      "l": "HvIconBase-l",
                                                      "m": "HvIconBase-m",
                                                      "root": "HvIconBase-root",
                                                      "s": "HvIconBase-s",
                                                      "xs": "HvIconBase-xs",
                                                    }
                                                  }
                                                  fontSize="default"
                                                  iconSize="S"
                                                  name="CheckboxPartial"
                                                >
                                                  <div
                                                    className="HvCheckBox-icon HvIconBase-root HvIconBase-s"
                                                    fontSize="default"
                                                    name="CheckboxPartial"
                                                  >
                                                    <svg
                                                      focusable={false}
                                                      height={16}
                                                      viewBox="0 0 16 16"
                                                      width={16}
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <path
                                                        className="color0"
                                                        d="M0 0h16v16H0z"
                                                        fill="#FBFCFC"
                                                      />
                                                      <path
                                                        className="color1"
                                                        d="M16 16H0V0h16zM1 15h14V1H1zm3-6h8V7H4z"
                                                        fill="#414141"
                                                      />
                                                    </svg>
                                                  </div>
                                                </HvIconBase>
                                              </WithStyles(HvIconBase)>
                                            </CheckboxPartial>
                                          </span>
                                        </span>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(IconButton)>
                                </WithStyles(ForwardRef(IconButton))>
                              </ForwardRef(SwitchBase)>
                            </WithStyles(ForwardRef(SwitchBase))>
                          </ForwardRef(Checkbox)>
                        </WithStyles(ForwardRef(Checkbox))>
                        <WithStyles(ForwardRef(Typography))
                          className="MuiFormControlLabel-label HvCheckBox-labelTypography"
                          component="span"
                        >
                          <ForwardRef(Typography)
                            className="MuiFormControlLabel-label HvCheckBox-labelTypography"
                            classes={
                              Object {
                                "alignCenter": "MuiTypography-alignCenter",
                                "alignJustify": "MuiTypography-alignJustify",
                                "alignLeft": "MuiTypography-alignLeft",
                                "alignRight": "MuiTypography-alignRight",
                                "body1": "MuiTypography-body1",
                                "body2": "MuiTypography-body2",
                                "button": "MuiTypography-button",
                                "caption": "MuiTypography-caption",
                                "colorError": "MuiTypography-colorError",
                                "colorInherit": "MuiTypography-colorInherit",
                                "colorPrimary": "MuiTypography-colorPrimary",
                                "colorSecondary": "MuiTypography-colorSecondary",
                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                "displayBlock": "MuiTypography-displayBlock",
                                "displayInline": "MuiTypography-displayInline",
                                "gutterBottom": "MuiTypography-gutterBottom",
                                "h1": "MuiTypography-h1",
                                "h2": "MuiTypography-h2",
                                "h3": "MuiTypography-h3",
                                "h4": "MuiTypography-h4",
                                "h5": "MuiTypography-h5",
                                "h6": "MuiTypography-h6",
                                "noWrap": "MuiTypography-noWrap",
                                "overline": "MuiTypography-overline",
                                "paragraph": "MuiTypography-paragraph",
                                "root": "MuiTypography-root",
                                "srOnly": "MuiTypography-srOnly",
                                "subtitle1": "MuiTypography-subtitle1",
                                "subtitle2": "MuiTypography-subtitle2",
                              }
                            }
                            component="span"
                          >
                            <span
                              className="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                            >
                              <WithStyles(ForwardRef)
                                component="span"
                              >
                                <ForwardRef
                                  classes={
                                    Object {
                                      "3xlTitle": "HvTypography-3xlTitle",
                                      "4xlTitle": "HvTypography-4xlTitle",
                                      "5xlTitle": "HvTypography-5xlTitle",
                                      "disabledText": "HvTypography-disabledText",
                                      "highlightText": "HvTypography-highlightText",
                                      "lTitle": "HvTypography-lTitle",
                                      "link": "HvTypography-link",
                                      "mTitle": "HvTypography-mTitle",
                                      "noWrap": "HvTypography-noWrap",
                                      "normalText": "HvTypography-normalText",
                                      "placeholderText": "HvTypography-placeholderText",
                                      "root": "HvTypography-root",
                                      "sTitle": "HvTypography-sTitle",
                                      "sectionTitle": "HvTypography-sectionTitle",
                                      "selectedNavText": "HvTypography-selectedNavText",
                                      "vizText": "HvTypography-vizText",
                                      "vizTextDisabled": "HvTypography-vizTextDisabled",
                                      "xlTitle": "HvTypography-xlTitle",
                                      "xsInlineLink": "HvTypography-xsInlineLink",
                                      "xsTitle": "HvTypography-xsTitle",
                                      "xxlTitle": "HvTypography-xxlTitle",
                                      "xxsTitle": "HvTypography-xxsTitle",
                                    }
                                  }
                                  component="span"
                                >
                                  <span
                                    className="HvTypography-root HvTypography-normalText"
                                  >
                                    <b>
                                      2
                                    </b>
                                     / 
                                    3
                                  </span>
                                </ForwardRef>
                              </WithStyles(ForwardRef)>
                            </span>
                          </ForwardRef(Typography)>
                        </WithStyles(ForwardRef(Typography))>
                      </label>
                    </ForwardRef(FormControlLabel)>
                  </WithStyles(ForwardRef(FormControlLabel))>
                </HvCheckbox>
              </WithStyles(HvCheckbox)>
            </div>
            <WithStyles(ActionsGeneric)
              category="semantic"
              classes={
                Object {
                  "root": "HvBulkActions-actions",
                }
              }
              disabled={false}
            >
              <ActionsGeneric
                category="semantic"
                classes={
                  Object {
                    "actionContainer": "HvActionsGeneric-actionContainer",
                    "button": "HvActionsGeneric-button",
                    "dropDownMenu": "HvActionsGeneric-dropDownMenu",
                    "dropDownMenuButton": "HvActionsGeneric-dropDownMenuButton",
                    "dropDownMenuButtonSelected": "HvActionsGeneric-dropDownMenuButtonSelected",
                    "root": "HvActionsGeneric-root HvBulkActions-actions",
                  }
                }
                disabled={false}
              >
                <div
                  className="HvActionsGeneric-root HvBulkActions-actions"
                />
              </ActionsGeneric>
            </WithStyles(ActionsGeneric)>
          </div>
        </HvBulkActions>
      </WithStyles(HvBulkActions)>
    </WithStyles(WithStyles(HvBulkActions))>
    <WithStyles(HvListContainer)
      className="HvList-root"
      condensed={false}
      disableGutters={true}
      interactive={true}
      multiSelect={true}
      role="listbox"
      selectable={true}
    >
      <HvListContainer
        className="HvList-root"
        classes={
          Object {
            "root": "HvListContainer-root",
          }
        }
        condensed={false}
        disableGutters={true}
        interactive={true}
        multiSelect={true}
        role="listbox"
        selectable={true}
      >
        <ul
          aria-multiselectable={true}
          className="HvList-root HvListContainer-root"
          role="listbox"
        >
          <WithStyles(HvListItem)
            classes={
              Object {
                "selected": "HvList-itemSelector",
              }
            }
            key=".$0"
            onClick={[Function]}
            role="option"
            selected={true}
            startAdornment={null}
            tabIndex={0}
          >
            <HvListItem
              classes={
                Object {
                  "condensed": "HvListItem-condensed",
                  "disabled": "HvListItem-disabled",
                  "endAdornment": "HvListItem-endAdornment",
                  "focus": "HvListItem-focus",
                  "gutters": "HvListItem-gutters",
                  "interactive": "HvListItem-interactive",
                  "root": "HvListItem-root",
                  "selected": "HvListItem-selected HvList-itemSelector",
                  "startAdornment": "HvListItem-startAdornment",
                  "withEndAdornment": "HvListItem-withEndAdornment",
                  "withStartAdornment": "HvListItem-withStartAdornment",
                }
              }
              onClick={[Function]}
              role="option"
              selected={true}
              startAdornment={null}
              tabIndex={0}
            >
              <WithStyles(Focus)
                classes={
                  Object {
                    "focus": "HvListItem-focus",
                  }
                }
                configuration={
                  Object {
                    "tabIndex": 0,
                  }
                }
                rootRef={
                  Object {
                    "current": <ul
                      aria-multiselectable="true"
                      class="HvList-root HvListContainer-root"
                      role="listbox"
                    >
                      <li
                        aria-selected="true"
                        class="HvListItem-root HvListItem-interactive HvListItem-selected HvList-itemSelector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-10 Mui-checked"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                checked=""
                                class="PrivateSwitchBase-input-12"
                                data-indeterminate="false"
                                tabindex="0"
                                type="checkbox"
                                value=""
                              />
                              <div
                                class="HvCheckBox-icon HvList-icon HvIconBase-root HvIconBase-s"
                                font-size="default"
                                name="CheckboxCheck"
                              >
                                <svg
                                  focusable="false"
                                  height="16"
                                  viewBox="0 0 16 16"
                                  width="16"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M0 0h16v16H0z"
                                    fill="#414141"
                                  />
                                  <path
                                    class="color0"
                                    d="M16 16H0V0h16zM1 15h14V1H1z"
                                    fill="#414141"
                                  />
                                  <path
                                    class="color1"
                                    d="M6.049 12.463L2.293 8.707l1.414-1.414 2.244 2.244 6.3-7.2 1.506 1.317z"
                                    fill="#FBFCFC"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                          >
                            Value 1
                          </span>
                        </label>
                      </li>
                      <li
                        aria-selected="false"
                        class="HvListItem-root HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                class="PrivateSwitchBase-input-12"
                                data-indeterminate="false"
                                tabindex="-1"
                                type="checkbox"
                                value=""
                              />
                              <div
                                class="HvCheckBox-icon HvList-icon HvIconBase-root HvIconBase-s"
                                font-size="default"
                                name="Checkbox"
                              >
                                <svg
                                  focusable="false"
                                  height="16"
                                  viewBox="0 0 16 16"
                                  width="16"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M0 0h16v16H0z"
                                    fill="#FBFCFC"
                                  />
                                  <path
                                    class="color1"
                                    d="M16 16H0V0h16zM1 15h14V1H1z"
                                    fill="#414141"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                          >
                            Value 2
                          </span>
                        </label>
                      </li>
                      <li
                        aria-selected="true"
                        class="HvListItem-root HvListItem-interactive HvListItem-selected HvList-itemSelector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-10 Mui-checked"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                checked=""
                                class="PrivateSwitchBase-input-12"
                                data-indeterminate="false"
                                tabindex="0"
                                type="checkbox"
                                value=""
                              />
                              <div
                                class="HvCheckBox-icon HvList-icon HvIconBase-root HvIconBase-s"
                                font-size="default"
                                name="CheckboxCheck"
                              >
                                <svg
                                  focusable="false"
                                  height="16"
                                  viewBox="0 0 16 16"
                                  width="16"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M0 0h16v16H0z"
                                    fill="#414141"
                                  />
                                  <path
                                    class="color0"
                                    d="M16 16H0V0h16zM1 15h14V1H1z"
                                    fill="#414141"
                                  />
                                  <path
                                    class="color1"
                                    d="M6.049 12.463L2.293 8.707l1.414-1.414 2.244 2.244 6.3-7.2 1.506 1.317z"
                                    fill="#FBFCFC"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                          >
                            Value 3
                          </span>
                        </label>
                      </li>
                    </ul>,
                  }
                }
                selected={true}
                strategy="listbox"
              >
                <Focus
                  classes={
                    Object {
                      "disabled": "HvFocus-disabled",
                      "externalReference": "HvFocus-externalReference",
                      "falseFocus": "HvFocus-falseFocus",
                      "focus": "HvFocus-focus HvListItem-focus",
                      "focusDisabled": "HvFocus-focusDisabled",
                      "focused": "HvFocus-focused",
                      "root": "HvFocus-root",
                      "selected": "HvFocus-selected",
                    }
                  }
                  configuration={
                    Object {
                      "tabIndex": 0,
                    }
                  }
                  rootRef={
                    Object {
                      "current": <ul
                        aria-multiselectable="true"
                        class="HvList-root HvListContainer-root"
                        role="listbox"
                      >
                        <li
                          aria-selected="true"
                          class="HvListItem-root HvListItem-interactive HvListItem-selected HvList-itemSelector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-10 Mui-checked"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  checked=""
                                  class="PrivateSwitchBase-input-12"
                                  data-indeterminate="false"
                                  tabindex="0"
                                  type="checkbox"
                                  value=""
                                />
                                <div
                                  class="HvCheckBox-icon HvList-icon HvIconBase-root HvIconBase-s"
                                  font-size="default"
                                  name="CheckboxCheck"
                                >
                                  <svg
                                    focusable="false"
                                    height="16"
                                    viewBox="0 0 16 16"
                                    width="16"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M0 0h16v16H0z"
                                      fill="#414141"
                                    />
                                    <path
                                      class="color0"
                                      d="M16 16H0V0h16zM1 15h14V1H1z"
                                      fill="#414141"
                                    />
                                    <path
                                      class="color1"
                                      d="M6.049 12.463L2.293 8.707l1.414-1.414 2.244 2.244 6.3-7.2 1.506 1.317z"
                                      fill="#FBFCFC"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 1
                            </span>
                          </label>
                        </li>
                        <li
                          aria-selected="false"
                          class="HvListItem-root HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  class="PrivateSwitchBase-input-12"
                                  data-indeterminate="false"
                                  tabindex="-1"
                                  type="checkbox"
                                  value=""
                                />
                                <div
                                  class="HvCheckBox-icon HvList-icon HvIconBase-root HvIconBase-s"
                                  font-size="default"
                                  name="Checkbox"
                                >
                                  <svg
                                    focusable="false"
                                    height="16"
                                    viewBox="0 0 16 16"
                                    width="16"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M0 0h16v16H0z"
                                      fill="#FBFCFC"
                                    />
                                    <path
                                      class="color1"
                                      d="M16 16H0V0h16zM1 15h14V1H1z"
                                      fill="#414141"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 2
                            </span>
                          </label>
                        </li>
                        <li
                          aria-selected="true"
                          class="HvListItem-root HvListItem-interactive HvListItem-selected HvList-itemSelector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-10 Mui-checked"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  checked=""
                                  class="PrivateSwitchBase-input-12"
                                  data-indeterminate="false"
                                  tabindex="0"
                                  type="checkbox"
                                  value=""
                                />
                                <div
                                  class="HvCheckBox-icon HvList-icon HvIconBase-root HvIconBase-s"
                                  font-size="default"
                                  name="CheckboxCheck"
                                >
                                  <svg
                                    focusable="false"
                                    height="16"
                                    viewBox="0 0 16 16"
                                    width="16"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M0 0h16v16H0z"
                                      fill="#414141"
                                    />
                                    <path
                                      class="color0"
                                      d="M16 16H0V0h16zM1 15h14V1H1z"
                                      fill="#414141"
                                    />
                                    <path
                                      class="color1"
                                      d="M6.049 12.463L2.293 8.707l1.414-1.414 2.244 2.244 6.3-7.2 1.506 1.317z"
                                      fill="#FBFCFC"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 3
                            </span>
                          </label>
                        </li>
                      </ul>,
                    }
                  }
                  selected={true}
                  strategy="listbox"
                >
                  <ConditionalWrapper
                    condition={false}
                    wrapper={[Function]}
                  >
                    <li
                      aria-selected={true}
                      className="HvListItem-root HvListItem-interactive HvListItem-selected HvList-itemSelector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      role="option"
                      selected={true}
                    >
                      <ComponentFunction>
                        <WithStyles(HvCheckbox)
                          checked={true}
                          classes={
                            Object {
                              "container": "HvList-selectorContainer",
                              "icon": "HvList-icon",
                              "labelTypography": "HvList-truncate",
                            }
                          }
                          label="Value 1"
                          onChange={[Function]}
                        >
                          <HvCheckbox
                            checked={true}
                            classes={
                              Object {
                                "checkBox": "HvCheckBox-checkBox",
                                "container": "HvCheckBox-container HvList-selectorContainer",
                                "disableFocus": "HvCheckBox-disableFocus",
                                "disabledBorder": "HvCheckBox-disabledBorder",
                                "icon": "HvCheckBox-icon HvList-icon",
                                "labelDisabled": "HvCheckBox-labelDisabled",
                                "labelEnd": "HvCheckBox-labelEnd",
                                "labelStart": "HvCheckBox-labelStart",
                                "labelTypography": "HvCheckBox-labelTypography HvList-truncate",
                              }
                            }
                            label="Value 1"
                            onChange={[Function]}
                          >
                            <WithStyles(ForwardRef(FormControlLabel))
                              className="HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                              classes={
                                Object {
                                  "disabled": "HvCheckBox-labelDisabled",
                                  "label": "HvCheckBox-labelTypography HvList-truncate",
                                }
                              }
                              control={
                                <ForwardRef(WithStyles)
                                  checked={true}
                                  checkedIcon={
                                    <CheckboxCheck
                                      className="HvCheckBox-icon HvList-icon"
                                    />
                                  }
                                  className="HvCheckBox-checkBox"
                                  color="default"
                                  disableRipple={true}
                                  disabled={false}
                                  icon={
                                    <Checkbox
                                      className="HvCheckBox-icon HvList-icon"
                                    />
                                  }
                                  indeterminateIcon={
                                    <CheckboxPartial
                                      className="HvCheckBox-icon HvList-icon"
                                    />
                                  }
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  value=""
                                />
                              }
                              disabled={false}
                              label="Value 1"
                              labelPlacement="end"
                            >
                              <ForwardRef(FormControlLabel)
                                className="HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled HvCheckBox-labelDisabled",
                                    "label": "MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate",
                                    "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                    "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                    "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                    "root": "MuiFormControlLabel-root",
                                  }
                                }
                                control={
                                  <ForwardRef(WithStyles)
                                    checked={true}
                                    checkedIcon={
                                      <CheckboxCheck
                                        className="HvCheckBox-icon HvList-icon"
                                      />
                                    }
                                    className="HvCheckBox-checkBox"
                                    color="default"
                                    disableRipple={true}
                                    disabled={false}
                                    icon={
                                      <Checkbox
                                        className="HvCheckBox-icon HvList-icon"
                                      />
                                    }
                                    indeterminateIcon={
                                      <CheckboxPartial
                                        className="HvCheckBox-icon HvList-icon"
                                      />
                                    }
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    value=""
                                  />
                                }
                                disabled={false}
                                label="Value 1"
                                labelPlacement="end"
                              >
                                <label
                                  className="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                                >
                                  <WithStyles(ForwardRef(Checkbox))
                                    checked={true}
                                    checkedIcon={
                                      <CheckboxCheck
                                        className="HvCheckBox-icon HvList-icon"
                                      />
                                    }
                                    className="HvCheckBox-checkBox"
                                    color="default"
                                    disableRipple={true}
                                    disabled={false}
                                    icon={
                                      <Checkbox
                                        className="HvCheckBox-icon HvList-icon"
                                      />
                                    }
                                    indeterminateIcon={
                                      <CheckboxPartial
                                        className="HvCheckBox-icon HvList-icon"
                                      />
                                    }
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    value=""
                                  >
                                    <ForwardRef(Checkbox)
                                      checked={true}
                                      checkedIcon={
                                        <CheckboxCheck
                                          className="HvCheckBox-icon HvList-icon"
                                        />
                                      }
                                      className="HvCheckBox-checkBox"
                                      classes={
                                        Object {
                                          "checked": "Mui-checked",
                                          "colorPrimary": "MuiCheckbox-colorPrimary",
                                          "colorSecondary": "MuiCheckbox-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "indeterminate": "MuiCheckbox-indeterminate",
                                          "root": "MuiCheckbox-root",
                                        }
                                      }
                                      color="default"
                                      disableRipple={true}
                                      disabled={false}
                                      icon={
                                        <Checkbox
                                          className="HvCheckBox-icon HvList-icon"
                                        />
                                      }
                                      indeterminateIcon={
                                        <CheckboxPartial
                                          className="HvCheckBox-icon HvList-icon"
                                        />
                                      }
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      value=""
                                    >
                                      <WithStyles(ForwardRef(SwitchBase))
                                        checked={true}
                                        checkedIcon={
                                          <CheckboxCheck
                                            className="HvCheckBox-icon HvList-icon"
                                            fontSize="default"
                                          />
                                        }
                                        className="HvCheckBox-checkBox"
                                        classes={
                                          Object {
                                            "checked": "Mui-checked",
                                            "disabled": "Mui-disabled",
                                            "root": "MuiCheckbox-root",
                                          }
                                        }
                                        color="default"
                                        disableRipple={true}
                                        disabled={false}
                                        icon={
                                          <Checkbox
                                            className="HvCheckBox-icon HvList-icon"
                                            fontSize="default"
                                          />
                                        }
                                        inputProps={
                                          Object {
                                            "data-indeterminate": false,
                                          }
                                        }
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        type="checkbox"
                                        value=""
                                      >
                                        <ForwardRef(SwitchBase)
                                          checked={true}
                                          checkedIcon={
                                            <CheckboxCheck
                                              className="HvCheckBox-icon HvList-icon"
                                              fontSize="default"
                                            />
                                          }
                                          className="HvCheckBox-checkBox"
                                          classes={
                                            Object {
                                              "checked": "PrivateSwitchBase-checked-10 Mui-checked",
                                              "disabled": "PrivateSwitchBase-disabled-11 Mui-disabled",
                                              "input": "PrivateSwitchBase-input-12",
                                              "root": "PrivateSwitchBase-root-9 MuiCheckbox-root",
                                            }
                                          }
                                          color="default"
                                          disableRipple={true}
                                          disabled={false}
                                          icon={
                                            <Checkbox
                                              className="HvCheckBox-icon HvList-icon"
                                              fontSize="default"
                                            />
                                          }
                                          inputProps={
                                            Object {
                                              "data-indeterminate": false,
                                            }
                                          }
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          type="checkbox"
                                          value=""
                                        >
                                          <WithStyles(ForwardRef(IconButton))
                                            className="PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-10 Mui-checked"
                                            color="default"
                                            component="span"
                                            disableRipple={true}
                                            disabled={false}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <ForwardRef(IconButton)
                                              className="PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-10 Mui-checked"
                                              classes={
                                                Object {
                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                  "disabled": "Mui-disabled",
                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                  "label": "MuiIconButton-label",
                                                  "root": "MuiIconButton-root",
                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                }
                                              }
                                              color="default"
                                              component="span"
                                              disableRipple={true}
                                              disabled={false}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <WithStyles(ForwardRef(ButtonBase))
                                                centerRipple={true}
                                                className="MuiIconButton-root PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-10 Mui-checked"
                                                component="span"
                                                disableRipple={true}
                                                disabled={false}
                                                focusRipple={true}
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                tabIndex={null}
                                              >
                                                <ForwardRef(ButtonBase)
                                                  centerRipple={true}
                                                  className="MuiIconButton-root PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-10 Mui-checked"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiButtonBase-root",
                                                    }
                                                  }
                                                  component="span"
                                                  disableRipple={true}
                                                  disabled={false}
                                                  focusRipple={true}
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  tabIndex={null}
                                                >
                                                  <span
                                                    aria-disabled={false}
                                                    className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-10 Mui-checked"
                                                    onBlur={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    tabIndex={null}
                                                  >
                                                    <span
                                                      className="MuiIconButton-label"
                                                    >
                                                      <input
                                                        checked={true}
                                                        className="PrivateSwitchBase-input-12"
                                                        data-indeterminate={false}
                                                        disabled={false}
                                                        onChange={[Function]}
                                                        type="checkbox"
                                                        value=""
                                                      />
                                                      <CheckboxCheck
                                                        className="HvCheckBox-icon HvList-icon"
                                                        fontSize="default"
                                                      >
                                                        <WithStyles(HvIconBase)
                                                          className="HvCheckBox-icon HvList-icon"
                                                          fontSize="default"
                                                          iconSize="S"
                                                          name="CheckboxCheck"
                                                        >
                                                          <HvIconBase
                                                            className="HvCheckBox-icon HvList-icon"
                                                            classes={
                                                              Object {
                                                                "l": "HvIconBase-l",
                                                                "m": "HvIconBase-m",
                                                                "root": "HvIconBase-root",
                                                                "s": "HvIconBase-s",
                                                                "xs": "HvIconBase-xs",
                                                              }
                                                            }
                                                            fontSize="default"
                                                            iconSize="S"
                                                            name="CheckboxCheck"
                                                          >
                                                            <div
                                                              className="HvCheckBox-icon HvList-icon HvIconBase-root HvIconBase-s"
                                                              fontSize="default"
                                                              name="CheckboxCheck"
                                                            >
                                                              <svg
                                                                focusable={false}
                                                                height={16}
                                                                viewBox="0 0 16 16"
                                                                width={16}
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  className="color0"
                                                                  d="M0 0h16v16H0z"
                                                                  fill="#414141"
                                                                />
                                                                <path
                                                                  className="color0"
                                                                  d="M16 16H0V0h16zM1 15h14V1H1z"
                                                                  fill="#414141"
                                                                />
                                                                <path
                                                                  className="color1"
                                                                  d="M6.049 12.463L2.293 8.707l1.414-1.414 2.244 2.244 6.3-7.2 1.506 1.317z"
                                                                  fill="#FBFCFC"
                                                                />
                                                              </svg>
                                                            </div>
                                                          </HvIconBase>
                                                        </WithStyles(HvIconBase)>
                                                      </CheckboxCheck>
                                                    </span>
                                                  </span>
                                                </ForwardRef(ButtonBase)>
                                              </WithStyles(ForwardRef(ButtonBase))>
                                            </ForwardRef(IconButton)>
                                          </WithStyles(ForwardRef(IconButton))>
                                        </ForwardRef(SwitchBase)>
                                      </WithStyles(ForwardRef(SwitchBase))>
                                    </ForwardRef(Checkbox)>
                                  </WithStyles(ForwardRef(Checkbox))>
                                  <WithStyles(ForwardRef(Typography))
                                    className="MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate"
                                    component="span"
                                  >
                                    <ForwardRef(Typography)
                                      className="MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      component="span"
                                    >
                                      <span
                                        className="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                                      >
                                        Value 1
                                      </span>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </label>
                              </ForwardRef(FormControlLabel)>
                            </WithStyles(ForwardRef(FormControlLabel))>
                          </HvCheckbox>
                        </WithStyles(HvCheckbox)>
                      </ComponentFunction>
                    </li>
                  </ConditionalWrapper>
                </Focus>
              </WithStyles(Focus)>
            </HvListItem>
          </WithStyles(HvListItem)>
          <WithStyles(HvListItem)
            classes={
              Object {
                "selected": "HvList-itemSelector",
              }
            }
            key=".$1"
            onClick={[Function]}
            role="option"
            selected={false}
            startAdornment={null}
            tabIndex={-1}
          >
            <HvListItem
              classes={
                Object {
                  "condensed": "HvListItem-condensed",
                  "disabled": "HvListItem-disabled",
                  "endAdornment": "HvListItem-endAdornment",
                  "focus": "HvListItem-focus",
                  "gutters": "HvListItem-gutters",
                  "interactive": "HvListItem-interactive",
                  "root": "HvListItem-root",
                  "selected": "HvListItem-selected HvList-itemSelector",
                  "startAdornment": "HvListItem-startAdornment",
                  "withEndAdornment": "HvListItem-withEndAdornment",
                  "withStartAdornment": "HvListItem-withStartAdornment",
                }
              }
              onClick={[Function]}
              role="option"
              selected={false}
              startAdornment={null}
              tabIndex={-1}
            >
              <WithStyles(Focus)
                classes={
                  Object {
                    "focus": "HvListItem-focus",
                  }
                }
                configuration={
                  Object {
                    "tabIndex": -1,
                  }
                }
                rootRef={
                  Object {
                    "current": <ul
                      aria-multiselectable="true"
                      class="HvList-root HvListContainer-root"
                      role="listbox"
                    >
                      <li
                        aria-selected="true"
                        class="HvListItem-root HvListItem-interactive HvListItem-selected HvList-itemSelector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-10 Mui-checked"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                checked=""
                                class="PrivateSwitchBase-input-12"
                                data-indeterminate="false"
                                tabindex="0"
                                type="checkbox"
                                value=""
                              />
                              <div
                                class="HvCheckBox-icon HvList-icon HvIconBase-root HvIconBase-s"
                                font-size="default"
                                name="CheckboxCheck"
                              >
                                <svg
                                  focusable="false"
                                  height="16"
                                  viewBox="0 0 16 16"
                                  width="16"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M0 0h16v16H0z"
                                    fill="#414141"
                                  />
                                  <path
                                    class="color0"
                                    d="M16 16H0V0h16zM1 15h14V1H1z"
                                    fill="#414141"
                                  />
                                  <path
                                    class="color1"
                                    d="M6.049 12.463L2.293 8.707l1.414-1.414 2.244 2.244 6.3-7.2 1.506 1.317z"
                                    fill="#FBFCFC"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                          >
                            Value 1
                          </span>
                        </label>
                      </li>
                      <li
                        aria-selected="false"
                        class="HvListItem-root HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                class="PrivateSwitchBase-input-12"
                                data-indeterminate="false"
                                tabindex="-1"
                                type="checkbox"
                                value=""
                              />
                              <div
                                class="HvCheckBox-icon HvList-icon HvIconBase-root HvIconBase-s"
                                font-size="default"
                                name="Checkbox"
                              >
                                <svg
                                  focusable="false"
                                  height="16"
                                  viewBox="0 0 16 16"
                                  width="16"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M0 0h16v16H0z"
                                    fill="#FBFCFC"
                                  />
                                  <path
                                    class="color1"
                                    d="M16 16H0V0h16zM1 15h14V1H1z"
                                    fill="#414141"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                          >
                            Value 2
                          </span>
                        </label>
                      </li>
                      <li
                        aria-selected="true"
                        class="HvListItem-root HvListItem-interactive HvListItem-selected HvList-itemSelector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-10 Mui-checked"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                checked=""
                                class="PrivateSwitchBase-input-12"
                                data-indeterminate="false"
                                tabindex="0"
                                type="checkbox"
                                value=""
                              />
                              <div
                                class="HvCheckBox-icon HvList-icon HvIconBase-root HvIconBase-s"
                                font-size="default"
                                name="CheckboxCheck"
                              >
                                <svg
                                  focusable="false"
                                  height="16"
                                  viewBox="0 0 16 16"
                                  width="16"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M0 0h16v16H0z"
                                    fill="#414141"
                                  />
                                  <path
                                    class="color0"
                                    d="M16 16H0V0h16zM1 15h14V1H1z"
                                    fill="#414141"
                                  />
                                  <path
                                    class="color1"
                                    d="M6.049 12.463L2.293 8.707l1.414-1.414 2.244 2.244 6.3-7.2 1.506 1.317z"
                                    fill="#FBFCFC"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                          >
                            Value 3
                          </span>
                        </label>
                      </li>
                    </ul>,
                  }
                }
                selected={false}
                strategy="listbox"
              >
                <Focus
                  classes={
                    Object {
                      "disabled": "HvFocus-disabled",
                      "externalReference": "HvFocus-externalReference",
                      "falseFocus": "HvFocus-falseFocus",
                      "focus": "HvFocus-focus HvListItem-focus",
                      "focusDisabled": "HvFocus-focusDisabled",
                      "focused": "HvFocus-focused",
                      "root": "HvFocus-root",
                      "selected": "HvFocus-selected",
                    }
                  }
                  configuration={
                    Object {
                      "tabIndex": -1,
                    }
                  }
                  rootRef={
                    Object {
                      "current": <ul
                        aria-multiselectable="true"
                        class="HvList-root HvListContainer-root"
                        role="listbox"
                      >
                        <li
                          aria-selected="true"
                          class="HvListItem-root HvListItem-interactive HvListItem-selected HvList-itemSelector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-10 Mui-checked"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  checked=""
                                  class="PrivateSwitchBase-input-12"
                                  data-indeterminate="false"
                                  tabindex="0"
                                  type="checkbox"
                                  value=""
                                />
                                <div
                                  class="HvCheckBox-icon HvList-icon HvIconBase-root HvIconBase-s"
                                  font-size="default"
                                  name="CheckboxCheck"
                                >
                                  <svg
                                    focusable="false"
                                    height="16"
                                    viewBox="0 0 16 16"
                                    width="16"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M0 0h16v16H0z"
                                      fill="#414141"
                                    />
                                    <path
                                      class="color0"
                                      d="M16 16H0V0h16zM1 15h14V1H1z"
                                      fill="#414141"
                                    />
                                    <path
                                      class="color1"
                                      d="M6.049 12.463L2.293 8.707l1.414-1.414 2.244 2.244 6.3-7.2 1.506 1.317z"
                                      fill="#FBFCFC"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 1
                            </span>
                          </label>
                        </li>
                        <li
                          aria-selected="false"
                          class="HvListItem-root HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  class="PrivateSwitchBase-input-12"
                                  data-indeterminate="false"
                                  tabindex="-1"
                                  type="checkbox"
                                  value=""
                                />
                                <div
                                  class="HvCheckBox-icon HvList-icon HvIconBase-root HvIconBase-s"
                                  font-size="default"
                                  name="Checkbox"
                                >
                                  <svg
                                    focusable="false"
                                    height="16"
                                    viewBox="0 0 16 16"
                                    width="16"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M0 0h16v16H0z"
                                      fill="#FBFCFC"
                                    />
                                    <path
                                      class="color1"
                                      d="M16 16H0V0h16zM1 15h14V1H1z"
                                      fill="#414141"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 2
                            </span>
                          </label>
                        </li>
                        <li
                          aria-selected="true"
                          class="HvListItem-root HvListItem-interactive HvListItem-selected HvList-itemSelector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-10 Mui-checked"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  checked=""
                                  class="PrivateSwitchBase-input-12"
                                  data-indeterminate="false"
                                  tabindex="0"
                                  type="checkbox"
                                  value=""
                                />
                                <div
                                  class="HvCheckBox-icon HvList-icon HvIconBase-root HvIconBase-s"
                                  font-size="default"
                                  name="CheckboxCheck"
                                >
                                  <svg
                                    focusable="false"
                                    height="16"
                                    viewBox="0 0 16 16"
                                    width="16"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M0 0h16v16H0z"
                                      fill="#414141"
                                    />
                                    <path
                                      class="color0"
                                      d="M16 16H0V0h16zM1 15h14V1H1z"
                                      fill="#414141"
                                    />
                                    <path
                                      class="color1"
                                      d="M6.049 12.463L2.293 8.707l1.414-1.414 2.244 2.244 6.3-7.2 1.506 1.317z"
                                      fill="#FBFCFC"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 3
                            </span>
                          </label>
                        </li>
                      </ul>,
                    }
                  }
                  selected={false}
                  strategy="listbox"
                >
                  <ConditionalWrapper
                    condition={false}
                    wrapper={[Function]}
                  >
                    <li
                      aria-selected={false}
                      className="HvListItem-root HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      role="option"
                      selected={false}
                    >
                      <ComponentFunction>
                        <WithStyles(HvCheckbox)
                          checked={false}
                          classes={
                            Object {
                              "container": "HvList-selectorContainer",
                              "icon": "HvList-icon",
                              "labelTypography": "HvList-truncate",
                            }
                          }
                          label="Value 2"
                          onChange={[Function]}
                        >
                          <HvCheckbox
                            checked={false}
                            classes={
                              Object {
                                "checkBox": "HvCheckBox-checkBox",
                                "container": "HvCheckBox-container HvList-selectorContainer",
                                "disableFocus": "HvCheckBox-disableFocus",
                                "disabledBorder": "HvCheckBox-disabledBorder",
                                "icon": "HvCheckBox-icon HvList-icon",
                                "labelDisabled": "HvCheckBox-labelDisabled",
                                "labelEnd": "HvCheckBox-labelEnd",
                                "labelStart": "HvCheckBox-labelStart",
                                "labelTypography": "HvCheckBox-labelTypography HvList-truncate",
                              }
                            }
                            label="Value 2"
                            onChange={[Function]}
                          >
                            <WithStyles(ForwardRef(FormControlLabel))
                              className="HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                              classes={
                                Object {
                                  "disabled": "HvCheckBox-labelDisabled",
                                  "label": "HvCheckBox-labelTypography HvList-truncate",
                                }
                              }
                              control={
                                <ForwardRef(WithStyles)
                                  checked={false}
                                  checkedIcon={
                                    <CheckboxCheck
                                      className="HvCheckBox-icon HvList-icon"
                                    />
                                  }
                                  className="HvCheckBox-checkBox"
                                  color="default"
                                  disableRipple={true}
                                  disabled={false}
                                  icon={
                                    <Checkbox
                                      className="HvCheckBox-icon HvList-icon"
                                    />
                                  }
                                  indeterminateIcon={
                                    <CheckboxPartial
                                      className="HvCheckBox-icon HvList-icon"
                                    />
                                  }
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  value=""
                                />
                              }
                              disabled={false}
                              label="Value 2"
                              labelPlacement="end"
                            >
                              <ForwardRef(FormControlLabel)
                                className="HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled HvCheckBox-labelDisabled",
                                    "label": "MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate",
                                    "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                    "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                    "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                    "root": "MuiFormControlLabel-root",
                                  }
                                }
                                control={
                                  <ForwardRef(WithStyles)
                                    checked={false}
                                    checkedIcon={
                                      <CheckboxCheck
                                        className="HvCheckBox-icon HvList-icon"
                                      />
                                    }
                                    className="HvCheckBox-checkBox"
                                    color="default"
                                    disableRipple={true}
                                    disabled={false}
                                    icon={
                                      <Checkbox
                                        className="HvCheckBox-icon HvList-icon"
                                      />
                                    }
                                    indeterminateIcon={
                                      <CheckboxPartial
                                        className="HvCheckBox-icon HvList-icon"
                                      />
                                    }
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    value=""
                                  />
                                }
                                disabled={false}
                                label="Value 2"
                                labelPlacement="end"
                              >
                                <label
                                  className="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                                >
                                  <WithStyles(ForwardRef(Checkbox))
                                    checked={false}
                                    checkedIcon={
                                      <CheckboxCheck
                                        className="HvCheckBox-icon HvList-icon"
                                      />
                                    }
                                    className="HvCheckBox-checkBox"
                                    color="default"
                                    disableRipple={true}
                                    disabled={false}
                                    icon={
                                      <Checkbox
                                        className="HvCheckBox-icon HvList-icon"
                                      />
                                    }
                                    indeterminateIcon={
                                      <CheckboxPartial
                                        className="HvCheckBox-icon HvList-icon"
                                      />
                                    }
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    value=""
                                  >
                                    <ForwardRef(Checkbox)
                                      checked={false}
                                      checkedIcon={
                                        <CheckboxCheck
                                          className="HvCheckBox-icon HvList-icon"
                                        />
                                      }
                                      className="HvCheckBox-checkBox"
                                      classes={
                                        Object {
                                          "checked": "Mui-checked",
                                          "colorPrimary": "MuiCheckbox-colorPrimary",
                                          "colorSecondary": "MuiCheckbox-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "indeterminate": "MuiCheckbox-indeterminate",
                                          "root": "MuiCheckbox-root",
                                        }
                                      }
                                      color="default"
                                      disableRipple={true}
                                      disabled={false}
                                      icon={
                                        <Checkbox
                                          className="HvCheckBox-icon HvList-icon"
                                        />
                                      }
                                      indeterminateIcon={
                                        <CheckboxPartial
                                          className="HvCheckBox-icon HvList-icon"
                                        />
                                      }
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      value=""
                                    >
                                      <WithStyles(ForwardRef(SwitchBase))
                                        checked={false}
                                        checkedIcon={
                                          <CheckboxCheck
                                            className="HvCheckBox-icon HvList-icon"
                                            fontSize="default"
                                          />
                                        }
                                        className="HvCheckBox-checkBox"
                                        classes={
                                          Object {
                                            "checked": "Mui-checked",
                                            "disabled": "Mui-disabled",
                                            "root": "MuiCheckbox-root",
                                          }
                                        }
                                        color="default"
                                        disableRipple={true}
                                        disabled={false}
                                        icon={
                                          <Checkbox
                                            className="HvCheckBox-icon HvList-icon"
                                            fontSize="default"
                                          />
                                        }
                                        inputProps={
                                          Object {
                                            "data-indeterminate": false,
                                          }
                                        }
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        type="checkbox"
                                        value=""
                                      >
                                        <ForwardRef(SwitchBase)
                                          checked={false}
                                          checkedIcon={
                                            <CheckboxCheck
                                              className="HvCheckBox-icon HvList-icon"
                                              fontSize="default"
                                            />
                                          }
                                          className="HvCheckBox-checkBox"
                                          classes={
                                            Object {
                                              "checked": "PrivateSwitchBase-checked-10 Mui-checked",
                                              "disabled": "PrivateSwitchBase-disabled-11 Mui-disabled",
                                              "input": "PrivateSwitchBase-input-12",
                                              "root": "PrivateSwitchBase-root-9 MuiCheckbox-root",
                                            }
                                          }
                                          color="default"
                                          disableRipple={true}
                                          disabled={false}
                                          icon={
                                            <Checkbox
                                              className="HvCheckBox-icon HvList-icon"
                                              fontSize="default"
                                            />
                                          }
                                          inputProps={
                                            Object {
                                              "data-indeterminate": false,
                                            }
                                          }
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          type="checkbox"
                                          value=""
                                        >
                                          <WithStyles(ForwardRef(IconButton))
                                            className="PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox"
                                            color="default"
                                            component="span"
                                            disableRipple={true}
                                            disabled={false}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <ForwardRef(IconButton)
                                              className="PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox"
                                              classes={
                                                Object {
                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                  "disabled": "Mui-disabled",
                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                  "label": "MuiIconButton-label",
                                                  "root": "MuiIconButton-root",
                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                }
                                              }
                                              color="default"
                                              component="span"
                                              disableRipple={true}
                                              disabled={false}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <WithStyles(ForwardRef(ButtonBase))
                                                centerRipple={true}
                                                className="MuiIconButton-root PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox"
                                                component="span"
                                                disableRipple={true}
                                                disabled={false}
                                                focusRipple={true}
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                tabIndex={null}
                                              >
                                                <ForwardRef(ButtonBase)
                                                  centerRipple={true}
                                                  className="MuiIconButton-root PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiButtonBase-root",
                                                    }
                                                  }
                                                  component="span"
                                                  disableRipple={true}
                                                  disabled={false}
                                                  focusRipple={true}
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  tabIndex={null}
                                                >
                                                  <span
                                                    aria-disabled={false}
                                                    className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox"
                                                    onBlur={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    tabIndex={null}
                                                  >
                                                    <span
                                                      className="MuiIconButton-label"
                                                    >
                                                      <input
                                                        checked={false}
                                                        className="PrivateSwitchBase-input-12"
                                                        data-indeterminate={false}
                                                        disabled={false}
                                                        onChange={[Function]}
                                                        type="checkbox"
                                                        value=""
                                                      />
                                                      <Checkbox
                                                        className="HvCheckBox-icon HvList-icon"
                                                        fontSize="default"
                                                      >
                                                        <WithStyles(HvIconBase)
                                                          className="HvCheckBox-icon HvList-icon"
                                                          fontSize="default"
                                                          iconSize="S"
                                                          name="Checkbox"
                                                        >
                                                          <HvIconBase
                                                            className="HvCheckBox-icon HvList-icon"
                                                            classes={
                                                              Object {
                                                                "l": "HvIconBase-l",
                                                                "m": "HvIconBase-m",
                                                                "root": "HvIconBase-root",
                                                                "s": "HvIconBase-s",
                                                                "xs": "HvIconBase-xs",
                                                              }
                                                            }
                                                            fontSize="default"
                                                            iconSize="S"
                                                            name="Checkbox"
                                                          >
                                                            <div
                                                              className="HvCheckBox-icon HvList-icon HvIconBase-root HvIconBase-s"
                                                              fontSize="default"
                                                              name="Checkbox"
                                                            >
                                                              <svg
                                                                focusable={false}
                                                                height={16}
                                                                viewBox="0 0 16 16"
                                                                width={16}
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  className="color0"
                                                                  d="M0 0h16v16H0z"
                                                                  fill="#FBFCFC"
                                                                />
                                                                <path
                                                                  className="color1"
                                                                  d="M16 16H0V0h16zM1 15h14V1H1z"
                                                                  fill="#414141"
                                                                />
                                                              </svg>
                                                            </div>
                                                          </HvIconBase>
                                                        </WithStyles(HvIconBase)>
                                                      </Checkbox>
                                                    </span>
                                                  </span>
                                                </ForwardRef(ButtonBase)>
                                              </WithStyles(ForwardRef(ButtonBase))>
                                            </ForwardRef(IconButton)>
                                          </WithStyles(ForwardRef(IconButton))>
                                        </ForwardRef(SwitchBase)>
                                      </WithStyles(ForwardRef(SwitchBase))>
                                    </ForwardRef(Checkbox)>
                                  </WithStyles(ForwardRef(Checkbox))>
                                  <WithStyles(ForwardRef(Typography))
                                    className="MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate"
                                    component="span"
                                  >
                                    <ForwardRef(Typography)
                                      className="MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      component="span"
                                    >
                                      <span
                                        className="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                                      >
                                        Value 2
                                      </span>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </label>
                              </ForwardRef(FormControlLabel)>
                            </WithStyles(ForwardRef(FormControlLabel))>
                          </HvCheckbox>
                        </WithStyles(HvCheckbox)>
                      </ComponentFunction>
                    </li>
                  </ConditionalWrapper>
                </Focus>
              </WithStyles(Focus)>
            </HvListItem>
          </WithStyles(HvListItem)>
          <WithStyles(HvListItem)
            classes={
              Object {
                "selected": "HvList-itemSelector",
              }
            }
            key=".$2"
            onClick={[Function]}
            role="option"
            selected={true}
            startAdornment={null}
            tabIndex={0}
          >
            <HvListItem
              classes={
                Object {
                  "condensed": "HvListItem-condensed",
                  "disabled": "HvListItem-disabled",
                  "endAdornment": "HvListItem-endAdornment",
                  "focus": "HvListItem-focus",
                  "gutters": "HvListItem-gutters",
                  "interactive": "HvListItem-interactive",
                  "root": "HvListItem-root",
                  "selected": "HvListItem-selected HvList-itemSelector",
                  "startAdornment": "HvListItem-startAdornment",
                  "withEndAdornment": "HvListItem-withEndAdornment",
                  "withStartAdornment": "HvListItem-withStartAdornment",
                }
              }
              onClick={[Function]}
              role="option"
              selected={true}
              startAdornment={null}
              tabIndex={0}
            >
              <WithStyles(Focus)
                classes={
                  Object {
                    "focus": "HvListItem-focus",
                  }
                }
                configuration={
                  Object {
                    "tabIndex": 0,
                  }
                }
                rootRef={
                  Object {
                    "current": <ul
                      aria-multiselectable="true"
                      class="HvList-root HvListContainer-root"
                      role="listbox"
                    >
                      <li
                        aria-selected="true"
                        class="HvListItem-root HvListItem-interactive HvListItem-selected HvList-itemSelector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-10 Mui-checked"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                checked=""
                                class="PrivateSwitchBase-input-12"
                                data-indeterminate="false"
                                tabindex="0"
                                type="checkbox"
                                value=""
                              />
                              <div
                                class="HvCheckBox-icon HvList-icon HvIconBase-root HvIconBase-s"
                                font-size="default"
                                name="CheckboxCheck"
                              >
                                <svg
                                  focusable="false"
                                  height="16"
                                  viewBox="0 0 16 16"
                                  width="16"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M0 0h16v16H0z"
                                    fill="#414141"
                                  />
                                  <path
                                    class="color0"
                                    d="M16 16H0V0h16zM1 15h14V1H1z"
                                    fill="#414141"
                                  />
                                  <path
                                    class="color1"
                                    d="M6.049 12.463L2.293 8.707l1.414-1.414 2.244 2.244 6.3-7.2 1.506 1.317z"
                                    fill="#FBFCFC"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                          >
                            Value 1
                          </span>
                        </label>
                      </li>
                      <li
                        aria-selected="false"
                        class="HvListItem-root HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                class="PrivateSwitchBase-input-12"
                                data-indeterminate="false"
                                tabindex="-1"
                                type="checkbox"
                                value=""
                              />
                              <div
                                class="HvCheckBox-icon HvList-icon HvIconBase-root HvIconBase-s"
                                font-size="default"
                                name="Checkbox"
                              >
                                <svg
                                  focusable="false"
                                  height="16"
                                  viewBox="0 0 16 16"
                                  width="16"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M0 0h16v16H0z"
                                    fill="#FBFCFC"
                                  />
                                  <path
                                    class="color1"
                                    d="M16 16H0V0h16zM1 15h14V1H1z"
                                    fill="#414141"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                          >
                            Value 2
                          </span>
                        </label>
                      </li>
                      <li
                        aria-selected="true"
                        class="HvListItem-root HvListItem-interactive HvListItem-selected HvList-itemSelector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-10 Mui-checked"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                checked=""
                                class="PrivateSwitchBase-input-12"
                                data-indeterminate="false"
                                tabindex="0"
                                type="checkbox"
                                value=""
                              />
                              <div
                                class="HvCheckBox-icon HvList-icon HvIconBase-root HvIconBase-s"
                                font-size="default"
                                name="CheckboxCheck"
                              >
                                <svg
                                  focusable="false"
                                  height="16"
                                  viewBox="0 0 16 16"
                                  width="16"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M0 0h16v16H0z"
                                    fill="#414141"
                                  />
                                  <path
                                    class="color0"
                                    d="M16 16H0V0h16zM1 15h14V1H1z"
                                    fill="#414141"
                                  />
                                  <path
                                    class="color1"
                                    d="M6.049 12.463L2.293 8.707l1.414-1.414 2.244 2.244 6.3-7.2 1.506 1.317z"
                                    fill="#FBFCFC"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                          >
                            Value 3
                          </span>
                        </label>
                      </li>
                    </ul>,
                  }
                }
                selected={true}
                strategy="listbox"
              >
                <Focus
                  classes={
                    Object {
                      "disabled": "HvFocus-disabled",
                      "externalReference": "HvFocus-externalReference",
                      "falseFocus": "HvFocus-falseFocus",
                      "focus": "HvFocus-focus HvListItem-focus",
                      "focusDisabled": "HvFocus-focusDisabled",
                      "focused": "HvFocus-focused",
                      "root": "HvFocus-root",
                      "selected": "HvFocus-selected",
                    }
                  }
                  configuration={
                    Object {
                      "tabIndex": 0,
                    }
                  }
                  rootRef={
                    Object {
                      "current": <ul
                        aria-multiselectable="true"
                        class="HvList-root HvListContainer-root"
                        role="listbox"
                      >
                        <li
                          aria-selected="true"
                          class="HvListItem-root HvListItem-interactive HvListItem-selected HvList-itemSelector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-10 Mui-checked"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  checked=""
                                  class="PrivateSwitchBase-input-12"
                                  data-indeterminate="false"
                                  tabindex="0"
                                  type="checkbox"
                                  value=""
                                />
                                <div
                                  class="HvCheckBox-icon HvList-icon HvIconBase-root HvIconBase-s"
                                  font-size="default"
                                  name="CheckboxCheck"
                                >
                                  <svg
                                    focusable="false"
                                    height="16"
                                    viewBox="0 0 16 16"
                                    width="16"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M0 0h16v16H0z"
                                      fill="#414141"
                                    />
                                    <path
                                      class="color0"
                                      d="M16 16H0V0h16zM1 15h14V1H1z"
                                      fill="#414141"
                                    />
                                    <path
                                      class="color1"
                                      d="M6.049 12.463L2.293 8.707l1.414-1.414 2.244 2.244 6.3-7.2 1.506 1.317z"
                                      fill="#FBFCFC"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 1
                            </span>
                          </label>
                        </li>
                        <li
                          aria-selected="false"
                          class="HvListItem-root HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  class="PrivateSwitchBase-input-12"
                                  data-indeterminate="false"
                                  tabindex="-1"
                                  type="checkbox"
                                  value=""
                                />
                                <div
                                  class="HvCheckBox-icon HvList-icon HvIconBase-root HvIconBase-s"
                                  font-size="default"
                                  name="Checkbox"
                                >
                                  <svg
                                    focusable="false"
                                    height="16"
                                    viewBox="0 0 16 16"
                                    width="16"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M0 0h16v16H0z"
                                      fill="#FBFCFC"
                                    />
                                    <path
                                      class="color1"
                                      d="M16 16H0V0h16zM1 15h14V1H1z"
                                      fill="#414141"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 2
                            </span>
                          </label>
                        </li>
                        <li
                          aria-selected="true"
                          class="HvListItem-root HvListItem-interactive HvListItem-selected HvList-itemSelector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-10 Mui-checked"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  checked=""
                                  class="PrivateSwitchBase-input-12"
                                  data-indeterminate="false"
                                  tabindex="0"
                                  type="checkbox"
                                  value=""
                                />
                                <div
                                  class="HvCheckBox-icon HvList-icon HvIconBase-root HvIconBase-s"
                                  font-size="default"
                                  name="CheckboxCheck"
                                >
                                  <svg
                                    focusable="false"
                                    height="16"
                                    viewBox="0 0 16 16"
                                    width="16"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M0 0h16v16H0z"
                                      fill="#414141"
                                    />
                                    <path
                                      class="color0"
                                      d="M16 16H0V0h16zM1 15h14V1H1z"
                                      fill="#414141"
                                    />
                                    <path
                                      class="color1"
                                      d="M6.049 12.463L2.293 8.707l1.414-1.414 2.244 2.244 6.3-7.2 1.506 1.317z"
                                      fill="#FBFCFC"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 3
                            </span>
                          </label>
                        </li>
                      </ul>,
                    }
                  }
                  selected={true}
                  strategy="listbox"
                >
                  <ConditionalWrapper
                    condition={false}
                    wrapper={[Function]}
                  >
                    <li
                      aria-selected={true}
                      className="HvListItem-root HvListItem-interactive HvListItem-selected HvList-itemSelector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      role="option"
                      selected={true}
                    >
                      <ComponentFunction>
                        <WithStyles(HvCheckbox)
                          checked={true}
                          classes={
                            Object {
                              "container": "HvList-selectorContainer",
                              "icon": "HvList-icon",
                              "labelTypography": "HvList-truncate",
                            }
                          }
                          label="Value 3"
                          onChange={[Function]}
                        >
                          <HvCheckbox
                            checked={true}
                            classes={
                              Object {
                                "checkBox": "HvCheckBox-checkBox",
                                "container": "HvCheckBox-container HvList-selectorContainer",
                                "disableFocus": "HvCheckBox-disableFocus",
                                "disabledBorder": "HvCheckBox-disabledBorder",
                                "icon": "HvCheckBox-icon HvList-icon",
                                "labelDisabled": "HvCheckBox-labelDisabled",
                                "labelEnd": "HvCheckBox-labelEnd",
                                "labelStart": "HvCheckBox-labelStart",
                                "labelTypography": "HvCheckBox-labelTypography HvList-truncate",
                              }
                            }
                            label="Value 3"
                            onChange={[Function]}
                          >
                            <WithStyles(ForwardRef(FormControlLabel))
                              className="HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                              classes={
                                Object {
                                  "disabled": "HvCheckBox-labelDisabled",
                                  "label": "HvCheckBox-labelTypography HvList-truncate",
                                }
                              }
                              control={
                                <ForwardRef(WithStyles)
                                  checked={true}
                                  checkedIcon={
                                    <CheckboxCheck
                                      className="HvCheckBox-icon HvList-icon"
                                    />
                                  }
                                  className="HvCheckBox-checkBox"
                                  color="default"
                                  disableRipple={true}
                                  disabled={false}
                                  icon={
                                    <Checkbox
                                      className="HvCheckBox-icon HvList-icon"
                                    />
                                  }
                                  indeterminateIcon={
                                    <CheckboxPartial
                                      className="HvCheckBox-icon HvList-icon"
                                    />
                                  }
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  value=""
                                />
                              }
                              disabled={false}
                              label="Value 3"
                              labelPlacement="end"
                            >
                              <ForwardRef(FormControlLabel)
                                className="HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled HvCheckBox-labelDisabled",
                                    "label": "MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate",
                                    "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                    "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                    "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                    "root": "MuiFormControlLabel-root",
                                  }
                                }
                                control={
                                  <ForwardRef(WithStyles)
                                    checked={true}
                                    checkedIcon={
                                      <CheckboxCheck
                                        className="HvCheckBox-icon HvList-icon"
                                      />
                                    }
                                    className="HvCheckBox-checkBox"
                                    color="default"
                                    disableRipple={true}
                                    disabled={false}
                                    icon={
                                      <Checkbox
                                        className="HvCheckBox-icon HvList-icon"
                                      />
                                    }
                                    indeterminateIcon={
                                      <CheckboxPartial
                                        className="HvCheckBox-icon HvList-icon"
                                      />
                                    }
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    value=""
                                  />
                                }
                                disabled={false}
                                label="Value 3"
                                labelPlacement="end"
                              >
                                <label
                                  className="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                                >
                                  <WithStyles(ForwardRef(Checkbox))
                                    checked={true}
                                    checkedIcon={
                                      <CheckboxCheck
                                        className="HvCheckBox-icon HvList-icon"
                                      />
                                    }
                                    className="HvCheckBox-checkBox"
                                    color="default"
                                    disableRipple={true}
                                    disabled={false}
                                    icon={
                                      <Checkbox
                                        className="HvCheckBox-icon HvList-icon"
                                      />
                                    }
                                    indeterminateIcon={
                                      <CheckboxPartial
                                        className="HvCheckBox-icon HvList-icon"
                                      />
                                    }
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    value=""
                                  >
                                    <ForwardRef(Checkbox)
                                      checked={true}
                                      checkedIcon={
                                        <CheckboxCheck
                                          className="HvCheckBox-icon HvList-icon"
                                        />
                                      }
                                      className="HvCheckBox-checkBox"
                                      classes={
                                        Object {
                                          "checked": "Mui-checked",
                                          "colorPrimary": "MuiCheckbox-colorPrimary",
                                          "colorSecondary": "MuiCheckbox-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "indeterminate": "MuiCheckbox-indeterminate",
                                          "root": "MuiCheckbox-root",
                                        }
                                      }
                                      color="default"
                                      disableRipple={true}
                                      disabled={false}
                                      icon={
                                        <Checkbox
                                          className="HvCheckBox-icon HvList-icon"
                                        />
                                      }
                                      indeterminateIcon={
                                        <CheckboxPartial
                                          className="HvCheckBox-icon HvList-icon"
                                        />
                                      }
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      value=""
                                    >
                                      <WithStyles(ForwardRef(SwitchBase))
                                        checked={true}
                                        checkedIcon={
                                          <CheckboxCheck
                                            className="HvCheckBox-icon HvList-icon"
                                            fontSize="default"
                                          />
                                        }
                                        className="HvCheckBox-checkBox"
                                        classes={
                                          Object {
                                            "checked": "Mui-checked",
                                            "disabled": "Mui-disabled",
                                            "root": "MuiCheckbox-root",
                                          }
                                        }
                                        color="default"
                                        disableRipple={true}
                                        disabled={false}
                                        icon={
                                          <Checkbox
                                            className="HvCheckBox-icon HvList-icon"
                                            fontSize="default"
                                          />
                                        }
                                        inputProps={
                                          Object {
                                            "data-indeterminate": false,
                                          }
                                        }
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        type="checkbox"
                                        value=""
                                      >
                                        <ForwardRef(SwitchBase)
                                          checked={true}
                                          checkedIcon={
                                            <CheckboxCheck
                                              className="HvCheckBox-icon HvList-icon"
                                              fontSize="default"
                                            />
                                          }
                                          className="HvCheckBox-checkBox"
                                          classes={
                                            Object {
                                              "checked": "PrivateSwitchBase-checked-10 Mui-checked",
                                              "disabled": "PrivateSwitchBase-disabled-11 Mui-disabled",
                                              "input": "PrivateSwitchBase-input-12",
                                              "root": "PrivateSwitchBase-root-9 MuiCheckbox-root",
                                            }
                                          }
                                          color="default"
                                          disableRipple={true}
                                          disabled={false}
                                          icon={
                                            <Checkbox
                                              className="HvCheckBox-icon HvList-icon"
                                              fontSize="default"
                                            />
                                          }
                                          inputProps={
                                            Object {
                                              "data-indeterminate": false,
                                            }
                                          }
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          type="checkbox"
                                          value=""
                                        >
                                          <WithStyles(ForwardRef(IconButton))
                                            className="PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-10 Mui-checked"
                                            color="default"
                                            component="span"
                                            disableRipple={true}
                                            disabled={false}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <ForwardRef(IconButton)
                                              className="PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-10 Mui-checked"
                                              classes={
                                                Object {
                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                  "disabled": "Mui-disabled",
                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                  "label": "MuiIconButton-label",
                                                  "root": "MuiIconButton-root",
                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                }
                                              }
                                              color="default"
                                              component="span"
                                              disableRipple={true}
                                              disabled={false}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <WithStyles(ForwardRef(ButtonBase))
                                                centerRipple={true}
                                                className="MuiIconButton-root PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-10 Mui-checked"
                                                component="span"
                                                disableRipple={true}
                                                disabled={false}
                                                focusRipple={true}
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                tabIndex={null}
                                              >
                                                <ForwardRef(ButtonBase)
                                                  centerRipple={true}
                                                  className="MuiIconButton-root PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-10 Mui-checked"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiButtonBase-root",
                                                    }
                                                  }
                                                  component="span"
                                                  disableRipple={true}
                                                  disabled={false}
                                                  focusRipple={true}
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  tabIndex={null}
                                                >
                                                  <span
                                                    aria-disabled={false}
                                                    className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-9 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-10 Mui-checked"
                                                    onBlur={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    tabIndex={null}
                                                  >
                                                    <span
                                                      className="MuiIconButton-label"
                                                    >
                                                      <input
                                                        checked={true}
                                                        className="PrivateSwitchBase-input-12"
                                                        data-indeterminate={false}
                                                        disabled={false}
                                                        onChange={[Function]}
                                                        type="checkbox"
                                                        value=""
                                                      />
                                                      <CheckboxCheck
                                                        className="HvCheckBox-icon HvList-icon"
                                                        fontSize="default"
                                                      >
                                                        <WithStyles(HvIconBase)
                                                          className="HvCheckBox-icon HvList-icon"
                                                          fontSize="default"
                                                          iconSize="S"
                                                          name="CheckboxCheck"
                                                        >
                                                          <HvIconBase
                                                            className="HvCheckBox-icon HvList-icon"
                                                            classes={
                                                              Object {
                                                                "l": "HvIconBase-l",
                                                                "m": "HvIconBase-m",
                                                                "root": "HvIconBase-root",
                                                                "s": "HvIconBase-s",
                                                                "xs": "HvIconBase-xs",
                                                              }
                                                            }
                                                            fontSize="default"
                                                            iconSize="S"
                                                            name="CheckboxCheck"
                                                          >
                                                            <div
                                                              className="HvCheckBox-icon HvList-icon HvIconBase-root HvIconBase-s"
                                                              fontSize="default"
                                                              name="CheckboxCheck"
                                                            >
                                                              <svg
                                                                focusable={false}
                                                                height={16}
                                                                viewBox="0 0 16 16"
                                                                width={16}
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  className="color0"
                                                                  d="M0 0h16v16H0z"
                                                                  fill="#414141"
                                                                />
                                                                <path
                                                                  className="color0"
                                                                  d="M16 16H0V0h16zM1 15h14V1H1z"
                                                                  fill="#414141"
                                                                />
                                                                <path
                                                                  className="color1"
                                                                  d="M6.049 12.463L2.293 8.707l1.414-1.414 2.244 2.244 6.3-7.2 1.506 1.317z"
                                                                  fill="#FBFCFC"
                                                                />
                                                              </svg>
                                                            </div>
                                                          </HvIconBase>
                                                        </WithStyles(HvIconBase)>
                                                      </CheckboxCheck>
                                                    </span>
                                                  </span>
                                                </ForwardRef(ButtonBase)>
                                              </WithStyles(ForwardRef(ButtonBase))>
                                            </ForwardRef(IconButton)>
                                          </WithStyles(ForwardRef(IconButton))>
                                        </ForwardRef(SwitchBase)>
                                      </WithStyles(ForwardRef(SwitchBase))>
                                    </ForwardRef(Checkbox)>
                                  </WithStyles(ForwardRef(Checkbox))>
                                  <WithStyles(ForwardRef(Typography))
                                    className="MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate"
                                    component="span"
                                  >
                                    <ForwardRef(Typography)
                                      className="MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      component="span"
                                    >
                                      <span
                                        className="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                                      >
                                        Value 3
                                      </span>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </label>
                              </ForwardRef(FormControlLabel)>
                            </WithStyles(ForwardRef(FormControlLabel))>
                          </HvCheckbox>
                        </WithStyles(HvCheckbox)>
                      </ComponentFunction>
                    </li>
                  </ConditionalWrapper>
                </Focus>
              </WithStyles(Focus)>
            </HvListItem>
          </WithStyles(HvListItem)>
        </ul>
      </HvListContainer>
    </WithStyles(HvListContainer)>
  </List>
</WithStyles(List)>
`;

exports[`[v3] <List /> Single selection should render correctly 1`] = `
<WithStyles(List)
  onChange={[MockFunction]}
  onClick={[MockFunction]}
  singleSelectionToggle={false}
  values={
    Array [
      Object {
        "label": "Value 1",
      },
      Object {
        "label": "Value 2",
      },
      Object {
        "label": "Value 3",
      },
    ]
  }
>
  <List
    classes={
      Object {
        "box": "HvList-box",
        "icon": "HvList-icon",
        "itemSelector": "HvList-itemSelector",
        "link": "HvList-link",
        "root": "HvList-root",
        "selectorContainer": "HvList-selectorContainer",
        "truncate": "HvList-truncate",
      }
    }
    condensed={false}
    hasTooltips={false}
    labels={
      Object {
        "selectAll": "Select All",
        "selectionConjunction": "/",
      }
    }
    multiSelect={false}
    onChange={[MockFunction]}
    onClick={[MockFunction]}
    selectable={true}
    showSelectAll={false}
    singleSelectionToggle={false}
    useSelector={false}
    values={
      Array [
        Object {
          "label": "Value 1",
        },
        Object {
          "label": "Value 2",
        },
        Object {
          "label": "Value 3",
        },
      ]
    }
  >
    <WithStyles(HvListContainer)
      className="HvList-root"
      condensed={false}
      disableGutters={false}
      interactive={true}
      multiSelect={false}
      role="listbox"
      selectable={true}
    >
      <HvListContainer
        className="HvList-root"
        classes={
          Object {
            "root": "HvListContainer-root",
          }
        }
        condensed={false}
        disableGutters={false}
        interactive={true}
        multiSelect={false}
        role="listbox"
        selectable={true}
      >
        <ul
          className="HvList-root HvListContainer-root"
          role="listbox"
        >
          <WithStyles(HvListItem)
            classes={
              Object {
                "selected": "",
              }
            }
            key=".$0"
            onClick={[Function]}
            role="option"
            startAdornment={null}
            tabIndex={0}
          >
            <HvListItem
              classes={
                Object {
                  "condensed": "HvListItem-condensed",
                  "disabled": "HvListItem-disabled",
                  "endAdornment": "HvListItem-endAdornment",
                  "focus": "HvListItem-focus",
                  "gutters": "HvListItem-gutters",
                  "interactive": "HvListItem-interactive",
                  "root": "HvListItem-root",
                  "selected": "HvListItem-selected",
                  "startAdornment": "HvListItem-startAdornment",
                  "withEndAdornment": "HvListItem-withEndAdornment",
                  "withStartAdornment": "HvListItem-withStartAdornment",
                }
              }
              onClick={[Function]}
              role="option"
              startAdornment={null}
              tabIndex={0}
            >
              <WithStyles(Focus)
                classes={
                  Object {
                    "focus": "HvListItem-focus",
                  }
                }
                configuration={
                  Object {
                    "tabIndex": 0,
                  }
                }
                rootRef={
                  Object {
                    "current": <ul
                      class="HvList-root HvListContainer-root"
                      role="listbox"
                    >
                      <li
                        class="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="0"
                      >
                        Value 1
                      </li>
                      <li
                        class="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        Value 2
                      </li>
                      <li
                        class="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        Value 3
                      </li>
                    </ul>,
                  }
                }
                strategy="listbox"
              >
                <Focus
                  classes={
                    Object {
                      "disabled": "HvFocus-disabled",
                      "externalReference": "HvFocus-externalReference",
                      "falseFocus": "HvFocus-falseFocus",
                      "focus": "HvFocus-focus HvListItem-focus",
                      "focusDisabled": "HvFocus-focusDisabled",
                      "focused": "HvFocus-focused",
                      "root": "HvFocus-root",
                      "selected": "HvFocus-selected",
                    }
                  }
                  configuration={
                    Object {
                      "tabIndex": 0,
                    }
                  }
                  rootRef={
                    Object {
                      "current": <ul
                        class="HvList-root HvListContainer-root"
                        role="listbox"
                      >
                        <li
                          class="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="0"
                        >
                          Value 1
                        </li>
                        <li
                          class="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          Value 2
                        </li>
                        <li
                          class="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          Value 3
                        </li>
                      </ul>,
                    }
                  }
                  strategy="listbox"
                >
                  <ConditionalWrapper
                    condition={false}
                    wrapper={[Function]}
                  >
                    <li
                      className="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      role="option"
                      selected={false}
                    >
                      <ComponentFunction>
                        Value 1
                      </ComponentFunction>
                    </li>
                  </ConditionalWrapper>
                </Focus>
              </WithStyles(Focus)>
            </HvListItem>
          </WithStyles(HvListItem)>
          <WithStyles(HvListItem)
            classes={
              Object {
                "selected": "",
              }
            }
            key=".$1"
            onClick={[Function]}
            role="option"
            startAdornment={null}
            tabIndex={-1}
          >
            <HvListItem
              classes={
                Object {
                  "condensed": "HvListItem-condensed",
                  "disabled": "HvListItem-disabled",
                  "endAdornment": "HvListItem-endAdornment",
                  "focus": "HvListItem-focus",
                  "gutters": "HvListItem-gutters",
                  "interactive": "HvListItem-interactive",
                  "root": "HvListItem-root",
                  "selected": "HvListItem-selected",
                  "startAdornment": "HvListItem-startAdornment",
                  "withEndAdornment": "HvListItem-withEndAdornment",
                  "withStartAdornment": "HvListItem-withStartAdornment",
                }
              }
              onClick={[Function]}
              role="option"
              startAdornment={null}
              tabIndex={-1}
            >
              <WithStyles(Focus)
                classes={
                  Object {
                    "focus": "HvListItem-focus",
                  }
                }
                configuration={
                  Object {
                    "tabIndex": -1,
                  }
                }
                rootRef={
                  Object {
                    "current": <ul
                      class="HvList-root HvListContainer-root"
                      role="listbox"
                    >
                      <li
                        class="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="0"
                      >
                        Value 1
                      </li>
                      <li
                        class="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        Value 2
                      </li>
                      <li
                        class="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        Value 3
                      </li>
                    </ul>,
                  }
                }
                strategy="listbox"
              >
                <Focus
                  classes={
                    Object {
                      "disabled": "HvFocus-disabled",
                      "externalReference": "HvFocus-externalReference",
                      "falseFocus": "HvFocus-falseFocus",
                      "focus": "HvFocus-focus HvListItem-focus",
                      "focusDisabled": "HvFocus-focusDisabled",
                      "focused": "HvFocus-focused",
                      "root": "HvFocus-root",
                      "selected": "HvFocus-selected",
                    }
                  }
                  configuration={
                    Object {
                      "tabIndex": -1,
                    }
                  }
                  rootRef={
                    Object {
                      "current": <ul
                        class="HvList-root HvListContainer-root"
                        role="listbox"
                      >
                        <li
                          class="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="0"
                        >
                          Value 1
                        </li>
                        <li
                          class="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          Value 2
                        </li>
                        <li
                          class="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          Value 3
                        </li>
                      </ul>,
                    }
                  }
                  strategy="listbox"
                >
                  <ConditionalWrapper
                    condition={false}
                    wrapper={[Function]}
                  >
                    <li
                      className="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      role="option"
                      selected={false}
                    >
                      <ComponentFunction>
                        Value 2
                      </ComponentFunction>
                    </li>
                  </ConditionalWrapper>
                </Focus>
              </WithStyles(Focus)>
            </HvListItem>
          </WithStyles(HvListItem)>
          <WithStyles(HvListItem)
            classes={
              Object {
                "selected": "",
              }
            }
            key=".$2"
            onClick={[Function]}
            role="option"
            startAdornment={null}
            tabIndex={-1}
          >
            <HvListItem
              classes={
                Object {
                  "condensed": "HvListItem-condensed",
                  "disabled": "HvListItem-disabled",
                  "endAdornment": "HvListItem-endAdornment",
                  "focus": "HvListItem-focus",
                  "gutters": "HvListItem-gutters",
                  "interactive": "HvListItem-interactive",
                  "root": "HvListItem-root",
                  "selected": "HvListItem-selected",
                  "startAdornment": "HvListItem-startAdornment",
                  "withEndAdornment": "HvListItem-withEndAdornment",
                  "withStartAdornment": "HvListItem-withStartAdornment",
                }
              }
              onClick={[Function]}
              role="option"
              startAdornment={null}
              tabIndex={-1}
            >
              <WithStyles(Focus)
                classes={
                  Object {
                    "focus": "HvListItem-focus",
                  }
                }
                configuration={
                  Object {
                    "tabIndex": -1,
                  }
                }
                rootRef={
                  Object {
                    "current": <ul
                      class="HvList-root HvListContainer-root"
                      role="listbox"
                    >
                      <li
                        class="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="0"
                      >
                        Value 1
                      </li>
                      <li
                        class="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        Value 2
                      </li>
                      <li
                        class="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        Value 3
                      </li>
                    </ul>,
                  }
                }
                strategy="listbox"
              >
                <Focus
                  classes={
                    Object {
                      "disabled": "HvFocus-disabled",
                      "externalReference": "HvFocus-externalReference",
                      "falseFocus": "HvFocus-falseFocus",
                      "focus": "HvFocus-focus HvListItem-focus",
                      "focusDisabled": "HvFocus-focusDisabled",
                      "focused": "HvFocus-focused",
                      "root": "HvFocus-root",
                      "selected": "HvFocus-selected",
                    }
                  }
                  configuration={
                    Object {
                      "tabIndex": -1,
                    }
                  }
                  rootRef={
                    Object {
                      "current": <ul
                        class="HvList-root HvListContainer-root"
                        role="listbox"
                      >
                        <li
                          class="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="0"
                        >
                          Value 1
                        </li>
                        <li
                          class="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          Value 2
                        </li>
                        <li
                          class="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          Value 3
                        </li>
                      </ul>,
                    }
                  }
                  strategy="listbox"
                >
                  <ConditionalWrapper
                    condition={false}
                    wrapper={[Function]}
                  >
                    <li
                      className="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      role="option"
                      selected={false}
                    >
                      <ComponentFunction>
                        Value 3
                      </ComponentFunction>
                    </li>
                  </ConditionalWrapper>
                </Focus>
              </WithStyles(Focus)>
            </HvListItem>
          </WithStyles(HvListItem)>
        </ul>
      </HvListContainer>
    </WithStyles(HvListContainer)>
  </List>
</WithStyles(List)>
`;

exports[`[v3] <List /> Single selection with icons should render correctly 1`] = `
<WithStyles(List)
  values={
    Array [
      Object {
        "iconCallback": [Function],
        "label": "Value 1",
      },
      Object {
        "label": "Value 2",
      },
      Object {
        "label": "Value 3",
        "showNavIcon": true,
      },
    ]
  }
>
  <List
    classes={
      Object {
        "box": "HvList-box",
        "icon": "HvList-icon",
        "itemSelector": "HvList-itemSelector",
        "link": "HvList-link",
        "root": "HvList-root",
        "selectorContainer": "HvList-selectorContainer",
        "truncate": "HvList-truncate",
      }
    }
    condensed={false}
    hasTooltips={false}
    labels={
      Object {
        "selectAll": "Select All",
        "selectionConjunction": "/",
      }
    }
    multiSelect={false}
    onChange={[Function]}
    onClick={[Function]}
    selectable={true}
    showSelectAll={false}
    singleSelectionToggle={true}
    useSelector={false}
    values={
      Array [
        Object {
          "iconCallback": [Function],
          "label": "Value 1",
        },
        Object {
          "label": "Value 2",
        },
        Object {
          "label": "Value 3",
          "showNavIcon": true,
        },
      ]
    }
  >
    <WithStyles(HvListContainer)
      className="HvList-root"
      condensed={false}
      disableGutters={false}
      interactive={true}
      multiSelect={false}
      role="listbox"
      selectable={true}
    >
      <HvListContainer
        className="HvList-root"
        classes={
          Object {
            "root": "HvListContainer-root",
          }
        }
        condensed={false}
        disableGutters={false}
        interactive={true}
        multiSelect={false}
        role="listbox"
        selectable={true}
      >
        <ul
          className="HvList-root HvListContainer-root"
          role="listbox"
        >
          <WithStyles(HvListItem)
            classes={
              Object {
                "selected": "",
              }
            }
            key=".$0"
            onClick={[Function]}
            role="option"
            startAdornment={<LineChart />}
            tabIndex={0}
          >
            <HvListItem
              classes={
                Object {
                  "condensed": "HvListItem-condensed",
                  "disabled": "HvListItem-disabled",
                  "endAdornment": "HvListItem-endAdornment",
                  "focus": "HvListItem-focus",
                  "gutters": "HvListItem-gutters",
                  "interactive": "HvListItem-interactive",
                  "root": "HvListItem-root",
                  "selected": "HvListItem-selected",
                  "startAdornment": "HvListItem-startAdornment",
                  "withEndAdornment": "HvListItem-withEndAdornment",
                  "withStartAdornment": "HvListItem-withStartAdornment",
                }
              }
              onClick={[Function]}
              role="option"
              startAdornment={<LineChart />}
              tabIndex={0}
            >
              <WithStyles(Focus)
                classes={
                  Object {
                    "focus": "HvListItem-focus",
                  }
                }
                configuration={
                  Object {
                    "tabIndex": 0,
                  }
                }
                rootRef={
                  Object {
                    "current": <ul
                      class="HvList-root HvListContainer-root"
                      role="listbox"
                    >
                      <li
                        class="HvListItem-root HvListItem-gutters HvListItem-interactive HvListItem-withStartAdornment HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="0"
                      >
                        <div
                          class="HvListItem-startAdornment HvIconBase-root HvIconBase-s"
                          name="LineChart"
                        >
                          <svg
                            focusable="false"
                            height="16"
                            viewBox="0 0 16 16"
                            width="16"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              class="color0"
                              d="M1.086 11.453l-.707-.707 5.559-5.558 4.2 4.2 4.832-4.831.707.707-5.539 5.536-4.2-4.2zM0 16h16v-1H0z"
                              fill="#414141"
                            />
                          </svg>
                        </div>
                        Value 1
                      </li>
                      <li
                        class="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        Value 2
                      </li>
                      <li
                        class="HvListItem-root HvListItem-gutters HvListItem-interactive HvListItem-withEndAdornment HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        Value 3
                        <div
                          class="HvListItem-endAdornment HvList-box HvIconBase-root HvIconBase-xs"
                          name="DropRightXS"
                        >
                          <svg
                            focusable="false"
                            height="12"
                            viewBox="0 0 12 12"
                            width="12"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              class="color0"
                              d="M4.05 10.6l-.7-.7L7.25 6l-3.9-3.9.7-.7L8.65 6z"
                              fill="#414141"
                            />
                          </svg>
                        </div>
                      </li>
                    </ul>,
                  }
                }
                strategy="listbox"
              >
                <Focus
                  classes={
                    Object {
                      "disabled": "HvFocus-disabled",
                      "externalReference": "HvFocus-externalReference",
                      "falseFocus": "HvFocus-falseFocus",
                      "focus": "HvFocus-focus HvListItem-focus",
                      "focusDisabled": "HvFocus-focusDisabled",
                      "focused": "HvFocus-focused",
                      "root": "HvFocus-root",
                      "selected": "HvFocus-selected",
                    }
                  }
                  configuration={
                    Object {
                      "tabIndex": 0,
                    }
                  }
                  rootRef={
                    Object {
                      "current": <ul
                        class="HvList-root HvListContainer-root"
                        role="listbox"
                      >
                        <li
                          class="HvListItem-root HvListItem-gutters HvListItem-interactive HvListItem-withStartAdornment HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="0"
                        >
                          <div
                            class="HvListItem-startAdornment HvIconBase-root HvIconBase-s"
                            name="LineChart"
                          >
                            <svg
                              focusable="false"
                              height="16"
                              viewBox="0 0 16 16"
                              width="16"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M1.086 11.453l-.707-.707 5.559-5.558 4.2 4.2 4.832-4.831.707.707-5.539 5.536-4.2-4.2zM0 16h16v-1H0z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                          Value 1
                        </li>
                        <li
                          class="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          Value 2
                        </li>
                        <li
                          class="HvListItem-root HvListItem-gutters HvListItem-interactive HvListItem-withEndAdornment HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          Value 3
                          <div
                            class="HvListItem-endAdornment HvList-box HvIconBase-root HvIconBase-xs"
                            name="DropRightXS"
                          >
                            <svg
                              focusable="false"
                              height="12"
                              viewBox="0 0 12 12"
                              width="12"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M4.05 10.6l-.7-.7L7.25 6l-3.9-3.9.7-.7L8.65 6z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                        </li>
                      </ul>,
                    }
                  }
                  strategy="listbox"
                >
                  <ConditionalWrapper
                    condition={false}
                    wrapper={[Function]}
                  >
                    <li
                      className="HvListItem-root HvListItem-gutters HvListItem-interactive HvListItem-withStartAdornment HvFocus-root HvFocus-focusDisabled"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      role="option"
                      selected={false}
                    >
                      <LineChart
                        checked={false}
                        className="HvListItem-startAdornment"
                        onChange={[Function]}
                      >
                        <WithStyles(HvIconBase)
                          checked={false}
                          className="HvListItem-startAdornment"
                          iconSize="S"
                          name="LineChart"
                          onChange={[Function]}
                        >
                          <HvIconBase
                            checked={false}
                            className="HvListItem-startAdornment"
                            classes={
                              Object {
                                "l": "HvIconBase-l",
                                "m": "HvIconBase-m",
                                "root": "HvIconBase-root",
                                "s": "HvIconBase-s",
                                "xs": "HvIconBase-xs",
                              }
                            }
                            iconSize="S"
                            name="LineChart"
                            onChange={[Function]}
                          >
                            <div
                              checked={false}
                              className="HvListItem-startAdornment HvIconBase-root HvIconBase-s"
                              name="LineChart"
                              onChange={[Function]}
                            >
                              <svg
                                focusable={false}
                                height={16}
                                viewBox="0 0 16 16"
                                width={16}
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  className="color0"
                                  d="M1.086 11.453l-.707-.707 5.559-5.558 4.2 4.2 4.832-4.831.707.707-5.539 5.536-4.2-4.2zM0 16h16v-1H0z"
                                  fill="#414141"
                                />
                              </svg>
                            </div>
                          </HvIconBase>
                        </WithStyles(HvIconBase)>
                      </LineChart>
                      <ComponentFunction>
                        Value 1
                      </ComponentFunction>
                    </li>
                  </ConditionalWrapper>
                </Focus>
              </WithStyles(Focus)>
            </HvListItem>
          </WithStyles(HvListItem)>
          <WithStyles(HvListItem)
            classes={
              Object {
                "selected": "",
              }
            }
            key=".$1"
            onClick={[Function]}
            role="option"
            startAdornment={null}
            tabIndex={-1}
          >
            <HvListItem
              classes={
                Object {
                  "condensed": "HvListItem-condensed",
                  "disabled": "HvListItem-disabled",
                  "endAdornment": "HvListItem-endAdornment",
                  "focus": "HvListItem-focus",
                  "gutters": "HvListItem-gutters",
                  "interactive": "HvListItem-interactive",
                  "root": "HvListItem-root",
                  "selected": "HvListItem-selected",
                  "startAdornment": "HvListItem-startAdornment",
                  "withEndAdornment": "HvListItem-withEndAdornment",
                  "withStartAdornment": "HvListItem-withStartAdornment",
                }
              }
              onClick={[Function]}
              role="option"
              startAdornment={null}
              tabIndex={-1}
            >
              <WithStyles(Focus)
                classes={
                  Object {
                    "focus": "HvListItem-focus",
                  }
                }
                configuration={
                  Object {
                    "tabIndex": -1,
                  }
                }
                rootRef={
                  Object {
                    "current": <ul
                      class="HvList-root HvListContainer-root"
                      role="listbox"
                    >
                      <li
                        class="HvListItem-root HvListItem-gutters HvListItem-interactive HvListItem-withStartAdornment HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="0"
                      >
                        <div
                          class="HvListItem-startAdornment HvIconBase-root HvIconBase-s"
                          name="LineChart"
                        >
                          <svg
                            focusable="false"
                            height="16"
                            viewBox="0 0 16 16"
                            width="16"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              class="color0"
                              d="M1.086 11.453l-.707-.707 5.559-5.558 4.2 4.2 4.832-4.831.707.707-5.539 5.536-4.2-4.2zM0 16h16v-1H0z"
                              fill="#414141"
                            />
                          </svg>
                        </div>
                        Value 1
                      </li>
                      <li
                        class="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        Value 2
                      </li>
                      <li
                        class="HvListItem-root HvListItem-gutters HvListItem-interactive HvListItem-withEndAdornment HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        Value 3
                        <div
                          class="HvListItem-endAdornment HvList-box HvIconBase-root HvIconBase-xs"
                          name="DropRightXS"
                        >
                          <svg
                            focusable="false"
                            height="12"
                            viewBox="0 0 12 12"
                            width="12"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              class="color0"
                              d="M4.05 10.6l-.7-.7L7.25 6l-3.9-3.9.7-.7L8.65 6z"
                              fill="#414141"
                            />
                          </svg>
                        </div>
                      </li>
                    </ul>,
                  }
                }
                strategy="listbox"
              >
                <Focus
                  classes={
                    Object {
                      "disabled": "HvFocus-disabled",
                      "externalReference": "HvFocus-externalReference",
                      "falseFocus": "HvFocus-falseFocus",
                      "focus": "HvFocus-focus HvListItem-focus",
                      "focusDisabled": "HvFocus-focusDisabled",
                      "focused": "HvFocus-focused",
                      "root": "HvFocus-root",
                      "selected": "HvFocus-selected",
                    }
                  }
                  configuration={
                    Object {
                      "tabIndex": -1,
                    }
                  }
                  rootRef={
                    Object {
                      "current": <ul
                        class="HvList-root HvListContainer-root"
                        role="listbox"
                      >
                        <li
                          class="HvListItem-root HvListItem-gutters HvListItem-interactive HvListItem-withStartAdornment HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="0"
                        >
                          <div
                            class="HvListItem-startAdornment HvIconBase-root HvIconBase-s"
                            name="LineChart"
                          >
                            <svg
                              focusable="false"
                              height="16"
                              viewBox="0 0 16 16"
                              width="16"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M1.086 11.453l-.707-.707 5.559-5.558 4.2 4.2 4.832-4.831.707.707-5.539 5.536-4.2-4.2zM0 16h16v-1H0z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                          Value 1
                        </li>
                        <li
                          class="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          Value 2
                        </li>
                        <li
                          class="HvListItem-root HvListItem-gutters HvListItem-interactive HvListItem-withEndAdornment HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          Value 3
                          <div
                            class="HvListItem-endAdornment HvList-box HvIconBase-root HvIconBase-xs"
                            name="DropRightXS"
                          >
                            <svg
                              focusable="false"
                              height="12"
                              viewBox="0 0 12 12"
                              width="12"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M4.05 10.6l-.7-.7L7.25 6l-3.9-3.9.7-.7L8.65 6z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                        </li>
                      </ul>,
                    }
                  }
                  strategy="listbox"
                >
                  <ConditionalWrapper
                    condition={false}
                    wrapper={[Function]}
                  >
                    <li
                      className="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      role="option"
                      selected={false}
                    >
                      <ComponentFunction>
                        Value 2
                      </ComponentFunction>
                    </li>
                  </ConditionalWrapper>
                </Focus>
              </WithStyles(Focus)>
            </HvListItem>
          </WithStyles(HvListItem)>
          <WithStyles(HvListItem)
            classes={
              Object {
                "selected": "",
              }
            }
            endAdornment={
              <DropRightXS
                className="HvList-box"
                iconSize="XS"
              />
            }
            key=".$2"
            onClick={[Function]}
            role="option"
            startAdornment={null}
            tabIndex={-1}
          >
            <HvListItem
              classes={
                Object {
                  "condensed": "HvListItem-condensed",
                  "disabled": "HvListItem-disabled",
                  "endAdornment": "HvListItem-endAdornment",
                  "focus": "HvListItem-focus",
                  "gutters": "HvListItem-gutters",
                  "interactive": "HvListItem-interactive",
                  "root": "HvListItem-root",
                  "selected": "HvListItem-selected",
                  "startAdornment": "HvListItem-startAdornment",
                  "withEndAdornment": "HvListItem-withEndAdornment",
                  "withStartAdornment": "HvListItem-withStartAdornment",
                }
              }
              endAdornment={
                <DropRightXS
                  className="HvList-box"
                  iconSize="XS"
                />
              }
              onClick={[Function]}
              role="option"
              startAdornment={null}
              tabIndex={-1}
            >
              <WithStyles(Focus)
                classes={
                  Object {
                    "focus": "HvListItem-focus",
                  }
                }
                configuration={
                  Object {
                    "tabIndex": -1,
                  }
                }
                rootRef={
                  Object {
                    "current": <ul
                      class="HvList-root HvListContainer-root"
                      role="listbox"
                    >
                      <li
                        class="HvListItem-root HvListItem-gutters HvListItem-interactive HvListItem-withStartAdornment HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="0"
                      >
                        <div
                          class="HvListItem-startAdornment HvIconBase-root HvIconBase-s"
                          name="LineChart"
                        >
                          <svg
                            focusable="false"
                            height="16"
                            viewBox="0 0 16 16"
                            width="16"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              class="color0"
                              d="M1.086 11.453l-.707-.707 5.559-5.558 4.2 4.2 4.832-4.831.707.707-5.539 5.536-4.2-4.2zM0 16h16v-1H0z"
                              fill="#414141"
                            />
                          </svg>
                        </div>
                        Value 1
                      </li>
                      <li
                        class="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        Value 2
                      </li>
                      <li
                        class="HvListItem-root HvListItem-gutters HvListItem-interactive HvListItem-withEndAdornment HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        Value 3
                        <div
                          class="HvListItem-endAdornment HvList-box HvIconBase-root HvIconBase-xs"
                          name="DropRightXS"
                        >
                          <svg
                            focusable="false"
                            height="12"
                            viewBox="0 0 12 12"
                            width="12"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              class="color0"
                              d="M4.05 10.6l-.7-.7L7.25 6l-3.9-3.9.7-.7L8.65 6z"
                              fill="#414141"
                            />
                          </svg>
                        </div>
                      </li>
                    </ul>,
                  }
                }
                strategy="listbox"
              >
                <Focus
                  classes={
                    Object {
                      "disabled": "HvFocus-disabled",
                      "externalReference": "HvFocus-externalReference",
                      "falseFocus": "HvFocus-falseFocus",
                      "focus": "HvFocus-focus HvListItem-focus",
                      "focusDisabled": "HvFocus-focusDisabled",
                      "focused": "HvFocus-focused",
                      "root": "HvFocus-root",
                      "selected": "HvFocus-selected",
                    }
                  }
                  configuration={
                    Object {
                      "tabIndex": -1,
                    }
                  }
                  rootRef={
                    Object {
                      "current": <ul
                        class="HvList-root HvListContainer-root"
                        role="listbox"
                      >
                        <li
                          class="HvListItem-root HvListItem-gutters HvListItem-interactive HvListItem-withStartAdornment HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="0"
                        >
                          <div
                            class="HvListItem-startAdornment HvIconBase-root HvIconBase-s"
                            name="LineChart"
                          >
                            <svg
                              focusable="false"
                              height="16"
                              viewBox="0 0 16 16"
                              width="16"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M1.086 11.453l-.707-.707 5.559-5.558 4.2 4.2 4.832-4.831.707.707-5.539 5.536-4.2-4.2zM0 16h16v-1H0z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                          Value 1
                        </li>
                        <li
                          class="HvListItem-root HvListItem-gutters HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          Value 2
                        </li>
                        <li
                          class="HvListItem-root HvListItem-gutters HvListItem-interactive HvListItem-withEndAdornment HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          Value 3
                          <div
                            class="HvListItem-endAdornment HvList-box HvIconBase-root HvIconBase-xs"
                            name="DropRightXS"
                          >
                            <svg
                              focusable="false"
                              height="12"
                              viewBox="0 0 12 12"
                              width="12"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M4.05 10.6l-.7-.7L7.25 6l-3.9-3.9.7-.7L8.65 6z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                        </li>
                      </ul>,
                    }
                  }
                  strategy="listbox"
                >
                  <ConditionalWrapper
                    condition={false}
                    wrapper={[Function]}
                  >
                    <li
                      className="HvListItem-root HvListItem-gutters HvListItem-interactive HvListItem-withEndAdornment HvFocus-root HvFocus-focusDisabled"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      role="option"
                      selected={false}
                    >
                      <ComponentFunction>
                        Value 3
                      </ComponentFunction>
                      <DropRightXS
                        className="HvListItem-endAdornment HvList-box"
                        iconSize="XS"
                      >
                        <WithStyles(HvIconBase)
                          className="HvListItem-endAdornment HvList-box"
                          iconSize="XS"
                          name="DropRightXS"
                        >
                          <HvIconBase
                            className="HvListItem-endAdornment HvList-box"
                            classes={
                              Object {
                                "l": "HvIconBase-l",
                                "m": "HvIconBase-m",
                                "root": "HvIconBase-root",
                                "s": "HvIconBase-s",
                                "xs": "HvIconBase-xs",
                              }
                            }
                            iconSize="XS"
                            name="DropRightXS"
                          >
                            <div
                              className="HvListItem-endAdornment HvList-box HvIconBase-root HvIconBase-xs"
                              name="DropRightXS"
                            >
                              <svg
                                focusable={false}
                                height={12}
                                viewBox="0 0 12 12"
                                width={12}
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  className="color0"
                                  d="M4.05 10.6l-.7-.7L7.25 6l-3.9-3.9.7-.7L8.65 6z"
                                  fill="#414141"
                                />
                              </svg>
                            </div>
                          </HvIconBase>
                        </WithStyles(HvIconBase)>
                      </DropRightXS>
                    </li>
                  </ConditionalWrapper>
                </Focus>
              </WithStyles(Focus)>
            </HvListItem>
          </WithStyles(HvListItem)>
        </ul>
      </HvListContainer>
    </WithStyles(HvListContainer)>
  </List>
</WithStyles(List)>
`;

exports[`[v3] <List /> Single selection with selectors should render correctly 1`] = `
<WithStyles(List)
  useSelector={true}
  values={
    Array [
      Object {
        "label": "Value 1",
      },
      Object {
        "label": "Value 2",
      },
      Object {
        "label": "Value 3",
      },
    ]
  }
>
  <List
    classes={
      Object {
        "box": "HvList-box",
        "icon": "HvList-icon",
        "itemSelector": "HvList-itemSelector",
        "link": "HvList-link",
        "root": "HvList-root",
        "selectorContainer": "HvList-selectorContainer",
        "truncate": "HvList-truncate",
      }
    }
    condensed={false}
    hasTooltips={false}
    labels={
      Object {
        "selectAll": "Select All",
        "selectionConjunction": "/",
      }
    }
    multiSelect={false}
    onChange={[Function]}
    onClick={[Function]}
    selectable={true}
    showSelectAll={false}
    singleSelectionToggle={true}
    useSelector={true}
    values={
      Array [
        Object {
          "label": "Value 1",
        },
        Object {
          "label": "Value 2",
        },
        Object {
          "label": "Value 3",
        },
      ]
    }
  >
    <WithStyles(HvListContainer)
      className="HvList-root"
      condensed={false}
      disableGutters={true}
      interactive={true}
      multiSelect={false}
      role="listbox"
      selectable={true}
    >
      <HvListContainer
        className="HvList-root"
        classes={
          Object {
            "root": "HvListContainer-root",
          }
        }
        condensed={false}
        disableGutters={true}
        interactive={true}
        multiSelect={false}
        role="listbox"
        selectable={true}
      >
        <ul
          className="HvList-root HvListContainer-root"
          role="listbox"
        >
          <WithStyles(HvListItem)
            classes={
              Object {
                "selected": "HvList-itemSelector",
              }
            }
            key=".$0"
            onClick={[Function]}
            role="option"
            startAdornment={null}
            tabIndex={0}
          >
            <HvListItem
              classes={
                Object {
                  "condensed": "HvListItem-condensed",
                  "disabled": "HvListItem-disabled",
                  "endAdornment": "HvListItem-endAdornment",
                  "focus": "HvListItem-focus",
                  "gutters": "HvListItem-gutters",
                  "interactive": "HvListItem-interactive",
                  "root": "HvListItem-root",
                  "selected": "HvListItem-selected HvList-itemSelector",
                  "startAdornment": "HvListItem-startAdornment",
                  "withEndAdornment": "HvListItem-withEndAdornment",
                  "withStartAdornment": "HvListItem-withStartAdornment",
                }
              }
              onClick={[Function]}
              role="option"
              startAdornment={null}
              tabIndex={0}
            >
              <WithStyles(Focus)
                classes={
                  Object {
                    "focus": "HvListItem-focus",
                  }
                }
                configuration={
                  Object {
                    "tabIndex": 0,
                  }
                }
                rootRef={
                  Object {
                    "current": <ul
                      class="HvList-root HvListContainer-root"
                      role="listbox"
                    >
                      <li
                        class="HvListItem-root HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                class="PrivateSwitchBase-input-4"
                                tabindex="0"
                                type="radio"
                                value=""
                              />
                              <div
                                class="HvRadioButton-icon HvList-icon HvIconBase-root HvIconBase-s"
                                name="RadioButtonUnselected"
                              >
                                <svg
                                  focusable="false"
                                  height="16"
                                  viewBox="0 0 16 16"
                                  width="16"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                    fill="#FBFCFC"
                                  />
                                  <path
                                    class="color1"
                                    d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                    fill="#414141"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                          >
                            Value 1
                          </span>
                        </label>
                      </li>
                      <li
                        class="HvListItem-root HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                class="PrivateSwitchBase-input-4"
                                tabindex="-1"
                                type="radio"
                                value=""
                              />
                              <div
                                class="HvRadioButton-icon HvList-icon HvIconBase-root HvIconBase-s"
                                name="RadioButtonUnselected"
                              >
                                <svg
                                  focusable="false"
                                  height="16"
                                  viewBox="0 0 16 16"
                                  width="16"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                    fill="#FBFCFC"
                                  />
                                  <path
                                    class="color1"
                                    d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                    fill="#414141"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                          >
                            Value 2
                          </span>
                        </label>
                      </li>
                      <li
                        class="HvListItem-root HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                class="PrivateSwitchBase-input-4"
                                tabindex="-1"
                                type="radio"
                                value=""
                              />
                              <div
                                class="HvRadioButton-icon HvList-icon HvIconBase-root HvIconBase-s"
                                name="RadioButtonUnselected"
                              >
                                <svg
                                  focusable="false"
                                  height="16"
                                  viewBox="0 0 16 16"
                                  width="16"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                    fill="#FBFCFC"
                                  />
                                  <path
                                    class="color1"
                                    d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                    fill="#414141"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                          >
                            Value 3
                          </span>
                        </label>
                      </li>
                    </ul>,
                  }
                }
                strategy="listbox"
              >
                <Focus
                  classes={
                    Object {
                      "disabled": "HvFocus-disabled",
                      "externalReference": "HvFocus-externalReference",
                      "falseFocus": "HvFocus-falseFocus",
                      "focus": "HvFocus-focus HvListItem-focus",
                      "focusDisabled": "HvFocus-focusDisabled",
                      "focused": "HvFocus-focused",
                      "root": "HvFocus-root",
                      "selected": "HvFocus-selected",
                    }
                  }
                  configuration={
                    Object {
                      "tabIndex": 0,
                    }
                  }
                  rootRef={
                    Object {
                      "current": <ul
                        class="HvList-root HvListContainer-root"
                        role="listbox"
                      >
                        <li
                          class="HvListItem-root HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  class="PrivateSwitchBase-input-4"
                                  tabindex="0"
                                  type="radio"
                                  value=""
                                />
                                <div
                                  class="HvRadioButton-icon HvList-icon HvIconBase-root HvIconBase-s"
                                  name="RadioButtonUnselected"
                                >
                                  <svg
                                    focusable="false"
                                    height="16"
                                    viewBox="0 0 16 16"
                                    width="16"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                      fill="#FBFCFC"
                                    />
                                    <path
                                      class="color1"
                                      d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                      fill="#414141"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 1
                            </span>
                          </label>
                        </li>
                        <li
                          class="HvListItem-root HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  class="PrivateSwitchBase-input-4"
                                  tabindex="-1"
                                  type="radio"
                                  value=""
                                />
                                <div
                                  class="HvRadioButton-icon HvList-icon HvIconBase-root HvIconBase-s"
                                  name="RadioButtonUnselected"
                                >
                                  <svg
                                    focusable="false"
                                    height="16"
                                    viewBox="0 0 16 16"
                                    width="16"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                      fill="#FBFCFC"
                                    />
                                    <path
                                      class="color1"
                                      d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                      fill="#414141"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 2
                            </span>
                          </label>
                        </li>
                        <li
                          class="HvListItem-root HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  class="PrivateSwitchBase-input-4"
                                  tabindex="-1"
                                  type="radio"
                                  value=""
                                />
                                <div
                                  class="HvRadioButton-icon HvList-icon HvIconBase-root HvIconBase-s"
                                  name="RadioButtonUnselected"
                                >
                                  <svg
                                    focusable="false"
                                    height="16"
                                    viewBox="0 0 16 16"
                                    width="16"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                      fill="#FBFCFC"
                                    />
                                    <path
                                      class="color1"
                                      d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                      fill="#414141"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 3
                            </span>
                          </label>
                        </li>
                      </ul>,
                    }
                  }
                  strategy="listbox"
                >
                  <ConditionalWrapper
                    condition={false}
                    wrapper={[Function]}
                  >
                    <li
                      className="HvListItem-root HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      role="option"
                      selected={false}
                    >
                      <ComponentFunction>
                        <WithStyles(HvRadio)
                          checked={false}
                          classes={
                            Object {
                              "container": "HvList-selectorContainer",
                              "icon": "HvList-icon",
                              "labelTypography": "HvList-truncate",
                            }
                          }
                          label="Value 1"
                        >
                          <HvRadio
                            checked={false}
                            classes={
                              Object {
                                "container": "HvRadioButton-container HvList-selectorContainer",
                                "disableFocus": "HvRadioButton-disableFocus",
                                "disabledBorder": "HvRadioButton-disabledBorder",
                                "icon": "HvRadioButton-icon HvList-icon",
                                "labelDisabled": "HvRadioButton-labelDisabled",
                                "labelEnd": "HvRadioButton-labelEnd",
                                "labelStart": "HvRadioButton-labelStart",
                                "labelTypography": "HvRadioButton-labelTypography HvList-truncate",
                                "radio": "HvRadioButton-radio",
                              }
                            }
                            label="Value 1"
                          >
                            <WithStyles(ForwardRef(FormControlLabel))
                              className="HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                              classes={
                                Object {
                                  "disabled": "HvRadioButton-labelDisabled",
                                  "label": "HvRadioButton-labelTypography HvList-truncate",
                                }
                              }
                              control={
                                <ForwardRef(WithStyles)
                                  checked={false}
                                  checkedIcon={
                                    <RadioButtonSelected
                                      className="HvRadioButton-icon HvList-icon"
                                    />
                                  }
                                  className="HvRadioButton-radio"
                                  color="default"
                                  disableRipple={true}
                                  icon={
                                    <RadioButtonUnselected
                                      className="HvRadioButton-icon HvList-icon"
                                    />
                                  }
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  value=""
                                />
                              }
                              label="Value 1"
                              labelPlacement="end"
                            >
                              <ForwardRef(FormControlLabel)
                                className="HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled HvRadioButton-labelDisabled",
                                    "label": "MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate",
                                    "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                    "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                    "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                    "root": "MuiFormControlLabel-root",
                                  }
                                }
                                control={
                                  <ForwardRef(WithStyles)
                                    checked={false}
                                    checkedIcon={
                                      <RadioButtonSelected
                                        className="HvRadioButton-icon HvList-icon"
                                      />
                                    }
                                    className="HvRadioButton-radio"
                                    color="default"
                                    disableRipple={true}
                                    icon={
                                      <RadioButtonUnselected
                                        className="HvRadioButton-icon HvList-icon"
                                      />
                                    }
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    value=""
                                  />
                                }
                                label="Value 1"
                                labelPlacement="end"
                              >
                                <label
                                  className="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                                >
                                  <WithStyles(ForwardRef(Radio))
                                    checked={false}
                                    checkedIcon={
                                      <RadioButtonSelected
                                        className="HvRadioButton-icon HvList-icon"
                                      />
                                    }
                                    className="HvRadioButton-radio"
                                    color="default"
                                    disableRipple={true}
                                    icon={
                                      <RadioButtonUnselected
                                        className="HvRadioButton-icon HvList-icon"
                                      />
                                    }
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    value=""
                                  >
                                    <ForwardRef(Radio)
                                      checked={false}
                                      checkedIcon={
                                        <RadioButtonSelected
                                          className="HvRadioButton-icon HvList-icon"
                                        />
                                      }
                                      className="HvRadioButton-radio"
                                      classes={
                                        Object {
                                          "checked": "Mui-checked",
                                          "colorPrimary": "MuiRadio-colorPrimary",
                                          "colorSecondary": "MuiRadio-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "root": "MuiRadio-root",
                                        }
                                      }
                                      color="default"
                                      disableRipple={true}
                                      icon={
                                        <RadioButtonUnselected
                                          className="HvRadioButton-icon HvList-icon"
                                        />
                                      }
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      value=""
                                    >
                                      <WithStyles(ForwardRef(SwitchBase))
                                        checked={false}
                                        checkedIcon={
                                          <RadioButtonSelected
                                            className="HvRadioButton-icon HvList-icon"
                                          />
                                        }
                                        className="HvRadioButton-radio"
                                        classes={
                                          Object {
                                            "checked": "Mui-checked",
                                            "disabled": "Mui-disabled",
                                            "root": "MuiRadio-root",
                                          }
                                        }
                                        color="default"
                                        disableRipple={true}
                                        disabled={false}
                                        icon={
                                          <RadioButtonUnselected
                                            className="HvRadioButton-icon HvList-icon"
                                          />
                                        }
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        type="radio"
                                        value=""
                                      >
                                        <ForwardRef(SwitchBase)
                                          checked={false}
                                          checkedIcon={
                                            <RadioButtonSelected
                                              className="HvRadioButton-icon HvList-icon"
                                            />
                                          }
                                          className="HvRadioButton-radio"
                                          classes={
                                            Object {
                                              "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                                              "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                                              "input": "PrivateSwitchBase-input-4",
                                              "root": "PrivateSwitchBase-root-1 MuiRadio-root",
                                            }
                                          }
                                          color="default"
                                          disableRipple={true}
                                          disabled={false}
                                          icon={
                                            <RadioButtonUnselected
                                              className="HvRadioButton-icon HvList-icon"
                                            />
                                          }
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          type="radio"
                                          value=""
                                        >
                                          <WithStyles(ForwardRef(IconButton))
                                            className="PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                                            color="default"
                                            component="span"
                                            disableRipple={true}
                                            disabled={false}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <ForwardRef(IconButton)
                                              className="PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                                              classes={
                                                Object {
                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                  "disabled": "Mui-disabled",
                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                  "label": "MuiIconButton-label",
                                                  "root": "MuiIconButton-root",
                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                }
                                              }
                                              color="default"
                                              component="span"
                                              disableRipple={true}
                                              disabled={false}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <WithStyles(ForwardRef(ButtonBase))
                                                centerRipple={true}
                                                className="MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                                                component="span"
                                                disableRipple={true}
                                                disabled={false}
                                                focusRipple={true}
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                tabIndex={null}
                                              >
                                                <ForwardRef(ButtonBase)
                                                  centerRipple={true}
                                                  className="MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiButtonBase-root",
                                                    }
                                                  }
                                                  component="span"
                                                  disableRipple={true}
                                                  disabled={false}
                                                  focusRipple={true}
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  tabIndex={null}
                                                >
                                                  <span
                                                    aria-disabled={false}
                                                    className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                                                    onBlur={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    tabIndex={null}
                                                  >
                                                    <span
                                                      className="MuiIconButton-label"
                                                    >
                                                      <input
                                                        checked={false}
                                                        className="PrivateSwitchBase-input-4"
                                                        disabled={false}
                                                        onChange={[Function]}
                                                        type="radio"
                                                        value=""
                                                      />
                                                      <RadioButtonUnselected
                                                        className="HvRadioButton-icon HvList-icon"
                                                      >
                                                        <WithStyles(HvIconBase)
                                                          className="HvRadioButton-icon HvList-icon"
                                                          iconSize="S"
                                                          name="RadioButtonUnselected"
                                                        >
                                                          <HvIconBase
                                                            className="HvRadioButton-icon HvList-icon"
                                                            classes={
                                                              Object {
                                                                "l": "HvIconBase-l",
                                                                "m": "HvIconBase-m",
                                                                "root": "HvIconBase-root",
                                                                "s": "HvIconBase-s",
                                                                "xs": "HvIconBase-xs",
                                                              }
                                                            }
                                                            iconSize="S"
                                                            name="RadioButtonUnselected"
                                                          >
                                                            <div
                                                              className="HvRadioButton-icon HvList-icon HvIconBase-root HvIconBase-s"
                                                              name="RadioButtonUnselected"
                                                            >
                                                              <svg
                                                                focusable={false}
                                                                height={16}
                                                                viewBox="0 0 16 16"
                                                                width={16}
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  className="color0"
                                                                  d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                                                  fill="#FBFCFC"
                                                                />
                                                                <path
                                                                  className="color1"
                                                                  d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                                                  fill="#414141"
                                                                />
                                                              </svg>
                                                            </div>
                                                          </HvIconBase>
                                                        </WithStyles(HvIconBase)>
                                                      </RadioButtonUnselected>
                                                    </span>
                                                  </span>
                                                </ForwardRef(ButtonBase)>
                                              </WithStyles(ForwardRef(ButtonBase))>
                                            </ForwardRef(IconButton)>
                                          </WithStyles(ForwardRef(IconButton))>
                                        </ForwardRef(SwitchBase)>
                                      </WithStyles(ForwardRef(SwitchBase))>
                                    </ForwardRef(Radio)>
                                  </WithStyles(ForwardRef(Radio))>
                                  <WithStyles(ForwardRef(Typography))
                                    className="MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate"
                                    component="span"
                                  >
                                    <ForwardRef(Typography)
                                      className="MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      component="span"
                                    >
                                      <span
                                        className="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                                      >
                                        Value 1
                                      </span>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </label>
                              </ForwardRef(FormControlLabel)>
                            </WithStyles(ForwardRef(FormControlLabel))>
                          </HvRadio>
                        </WithStyles(HvRadio)>
                      </ComponentFunction>
                    </li>
                  </ConditionalWrapper>
                </Focus>
              </WithStyles(Focus)>
            </HvListItem>
          </WithStyles(HvListItem)>
          <WithStyles(HvListItem)
            classes={
              Object {
                "selected": "HvList-itemSelector",
              }
            }
            key=".$1"
            onClick={[Function]}
            role="option"
            startAdornment={null}
            tabIndex={-1}
          >
            <HvListItem
              classes={
                Object {
                  "condensed": "HvListItem-condensed",
                  "disabled": "HvListItem-disabled",
                  "endAdornment": "HvListItem-endAdornment",
                  "focus": "HvListItem-focus",
                  "gutters": "HvListItem-gutters",
                  "interactive": "HvListItem-interactive",
                  "root": "HvListItem-root",
                  "selected": "HvListItem-selected HvList-itemSelector",
                  "startAdornment": "HvListItem-startAdornment",
                  "withEndAdornment": "HvListItem-withEndAdornment",
                  "withStartAdornment": "HvListItem-withStartAdornment",
                }
              }
              onClick={[Function]}
              role="option"
              startAdornment={null}
              tabIndex={-1}
            >
              <WithStyles(Focus)
                classes={
                  Object {
                    "focus": "HvListItem-focus",
                  }
                }
                configuration={
                  Object {
                    "tabIndex": -1,
                  }
                }
                rootRef={
                  Object {
                    "current": <ul
                      class="HvList-root HvListContainer-root"
                      role="listbox"
                    >
                      <li
                        class="HvListItem-root HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                class="PrivateSwitchBase-input-4"
                                tabindex="0"
                                type="radio"
                                value=""
                              />
                              <div
                                class="HvRadioButton-icon HvList-icon HvIconBase-root HvIconBase-s"
                                name="RadioButtonUnselected"
                              >
                                <svg
                                  focusable="false"
                                  height="16"
                                  viewBox="0 0 16 16"
                                  width="16"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                    fill="#FBFCFC"
                                  />
                                  <path
                                    class="color1"
                                    d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                    fill="#414141"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                          >
                            Value 1
                          </span>
                        </label>
                      </li>
                      <li
                        class="HvListItem-root HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                class="PrivateSwitchBase-input-4"
                                tabindex="-1"
                                type="radio"
                                value=""
                              />
                              <div
                                class="HvRadioButton-icon HvList-icon HvIconBase-root HvIconBase-s"
                                name="RadioButtonUnselected"
                              >
                                <svg
                                  focusable="false"
                                  height="16"
                                  viewBox="0 0 16 16"
                                  width="16"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                    fill="#FBFCFC"
                                  />
                                  <path
                                    class="color1"
                                    d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                    fill="#414141"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                          >
                            Value 2
                          </span>
                        </label>
                      </li>
                      <li
                        class="HvListItem-root HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                class="PrivateSwitchBase-input-4"
                                tabindex="-1"
                                type="radio"
                                value=""
                              />
                              <div
                                class="HvRadioButton-icon HvList-icon HvIconBase-root HvIconBase-s"
                                name="RadioButtonUnselected"
                              >
                                <svg
                                  focusable="false"
                                  height="16"
                                  viewBox="0 0 16 16"
                                  width="16"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                    fill="#FBFCFC"
                                  />
                                  <path
                                    class="color1"
                                    d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                    fill="#414141"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                          >
                            Value 3
                          </span>
                        </label>
                      </li>
                    </ul>,
                  }
                }
                strategy="listbox"
              >
                <Focus
                  classes={
                    Object {
                      "disabled": "HvFocus-disabled",
                      "externalReference": "HvFocus-externalReference",
                      "falseFocus": "HvFocus-falseFocus",
                      "focus": "HvFocus-focus HvListItem-focus",
                      "focusDisabled": "HvFocus-focusDisabled",
                      "focused": "HvFocus-focused",
                      "root": "HvFocus-root",
                      "selected": "HvFocus-selected",
                    }
                  }
                  configuration={
                    Object {
                      "tabIndex": -1,
                    }
                  }
                  rootRef={
                    Object {
                      "current": <ul
                        class="HvList-root HvListContainer-root"
                        role="listbox"
                      >
                        <li
                          class="HvListItem-root HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  class="PrivateSwitchBase-input-4"
                                  tabindex="0"
                                  type="radio"
                                  value=""
                                />
                                <div
                                  class="HvRadioButton-icon HvList-icon HvIconBase-root HvIconBase-s"
                                  name="RadioButtonUnselected"
                                >
                                  <svg
                                    focusable="false"
                                    height="16"
                                    viewBox="0 0 16 16"
                                    width="16"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                      fill="#FBFCFC"
                                    />
                                    <path
                                      class="color1"
                                      d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                      fill="#414141"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 1
                            </span>
                          </label>
                        </li>
                        <li
                          class="HvListItem-root HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  class="PrivateSwitchBase-input-4"
                                  tabindex="-1"
                                  type="radio"
                                  value=""
                                />
                                <div
                                  class="HvRadioButton-icon HvList-icon HvIconBase-root HvIconBase-s"
                                  name="RadioButtonUnselected"
                                >
                                  <svg
                                    focusable="false"
                                    height="16"
                                    viewBox="0 0 16 16"
                                    width="16"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                      fill="#FBFCFC"
                                    />
                                    <path
                                      class="color1"
                                      d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                      fill="#414141"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 2
                            </span>
                          </label>
                        </li>
                        <li
                          class="HvListItem-root HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  class="PrivateSwitchBase-input-4"
                                  tabindex="-1"
                                  type="radio"
                                  value=""
                                />
                                <div
                                  class="HvRadioButton-icon HvList-icon HvIconBase-root HvIconBase-s"
                                  name="RadioButtonUnselected"
                                >
                                  <svg
                                    focusable="false"
                                    height="16"
                                    viewBox="0 0 16 16"
                                    width="16"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                      fill="#FBFCFC"
                                    />
                                    <path
                                      class="color1"
                                      d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                      fill="#414141"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 3
                            </span>
                          </label>
                        </li>
                      </ul>,
                    }
                  }
                  strategy="listbox"
                >
                  <ConditionalWrapper
                    condition={false}
                    wrapper={[Function]}
                  >
                    <li
                      className="HvListItem-root HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      role="option"
                      selected={false}
                    >
                      <ComponentFunction>
                        <WithStyles(HvRadio)
                          checked={false}
                          classes={
                            Object {
                              "container": "HvList-selectorContainer",
                              "icon": "HvList-icon",
                              "labelTypography": "HvList-truncate",
                            }
                          }
                          label="Value 2"
                        >
                          <HvRadio
                            checked={false}
                            classes={
                              Object {
                                "container": "HvRadioButton-container HvList-selectorContainer",
                                "disableFocus": "HvRadioButton-disableFocus",
                                "disabledBorder": "HvRadioButton-disabledBorder",
                                "icon": "HvRadioButton-icon HvList-icon",
                                "labelDisabled": "HvRadioButton-labelDisabled",
                                "labelEnd": "HvRadioButton-labelEnd",
                                "labelStart": "HvRadioButton-labelStart",
                                "labelTypography": "HvRadioButton-labelTypography HvList-truncate",
                                "radio": "HvRadioButton-radio",
                              }
                            }
                            label="Value 2"
                          >
                            <WithStyles(ForwardRef(FormControlLabel))
                              className="HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                              classes={
                                Object {
                                  "disabled": "HvRadioButton-labelDisabled",
                                  "label": "HvRadioButton-labelTypography HvList-truncate",
                                }
                              }
                              control={
                                <ForwardRef(WithStyles)
                                  checked={false}
                                  checkedIcon={
                                    <RadioButtonSelected
                                      className="HvRadioButton-icon HvList-icon"
                                    />
                                  }
                                  className="HvRadioButton-radio"
                                  color="default"
                                  disableRipple={true}
                                  icon={
                                    <RadioButtonUnselected
                                      className="HvRadioButton-icon HvList-icon"
                                    />
                                  }
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  value=""
                                />
                              }
                              label="Value 2"
                              labelPlacement="end"
                            >
                              <ForwardRef(FormControlLabel)
                                className="HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled HvRadioButton-labelDisabled",
                                    "label": "MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate",
                                    "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                    "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                    "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                    "root": "MuiFormControlLabel-root",
                                  }
                                }
                                control={
                                  <ForwardRef(WithStyles)
                                    checked={false}
                                    checkedIcon={
                                      <RadioButtonSelected
                                        className="HvRadioButton-icon HvList-icon"
                                      />
                                    }
                                    className="HvRadioButton-radio"
                                    color="default"
                                    disableRipple={true}
                                    icon={
                                      <RadioButtonUnselected
                                        className="HvRadioButton-icon HvList-icon"
                                      />
                                    }
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    value=""
                                  />
                                }
                                label="Value 2"
                                labelPlacement="end"
                              >
                                <label
                                  className="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                                >
                                  <WithStyles(ForwardRef(Radio))
                                    checked={false}
                                    checkedIcon={
                                      <RadioButtonSelected
                                        className="HvRadioButton-icon HvList-icon"
                                      />
                                    }
                                    className="HvRadioButton-radio"
                                    color="default"
                                    disableRipple={true}
                                    icon={
                                      <RadioButtonUnselected
                                        className="HvRadioButton-icon HvList-icon"
                                      />
                                    }
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    value=""
                                  >
                                    <ForwardRef(Radio)
                                      checked={false}
                                      checkedIcon={
                                        <RadioButtonSelected
                                          className="HvRadioButton-icon HvList-icon"
                                        />
                                      }
                                      className="HvRadioButton-radio"
                                      classes={
                                        Object {
                                          "checked": "Mui-checked",
                                          "colorPrimary": "MuiRadio-colorPrimary",
                                          "colorSecondary": "MuiRadio-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "root": "MuiRadio-root",
                                        }
                                      }
                                      color="default"
                                      disableRipple={true}
                                      icon={
                                        <RadioButtonUnselected
                                          className="HvRadioButton-icon HvList-icon"
                                        />
                                      }
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      value=""
                                    >
                                      <WithStyles(ForwardRef(SwitchBase))
                                        checked={false}
                                        checkedIcon={
                                          <RadioButtonSelected
                                            className="HvRadioButton-icon HvList-icon"
                                          />
                                        }
                                        className="HvRadioButton-radio"
                                        classes={
                                          Object {
                                            "checked": "Mui-checked",
                                            "disabled": "Mui-disabled",
                                            "root": "MuiRadio-root",
                                          }
                                        }
                                        color="default"
                                        disableRipple={true}
                                        disabled={false}
                                        icon={
                                          <RadioButtonUnselected
                                            className="HvRadioButton-icon HvList-icon"
                                          />
                                        }
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        type="radio"
                                        value=""
                                      >
                                        <ForwardRef(SwitchBase)
                                          checked={false}
                                          checkedIcon={
                                            <RadioButtonSelected
                                              className="HvRadioButton-icon HvList-icon"
                                            />
                                          }
                                          className="HvRadioButton-radio"
                                          classes={
                                            Object {
                                              "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                                              "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                                              "input": "PrivateSwitchBase-input-4",
                                              "root": "PrivateSwitchBase-root-1 MuiRadio-root",
                                            }
                                          }
                                          color="default"
                                          disableRipple={true}
                                          disabled={false}
                                          icon={
                                            <RadioButtonUnselected
                                              className="HvRadioButton-icon HvList-icon"
                                            />
                                          }
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          type="radio"
                                          value=""
                                        >
                                          <WithStyles(ForwardRef(IconButton))
                                            className="PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                                            color="default"
                                            component="span"
                                            disableRipple={true}
                                            disabled={false}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <ForwardRef(IconButton)
                                              className="PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                                              classes={
                                                Object {
                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                  "disabled": "Mui-disabled",
                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                  "label": "MuiIconButton-label",
                                                  "root": "MuiIconButton-root",
                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                }
                                              }
                                              color="default"
                                              component="span"
                                              disableRipple={true}
                                              disabled={false}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <WithStyles(ForwardRef(ButtonBase))
                                                centerRipple={true}
                                                className="MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                                                component="span"
                                                disableRipple={true}
                                                disabled={false}
                                                focusRipple={true}
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                tabIndex={null}
                                              >
                                                <ForwardRef(ButtonBase)
                                                  centerRipple={true}
                                                  className="MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiButtonBase-root",
                                                    }
                                                  }
                                                  component="span"
                                                  disableRipple={true}
                                                  disabled={false}
                                                  focusRipple={true}
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  tabIndex={null}
                                                >
                                                  <span
                                                    aria-disabled={false}
                                                    className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                                                    onBlur={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    tabIndex={null}
                                                  >
                                                    <span
                                                      className="MuiIconButton-label"
                                                    >
                                                      <input
                                                        checked={false}
                                                        className="PrivateSwitchBase-input-4"
                                                        disabled={false}
                                                        onChange={[Function]}
                                                        type="radio"
                                                        value=""
                                                      />
                                                      <RadioButtonUnselected
                                                        className="HvRadioButton-icon HvList-icon"
                                                      >
                                                        <WithStyles(HvIconBase)
                                                          className="HvRadioButton-icon HvList-icon"
                                                          iconSize="S"
                                                          name="RadioButtonUnselected"
                                                        >
                                                          <HvIconBase
                                                            className="HvRadioButton-icon HvList-icon"
                                                            classes={
                                                              Object {
                                                                "l": "HvIconBase-l",
                                                                "m": "HvIconBase-m",
                                                                "root": "HvIconBase-root",
                                                                "s": "HvIconBase-s",
                                                                "xs": "HvIconBase-xs",
                                                              }
                                                            }
                                                            iconSize="S"
                                                            name="RadioButtonUnselected"
                                                          >
                                                            <div
                                                              className="HvRadioButton-icon HvList-icon HvIconBase-root HvIconBase-s"
                                                              name="RadioButtonUnselected"
                                                            >
                                                              <svg
                                                                focusable={false}
                                                                height={16}
                                                                viewBox="0 0 16 16"
                                                                width={16}
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  className="color0"
                                                                  d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                                                  fill="#FBFCFC"
                                                                />
                                                                <path
                                                                  className="color1"
                                                                  d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                                                  fill="#414141"
                                                                />
                                                              </svg>
                                                            </div>
                                                          </HvIconBase>
                                                        </WithStyles(HvIconBase)>
                                                      </RadioButtonUnselected>
                                                    </span>
                                                  </span>
                                                </ForwardRef(ButtonBase)>
                                              </WithStyles(ForwardRef(ButtonBase))>
                                            </ForwardRef(IconButton)>
                                          </WithStyles(ForwardRef(IconButton))>
                                        </ForwardRef(SwitchBase)>
                                      </WithStyles(ForwardRef(SwitchBase))>
                                    </ForwardRef(Radio)>
                                  </WithStyles(ForwardRef(Radio))>
                                  <WithStyles(ForwardRef(Typography))
                                    className="MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate"
                                    component="span"
                                  >
                                    <ForwardRef(Typography)
                                      className="MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      component="span"
                                    >
                                      <span
                                        className="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                                      >
                                        Value 2
                                      </span>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </label>
                              </ForwardRef(FormControlLabel)>
                            </WithStyles(ForwardRef(FormControlLabel))>
                          </HvRadio>
                        </WithStyles(HvRadio)>
                      </ComponentFunction>
                    </li>
                  </ConditionalWrapper>
                </Focus>
              </WithStyles(Focus)>
            </HvListItem>
          </WithStyles(HvListItem)>
          <WithStyles(HvListItem)
            classes={
              Object {
                "selected": "HvList-itemSelector",
              }
            }
            key=".$2"
            onClick={[Function]}
            role="option"
            startAdornment={null}
            tabIndex={-1}
          >
            <HvListItem
              classes={
                Object {
                  "condensed": "HvListItem-condensed",
                  "disabled": "HvListItem-disabled",
                  "endAdornment": "HvListItem-endAdornment",
                  "focus": "HvListItem-focus",
                  "gutters": "HvListItem-gutters",
                  "interactive": "HvListItem-interactive",
                  "root": "HvListItem-root",
                  "selected": "HvListItem-selected HvList-itemSelector",
                  "startAdornment": "HvListItem-startAdornment",
                  "withEndAdornment": "HvListItem-withEndAdornment",
                  "withStartAdornment": "HvListItem-withStartAdornment",
                }
              }
              onClick={[Function]}
              role="option"
              startAdornment={null}
              tabIndex={-1}
            >
              <WithStyles(Focus)
                classes={
                  Object {
                    "focus": "HvListItem-focus",
                  }
                }
                configuration={
                  Object {
                    "tabIndex": -1,
                  }
                }
                rootRef={
                  Object {
                    "current": <ul
                      class="HvList-root HvListContainer-root"
                      role="listbox"
                    >
                      <li
                        class="HvListItem-root HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                class="PrivateSwitchBase-input-4"
                                tabindex="0"
                                type="radio"
                                value=""
                              />
                              <div
                                class="HvRadioButton-icon HvList-icon HvIconBase-root HvIconBase-s"
                                name="RadioButtonUnselected"
                              >
                                <svg
                                  focusable="false"
                                  height="16"
                                  viewBox="0 0 16 16"
                                  width="16"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                    fill="#FBFCFC"
                                  />
                                  <path
                                    class="color1"
                                    d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                    fill="#414141"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                          >
                            Value 1
                          </span>
                        </label>
                      </li>
                      <li
                        class="HvListItem-root HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                class="PrivateSwitchBase-input-4"
                                tabindex="-1"
                                type="radio"
                                value=""
                              />
                              <div
                                class="HvRadioButton-icon HvList-icon HvIconBase-root HvIconBase-s"
                                name="RadioButtonUnselected"
                              >
                                <svg
                                  focusable="false"
                                  height="16"
                                  viewBox="0 0 16 16"
                                  width="16"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                    fill="#FBFCFC"
                                  />
                                  <path
                                    class="color1"
                                    d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                    fill="#414141"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                          >
                            Value 2
                          </span>
                        </label>
                      </li>
                      <li
                        class="HvListItem-root HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                class="PrivateSwitchBase-input-4"
                                tabindex="-1"
                                type="radio"
                                value=""
                              />
                              <div
                                class="HvRadioButton-icon HvList-icon HvIconBase-root HvIconBase-s"
                                name="RadioButtonUnselected"
                              >
                                <svg
                                  focusable="false"
                                  height="16"
                                  viewBox="0 0 16 16"
                                  width="16"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                    fill="#FBFCFC"
                                  />
                                  <path
                                    class="color1"
                                    d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                    fill="#414141"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                          >
                            Value 3
                          </span>
                        </label>
                      </li>
                    </ul>,
                  }
                }
                strategy="listbox"
              >
                <Focus
                  classes={
                    Object {
                      "disabled": "HvFocus-disabled",
                      "externalReference": "HvFocus-externalReference",
                      "falseFocus": "HvFocus-falseFocus",
                      "focus": "HvFocus-focus HvListItem-focus",
                      "focusDisabled": "HvFocus-focusDisabled",
                      "focused": "HvFocus-focused",
                      "root": "HvFocus-root",
                      "selected": "HvFocus-selected",
                    }
                  }
                  configuration={
                    Object {
                      "tabIndex": -1,
                    }
                  }
                  rootRef={
                    Object {
                      "current": <ul
                        class="HvList-root HvListContainer-root"
                        role="listbox"
                      >
                        <li
                          class="HvListItem-root HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  class="PrivateSwitchBase-input-4"
                                  tabindex="0"
                                  type="radio"
                                  value=""
                                />
                                <div
                                  class="HvRadioButton-icon HvList-icon HvIconBase-root HvIconBase-s"
                                  name="RadioButtonUnselected"
                                >
                                  <svg
                                    focusable="false"
                                    height="16"
                                    viewBox="0 0 16 16"
                                    width="16"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                      fill="#FBFCFC"
                                    />
                                    <path
                                      class="color1"
                                      d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                      fill="#414141"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 1
                            </span>
                          </label>
                        </li>
                        <li
                          class="HvListItem-root HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  class="PrivateSwitchBase-input-4"
                                  tabindex="-1"
                                  type="radio"
                                  value=""
                                />
                                <div
                                  class="HvRadioButton-icon HvList-icon HvIconBase-root HvIconBase-s"
                                  name="RadioButtonUnselected"
                                >
                                  <svg
                                    focusable="false"
                                    height="16"
                                    viewBox="0 0 16 16"
                                    width="16"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                      fill="#FBFCFC"
                                    />
                                    <path
                                      class="color1"
                                      d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                      fill="#414141"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 2
                            </span>
                          </label>
                        </li>
                        <li
                          class="HvListItem-root HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  class="PrivateSwitchBase-input-4"
                                  tabindex="-1"
                                  type="radio"
                                  value=""
                                />
                                <div
                                  class="HvRadioButton-icon HvList-icon HvIconBase-root HvIconBase-s"
                                  name="RadioButtonUnselected"
                                >
                                  <svg
                                    focusable="false"
                                    height="16"
                                    viewBox="0 0 16 16"
                                    width="16"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                      fill="#FBFCFC"
                                    />
                                    <path
                                      class="color1"
                                      d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                      fill="#414141"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 3
                            </span>
                          </label>
                        </li>
                      </ul>,
                    }
                  }
                  strategy="listbox"
                >
                  <ConditionalWrapper
                    condition={false}
                    wrapper={[Function]}
                  >
                    <li
                      className="HvListItem-root HvListItem-interactive HvFocus-root HvFocus-focusDisabled"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      role="option"
                      selected={false}
                    >
                      <ComponentFunction>
                        <WithStyles(HvRadio)
                          checked={false}
                          classes={
                            Object {
                              "container": "HvList-selectorContainer",
                              "icon": "HvList-icon",
                              "labelTypography": "HvList-truncate",
                            }
                          }
                          label="Value 3"
                        >
                          <HvRadio
                            checked={false}
                            classes={
                              Object {
                                "container": "HvRadioButton-container HvList-selectorContainer",
                                "disableFocus": "HvRadioButton-disableFocus",
                                "disabledBorder": "HvRadioButton-disabledBorder",
                                "icon": "HvRadioButton-icon HvList-icon",
                                "labelDisabled": "HvRadioButton-labelDisabled",
                                "labelEnd": "HvRadioButton-labelEnd",
                                "labelStart": "HvRadioButton-labelStart",
                                "labelTypography": "HvRadioButton-labelTypography HvList-truncate",
                                "radio": "HvRadioButton-radio",
                              }
                            }
                            label="Value 3"
                          >
                            <WithStyles(ForwardRef(FormControlLabel))
                              className="HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                              classes={
                                Object {
                                  "disabled": "HvRadioButton-labelDisabled",
                                  "label": "HvRadioButton-labelTypography HvList-truncate",
                                }
                              }
                              control={
                                <ForwardRef(WithStyles)
                                  checked={false}
                                  checkedIcon={
                                    <RadioButtonSelected
                                      className="HvRadioButton-icon HvList-icon"
                                    />
                                  }
                                  className="HvRadioButton-radio"
                                  color="default"
                                  disableRipple={true}
                                  icon={
                                    <RadioButtonUnselected
                                      className="HvRadioButton-icon HvList-icon"
                                    />
                                  }
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  value=""
                                />
                              }
                              label="Value 3"
                              labelPlacement="end"
                            >
                              <ForwardRef(FormControlLabel)
                                className="HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled HvRadioButton-labelDisabled",
                                    "label": "MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate",
                                    "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                    "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                    "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                    "root": "MuiFormControlLabel-root",
                                  }
                                }
                                control={
                                  <ForwardRef(WithStyles)
                                    checked={false}
                                    checkedIcon={
                                      <RadioButtonSelected
                                        className="HvRadioButton-icon HvList-icon"
                                      />
                                    }
                                    className="HvRadioButton-radio"
                                    color="default"
                                    disableRipple={true}
                                    icon={
                                      <RadioButtonUnselected
                                        className="HvRadioButton-icon HvList-icon"
                                      />
                                    }
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    value=""
                                  />
                                }
                                label="Value 3"
                                labelPlacement="end"
                              >
                                <label
                                  className="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                                >
                                  <WithStyles(ForwardRef(Radio))
                                    checked={false}
                                    checkedIcon={
                                      <RadioButtonSelected
                                        className="HvRadioButton-icon HvList-icon"
                                      />
                                    }
                                    className="HvRadioButton-radio"
                                    color="default"
                                    disableRipple={true}
                                    icon={
                                      <RadioButtonUnselected
                                        className="HvRadioButton-icon HvList-icon"
                                      />
                                    }
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    value=""
                                  >
                                    <ForwardRef(Radio)
                                      checked={false}
                                      checkedIcon={
                                        <RadioButtonSelected
                                          className="HvRadioButton-icon HvList-icon"
                                        />
                                      }
                                      className="HvRadioButton-radio"
                                      classes={
                                        Object {
                                          "checked": "Mui-checked",
                                          "colorPrimary": "MuiRadio-colorPrimary",
                                          "colorSecondary": "MuiRadio-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "root": "MuiRadio-root",
                                        }
                                      }
                                      color="default"
                                      disableRipple={true}
                                      icon={
                                        <RadioButtonUnselected
                                          className="HvRadioButton-icon HvList-icon"
                                        />
                                      }
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      value=""
                                    >
                                      <WithStyles(ForwardRef(SwitchBase))
                                        checked={false}
                                        checkedIcon={
                                          <RadioButtonSelected
                                            className="HvRadioButton-icon HvList-icon"
                                          />
                                        }
                                        className="HvRadioButton-radio"
                                        classes={
                                          Object {
                                            "checked": "Mui-checked",
                                            "disabled": "Mui-disabled",
                                            "root": "MuiRadio-root",
                                          }
                                        }
                                        color="default"
                                        disableRipple={true}
                                        disabled={false}
                                        icon={
                                          <RadioButtonUnselected
                                            className="HvRadioButton-icon HvList-icon"
                                          />
                                        }
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        type="radio"
                                        value=""
                                      >
                                        <ForwardRef(SwitchBase)
                                          checked={false}
                                          checkedIcon={
                                            <RadioButtonSelected
                                              className="HvRadioButton-icon HvList-icon"
                                            />
                                          }
                                          className="HvRadioButton-radio"
                                          classes={
                                            Object {
                                              "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                                              "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                                              "input": "PrivateSwitchBase-input-4",
                                              "root": "PrivateSwitchBase-root-1 MuiRadio-root",
                                            }
                                          }
                                          color="default"
                                          disableRipple={true}
                                          disabled={false}
                                          icon={
                                            <RadioButtonUnselected
                                              className="HvRadioButton-icon HvList-icon"
                                            />
                                          }
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          type="radio"
                                          value=""
                                        >
                                          <WithStyles(ForwardRef(IconButton))
                                            className="PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                                            color="default"
                                            component="span"
                                            disableRipple={true}
                                            disabled={false}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <ForwardRef(IconButton)
                                              className="PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                                              classes={
                                                Object {
                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                  "disabled": "Mui-disabled",
                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                  "label": "MuiIconButton-label",
                                                  "root": "MuiIconButton-root",
                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                }
                                              }
                                              color="default"
                                              component="span"
                                              disableRipple={true}
                                              disabled={false}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <WithStyles(ForwardRef(ButtonBase))
                                                centerRipple={true}
                                                className="MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                                                component="span"
                                                disableRipple={true}
                                                disabled={false}
                                                focusRipple={true}
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                tabIndex={null}
                                              >
                                                <ForwardRef(ButtonBase)
                                                  centerRipple={true}
                                                  className="MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiButtonBase-root",
                                                    }
                                                  }
                                                  component="span"
                                                  disableRipple={true}
                                                  disabled={false}
                                                  focusRipple={true}
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  tabIndex={null}
                                                >
                                                  <span
                                                    aria-disabled={false}
                                                    className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                                                    onBlur={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    tabIndex={null}
                                                  >
                                                    <span
                                                      className="MuiIconButton-label"
                                                    >
                                                      <input
                                                        checked={false}
                                                        className="PrivateSwitchBase-input-4"
                                                        disabled={false}
                                                        onChange={[Function]}
                                                        type="radio"
                                                        value=""
                                                      />
                                                      <RadioButtonUnselected
                                                        className="HvRadioButton-icon HvList-icon"
                                                      >
                                                        <WithStyles(HvIconBase)
                                                          className="HvRadioButton-icon HvList-icon"
                                                          iconSize="S"
                                                          name="RadioButtonUnselected"
                                                        >
                                                          <HvIconBase
                                                            className="HvRadioButton-icon HvList-icon"
                                                            classes={
                                                              Object {
                                                                "l": "HvIconBase-l",
                                                                "m": "HvIconBase-m",
                                                                "root": "HvIconBase-root",
                                                                "s": "HvIconBase-s",
                                                                "xs": "HvIconBase-xs",
                                                              }
                                                            }
                                                            iconSize="S"
                                                            name="RadioButtonUnselected"
                                                          >
                                                            <div
                                                              className="HvRadioButton-icon HvList-icon HvIconBase-root HvIconBase-s"
                                                              name="RadioButtonUnselected"
                                                            >
                                                              <svg
                                                                focusable={false}
                                                                height={16}
                                                                viewBox="0 0 16 16"
                                                                width={16}
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  className="color0"
                                                                  d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                                                  fill="#FBFCFC"
                                                                />
                                                                <path
                                                                  className="color1"
                                                                  d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                                                  fill="#414141"
                                                                />
                                                              </svg>
                                                            </div>
                                                          </HvIconBase>
                                                        </WithStyles(HvIconBase)>
                                                      </RadioButtonUnselected>
                                                    </span>
                                                  </span>
                                                </ForwardRef(ButtonBase)>
                                              </WithStyles(ForwardRef(ButtonBase))>
                                            </ForwardRef(IconButton)>
                                          </WithStyles(ForwardRef(IconButton))>
                                        </ForwardRef(SwitchBase)>
                                      </WithStyles(ForwardRef(SwitchBase))>
                                    </ForwardRef(Radio)>
                                  </WithStyles(ForwardRef(Radio))>
                                  <WithStyles(ForwardRef(Typography))
                                    className="MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate"
                                    component="span"
                                  >
                                    <ForwardRef(Typography)
                                      className="MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      component="span"
                                    >
                                      <span
                                        className="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                                      >
                                        Value 3
                                      </span>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </label>
                              </ForwardRef(FormControlLabel)>
                            </WithStyles(ForwardRef(FormControlLabel))>
                          </HvRadio>
                        </WithStyles(HvRadio)>
                      </ComponentFunction>
                    </li>
                  </ConditionalWrapper>
                </Focus>
              </WithStyles(Focus)>
            </HvListItem>
          </WithStyles(HvListItem)>
        </ul>
      </HvListContainer>
    </WithStyles(HvListContainer)>
  </List>
</WithStyles(List)>
`;
