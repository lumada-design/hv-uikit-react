// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<List /> Multi selection should render correctly 1`] = `
<WithStyles(List)
  multiSelect={true}
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          Array [
            Object {
              "label": "Value 1",
              "selected": true,
            },
            Object {
              "label": "Value 2",
              "selected": false,
            },
            Object {
              "label": "Value 3",
              "selected": false,
            },
          ],
        ],
        Array [
          Array [
            Object {
              "label": "Value 1",
              "selected": false,
            },
            Object {
              "label": "Value 2",
              "selected": true,
            },
            Object {
              "label": "Value 3",
              "selected": false,
            },
          ],
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  showSelectAll={true}
  values={
    Array [
      Object {
        "label": "Value 1",
        "selected": true,
      },
      Object {
        "label": "Value 2",
      },
      Object {
        "label": "Value 3",
        "selected": true,
      },
    ]
  }
>
  <List
    classes={
      Object {
        "box": "HvList-box",
        "condensed": "HvList-condensed",
        "disabled": "HvList-disabled",
        "focus": "HvList-focus",
        "icon": "HvList-icon",
        "label": "HvList-label",
        "labelIconLeftPadding": "HvList-labelIconLeftPadding",
        "link": "HvList-link",
        "list": "HvList-list",
        "listItem": "HvList-listItem",
        "noIconLeftPadding": "HvList-noIconLeftPadding",
        "root": "HvList-root",
        "selectAll": "HvList-selectAll",
        "selected": "HvList-selected",
        "selector": "HvList-selector",
        "selectorContainer": "HvList-selectorContainer",
        "textDisabled": "HvList-textDisabled",
        "truncate": "HvList-truncate",
      }
    }
    condensed={false}
    hasTooltips={false}
    labels={
      Object {
        "selectAll": "All",
        "selectionConjunction": "of",
      }
    }
    multiSelect={true}
    onChange={
      [MockFunction] {
        "calls": Array [
          Array [
            Array [
              Object {
                "label": "Value 1",
                "selected": true,
              },
              Object {
                "label": "Value 2",
                "selected": false,
              },
              Object {
                "label": "Value 3",
                "selected": false,
              },
            ],
          ],
          Array [
            Array [
              Object {
                "label": "Value 1",
                "selected": false,
              },
              Object {
                "label": "Value 2",
                "selected": true,
              },
              Object {
                "label": "Value 3",
                "selected": false,
              },
            ],
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    onClick={[Function]}
    selectDefault={false}
    selectable={true}
    showSelectAll={true}
    singleSelectionToggle={true}
    useSelector={false}
    values={
      Array [
        Object {
          "label": "Value 1",
          "selected": true,
        },
        Object {
          "label": "Value 2",
        },
        Object {
          "label": "Value 3",
          "selected": true,
        },
      ]
    }
  >
    <div
      className="HvList-root"
    >
      <ul
        aria-multiselectable={true}
        className="HvList-list"
        role="listbox"
      >
        <WithStyles(Focus)
          classes={
            Object {
              "focus": "HvList-focus",
            }
          }
          configuration={
            Object {
              "tabIndex": 0,
            }
          }
          isDropdown={true}
          key="0"
          rootRef={
            Object {
              "current": <div
                class="HvList-root"
              >
                <ul
                  aria-multiselectable="true"
                  class="HvList-list"
                  role="listbox"
                >
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="0"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                    >
                      Value 1
                    </p>
                  </li>
                  <li
                    aria-selected="false"
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 2
                    </p>
                  </li>
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                    >
                      Value 3
                    </p>
                  </li>
                </ul>
              </div>,
            }
          }
          selected={true}
          strategy="listbox"
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focus": "HvFocus-focus HvList-focus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            configuration={
              Object {
                "tabIndex": 0,
              }
            }
            isDropdown={true}
            rootRef={
              Object {
                "current": <div
                  class="HvList-root"
                >
                  <ul
                    aria-multiselectable="true"
                    class="HvList-list"
                    role="listbox"
                  >
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="0"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 1
                      </p>
                    </li>
                    <li
                      aria-selected="false"
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 2
                      </p>
                    </li>
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 3
                      </p>
                    </li>
                  </ul>
                </div>,
              }
            }
            selected={true}
            strategy="listbox"
          >
            <ConditionalWrapper
              condition={false}
              wrapper={[Function]}
            >
              <li
                aria-selected={true}
                className="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                role="option"
                selected={true}
              >
                <ComponentFunction>
                  <WithStyles(ForwardRef)
                    className="HvList-label HvList-truncate HvList-selected"
                    variant="selectedText"
                  >
                    <ForwardRef
                      className="HvList-label HvList-truncate HvList-selected"
                      classes={
                        Object {
                          "3xlTitle": "HvTypography-3xlTitle",
                          "4xlTitle": "HvTypography-4xlTitle",
                          "5xlTitle": "HvTypography-5xlTitle",
                          "disabledButtonText": "HvTypography-disabledButtonText",
                          "highlightText": "HvTypography-highlightText",
                          "infoText": "HvTypography-infoText",
                          "inlineLink": "HvTypography-inlineLink",
                          "lTitle": "HvTypography-lTitle",
                          "labelText": "HvTypography-labelText",
                          "mTitle": "HvTypography-mTitle",
                          "normalText": "HvTypography-normalText",
                          "placeholderText": "HvTypography-placeholderText",
                          "root": "HvTypography-root",
                          "sLink": "HvTypography-sLink",
                          "sText": "HvTypography-sText",
                          "sTitle": "HvTypography-sTitle",
                          "selectedNavText": "HvTypography-selectedNavText",
                          "selectedText": "HvTypography-selectedText",
                          "vizText": "HvTypography-vizText",
                          "xlTitle": "HvTypography-xlTitle",
                          "xsTitle": "HvTypography-xsTitle",
                          "xxlTitle": "HvTypography-xxlTitle",
                          "xxsTitle": "HvTypography-xxsTitle",
                        }
                      }
                      variant="selectedText"
                    >
                      <p
                        className="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 1
                      </p>
                    </ForwardRef>
                  </WithStyles(ForwardRef)>
                </ComponentFunction>
              </li>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
        <WithStyles(Focus)
          classes={
            Object {
              "focus": "HvList-focus",
            }
          }
          configuration={
            Object {
              "tabIndex": -1,
            }
          }
          isDropdown={true}
          key="1"
          rootRef={
            Object {
              "current": <div
                class="HvList-root"
              >
                <ul
                  aria-multiselectable="true"
                  class="HvList-list"
                  role="listbox"
                >
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="0"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                    >
                      Value 1
                    </p>
                  </li>
                  <li
                    aria-selected="false"
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 2
                    </p>
                  </li>
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                    >
                      Value 3
                    </p>
                  </li>
                </ul>
              </div>,
            }
          }
          selected={false}
          strategy="listbox"
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focus": "HvFocus-focus HvList-focus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            configuration={
              Object {
                "tabIndex": -1,
              }
            }
            isDropdown={true}
            rootRef={
              Object {
                "current": <div
                  class="HvList-root"
                >
                  <ul
                    aria-multiselectable="true"
                    class="HvList-list"
                    role="listbox"
                  >
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="0"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 1
                      </p>
                    </li>
                    <li
                      aria-selected="false"
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 2
                      </p>
                    </li>
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 3
                      </p>
                    </li>
                  </ul>
                </div>,
              }
            }
            selected={false}
            strategy="listbox"
          >
            <ConditionalWrapper
              condition={false}
              wrapper={[Function]}
            >
              <li
                aria-selected={false}
                className="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                role="option"
                selected={false}
              >
                <ComponentFunction>
                  <WithStyles(ForwardRef)
                    className="HvList-label HvList-truncate"
                    variant="normalText"
                  >
                    <ForwardRef
                      className="HvList-label HvList-truncate"
                      classes={
                        Object {
                          "3xlTitle": "HvTypography-3xlTitle",
                          "4xlTitle": "HvTypography-4xlTitle",
                          "5xlTitle": "HvTypography-5xlTitle",
                          "disabledButtonText": "HvTypography-disabledButtonText",
                          "highlightText": "HvTypography-highlightText",
                          "infoText": "HvTypography-infoText",
                          "inlineLink": "HvTypography-inlineLink",
                          "lTitle": "HvTypography-lTitle",
                          "labelText": "HvTypography-labelText",
                          "mTitle": "HvTypography-mTitle",
                          "normalText": "HvTypography-normalText",
                          "placeholderText": "HvTypography-placeholderText",
                          "root": "HvTypography-root",
                          "sLink": "HvTypography-sLink",
                          "sText": "HvTypography-sText",
                          "sTitle": "HvTypography-sTitle",
                          "selectedNavText": "HvTypography-selectedNavText",
                          "selectedText": "HvTypography-selectedText",
                          "vizText": "HvTypography-vizText",
                          "xlTitle": "HvTypography-xlTitle",
                          "xsTitle": "HvTypography-xsTitle",
                          "xxlTitle": "HvTypography-xxlTitle",
                          "xxsTitle": "HvTypography-xxsTitle",
                        }
                      }
                      variant="normalText"
                    >
                      <p
                        className="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 2
                      </p>
                    </ForwardRef>
                  </WithStyles(ForwardRef)>
                </ComponentFunction>
              </li>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
        <WithStyles(Focus)
          classes={
            Object {
              "focus": "HvList-focus",
            }
          }
          configuration={
            Object {
              "tabIndex": -1,
            }
          }
          isDropdown={true}
          key="2"
          rootRef={
            Object {
              "current": <div
                class="HvList-root"
              >
                <ul
                  aria-multiselectable="true"
                  class="HvList-list"
                  role="listbox"
                >
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="0"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                    >
                      Value 1
                    </p>
                  </li>
                  <li
                    aria-selected="false"
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 2
                    </p>
                  </li>
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                    >
                      Value 3
                    </p>
                  </li>
                </ul>
              </div>,
            }
          }
          selected={true}
          strategy="listbox"
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focus": "HvFocus-focus HvList-focus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            configuration={
              Object {
                "tabIndex": -1,
              }
            }
            isDropdown={true}
            rootRef={
              Object {
                "current": <div
                  class="HvList-root"
                >
                  <ul
                    aria-multiselectable="true"
                    class="HvList-list"
                    role="listbox"
                  >
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="0"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 1
                      </p>
                    </li>
                    <li
                      aria-selected="false"
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 2
                      </p>
                    </li>
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 3
                      </p>
                    </li>
                  </ul>
                </div>,
              }
            }
            selected={true}
            strategy="listbox"
          >
            <ConditionalWrapper
              condition={false}
              wrapper={[Function]}
            >
              <li
                aria-selected={true}
                className="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                role="option"
                selected={true}
              >
                <ComponentFunction>
                  <WithStyles(ForwardRef)
                    className="HvList-label HvList-truncate HvList-selected"
                    variant="selectedText"
                  >
                    <ForwardRef
                      className="HvList-label HvList-truncate HvList-selected"
                      classes={
                        Object {
                          "3xlTitle": "HvTypography-3xlTitle",
                          "4xlTitle": "HvTypography-4xlTitle",
                          "5xlTitle": "HvTypography-5xlTitle",
                          "disabledButtonText": "HvTypography-disabledButtonText",
                          "highlightText": "HvTypography-highlightText",
                          "infoText": "HvTypography-infoText",
                          "inlineLink": "HvTypography-inlineLink",
                          "lTitle": "HvTypography-lTitle",
                          "labelText": "HvTypography-labelText",
                          "mTitle": "HvTypography-mTitle",
                          "normalText": "HvTypography-normalText",
                          "placeholderText": "HvTypography-placeholderText",
                          "root": "HvTypography-root",
                          "sLink": "HvTypography-sLink",
                          "sText": "HvTypography-sText",
                          "sTitle": "HvTypography-sTitle",
                          "selectedNavText": "HvTypography-selectedNavText",
                          "selectedText": "HvTypography-selectedText",
                          "vizText": "HvTypography-vizText",
                          "xlTitle": "HvTypography-xlTitle",
                          "xsTitle": "HvTypography-xsTitle",
                          "xxlTitle": "HvTypography-xxlTitle",
                          "xxsTitle": "HvTypography-xxsTitle",
                        }
                      }
                      variant="selectedText"
                    >
                      <p
                        className="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 3
                      </p>
                    </ForwardRef>
                  </WithStyles(ForwardRef)>
                </ComponentFunction>
              </li>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
      </ul>
    </div>
  </List>
</WithStyles(List)>
`;

exports[`<List /> Multi selection with selectors should render correctly 1`] = `
<WithStyles(List)
  multiSelect={true}
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          Array [
            Object {
              "label": "Value 1",
              "selected": true,
            },
            Object {
              "label": "Value 2",
              "selected": false,
            },
            Object {
              "label": "Value 3",
              "selected": false,
            },
          ],
        ],
        Array [
          Array [
            Object {
              "label": "Value 1",
              "selected": false,
            },
            Object {
              "label": "Value 2",
              "selected": true,
            },
            Object {
              "label": "Value 3",
              "selected": false,
            },
          ],
        ],
        Array [
          Array [
            Object {
              "label": "Value 1",
              "selected": true,
            },
            Object {
              "label": "Value 2",
              "selected": true,
            },
            Object {
              "label": "Value 3",
              "selected": true,
            },
          ],
        ],
        Array [
          Array [
            Object {
              "label": "Value 1",
              "selected": false,
            },
            Object {
              "label": "Value 2",
              "selected": false,
            },
            Object {
              "label": "Value 3",
              "selected": true,
            },
          ],
        ],
        Array [
          Array [
            Object {
              "label": "Value 1",
              "selected": false,
            },
            Object {
              "label": "Value 2",
              "selected": false,
            },
            Object {
              "label": "Value 3",
              "selected": false,
            },
          ],
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  showSelectAll={true}
  values={
    Array [
      Object {
        "label": "Value 1",
        "selected": true,
      },
      Object {
        "label": "Value 2",
      },
      Object {
        "label": "Value 3",
        "selected": true,
      },
    ]
  }
>
  <List
    classes={
      Object {
        "box": "HvList-box",
        "condensed": "HvList-condensed",
        "disabled": "HvList-disabled",
        "focus": "HvList-focus",
        "icon": "HvList-icon",
        "label": "HvList-label",
        "labelIconLeftPadding": "HvList-labelIconLeftPadding",
        "link": "HvList-link",
        "list": "HvList-list",
        "listItem": "HvList-listItem",
        "noIconLeftPadding": "HvList-noIconLeftPadding",
        "root": "HvList-root",
        "selectAll": "HvList-selectAll",
        "selected": "HvList-selected",
        "selector": "HvList-selector",
        "selectorContainer": "HvList-selectorContainer",
        "textDisabled": "HvList-textDisabled",
        "truncate": "HvList-truncate",
      }
    }
    condensed={false}
    hasTooltips={false}
    labels={
      Object {
        "selectAll": "All",
        "selectionConjunction": "of",
      }
    }
    multiSelect={true}
    onChange={
      [MockFunction] {
        "calls": Array [
          Array [
            Array [
              Object {
                "label": "Value 1",
                "selected": true,
              },
              Object {
                "label": "Value 2",
                "selected": false,
              },
              Object {
                "label": "Value 3",
                "selected": false,
              },
            ],
          ],
          Array [
            Array [
              Object {
                "label": "Value 1",
                "selected": false,
              },
              Object {
                "label": "Value 2",
                "selected": true,
              },
              Object {
                "label": "Value 3",
                "selected": false,
              },
            ],
          ],
          Array [
            Array [
              Object {
                "label": "Value 1",
                "selected": true,
              },
              Object {
                "label": "Value 2",
                "selected": true,
              },
              Object {
                "label": "Value 3",
                "selected": true,
              },
            ],
          ],
          Array [
            Array [
              Object {
                "label": "Value 1",
                "selected": false,
              },
              Object {
                "label": "Value 2",
                "selected": false,
              },
              Object {
                "label": "Value 3",
                "selected": true,
              },
            ],
          ],
          Array [
            Array [
              Object {
                "label": "Value 1",
                "selected": false,
              },
              Object {
                "label": "Value 2",
                "selected": false,
              },
              Object {
                "label": "Value 3",
                "selected": false,
              },
            ],
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    onClick={[Function]}
    selectDefault={false}
    selectable={true}
    showSelectAll={true}
    singleSelectionToggle={true}
    useSelector={false}
    values={
      Array [
        Object {
          "label": "Value 1",
          "selected": true,
        },
        Object {
          "label": "Value 2",
        },
        Object {
          "label": "Value 3",
          "selected": true,
        },
      ]
    }
  >
    <div
      className="HvList-root"
    >
      <ul
        aria-multiselectable={true}
        className="HvList-list"
        role="listbox"
      >
        <WithStyles(Focus)
          classes={
            Object {
              "focus": "HvList-focus",
            }
          }
          configuration={
            Object {
              "tabIndex": 0,
            }
          }
          isDropdown={true}
          key="0"
          rootRef={
            Object {
              "current": <div
                class="HvList-root"
              >
                <ul
                  aria-multiselectable="true"
                  class="HvList-list"
                  role="listbox"
                >
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="0"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                    >
                      Value 1
                    </p>
                  </li>
                  <li
                    aria-selected="false"
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 2
                    </p>
                  </li>
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                    >
                      Value 3
                    </p>
                  </li>
                </ul>
              </div>,
            }
          }
          selected={true}
          strategy="listbox"
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focus": "HvFocus-focus HvList-focus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            configuration={
              Object {
                "tabIndex": 0,
              }
            }
            isDropdown={true}
            rootRef={
              Object {
                "current": <div
                  class="HvList-root"
                >
                  <ul
                    aria-multiselectable="true"
                    class="HvList-list"
                    role="listbox"
                  >
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="0"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 1
                      </p>
                    </li>
                    <li
                      aria-selected="false"
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 2
                      </p>
                    </li>
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 3
                      </p>
                    </li>
                  </ul>
                </div>,
              }
            }
            selected={true}
            strategy="listbox"
          >
            <ConditionalWrapper
              condition={false}
              wrapper={[Function]}
            >
              <li
                aria-selected={true}
                className="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                role="option"
                selected={true}
              >
                <ComponentFunction>
                  <WithStyles(ForwardRef)
                    className="HvList-label HvList-truncate HvList-selected"
                    variant="selectedText"
                  >
                    <ForwardRef
                      className="HvList-label HvList-truncate HvList-selected"
                      classes={
                        Object {
                          "3xlTitle": "HvTypography-3xlTitle",
                          "4xlTitle": "HvTypography-4xlTitle",
                          "5xlTitle": "HvTypography-5xlTitle",
                          "disabledButtonText": "HvTypography-disabledButtonText",
                          "highlightText": "HvTypography-highlightText",
                          "infoText": "HvTypography-infoText",
                          "inlineLink": "HvTypography-inlineLink",
                          "lTitle": "HvTypography-lTitle",
                          "labelText": "HvTypography-labelText",
                          "mTitle": "HvTypography-mTitle",
                          "normalText": "HvTypography-normalText",
                          "placeholderText": "HvTypography-placeholderText",
                          "root": "HvTypography-root",
                          "sLink": "HvTypography-sLink",
                          "sText": "HvTypography-sText",
                          "sTitle": "HvTypography-sTitle",
                          "selectedNavText": "HvTypography-selectedNavText",
                          "selectedText": "HvTypography-selectedText",
                          "vizText": "HvTypography-vizText",
                          "xlTitle": "HvTypography-xlTitle",
                          "xsTitle": "HvTypography-xsTitle",
                          "xxlTitle": "HvTypography-xxlTitle",
                          "xxsTitle": "HvTypography-xxsTitle",
                        }
                      }
                      variant="selectedText"
                    >
                      <p
                        className="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 1
                      </p>
                    </ForwardRef>
                  </WithStyles(ForwardRef)>
                </ComponentFunction>
              </li>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
        <WithStyles(Focus)
          classes={
            Object {
              "focus": "HvList-focus",
            }
          }
          configuration={
            Object {
              "tabIndex": -1,
            }
          }
          isDropdown={true}
          key="1"
          rootRef={
            Object {
              "current": <div
                class="HvList-root"
              >
                <ul
                  aria-multiselectable="true"
                  class="HvList-list"
                  role="listbox"
                >
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="0"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                    >
                      Value 1
                    </p>
                  </li>
                  <li
                    aria-selected="false"
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 2
                    </p>
                  </li>
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                    >
                      Value 3
                    </p>
                  </li>
                </ul>
              </div>,
            }
          }
          selected={false}
          strategy="listbox"
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focus": "HvFocus-focus HvList-focus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            configuration={
              Object {
                "tabIndex": -1,
              }
            }
            isDropdown={true}
            rootRef={
              Object {
                "current": <div
                  class="HvList-root"
                >
                  <ul
                    aria-multiselectable="true"
                    class="HvList-list"
                    role="listbox"
                  >
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="0"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 1
                      </p>
                    </li>
                    <li
                      aria-selected="false"
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 2
                      </p>
                    </li>
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 3
                      </p>
                    </li>
                  </ul>
                </div>,
              }
            }
            selected={false}
            strategy="listbox"
          >
            <ConditionalWrapper
              condition={false}
              wrapper={[Function]}
            >
              <li
                aria-selected={false}
                className="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                role="option"
                selected={false}
              >
                <ComponentFunction>
                  <WithStyles(ForwardRef)
                    className="HvList-label HvList-truncate"
                    variant="normalText"
                  >
                    <ForwardRef
                      className="HvList-label HvList-truncate"
                      classes={
                        Object {
                          "3xlTitle": "HvTypography-3xlTitle",
                          "4xlTitle": "HvTypography-4xlTitle",
                          "5xlTitle": "HvTypography-5xlTitle",
                          "disabledButtonText": "HvTypography-disabledButtonText",
                          "highlightText": "HvTypography-highlightText",
                          "infoText": "HvTypography-infoText",
                          "inlineLink": "HvTypography-inlineLink",
                          "lTitle": "HvTypography-lTitle",
                          "labelText": "HvTypography-labelText",
                          "mTitle": "HvTypography-mTitle",
                          "normalText": "HvTypography-normalText",
                          "placeholderText": "HvTypography-placeholderText",
                          "root": "HvTypography-root",
                          "sLink": "HvTypography-sLink",
                          "sText": "HvTypography-sText",
                          "sTitle": "HvTypography-sTitle",
                          "selectedNavText": "HvTypography-selectedNavText",
                          "selectedText": "HvTypography-selectedText",
                          "vizText": "HvTypography-vizText",
                          "xlTitle": "HvTypography-xlTitle",
                          "xsTitle": "HvTypography-xsTitle",
                          "xxlTitle": "HvTypography-xxlTitle",
                          "xxsTitle": "HvTypography-xxsTitle",
                        }
                      }
                      variant="normalText"
                    >
                      <p
                        className="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 2
                      </p>
                    </ForwardRef>
                  </WithStyles(ForwardRef)>
                </ComponentFunction>
              </li>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
        <WithStyles(Focus)
          classes={
            Object {
              "focus": "HvList-focus",
            }
          }
          configuration={
            Object {
              "tabIndex": -1,
            }
          }
          isDropdown={true}
          key="2"
          rootRef={
            Object {
              "current": <div
                class="HvList-root"
              >
                <ul
                  aria-multiselectable="true"
                  class="HvList-list"
                  role="listbox"
                >
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="0"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                    >
                      Value 1
                    </p>
                  </li>
                  <li
                    aria-selected="false"
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 2
                    </p>
                  </li>
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                    >
                      Value 3
                    </p>
                  </li>
                </ul>
              </div>,
            }
          }
          selected={true}
          strategy="listbox"
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focus": "HvFocus-focus HvList-focus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            configuration={
              Object {
                "tabIndex": -1,
              }
            }
            isDropdown={true}
            rootRef={
              Object {
                "current": <div
                  class="HvList-root"
                >
                  <ul
                    aria-multiselectable="true"
                    class="HvList-list"
                    role="listbox"
                  >
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="0"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 1
                      </p>
                    </li>
                    <li
                      aria-selected="false"
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 2
                      </p>
                    </li>
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 3
                      </p>
                    </li>
                  </ul>
                </div>,
              }
            }
            selected={true}
            strategy="listbox"
          >
            <ConditionalWrapper
              condition={false}
              wrapper={[Function]}
            >
              <li
                aria-selected={true}
                className="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                role="option"
                selected={true}
              >
                <ComponentFunction>
                  <WithStyles(ForwardRef)
                    className="HvList-label HvList-truncate HvList-selected"
                    variant="selectedText"
                  >
                    <ForwardRef
                      className="HvList-label HvList-truncate HvList-selected"
                      classes={
                        Object {
                          "3xlTitle": "HvTypography-3xlTitle",
                          "4xlTitle": "HvTypography-4xlTitle",
                          "5xlTitle": "HvTypography-5xlTitle",
                          "disabledButtonText": "HvTypography-disabledButtonText",
                          "highlightText": "HvTypography-highlightText",
                          "infoText": "HvTypography-infoText",
                          "inlineLink": "HvTypography-inlineLink",
                          "lTitle": "HvTypography-lTitle",
                          "labelText": "HvTypography-labelText",
                          "mTitle": "HvTypography-mTitle",
                          "normalText": "HvTypography-normalText",
                          "placeholderText": "HvTypography-placeholderText",
                          "root": "HvTypography-root",
                          "sLink": "HvTypography-sLink",
                          "sText": "HvTypography-sText",
                          "sTitle": "HvTypography-sTitle",
                          "selectedNavText": "HvTypography-selectedNavText",
                          "selectedText": "HvTypography-selectedText",
                          "vizText": "HvTypography-vizText",
                          "xlTitle": "HvTypography-xlTitle",
                          "xsTitle": "HvTypography-xsTitle",
                          "xxlTitle": "HvTypography-xxlTitle",
                          "xxsTitle": "HvTypography-xxsTitle",
                        }
                      }
                      variant="selectedText"
                    >
                      <p
                        className="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 3
                      </p>
                    </ForwardRef>
                  </WithStyles(ForwardRef)>
                </ComponentFunction>
              </li>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
      </ul>
    </div>
  </List>
</WithStyles(List)>
`;

exports[`<List /> Single selection should render correctly 1`] = `
<WithStyles(List)
  onChange={[MockFunction]}
  onClick={[MockFunction]}
  selectDefault={true}
  singleSelectionToggle={false}
  values={
    Array [
      Object {
        "label": "Value 1",
      },
      Object {
        "label": "Value 2",
      },
      Object {
        "label": "Value 3",
      },
    ]
  }
>
  <List
    classes={
      Object {
        "box": "HvList-box",
        "condensed": "HvList-condensed",
        "disabled": "HvList-disabled",
        "focus": "HvList-focus",
        "icon": "HvList-icon",
        "label": "HvList-label",
        "labelIconLeftPadding": "HvList-labelIconLeftPadding",
        "link": "HvList-link",
        "list": "HvList-list",
        "listItem": "HvList-listItem",
        "noIconLeftPadding": "HvList-noIconLeftPadding",
        "root": "HvList-root",
        "selectAll": "HvList-selectAll",
        "selected": "HvList-selected",
        "selector": "HvList-selector",
        "selectorContainer": "HvList-selectorContainer",
        "textDisabled": "HvList-textDisabled",
        "truncate": "HvList-truncate",
      }
    }
    condensed={false}
    hasTooltips={false}
    labels={
      Object {
        "selectAll": "All",
        "selectionConjunction": "of",
      }
    }
    multiSelect={false}
    onChange={[MockFunction]}
    onClick={[MockFunction]}
    selectDefault={true}
    selectable={true}
    showSelectAll={false}
    singleSelectionToggle={false}
    useSelector={false}
    values={
      Array [
        Object {
          "label": "Value 1",
        },
        Object {
          "label": "Value 2",
        },
        Object {
          "label": "Value 3",
        },
      ]
    }
  >
    <div
      className="HvList-root"
    >
      <ul
        className="HvList-list"
        role="listbox"
      >
        <WithStyles(Focus)
          classes={
            Object {
              "focus": "HvList-focus",
            }
          }
          configuration={
            Object {
              "tabIndex": 0,
            }
          }
          isDropdown={true}
          key="0"
          rootRef={
            Object {
              "current": <div
                class="HvList-root"
              >
                <ul
                  class="HvList-list"
                  role="listbox"
                >
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="0"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                    >
                      Value 1
                    </p>
                  </li>
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 2
                    </p>
                  </li>
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 3
                    </p>
                  </li>
                </ul>
              </div>,
            }
          }
          selected={true}
          strategy="listbox"
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focus": "HvFocus-focus HvList-focus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            configuration={
              Object {
                "tabIndex": 0,
              }
            }
            isDropdown={true}
            rootRef={
              Object {
                "current": <div
                  class="HvList-root"
                >
                  <ul
                    class="HvList-list"
                    role="listbox"
                  >
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="0"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 1
                      </p>
                    </li>
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 2
                      </p>
                    </li>
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 3
                      </p>
                    </li>
                  </ul>
                </div>,
              }
            }
            selected={true}
            strategy="listbox"
          >
            <ConditionalWrapper
              condition={false}
              wrapper={[Function]}
            >
              <li
                aria-selected={true}
                className="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                role="option"
                selected={true}
              >
                <ComponentFunction>
                  <WithStyles(ForwardRef)
                    className="HvList-label HvList-truncate HvList-selected"
                    variant="selectedText"
                  >
                    <ForwardRef
                      className="HvList-label HvList-truncate HvList-selected"
                      classes={
                        Object {
                          "3xlTitle": "HvTypography-3xlTitle",
                          "4xlTitle": "HvTypography-4xlTitle",
                          "5xlTitle": "HvTypography-5xlTitle",
                          "disabledButtonText": "HvTypography-disabledButtonText",
                          "highlightText": "HvTypography-highlightText",
                          "infoText": "HvTypography-infoText",
                          "inlineLink": "HvTypography-inlineLink",
                          "lTitle": "HvTypography-lTitle",
                          "labelText": "HvTypography-labelText",
                          "mTitle": "HvTypography-mTitle",
                          "normalText": "HvTypography-normalText",
                          "placeholderText": "HvTypography-placeholderText",
                          "root": "HvTypography-root",
                          "sLink": "HvTypography-sLink",
                          "sText": "HvTypography-sText",
                          "sTitle": "HvTypography-sTitle",
                          "selectedNavText": "HvTypography-selectedNavText",
                          "selectedText": "HvTypography-selectedText",
                          "vizText": "HvTypography-vizText",
                          "xlTitle": "HvTypography-xlTitle",
                          "xsTitle": "HvTypography-xsTitle",
                          "xxlTitle": "HvTypography-xxlTitle",
                          "xxsTitle": "HvTypography-xxsTitle",
                        }
                      }
                      variant="selectedText"
                    >
                      <p
                        className="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 1
                      </p>
                    </ForwardRef>
                  </WithStyles(ForwardRef)>
                </ComponentFunction>
              </li>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
        <WithStyles(Focus)
          classes={
            Object {
              "focus": "HvList-focus",
            }
          }
          configuration={
            Object {
              "tabIndex": -1,
            }
          }
          isDropdown={true}
          key="1"
          rootRef={
            Object {
              "current": <div
                class="HvList-root"
              >
                <ul
                  class="HvList-list"
                  role="listbox"
                >
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="0"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                    >
                      Value 1
                    </p>
                  </li>
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 2
                    </p>
                  </li>
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 3
                    </p>
                  </li>
                </ul>
              </div>,
            }
          }
          selected={false}
          strategy="listbox"
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focus": "HvFocus-focus HvList-focus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            configuration={
              Object {
                "tabIndex": -1,
              }
            }
            isDropdown={true}
            rootRef={
              Object {
                "current": <div
                  class="HvList-root"
                >
                  <ul
                    class="HvList-list"
                    role="listbox"
                  >
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="0"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 1
                      </p>
                    </li>
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 2
                      </p>
                    </li>
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 3
                      </p>
                    </li>
                  </ul>
                </div>,
              }
            }
            selected={false}
            strategy="listbox"
          >
            <ConditionalWrapper
              condition={false}
              wrapper={[Function]}
            >
              <li
                className="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                role="option"
                selected={false}
              >
                <ComponentFunction>
                  <WithStyles(ForwardRef)
                    className="HvList-label HvList-truncate"
                    variant="normalText"
                  >
                    <ForwardRef
                      className="HvList-label HvList-truncate"
                      classes={
                        Object {
                          "3xlTitle": "HvTypography-3xlTitle",
                          "4xlTitle": "HvTypography-4xlTitle",
                          "5xlTitle": "HvTypography-5xlTitle",
                          "disabledButtonText": "HvTypography-disabledButtonText",
                          "highlightText": "HvTypography-highlightText",
                          "infoText": "HvTypography-infoText",
                          "inlineLink": "HvTypography-inlineLink",
                          "lTitle": "HvTypography-lTitle",
                          "labelText": "HvTypography-labelText",
                          "mTitle": "HvTypography-mTitle",
                          "normalText": "HvTypography-normalText",
                          "placeholderText": "HvTypography-placeholderText",
                          "root": "HvTypography-root",
                          "sLink": "HvTypography-sLink",
                          "sText": "HvTypography-sText",
                          "sTitle": "HvTypography-sTitle",
                          "selectedNavText": "HvTypography-selectedNavText",
                          "selectedText": "HvTypography-selectedText",
                          "vizText": "HvTypography-vizText",
                          "xlTitle": "HvTypography-xlTitle",
                          "xsTitle": "HvTypography-xsTitle",
                          "xxlTitle": "HvTypography-xxlTitle",
                          "xxsTitle": "HvTypography-xxsTitle",
                        }
                      }
                      variant="normalText"
                    >
                      <p
                        className="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 2
                      </p>
                    </ForwardRef>
                  </WithStyles(ForwardRef)>
                </ComponentFunction>
              </li>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
        <WithStyles(Focus)
          classes={
            Object {
              "focus": "HvList-focus",
            }
          }
          configuration={
            Object {
              "tabIndex": -1,
            }
          }
          isDropdown={true}
          key="2"
          rootRef={
            Object {
              "current": <div
                class="HvList-root"
              >
                <ul
                  class="HvList-list"
                  role="listbox"
                >
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="0"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                    >
                      Value 1
                    </p>
                  </li>
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 2
                    </p>
                  </li>
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 3
                    </p>
                  </li>
                </ul>
              </div>,
            }
          }
          selected={false}
          strategy="listbox"
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focus": "HvFocus-focus HvList-focus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            configuration={
              Object {
                "tabIndex": -1,
              }
            }
            isDropdown={true}
            rootRef={
              Object {
                "current": <div
                  class="HvList-root"
                >
                  <ul
                    class="HvList-list"
                    role="listbox"
                  >
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="0"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 1
                      </p>
                    </li>
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 2
                      </p>
                    </li>
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 3
                      </p>
                    </li>
                  </ul>
                </div>,
              }
            }
            selected={false}
            strategy="listbox"
          >
            <ConditionalWrapper
              condition={false}
              wrapper={[Function]}
            >
              <li
                className="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                role="option"
                selected={false}
              >
                <ComponentFunction>
                  <WithStyles(ForwardRef)
                    className="HvList-label HvList-truncate"
                    variant="normalText"
                  >
                    <ForwardRef
                      className="HvList-label HvList-truncate"
                      classes={
                        Object {
                          "3xlTitle": "HvTypography-3xlTitle",
                          "4xlTitle": "HvTypography-4xlTitle",
                          "5xlTitle": "HvTypography-5xlTitle",
                          "disabledButtonText": "HvTypography-disabledButtonText",
                          "highlightText": "HvTypography-highlightText",
                          "infoText": "HvTypography-infoText",
                          "inlineLink": "HvTypography-inlineLink",
                          "lTitle": "HvTypography-lTitle",
                          "labelText": "HvTypography-labelText",
                          "mTitle": "HvTypography-mTitle",
                          "normalText": "HvTypography-normalText",
                          "placeholderText": "HvTypography-placeholderText",
                          "root": "HvTypography-root",
                          "sLink": "HvTypography-sLink",
                          "sText": "HvTypography-sText",
                          "sTitle": "HvTypography-sTitle",
                          "selectedNavText": "HvTypography-selectedNavText",
                          "selectedText": "HvTypography-selectedText",
                          "vizText": "HvTypography-vizText",
                          "xlTitle": "HvTypography-xlTitle",
                          "xsTitle": "HvTypography-xsTitle",
                          "xxlTitle": "HvTypography-xxlTitle",
                          "xxsTitle": "HvTypography-xxsTitle",
                        }
                      }
                      variant="normalText"
                    >
                      <p
                        className="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 3
                      </p>
                    </ForwardRef>
                  </WithStyles(ForwardRef)>
                </ComponentFunction>
              </li>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
      </ul>
    </div>
  </List>
</WithStyles(List)>
`;

exports[`<List /> Single selection with icons should render correctly 1`] = `
<WithStyles(List)
  values={
    Array [
      Object {
        "id": "id-1",
        "label": "Value 1",
      },
      Object {
        "id": "id-2",
        "label": "Value 2",
      },
      Object {
        "id": "id-3",
        "label": "Value 3",
      },
    ]
  }
>
  <List
    classes={
      Object {
        "box": "HvList-box",
        "condensed": "HvList-condensed",
        "disabled": "HvList-disabled",
        "focus": "HvList-focus",
        "icon": "HvList-icon",
        "label": "HvList-label",
        "labelIconLeftPadding": "HvList-labelIconLeftPadding",
        "link": "HvList-link",
        "list": "HvList-list",
        "listItem": "HvList-listItem",
        "noIconLeftPadding": "HvList-noIconLeftPadding",
        "root": "HvList-root",
        "selectAll": "HvList-selectAll",
        "selected": "HvList-selected",
        "selector": "HvList-selector",
        "selectorContainer": "HvList-selectorContainer",
        "textDisabled": "HvList-textDisabled",
        "truncate": "HvList-truncate",
      }
    }
    condensed={false}
    hasTooltips={false}
    labels={
      Object {
        "selectAll": "All",
        "selectionConjunction": "of",
      }
    }
    multiSelect={false}
    onChange={[Function]}
    onClick={[Function]}
    selectDefault={false}
    selectable={true}
    showSelectAll={false}
    singleSelectionToggle={true}
    useSelector={false}
    values={
      Array [
        Object {
          "id": "id-1",
          "label": "Value 1",
        },
        Object {
          "id": "id-2",
          "label": "Value 2",
        },
        Object {
          "id": "id-3",
          "label": "Value 3",
        },
      ]
    }
  >
    <div
      className="HvList-root"
    >
      <ul
        className="HvList-list"
        role="listbox"
      >
        <WithStyles(Focus)
          classes={
            Object {
              "focus": "HvList-focus",
            }
          }
          configuration={
            Object {
              "tabIndex": 0,
            }
          }
          isDropdown={true}
          key="0"
          rootRef={
            Object {
              "current": <div
                class="HvList-root"
              >
                <ul
                  class="HvList-list"
                  role="listbox"
                >
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="0"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                    >
                      Value 1
                    </p>
                  </li>
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 2
                    </p>
                  </li>
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 3
                    </p>
                  </li>
                </ul>
              </div>,
            }
          }
          selected={false}
          strategy="listbox"
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focus": "HvFocus-focus HvList-focus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            configuration={
              Object {
                "tabIndex": 0,
              }
            }
            isDropdown={true}
            rootRef={
              Object {
                "current": <div
                  class="HvList-root"
                >
                  <ul
                    class="HvList-list"
                    role="listbox"
                  >
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="0"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 1
                      </p>
                    </li>
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 2
                      </p>
                    </li>
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 3
                      </p>
                    </li>
                  </ul>
                </div>,
              }
            }
            selected={false}
            strategy="listbox"
          >
            <ConditionalWrapper
              condition={false}
              wrapper={[Function]}
            >
              <li
                className="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                role="option"
                selected={false}
              >
                <ComponentFunction>
                  <WithStyles(ForwardRef)
                    className="HvList-label HvList-truncate"
                    variant="normalText"
                  >
                    <ForwardRef
                      className="HvList-label HvList-truncate"
                      classes={
                        Object {
                          "3xlTitle": "HvTypography-3xlTitle",
                          "4xlTitle": "HvTypography-4xlTitle",
                          "5xlTitle": "HvTypography-5xlTitle",
                          "disabledButtonText": "HvTypography-disabledButtonText",
                          "highlightText": "HvTypography-highlightText",
                          "infoText": "HvTypography-infoText",
                          "inlineLink": "HvTypography-inlineLink",
                          "lTitle": "HvTypography-lTitle",
                          "labelText": "HvTypography-labelText",
                          "mTitle": "HvTypography-mTitle",
                          "normalText": "HvTypography-normalText",
                          "placeholderText": "HvTypography-placeholderText",
                          "root": "HvTypography-root",
                          "sLink": "HvTypography-sLink",
                          "sText": "HvTypography-sText",
                          "sTitle": "HvTypography-sTitle",
                          "selectedNavText": "HvTypography-selectedNavText",
                          "selectedText": "HvTypography-selectedText",
                          "vizText": "HvTypography-vizText",
                          "xlTitle": "HvTypography-xlTitle",
                          "xsTitle": "HvTypography-xsTitle",
                          "xxlTitle": "HvTypography-xxlTitle",
                          "xxsTitle": "HvTypography-xxsTitle",
                        }
                      }
                      variant="normalText"
                    >
                      <p
                        className="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 1
                      </p>
                    </ForwardRef>
                  </WithStyles(ForwardRef)>
                </ComponentFunction>
              </li>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
        <WithStyles(Focus)
          classes={
            Object {
              "focus": "HvList-focus",
            }
          }
          configuration={
            Object {
              "tabIndex": -1,
            }
          }
          isDropdown={true}
          key="1"
          rootRef={
            Object {
              "current": <div
                class="HvList-root"
              >
                <ul
                  class="HvList-list"
                  role="listbox"
                >
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="0"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                    >
                      Value 1
                    </p>
                  </li>
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 2
                    </p>
                  </li>
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 3
                    </p>
                  </li>
                </ul>
              </div>,
            }
          }
          selected={false}
          strategy="listbox"
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focus": "HvFocus-focus HvList-focus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            configuration={
              Object {
                "tabIndex": -1,
              }
            }
            isDropdown={true}
            rootRef={
              Object {
                "current": <div
                  class="HvList-root"
                >
                  <ul
                    class="HvList-list"
                    role="listbox"
                  >
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="0"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 1
                      </p>
                    </li>
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 2
                      </p>
                    </li>
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 3
                      </p>
                    </li>
                  </ul>
                </div>,
              }
            }
            selected={false}
            strategy="listbox"
          >
            <ConditionalWrapper
              condition={false}
              wrapper={[Function]}
            >
              <li
                className="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                role="option"
                selected={false}
              >
                <ComponentFunction>
                  <WithStyles(ForwardRef)
                    className="HvList-label HvList-truncate"
                    variant="normalText"
                  >
                    <ForwardRef
                      className="HvList-label HvList-truncate"
                      classes={
                        Object {
                          "3xlTitle": "HvTypography-3xlTitle",
                          "4xlTitle": "HvTypography-4xlTitle",
                          "5xlTitle": "HvTypography-5xlTitle",
                          "disabledButtonText": "HvTypography-disabledButtonText",
                          "highlightText": "HvTypography-highlightText",
                          "infoText": "HvTypography-infoText",
                          "inlineLink": "HvTypography-inlineLink",
                          "lTitle": "HvTypography-lTitle",
                          "labelText": "HvTypography-labelText",
                          "mTitle": "HvTypography-mTitle",
                          "normalText": "HvTypography-normalText",
                          "placeholderText": "HvTypography-placeholderText",
                          "root": "HvTypography-root",
                          "sLink": "HvTypography-sLink",
                          "sText": "HvTypography-sText",
                          "sTitle": "HvTypography-sTitle",
                          "selectedNavText": "HvTypography-selectedNavText",
                          "selectedText": "HvTypography-selectedText",
                          "vizText": "HvTypography-vizText",
                          "xlTitle": "HvTypography-xlTitle",
                          "xsTitle": "HvTypography-xsTitle",
                          "xxlTitle": "HvTypography-xxlTitle",
                          "xxsTitle": "HvTypography-xxsTitle",
                        }
                      }
                      variant="normalText"
                    >
                      <p
                        className="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 2
                      </p>
                    </ForwardRef>
                  </WithStyles(ForwardRef)>
                </ComponentFunction>
              </li>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
        <WithStyles(Focus)
          classes={
            Object {
              "focus": "HvList-focus",
            }
          }
          configuration={
            Object {
              "tabIndex": -1,
            }
          }
          isDropdown={true}
          key="2"
          rootRef={
            Object {
              "current": <div
                class="HvList-root"
              >
                <ul
                  class="HvList-list"
                  role="listbox"
                >
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="0"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                    >
                      Value 1
                    </p>
                  </li>
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 2
                    </p>
                  </li>
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 3
                    </p>
                  </li>
                </ul>
              </div>,
            }
          }
          selected={false}
          strategy="listbox"
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focus": "HvFocus-focus HvList-focus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            configuration={
              Object {
                "tabIndex": -1,
              }
            }
            isDropdown={true}
            rootRef={
              Object {
                "current": <div
                  class="HvList-root"
                >
                  <ul
                    class="HvList-list"
                    role="listbox"
                  >
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="0"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 1
                      </p>
                    </li>
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 2
                      </p>
                    </li>
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 3
                      </p>
                    </li>
                  </ul>
                </div>,
              }
            }
            selected={false}
            strategy="listbox"
          >
            <ConditionalWrapper
              condition={false}
              wrapper={[Function]}
            >
              <li
                className="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                role="option"
                selected={false}
              >
                <ComponentFunction>
                  <WithStyles(ForwardRef)
                    className="HvList-label HvList-truncate"
                    variant="normalText"
                  >
                    <ForwardRef
                      className="HvList-label HvList-truncate"
                      classes={
                        Object {
                          "3xlTitle": "HvTypography-3xlTitle",
                          "4xlTitle": "HvTypography-4xlTitle",
                          "5xlTitle": "HvTypography-5xlTitle",
                          "disabledButtonText": "HvTypography-disabledButtonText",
                          "highlightText": "HvTypography-highlightText",
                          "infoText": "HvTypography-infoText",
                          "inlineLink": "HvTypography-inlineLink",
                          "lTitle": "HvTypography-lTitle",
                          "labelText": "HvTypography-labelText",
                          "mTitle": "HvTypography-mTitle",
                          "normalText": "HvTypography-normalText",
                          "placeholderText": "HvTypography-placeholderText",
                          "root": "HvTypography-root",
                          "sLink": "HvTypography-sLink",
                          "sText": "HvTypography-sText",
                          "sTitle": "HvTypography-sTitle",
                          "selectedNavText": "HvTypography-selectedNavText",
                          "selectedText": "HvTypography-selectedText",
                          "vizText": "HvTypography-vizText",
                          "xlTitle": "HvTypography-xlTitle",
                          "xsTitle": "HvTypography-xsTitle",
                          "xxlTitle": "HvTypography-xxlTitle",
                          "xxsTitle": "HvTypography-xxsTitle",
                        }
                      }
                      variant="normalText"
                    >
                      <p
                        className="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 3
                      </p>
                    </ForwardRef>
                  </WithStyles(ForwardRef)>
                </ComponentFunction>
              </li>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
      </ul>
    </div>
  </List>
</WithStyles(List)>
`;

exports[`<List /> Single selection with selectors should render correctly 1`] = `
<WithStyles(List)
  values={
    Array [
      Object {
        "id": "id-1",
        "label": "Value 1",
      },
      Object {
        "id": "id-2",
        "label": "Value 2",
      },
      Object {
        "id": "id-3",
        "label": "Value 3",
      },
    ]
  }
>
  <List
    classes={
      Object {
        "box": "HvList-box",
        "condensed": "HvList-condensed",
        "disabled": "HvList-disabled",
        "focus": "HvList-focus",
        "icon": "HvList-icon",
        "label": "HvList-label",
        "labelIconLeftPadding": "HvList-labelIconLeftPadding",
        "link": "HvList-link",
        "list": "HvList-list",
        "listItem": "HvList-listItem",
        "noIconLeftPadding": "HvList-noIconLeftPadding",
        "root": "HvList-root",
        "selectAll": "HvList-selectAll",
        "selected": "HvList-selected",
        "selector": "HvList-selector",
        "selectorContainer": "HvList-selectorContainer",
        "textDisabled": "HvList-textDisabled",
        "truncate": "HvList-truncate",
      }
    }
    condensed={false}
    hasTooltips={false}
    labels={
      Object {
        "selectAll": "All",
        "selectionConjunction": "of",
      }
    }
    multiSelect={false}
    onChange={[Function]}
    onClick={[Function]}
    selectDefault={false}
    selectable={true}
    showSelectAll={false}
    singleSelectionToggle={true}
    useSelector={false}
    values={
      Array [
        Object {
          "id": "id-1",
          "label": "Value 1",
        },
        Object {
          "id": "id-2",
          "label": "Value 2",
        },
        Object {
          "id": "id-3",
          "label": "Value 3",
        },
      ]
    }
  >
    <div
      className="HvList-root"
    >
      <ul
        className="HvList-list"
        role="listbox"
      >
        <WithStyles(Focus)
          classes={
            Object {
              "focus": "HvList-focus",
            }
          }
          configuration={
            Object {
              "tabIndex": 0,
            }
          }
          isDropdown={true}
          key="0"
          rootRef={
            Object {
              "current": <div
                class="HvList-root"
              >
                <ul
                  class="HvList-list"
                  role="listbox"
                >
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="0"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                    >
                      Value 1
                    </p>
                  </li>
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 2
                    </p>
                  </li>
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 3
                    </p>
                  </li>
                </ul>
              </div>,
            }
          }
          selected={false}
          strategy="listbox"
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focus": "HvFocus-focus HvList-focus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            configuration={
              Object {
                "tabIndex": 0,
              }
            }
            isDropdown={true}
            rootRef={
              Object {
                "current": <div
                  class="HvList-root"
                >
                  <ul
                    class="HvList-list"
                    role="listbox"
                  >
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="0"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 1
                      </p>
                    </li>
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 2
                      </p>
                    </li>
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 3
                      </p>
                    </li>
                  </ul>
                </div>,
              }
            }
            selected={false}
            strategy="listbox"
          >
            <ConditionalWrapper
              condition={false}
              wrapper={[Function]}
            >
              <li
                className="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                role="option"
                selected={false}
              >
                <ComponentFunction>
                  <WithStyles(ForwardRef)
                    className="HvList-label HvList-truncate"
                    variant="normalText"
                  >
                    <ForwardRef
                      className="HvList-label HvList-truncate"
                      classes={
                        Object {
                          "3xlTitle": "HvTypography-3xlTitle",
                          "4xlTitle": "HvTypography-4xlTitle",
                          "5xlTitle": "HvTypography-5xlTitle",
                          "disabledButtonText": "HvTypography-disabledButtonText",
                          "highlightText": "HvTypography-highlightText",
                          "infoText": "HvTypography-infoText",
                          "inlineLink": "HvTypography-inlineLink",
                          "lTitle": "HvTypography-lTitle",
                          "labelText": "HvTypography-labelText",
                          "mTitle": "HvTypography-mTitle",
                          "normalText": "HvTypography-normalText",
                          "placeholderText": "HvTypography-placeholderText",
                          "root": "HvTypography-root",
                          "sLink": "HvTypography-sLink",
                          "sText": "HvTypography-sText",
                          "sTitle": "HvTypography-sTitle",
                          "selectedNavText": "HvTypography-selectedNavText",
                          "selectedText": "HvTypography-selectedText",
                          "vizText": "HvTypography-vizText",
                          "xlTitle": "HvTypography-xlTitle",
                          "xsTitle": "HvTypography-xsTitle",
                          "xxlTitle": "HvTypography-xxlTitle",
                          "xxsTitle": "HvTypography-xxsTitle",
                        }
                      }
                      variant="normalText"
                    >
                      <p
                        className="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 1
                      </p>
                    </ForwardRef>
                  </WithStyles(ForwardRef)>
                </ComponentFunction>
              </li>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
        <WithStyles(Focus)
          classes={
            Object {
              "focus": "HvList-focus",
            }
          }
          configuration={
            Object {
              "tabIndex": -1,
            }
          }
          isDropdown={true}
          key="1"
          rootRef={
            Object {
              "current": <div
                class="HvList-root"
              >
                <ul
                  class="HvList-list"
                  role="listbox"
                >
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="0"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                    >
                      Value 1
                    </p>
                  </li>
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 2
                    </p>
                  </li>
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 3
                    </p>
                  </li>
                </ul>
              </div>,
            }
          }
          selected={false}
          strategy="listbox"
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focus": "HvFocus-focus HvList-focus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            configuration={
              Object {
                "tabIndex": -1,
              }
            }
            isDropdown={true}
            rootRef={
              Object {
                "current": <div
                  class="HvList-root"
                >
                  <ul
                    class="HvList-list"
                    role="listbox"
                  >
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="0"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 1
                      </p>
                    </li>
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 2
                      </p>
                    </li>
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 3
                      </p>
                    </li>
                  </ul>
                </div>,
              }
            }
            selected={false}
            strategy="listbox"
          >
            <ConditionalWrapper
              condition={false}
              wrapper={[Function]}
            >
              <li
                className="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                role="option"
                selected={false}
              >
                <ComponentFunction>
                  <WithStyles(ForwardRef)
                    className="HvList-label HvList-truncate"
                    variant="normalText"
                  >
                    <ForwardRef
                      className="HvList-label HvList-truncate"
                      classes={
                        Object {
                          "3xlTitle": "HvTypography-3xlTitle",
                          "4xlTitle": "HvTypography-4xlTitle",
                          "5xlTitle": "HvTypography-5xlTitle",
                          "disabledButtonText": "HvTypography-disabledButtonText",
                          "highlightText": "HvTypography-highlightText",
                          "infoText": "HvTypography-infoText",
                          "inlineLink": "HvTypography-inlineLink",
                          "lTitle": "HvTypography-lTitle",
                          "labelText": "HvTypography-labelText",
                          "mTitle": "HvTypography-mTitle",
                          "normalText": "HvTypography-normalText",
                          "placeholderText": "HvTypography-placeholderText",
                          "root": "HvTypography-root",
                          "sLink": "HvTypography-sLink",
                          "sText": "HvTypography-sText",
                          "sTitle": "HvTypography-sTitle",
                          "selectedNavText": "HvTypography-selectedNavText",
                          "selectedText": "HvTypography-selectedText",
                          "vizText": "HvTypography-vizText",
                          "xlTitle": "HvTypography-xlTitle",
                          "xsTitle": "HvTypography-xsTitle",
                          "xxlTitle": "HvTypography-xxlTitle",
                          "xxsTitle": "HvTypography-xxsTitle",
                        }
                      }
                      variant="normalText"
                    >
                      <p
                        className="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 2
                      </p>
                    </ForwardRef>
                  </WithStyles(ForwardRef)>
                </ComponentFunction>
              </li>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
        <WithStyles(Focus)
          classes={
            Object {
              "focus": "HvList-focus",
            }
          }
          configuration={
            Object {
              "tabIndex": -1,
            }
          }
          isDropdown={true}
          key="2"
          rootRef={
            Object {
              "current": <div
                class="HvList-root"
              >
                <ul
                  class="HvList-list"
                  role="listbox"
                >
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="0"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                    >
                      Value 1
                    </p>
                  </li>
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 2
                    </p>
                  </li>
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 3
                    </p>
                  </li>
                </ul>
              </div>,
            }
          }
          selected={false}
          strategy="listbox"
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focus": "HvFocus-focus HvList-focus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            configuration={
              Object {
                "tabIndex": -1,
              }
            }
            isDropdown={true}
            rootRef={
              Object {
                "current": <div
                  class="HvList-root"
                >
                  <ul
                    class="HvList-list"
                    role="listbox"
                  >
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="0"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 1
                      </p>
                    </li>
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 2
                      </p>
                    </li>
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 3
                      </p>
                    </li>
                  </ul>
                </div>,
              }
            }
            selected={false}
            strategy="listbox"
          >
            <ConditionalWrapper
              condition={false}
              wrapper={[Function]}
            >
              <li
                className="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                role="option"
                selected={false}
              >
                <ComponentFunction>
                  <WithStyles(ForwardRef)
                    className="HvList-label HvList-truncate"
                    variant="normalText"
                  >
                    <ForwardRef
                      className="HvList-label HvList-truncate"
                      classes={
                        Object {
                          "3xlTitle": "HvTypography-3xlTitle",
                          "4xlTitle": "HvTypography-4xlTitle",
                          "5xlTitle": "HvTypography-5xlTitle",
                          "disabledButtonText": "HvTypography-disabledButtonText",
                          "highlightText": "HvTypography-highlightText",
                          "infoText": "HvTypography-infoText",
                          "inlineLink": "HvTypography-inlineLink",
                          "lTitle": "HvTypography-lTitle",
                          "labelText": "HvTypography-labelText",
                          "mTitle": "HvTypography-mTitle",
                          "normalText": "HvTypography-normalText",
                          "placeholderText": "HvTypography-placeholderText",
                          "root": "HvTypography-root",
                          "sLink": "HvTypography-sLink",
                          "sText": "HvTypography-sText",
                          "sTitle": "HvTypography-sTitle",
                          "selectedNavText": "HvTypography-selectedNavText",
                          "selectedText": "HvTypography-selectedText",
                          "vizText": "HvTypography-vizText",
                          "xlTitle": "HvTypography-xlTitle",
                          "xsTitle": "HvTypography-xsTitle",
                          "xxlTitle": "HvTypography-xxlTitle",
                          "xxsTitle": "HvTypography-xxsTitle",
                        }
                      }
                      variant="normalText"
                    >
                      <p
                        className="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 3
                      </p>
                    </ForwardRef>
                  </WithStyles(ForwardRef)>
                </ComponentFunction>
              </li>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
      </ul>
    </div>
  </List>
</WithStyles(List)>
`;
