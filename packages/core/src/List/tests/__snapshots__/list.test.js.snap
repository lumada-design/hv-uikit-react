// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<List /> Multi selection should render correctly 1`] = `
<WithStyles(List)
  multiSelect={true}
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          Array [
            Object {
              "label": "Value 1",
              "selected": true,
            },
            Object {
              "label": "Value 2",
              "selected": false,
            },
            Object {
              "label": "Value 3",
              "selected": false,
            },
          ],
        ],
        Array [
          Array [
            Object {
              "label": "Value 1",
              "selected": false,
            },
            Object {
              "label": "Value 2",
              "selected": true,
            },
            Object {
              "label": "Value 3",
              "selected": false,
            },
          ],
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  showSelectAll={true}
  values={
    Array [
      Object {
        "label": "Value 1",
        "selected": true,
      },
      Object {
        "label": "Value 2",
      },
      Object {
        "label": "Value 3",
        "selected": true,
      },
    ]
  }
>
  <List
    classes={
      Object {
        "box": "HvList-box",
        "condensed": "HvList-condensed",
        "disabled": "HvList-disabled",
        "focus": "HvList-focus",
        "icon": "HvList-icon",
        "label": "HvList-label",
        "labelIconLeftPadding": "HvList-labelIconLeftPadding",
        "link": "HvList-link",
        "list": "HvList-list",
        "listItem": "HvList-listItem",
        "noIconLeftPadding": "HvList-noIconLeftPadding",
        "root": "HvList-root",
        "selectAll": "HvList-selectAll",
        "selected": "HvList-selected",
        "selector": "HvList-selector",
        "selectorContainer": "HvList-selectorContainer",
        "textDisabled": "HvList-textDisabled",
        "truncate": "HvList-truncate",
      }
    }
    condensed={false}
    hasTooltips={false}
    labels={
      Object {
        "selectAll": "All",
        "selectionConjunction": "of",
      }
    }
    multiSelect={true}
    onChange={
      [MockFunction] {
        "calls": Array [
          Array [
            Array [
              Object {
                "label": "Value 1",
                "selected": true,
              },
              Object {
                "label": "Value 2",
                "selected": false,
              },
              Object {
                "label": "Value 3",
                "selected": false,
              },
            ],
          ],
          Array [
            Array [
              Object {
                "label": "Value 1",
                "selected": false,
              },
              Object {
                "label": "Value 2",
                "selected": true,
              },
              Object {
                "label": "Value 3",
                "selected": false,
              },
            ],
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    onClick={[Function]}
    selectDefault={false}
    selectable={true}
    showSelectAll={true}
    singleSelectionToggle={true}
    useSelector={false}
    values={
      Array [
        Object {
          "label": "Value 1",
          "selected": true,
        },
        Object {
          "label": "Value 2",
        },
        Object {
          "label": "Value 3",
          "selected": true,
        },
      ]
    }
  >
    <div
      className="HvList-root"
    >
      <ul
        aria-multiselectable={true}
        className="HvList-list"
        role="listbox"
      >
        <WithStyles(Focus)
          classes={
            Object {
              "focus": "HvList-focus",
            }
          }
          configuration={
            Object {
              "tabIndex": 0,
            }
          }
          isDropdown={true}
          key="0"
          rootRef={
            Object {
              "current": <div
                class="HvList-root"
              >
                <ul
                  aria-multiselectable="true"
                  class="HvList-list"
                  role="listbox"
                >
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="0"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                    >
                      Value 1
                    </p>
                  </li>
                  <li
                    aria-selected="false"
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 2
                    </p>
                  </li>
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                    >
                      Value 3
                    </p>
                  </li>
                </ul>
              </div>,
            }
          }
          selected={true}
          strategy="listbox"
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focus": "HvFocus-focus HvList-focus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            configuration={
              Object {
                "tabIndex": 0,
              }
            }
            isDropdown={true}
            rootRef={
              Object {
                "current": <div
                  class="HvList-root"
                >
                  <ul
                    aria-multiselectable="true"
                    class="HvList-list"
                    role="listbox"
                  >
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="0"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 1
                      </p>
                    </li>
                    <li
                      aria-selected="false"
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 2
                      </p>
                    </li>
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 3
                      </p>
                    </li>
                  </ul>
                </div>,
              }
            }
            selected={true}
            strategy="listbox"
          >
            <ConditionalWrapper
              condition={false}
              wrapper={[Function]}
            >
              <li
                aria-selected={true}
                className="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                role="option"
                selected={true}
              >
                <ComponentFunction>
                  <WithStyles(ForwardRef)
                    className="HvList-label HvList-truncate HvList-selected"
                    variant="selectedText"
                  >
                    <ForwardRef
                      className="HvList-label HvList-truncate HvList-selected"
                      classes={
                        Object {
                          "3xlTitle": "HvTypography-3xlTitle",
                          "4xlTitle": "HvTypography-4xlTitle",
                          "5xlTitle": "HvTypography-5xlTitle",
                          "disabledButtonText": "HvTypography-disabledButtonText",
                          "highlightText": "HvTypography-highlightText",
                          "infoText": "HvTypography-infoText",
                          "inlineLink": "HvTypography-inlineLink",
                          "lTitle": "HvTypography-lTitle",
                          "labelText": "HvTypography-labelText",
                          "mTitle": "HvTypography-mTitle",
                          "normalText": "HvTypography-normalText",
                          "placeholderText": "HvTypography-placeholderText",
                          "root": "HvTypography-root",
                          "sLink": "HvTypography-sLink",
                          "sText": "HvTypography-sText",
                          "sTitle": "HvTypography-sTitle",
                          "selectedNavText": "HvTypography-selectedNavText",
                          "selectedText": "HvTypography-selectedText",
                          "vizText": "HvTypography-vizText",
                          "xlTitle": "HvTypography-xlTitle",
                          "xsTitle": "HvTypography-xsTitle",
                          "xxlTitle": "HvTypography-xxlTitle",
                          "xxsTitle": "HvTypography-xxsTitle",
                        }
                      }
                      variant="selectedText"
                    >
                      <p
                        className="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 1
                      </p>
                    </ForwardRef>
                  </WithStyles(ForwardRef)>
                </ComponentFunction>
              </li>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
        <WithStyles(Focus)
          classes={
            Object {
              "focus": "HvList-focus",
            }
          }
          configuration={
            Object {
              "tabIndex": -1,
            }
          }
          isDropdown={true}
          key="1"
          rootRef={
            Object {
              "current": <div
                class="HvList-root"
              >
                <ul
                  aria-multiselectable="true"
                  class="HvList-list"
                  role="listbox"
                >
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="0"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                    >
                      Value 1
                    </p>
                  </li>
                  <li
                    aria-selected="false"
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 2
                    </p>
                  </li>
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                    >
                      Value 3
                    </p>
                  </li>
                </ul>
              </div>,
            }
          }
          selected={false}
          strategy="listbox"
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focus": "HvFocus-focus HvList-focus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            configuration={
              Object {
                "tabIndex": -1,
              }
            }
            isDropdown={true}
            rootRef={
              Object {
                "current": <div
                  class="HvList-root"
                >
                  <ul
                    aria-multiselectable="true"
                    class="HvList-list"
                    role="listbox"
                  >
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="0"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 1
                      </p>
                    </li>
                    <li
                      aria-selected="false"
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 2
                      </p>
                    </li>
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 3
                      </p>
                    </li>
                  </ul>
                </div>,
              }
            }
            selected={false}
            strategy="listbox"
          >
            <ConditionalWrapper
              condition={false}
              wrapper={[Function]}
            >
              <li
                aria-selected={false}
                className="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                role="option"
                selected={false}
              >
                <ComponentFunction>
                  <WithStyles(ForwardRef)
                    className="HvList-label HvList-truncate"
                    variant="normalText"
                  >
                    <ForwardRef
                      className="HvList-label HvList-truncate"
                      classes={
                        Object {
                          "3xlTitle": "HvTypography-3xlTitle",
                          "4xlTitle": "HvTypography-4xlTitle",
                          "5xlTitle": "HvTypography-5xlTitle",
                          "disabledButtonText": "HvTypography-disabledButtonText",
                          "highlightText": "HvTypography-highlightText",
                          "infoText": "HvTypography-infoText",
                          "inlineLink": "HvTypography-inlineLink",
                          "lTitle": "HvTypography-lTitle",
                          "labelText": "HvTypography-labelText",
                          "mTitle": "HvTypography-mTitle",
                          "normalText": "HvTypography-normalText",
                          "placeholderText": "HvTypography-placeholderText",
                          "root": "HvTypography-root",
                          "sLink": "HvTypography-sLink",
                          "sText": "HvTypography-sText",
                          "sTitle": "HvTypography-sTitle",
                          "selectedNavText": "HvTypography-selectedNavText",
                          "selectedText": "HvTypography-selectedText",
                          "vizText": "HvTypography-vizText",
                          "xlTitle": "HvTypography-xlTitle",
                          "xsTitle": "HvTypography-xsTitle",
                          "xxlTitle": "HvTypography-xxlTitle",
                          "xxsTitle": "HvTypography-xxsTitle",
                        }
                      }
                      variant="normalText"
                    >
                      <p
                        className="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 2
                      </p>
                    </ForwardRef>
                  </WithStyles(ForwardRef)>
                </ComponentFunction>
              </li>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
        <WithStyles(Focus)
          classes={
            Object {
              "focus": "HvList-focus",
            }
          }
          configuration={
            Object {
              "tabIndex": -1,
            }
          }
          isDropdown={true}
          key="2"
          rootRef={
            Object {
              "current": <div
                class="HvList-root"
              >
                <ul
                  aria-multiselectable="true"
                  class="HvList-list"
                  role="listbox"
                >
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="0"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                    >
                      Value 1
                    </p>
                  </li>
                  <li
                    aria-selected="false"
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 2
                    </p>
                  </li>
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                    >
                      Value 3
                    </p>
                  </li>
                </ul>
              </div>,
            }
          }
          selected={true}
          strategy="listbox"
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focus": "HvFocus-focus HvList-focus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            configuration={
              Object {
                "tabIndex": -1,
              }
            }
            isDropdown={true}
            rootRef={
              Object {
                "current": <div
                  class="HvList-root"
                >
                  <ul
                    aria-multiselectable="true"
                    class="HvList-list"
                    role="listbox"
                  >
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="0"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 1
                      </p>
                    </li>
                    <li
                      aria-selected="false"
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 2
                      </p>
                    </li>
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 3
                      </p>
                    </li>
                  </ul>
                </div>,
              }
            }
            selected={true}
            strategy="listbox"
          >
            <ConditionalWrapper
              condition={false}
              wrapper={[Function]}
            >
              <li
                aria-selected={true}
                className="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                role="option"
                selected={true}
              >
                <ComponentFunction>
                  <WithStyles(ForwardRef)
                    className="HvList-label HvList-truncate HvList-selected"
                    variant="selectedText"
                  >
                    <ForwardRef
                      className="HvList-label HvList-truncate HvList-selected"
                      classes={
                        Object {
                          "3xlTitle": "HvTypography-3xlTitle",
                          "4xlTitle": "HvTypography-4xlTitle",
                          "5xlTitle": "HvTypography-5xlTitle",
                          "disabledButtonText": "HvTypography-disabledButtonText",
                          "highlightText": "HvTypography-highlightText",
                          "infoText": "HvTypography-infoText",
                          "inlineLink": "HvTypography-inlineLink",
                          "lTitle": "HvTypography-lTitle",
                          "labelText": "HvTypography-labelText",
                          "mTitle": "HvTypography-mTitle",
                          "normalText": "HvTypography-normalText",
                          "placeholderText": "HvTypography-placeholderText",
                          "root": "HvTypography-root",
                          "sLink": "HvTypography-sLink",
                          "sText": "HvTypography-sText",
                          "sTitle": "HvTypography-sTitle",
                          "selectedNavText": "HvTypography-selectedNavText",
                          "selectedText": "HvTypography-selectedText",
                          "vizText": "HvTypography-vizText",
                          "xlTitle": "HvTypography-xlTitle",
                          "xsTitle": "HvTypography-xsTitle",
                          "xxlTitle": "HvTypography-xxlTitle",
                          "xxsTitle": "HvTypography-xxsTitle",
                        }
                      }
                      variant="selectedText"
                    >
                      <p
                        className="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 3
                      </p>
                    </ForwardRef>
                  </WithStyles(ForwardRef)>
                </ComponentFunction>
              </li>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
      </ul>
    </div>
  </List>
</WithStyles(List)>
`;

exports[`<List /> Multi selection with selectors should render correctly 1`] = `
<WithStyles(List)
  multiSelect={true}
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          Array [
            Object {
              "label": "Value 1",
              "selected": true,
            },
            Object {
              "label": "Value 2",
              "selected": false,
            },
            Object {
              "label": "Value 3",
              "selected": false,
            },
          ],
        ],
        Array [
          Array [
            Object {
              "label": "Value 1",
              "selected": false,
            },
            Object {
              "label": "Value 2",
              "selected": true,
            },
            Object {
              "label": "Value 3",
              "selected": false,
            },
          ],
        ],
        Array [
          Array [
            Object {
              "label": "Value 1",
              "selected": true,
            },
            Object {
              "label": "Value 2",
              "selected": true,
            },
            Object {
              "label": "Value 3",
              "selected": true,
            },
          ],
        ],
        Array [
          Array [
            Object {
              "label": "Value 1",
              "selected": false,
            },
            Object {
              "label": "Value 2",
              "selected": false,
            },
            Object {
              "label": "Value 3",
              "selected": true,
            },
          ],
        ],
        Array [
          Array [
            Object {
              "label": "Value 1",
              "selected": false,
            },
            Object {
              "label": "Value 2",
              "selected": false,
            },
            Object {
              "label": "Value 3",
              "selected": false,
            },
          ],
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  showSelectAll={true}
  useSelector={true}
  values={
    Array [
      Object {
        "label": "Value 1",
        "selected": true,
      },
      Object {
        "label": "Value 2",
      },
      Object {
        "label": "Value 3",
        "selected": true,
      },
    ]
  }
>
  <List
    classes={
      Object {
        "box": "HvList-box",
        "condensed": "HvList-condensed",
        "disabled": "HvList-disabled",
        "focus": "HvList-focus",
        "icon": "HvList-icon",
        "label": "HvList-label",
        "labelIconLeftPadding": "HvList-labelIconLeftPadding",
        "link": "HvList-link",
        "list": "HvList-list",
        "listItem": "HvList-listItem",
        "noIconLeftPadding": "HvList-noIconLeftPadding",
        "root": "HvList-root",
        "selectAll": "HvList-selectAll",
        "selected": "HvList-selected",
        "selector": "HvList-selector",
        "selectorContainer": "HvList-selectorContainer",
        "textDisabled": "HvList-textDisabled",
        "truncate": "HvList-truncate",
      }
    }
    condensed={false}
    hasTooltips={false}
    labels={
      Object {
        "selectAll": "All",
        "selectionConjunction": "of",
      }
    }
    multiSelect={true}
    onChange={
      [MockFunction] {
        "calls": Array [
          Array [
            Array [
              Object {
                "label": "Value 1",
                "selected": true,
              },
              Object {
                "label": "Value 2",
                "selected": false,
              },
              Object {
                "label": "Value 3",
                "selected": false,
              },
            ],
          ],
          Array [
            Array [
              Object {
                "label": "Value 1",
                "selected": false,
              },
              Object {
                "label": "Value 2",
                "selected": true,
              },
              Object {
                "label": "Value 3",
                "selected": false,
              },
            ],
          ],
          Array [
            Array [
              Object {
                "label": "Value 1",
                "selected": true,
              },
              Object {
                "label": "Value 2",
                "selected": true,
              },
              Object {
                "label": "Value 3",
                "selected": true,
              },
            ],
          ],
          Array [
            Array [
              Object {
                "label": "Value 1",
                "selected": false,
              },
              Object {
                "label": "Value 2",
                "selected": false,
              },
              Object {
                "label": "Value 3",
                "selected": true,
              },
            ],
          ],
          Array [
            Array [
              Object {
                "label": "Value 1",
                "selected": false,
              },
              Object {
                "label": "Value 2",
                "selected": false,
              },
              Object {
                "label": "Value 3",
                "selected": false,
              },
            ],
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    onClick={[Function]}
    selectDefault={false}
    selectable={true}
    showSelectAll={true}
    singleSelectionToggle={true}
    useSelector={true}
    values={
      Array [
        Object {
          "label": "Value 1",
          "selected": true,
        },
        Object {
          "label": "Value 2",
        },
        Object {
          "label": "Value 3",
          "selected": true,
        },
      ]
    }
  >
    <div
      className="HvList-root"
    >
      <WithStyles(HvCheckbox)
        checked={false}
        className="HvList-selectAll"
        classes={
          Object {
            "container": "HvList-selectorContainer",
          }
        }
        indeterminate={true}
        label={
          <WithStyles(ForwardRef)
            component="span"
            variant="highlightText"
          >
            <React.Fragment>
              2
              <WithStyles(ForwardRef)
                component="span"
                variant="normalText"
              >
                 of 
                3
              </WithStyles(ForwardRef)>
            </React.Fragment>
          </WithStyles(ForwardRef)>
        }
        onChange={[Function]}
      >
        <HvCheckbox
          checked={false}
          className="HvList-selectAll"
          classes={
            Object {
              "checkBox": "HvCheckBox-checkBox",
              "container": "HvCheckBox-container HvList-selectorContainer",
              "disableFocus": "HvCheckBox-disableFocus",
              "icon": "HvCheckBox-icon",
              "labelDisabled": "HvCheckBox-labelDisabled",
              "labelEnd": "HvCheckBox-labelEnd",
              "labelStart": "HvCheckBox-labelStart",
              "labelTypography": "HvCheckBox-labelTypography",
            }
          }
          indeterminate={true}
          label={
            <WithStyles(ForwardRef)
              component="span"
              variant="highlightText"
            >
              <React.Fragment>
                2
                <WithStyles(ForwardRef)
                  component="span"
                  variant="normalText"
                >
                   of 
                  3
                </WithStyles(ForwardRef)>
              </React.Fragment>
            </WithStyles(ForwardRef)>
          }
          onChange={[Function]}
        >
          <WithStyles(ForwardRef(FormControlLabel))
            className="HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd HvList-selectAll"
            classes={
              Object {
                "disabled": "HvCheckBox-labelDisabled",
                "label": "HvCheckBox-labelTypography",
              }
            }
            control={
              <WithStyles(ForwardRef(Checkbox))
                checked={false}
                checkedIcon={
                  <WithStyles(CheckboxCheck)
                    className="HvCheckBox-icon"
                  />
                }
                className="HvCheckBox-checkBox"
                color="default"
                disableRipple={true}
                disabled={false}
                icon={
                  <WithStyles(Checkbox)
                    className="HvCheckBox-icon"
                  />
                }
                indeterminate={true}
                indeterminateIcon={
                  <WithStyles(CheckboxPartial)
                    className="HvCheckBox-icon"
                  />
                }
                onBlur={[Function]}
                onChange={[Function]}
                value=""
              />
            }
            disabled={false}
            label={
              <WithStyles(ForwardRef)
                component="span"
                variant="highlightText"
              >
                <React.Fragment>
                  2
                  <WithStyles(ForwardRef)
                    component="span"
                    variant="normalText"
                  >
                     of 
                    3
                  </WithStyles(ForwardRef)>
                </React.Fragment>
              </WithStyles(ForwardRef)>
            }
            labelPlacement="end"
          >
            <ForwardRef(FormControlLabel)
              className="HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd HvList-selectAll"
              classes={
                Object {
                  "disabled": "Mui-disabled HvCheckBox-labelDisabled",
                  "label": "MuiFormControlLabel-label HvCheckBox-labelTypography",
                  "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                  "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                  "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                  "root": "MuiFormControlLabel-root",
                }
              }
              control={
                <WithStyles(ForwardRef(Checkbox))
                  checked={false}
                  checkedIcon={
                    <WithStyles(CheckboxCheck)
                      className="HvCheckBox-icon"
                    />
                  }
                  className="HvCheckBox-checkBox"
                  color="default"
                  disableRipple={true}
                  disabled={false}
                  icon={
                    <WithStyles(Checkbox)
                      className="HvCheckBox-icon"
                    />
                  }
                  indeterminate={true}
                  indeterminateIcon={
                    <WithStyles(CheckboxPartial)
                      className="HvCheckBox-icon"
                    />
                  }
                  onBlur={[Function]}
                  onChange={[Function]}
                  value=""
                />
              }
              disabled={false}
              label={
                <WithStyles(ForwardRef)
                  component="span"
                  variant="highlightText"
                >
                  <React.Fragment>
                    2
                    <WithStyles(ForwardRef)
                      component="span"
                      variant="normalText"
                    >
                       of 
                      3
                    </WithStyles(ForwardRef)>
                  </React.Fragment>
                </WithStyles(ForwardRef)>
              }
              labelPlacement="end"
            >
              <label
                className="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd HvList-selectAll"
              >
                <WithStyles(ForwardRef(Checkbox))
                  checked={false}
                  checkedIcon={
                    <WithStyles(CheckboxCheck)
                      className="HvCheckBox-icon"
                    />
                  }
                  className="HvCheckBox-checkBox"
                  color="default"
                  disableRipple={true}
                  disabled={false}
                  icon={
                    <WithStyles(Checkbox)
                      className="HvCheckBox-icon"
                    />
                  }
                  indeterminate={true}
                  indeterminateIcon={
                    <WithStyles(CheckboxPartial)
                      className="HvCheckBox-icon"
                    />
                  }
                  onBlur={[Function]}
                  onChange={[Function]}
                  value=""
                >
                  <ForwardRef(Checkbox)
                    checked={false}
                    checkedIcon={
                      <WithStyles(CheckboxCheck)
                        className="HvCheckBox-icon"
                      />
                    }
                    className="HvCheckBox-checkBox"
                    classes={
                      Object {
                        "checked": "Mui-checked",
                        "colorPrimary": "MuiCheckbox-colorPrimary",
                        "colorSecondary": "MuiCheckbox-colorSecondary",
                        "disabled": "Mui-disabled",
                        "indeterminate": "MuiCheckbox-indeterminate",
                        "root": "MuiCheckbox-root",
                      }
                    }
                    color="default"
                    disableRipple={true}
                    disabled={false}
                    icon={
                      <WithStyles(Checkbox)
                        className="HvCheckBox-icon"
                      />
                    }
                    indeterminate={true}
                    indeterminateIcon={
                      <WithStyles(CheckboxPartial)
                        className="HvCheckBox-icon"
                      />
                    }
                    onBlur={[Function]}
                    onChange={[Function]}
                    value=""
                  >
                    <WithStyles(ForwardRef(SwitchBase))
                      checked={false}
                      checkedIcon={
                        <WithStyles(CheckboxPartial)
                          className="HvCheckBox-icon"
                          fontSize="default"
                        />
                      }
                      className="HvCheckBox-checkBox"
                      classes={
                        Object {
                          "checked": "Mui-checked",
                          "disabled": "Mui-disabled",
                          "root": "MuiCheckbox-root MuiCheckbox-indeterminate",
                        }
                      }
                      color="default"
                      disableRipple={true}
                      disabled={false}
                      icon={
                        <WithStyles(CheckboxPartial)
                          className="HvCheckBox-icon"
                          fontSize="default"
                        />
                      }
                      inputProps={
                        Object {
                          "data-indeterminate": true,
                        }
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      type="checkbox"
                      value=""
                    >
                      <ForwardRef(SwitchBase)
                        checked={false}
                        checkedIcon={
                          <WithStyles(CheckboxPartial)
                            className="HvCheckBox-icon"
                            fontSize="default"
                          />
                        }
                        className="HvCheckBox-checkBox"
                        classes={
                          Object {
                            "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                            "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                            "input": "PrivateSwitchBase-input-4",
                            "root": "PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-indeterminate",
                          }
                        }
                        color="default"
                        disableRipple={true}
                        disabled={false}
                        icon={
                          <WithStyles(CheckboxPartial)
                            className="HvCheckBox-icon"
                            fontSize="default"
                          />
                        }
                        inputProps={
                          Object {
                            "data-indeterminate": true,
                          }
                        }
                        onBlur={[Function]}
                        onChange={[Function]}
                        type="checkbox"
                        value=""
                      >
                        <WithStyles(ForwardRef(IconButton))
                          className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox"
                          color="default"
                          component="span"
                          disableRipple={true}
                          disabled={false}
                          onBlur={[Function]}
                          onFocus={[Function]}
                          tabIndex={null}
                        >
                          <ForwardRef(IconButton)
                            className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox"
                            classes={
                              Object {
                                "colorInherit": "MuiIconButton-colorInherit",
                                "colorPrimary": "MuiIconButton-colorPrimary",
                                "colorSecondary": "MuiIconButton-colorSecondary",
                                "disabled": "Mui-disabled",
                                "edgeEnd": "MuiIconButton-edgeEnd",
                                "edgeStart": "MuiIconButton-edgeStart",
                                "label": "MuiIconButton-label",
                                "root": "MuiIconButton-root",
                                "sizeSmall": "MuiIconButton-sizeSmall",
                              }
                            }
                            color="default"
                            component="span"
                            disableRipple={true}
                            disabled={false}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <WithStyles(ForwardRef(ButtonBase))
                              centerRipple={true}
                              className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox"
                              component="span"
                              disableRipple={true}
                              disabled={false}
                              focusRipple={true}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <ForwardRef(ButtonBase)
                                centerRipple={true}
                                className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "focusVisible": "Mui-focusVisible",
                                    "root": "MuiButtonBase-root",
                                  }
                                }
                                component="span"
                                disableRipple={true}
                                disabled={false}
                                focusRipple={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <span
                                  aria-disabled={false}
                                  className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox"
                                  onBlur={[Function]}
                                  onDragLeave={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  tabIndex={null}
                                >
                                  <span
                                    className="MuiIconButton-label"
                                  >
                                    <input
                                      checked={false}
                                      className="PrivateSwitchBase-input-4"
                                      data-indeterminate={true}
                                      disabled={false}
                                      onChange={[Function]}
                                      type="checkbox"
                                      value=""
                                    />
                                    <WithStyles(CheckboxPartial)
                                      className="HvCheckBox-icon"
                                      fontSize="default"
                                    >
                                      <CheckboxPartial
                                        className="HvCheckBox-icon"
                                        classes={
                                          Object {
                                            "root": "HvIconCheckboxPartial-root",
                                            "rootL": "HvIconCheckboxPartial-rootL",
                                            "rootM": "HvIconCheckboxPartial-rootM",
                                            "rootS": "HvIconCheckboxPartial-rootS",
                                            "rootXs": "HvIconCheckboxPartial-rootXs",
                                          }
                                        }
                                        fontSize="default"
                                      >
                                        <div
                                          className="HvCheckBox-icon HvIconCheckboxPartial-root HvIconCheckboxPartial-rootS"
                                          fontSize="default"
                                        >
                                          <svg
                                            focusable={false}
                                            height="16px"
                                            viewBox="0 0 16 16"
                                            width="16px"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              className="color0"
                                              d="M0 0h16v16H0z"
                                              fill="#FFFFFF"
                                            />
                                            <g
                                              className="color1"
                                              fill="#414141"
                                            >
                                              <path
                                                d="M0 0v16h16V0zm15 15H1V1h14z"
                                              />
                                              <path
                                                d="M4 7h8v2H4z"
                                              />
                                            </g>
                                          </svg>
                                        </div>
                                      </CheckboxPartial>
                                    </WithStyles(CheckboxPartial)>
                                  </span>
                                </span>
                              </ForwardRef(ButtonBase)>
                            </WithStyles(ForwardRef(ButtonBase))>
                          </ForwardRef(IconButton)>
                        </WithStyles(ForwardRef(IconButton))>
                      </ForwardRef(SwitchBase)>
                    </WithStyles(ForwardRef(SwitchBase))>
                  </ForwardRef(Checkbox)>
                </WithStyles(ForwardRef(Checkbox))>
                <WithStyles(ForwardRef(Typography))
                  className="MuiFormControlLabel-label HvCheckBox-labelTypography"
                  component="span"
                >
                  <ForwardRef(Typography)
                    className="MuiFormControlLabel-label HvCheckBox-labelTypography"
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                    component="span"
                  >
                    <span
                      className="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                    >
                      <WithStyles(ForwardRef)
                        component="span"
                        variant="highlightText"
                      >
                        <ForwardRef
                          classes={
                            Object {
                              "3xlTitle": "HvTypography-3xlTitle",
                              "4xlTitle": "HvTypography-4xlTitle",
                              "5xlTitle": "HvTypography-5xlTitle",
                              "disabledButtonText": "HvTypography-disabledButtonText",
                              "highlightText": "HvTypography-highlightText",
                              "infoText": "HvTypography-infoText",
                              "inlineLink": "HvTypography-inlineLink",
                              "lTitle": "HvTypography-lTitle",
                              "labelText": "HvTypography-labelText",
                              "mTitle": "HvTypography-mTitle",
                              "normalText": "HvTypography-normalText",
                              "placeholderText": "HvTypography-placeholderText",
                              "root": "HvTypography-root",
                              "sLink": "HvTypography-sLink",
                              "sText": "HvTypography-sText",
                              "sTitle": "HvTypography-sTitle",
                              "selectedNavText": "HvTypography-selectedNavText",
                              "selectedText": "HvTypography-selectedText",
                              "vizText": "HvTypography-vizText",
                              "xlTitle": "HvTypography-xlTitle",
                              "xsTitle": "HvTypography-xsTitle",
                              "xxlTitle": "HvTypography-xxlTitle",
                              "xxsTitle": "HvTypography-xxsTitle",
                            }
                          }
                          component="span"
                          variant="highlightText"
                        >
                          <span
                            className="HvTypography-root HvTypography-highlightText"
                          >
                            2
                            <WithStyles(ForwardRef)
                              component="span"
                              variant="normalText"
                            >
                              <ForwardRef
                                classes={
                                  Object {
                                    "3xlTitle": "HvTypography-3xlTitle",
                                    "4xlTitle": "HvTypography-4xlTitle",
                                    "5xlTitle": "HvTypography-5xlTitle",
                                    "disabledButtonText": "HvTypography-disabledButtonText",
                                    "highlightText": "HvTypography-highlightText",
                                    "infoText": "HvTypography-infoText",
                                    "inlineLink": "HvTypography-inlineLink",
                                    "lTitle": "HvTypography-lTitle",
                                    "labelText": "HvTypography-labelText",
                                    "mTitle": "HvTypography-mTitle",
                                    "normalText": "HvTypography-normalText",
                                    "placeholderText": "HvTypography-placeholderText",
                                    "root": "HvTypography-root",
                                    "sLink": "HvTypography-sLink",
                                    "sText": "HvTypography-sText",
                                    "sTitle": "HvTypography-sTitle",
                                    "selectedNavText": "HvTypography-selectedNavText",
                                    "selectedText": "HvTypography-selectedText",
                                    "vizText": "HvTypography-vizText",
                                    "xlTitle": "HvTypography-xlTitle",
                                    "xsTitle": "HvTypography-xsTitle",
                                    "xxlTitle": "HvTypography-xxlTitle",
                                    "xxsTitle": "HvTypography-xxsTitle",
                                  }
                                }
                                component="span"
                                variant="normalText"
                              >
                                <span
                                  className="HvTypography-root HvTypography-normalText"
                                >
                                   of 
                                  3
                                </span>
                              </ForwardRef>
                            </WithStyles(ForwardRef)>
                          </span>
                        </ForwardRef>
                      </WithStyles(ForwardRef)>
                    </span>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
              </label>
            </ForwardRef(FormControlLabel)>
          </WithStyles(ForwardRef(FormControlLabel))>
        </HvCheckbox>
      </WithStyles(HvCheckbox)>
      <ul
        aria-multiselectable={true}
        className="HvList-list"
        role="listbox"
      >
        <WithStyles(Focus)
          classes={
            Object {
              "focus": "HvList-focus",
            }
          }
          configuration={
            Object {
              "tabIndex": 0,
            }
          }
          isDropdown={true}
          key="0"
          rootRef={
            Object {
              "current": <div
                class="HvList-root"
              >
                <label
                  class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd HvList-selectAll"
                >
                  <span
                    aria-disabled="false"
                    class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox"
                  >
                    <span
                      class="MuiIconButton-label"
                    >
                      <input
                        class="PrivateSwitchBase-input-4"
                        data-indeterminate="true"
                        type="checkbox"
                        value=""
                      />
                      <div
                        class="HvCheckBox-icon HvIconCheckboxPartial-root HvIconCheckboxPartial-rootS"
                        font-size="default"
                      >
                        <svg
                          focusable="false"
                          height="16px"
                          viewBox="0 0 16 16"
                          width="16px"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            class="color0"
                            d="M0 0h16v16H0z"
                            fill="#FFFFFF"
                          />
                          <g
                            class="color1"
                            fill="#414141"
                          >
                            <path
                              d="M0 0v16h16V0zm15 15H1V1h14z"
                            />
                            <path
                              d="M4 7h8v2H4z"
                            />
                          </g>
                        </svg>
                      </div>
                    </span>
                  </span>
                  <span
                    class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                  >
                    <span
                      class="HvTypography-root HvTypography-highlightText"
                    >
                      2
                      <span
                        class="HvTypography-root HvTypography-normalText"
                      >
                         of 
                        3
                      </span>
                    </span>
                  </span>
                </label>
                <ul
                  aria-multiselectable="true"
                  class="HvList-list"
                  role="listbox"
                >
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <label
                      class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                    >
                      <span
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-2 Mui-checked"
                      >
                        <span
                          class="MuiIconButton-label"
                        >
                          <input
                            checked=""
                            class="PrivateSwitchBase-input-4"
                            data-indeterminate="false"
                            tabindex="0"
                            type="checkbox"
                            value=""
                          />
                          <div
                            class="HvCheckBox-icon HvList-icon HvIconCheckboxCheck-root HvIconCheckboxCheck-rootS"
                            font-size="default"
                          >
                            <svg
                              focusable="false"
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M0 0h16v16H0z"
                                fill="#414141"
                              />
                              <path
                                class="color1"
                                d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                fill="#FFFFFF"
                              />
                            </svg>
                          </div>
                        </span>
                      </span>
                      <span
                        class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                      >
                        Value 1
                      </span>
                    </label>
                  </li>
                  <li
                    aria-selected="false"
                    class="HvList-listItem HvList-selector HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <label
                      class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                    >
                      <span
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox"
                      >
                        <span
                          class="MuiIconButton-label"
                        >
                          <input
                            class="PrivateSwitchBase-input-4"
                            data-indeterminate="false"
                            tabindex="-1"
                            type="checkbox"
                            value=""
                          />
                          <div
                            class="HvCheckBox-icon HvList-icon HvIconCheckbox-root HvIconCheckbox-rootS"
                            font-size="default"
                          >
                            <svg
                              focusable="false"
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M0 0h16v16H0z"
                                fill="#FFFFFF"
                              />
                              <path
                                class="color1"
                                d="M0-.00291v16h16v-16zm15 15H1v-14h14z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                        </span>
                      </span>
                      <span
                        class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                      >
                        Value 2
                      </span>
                    </label>
                  </li>
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <label
                      class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                    >
                      <span
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-2 Mui-checked"
                      >
                        <span
                          class="MuiIconButton-label"
                        >
                          <input
                            checked=""
                            class="PrivateSwitchBase-input-4"
                            data-indeterminate="false"
                            tabindex="-1"
                            type="checkbox"
                            value=""
                          />
                          <div
                            class="HvCheckBox-icon HvList-icon HvIconCheckboxCheck-root HvIconCheckboxCheck-rootS"
                            font-size="default"
                          >
                            <svg
                              focusable="false"
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M0 0h16v16H0z"
                                fill="#414141"
                              />
                              <path
                                class="color1"
                                d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                fill="#FFFFFF"
                              />
                            </svg>
                          </div>
                        </span>
                      </span>
                      <span
                        class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                      >
                        Value 3
                      </span>
                    </label>
                  </li>
                </ul>
              </div>,
            }
          }
          selected={true}
          strategy="listbox"
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focus": "HvFocus-focus HvList-focus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            configuration={
              Object {
                "tabIndex": 0,
              }
            }
            isDropdown={true}
            rootRef={
              Object {
                "current": <div
                  class="HvList-root"
                >
                  <label
                    class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd HvList-selectAll"
                  >
                    <span
                      aria-disabled="false"
                      class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox"
                    >
                      <span
                        class="MuiIconButton-label"
                      >
                        <input
                          class="PrivateSwitchBase-input-4"
                          data-indeterminate="true"
                          type="checkbox"
                          value=""
                        />
                        <div
                          class="HvCheckBox-icon HvIconCheckboxPartial-root HvIconCheckboxPartial-rootS"
                          font-size="default"
                        >
                          <svg
                            focusable="false"
                            height="16px"
                            viewBox="0 0 16 16"
                            width="16px"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              class="color0"
                              d="M0 0h16v16H0z"
                              fill="#FFFFFF"
                            />
                            <g
                              class="color1"
                              fill="#414141"
                            >
                              <path
                                d="M0 0v16h16V0zm15 15H1V1h14z"
                              />
                              <path
                                d="M4 7h8v2H4z"
                              />
                            </g>
                          </svg>
                        </div>
                      </span>
                    </span>
                    <span
                      class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                    >
                      <span
                        class="HvTypography-root HvTypography-highlightText"
                      >
                        2
                        <span
                          class="HvTypography-root HvTypography-normalText"
                        >
                           of 
                          3
                        </span>
                      </span>
                    </span>
                  </label>
                  <ul
                    aria-multiselectable="true"
                    class="HvList-list"
                    role="listbox"
                  >
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <label
                        class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                      >
                        <span
                          aria-disabled="false"
                          class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-2 Mui-checked"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <input
                              checked=""
                              class="PrivateSwitchBase-input-4"
                              data-indeterminate="false"
                              tabindex="0"
                              type="checkbox"
                              value=""
                            />
                            <div
                              class="HvCheckBox-icon HvList-icon HvIconCheckboxCheck-root HvIconCheckboxCheck-rootS"
                              font-size="default"
                            >
                              <svg
                                focusable="false"
                                height="16px"
                                viewBox="0 0 16 16"
                                width="16px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M0 0h16v16H0z"
                                  fill="#414141"
                                />
                                <path
                                  class="color1"
                                  d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                  fill="#FFFFFF"
                                />
                              </svg>
                            </div>
                          </span>
                        </span>
                        <span
                          class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                        >
                          Value 1
                        </span>
                      </label>
                    </li>
                    <li
                      aria-selected="false"
                      class="HvList-listItem HvList-selector HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <label
                        class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                      >
                        <span
                          aria-disabled="false"
                          class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <input
                              class="PrivateSwitchBase-input-4"
                              data-indeterminate="false"
                              tabindex="-1"
                              type="checkbox"
                              value=""
                            />
                            <div
                              class="HvCheckBox-icon HvList-icon HvIconCheckbox-root HvIconCheckbox-rootS"
                              font-size="default"
                            >
                              <svg
                                focusable="false"
                                height="16px"
                                viewBox="0 0 16 16"
                                width="16px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M0 0h16v16H0z"
                                  fill="#FFFFFF"
                                />
                                <path
                                  class="color1"
                                  d="M0-.00291v16h16v-16zm15 15H1v-14h14z"
                                  fill="#414141"
                                />
                              </svg>
                            </div>
                          </span>
                        </span>
                        <span
                          class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                        >
                          Value 2
                        </span>
                      </label>
                    </li>
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <label
                        class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                      >
                        <span
                          aria-disabled="false"
                          class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-2 Mui-checked"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <input
                              checked=""
                              class="PrivateSwitchBase-input-4"
                              data-indeterminate="false"
                              tabindex="-1"
                              type="checkbox"
                              value=""
                            />
                            <div
                              class="HvCheckBox-icon HvList-icon HvIconCheckboxCheck-root HvIconCheckboxCheck-rootS"
                              font-size="default"
                            >
                              <svg
                                focusable="false"
                                height="16px"
                                viewBox="0 0 16 16"
                                width="16px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M0 0h16v16H0z"
                                  fill="#414141"
                                />
                                <path
                                  class="color1"
                                  d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                  fill="#FFFFFF"
                                />
                              </svg>
                            </div>
                          </span>
                        </span>
                        <span
                          class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                        >
                          Value 3
                        </span>
                      </label>
                    </li>
                  </ul>
                </div>,
              }
            }
            selected={true}
            strategy="listbox"
          >
            <ConditionalWrapper
              condition={false}
              wrapper={[Function]}
            >
              <li
                aria-selected={true}
                className="HvList-listItem HvList-selector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                role="option"
                selected={true}
              >
                <ComponentFunction>
                  <WithStyles(HvCheckbox)
                    checked={true}
                    classes={
                      Object {
                        "container": "HvList-selectorContainer",
                        "icon": "HvList-icon",
                      }
                    }
                    label="Value 1"
                    onChange={[Function]}
                  >
                    <HvCheckbox
                      checked={true}
                      classes={
                        Object {
                          "checkBox": "HvCheckBox-checkBox",
                          "container": "HvCheckBox-container HvList-selectorContainer",
                          "disableFocus": "HvCheckBox-disableFocus",
                          "icon": "HvCheckBox-icon HvList-icon",
                          "labelDisabled": "HvCheckBox-labelDisabled",
                          "labelEnd": "HvCheckBox-labelEnd",
                          "labelStart": "HvCheckBox-labelStart",
                          "labelTypography": "HvCheckBox-labelTypography",
                        }
                      }
                      label="Value 1"
                      onChange={[Function]}
                    >
                      <WithStyles(ForwardRef(FormControlLabel))
                        className="HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                        classes={
                          Object {
                            "disabled": "HvCheckBox-labelDisabled",
                            "label": "HvCheckBox-labelTypography",
                          }
                        }
                        control={
                          <WithStyles(ForwardRef(Checkbox))
                            checked={true}
                            checkedIcon={
                              <WithStyles(CheckboxCheck)
                                className="HvCheckBox-icon HvList-icon"
                              />
                            }
                            className="HvCheckBox-checkBox"
                            color="default"
                            disableRipple={true}
                            disabled={false}
                            icon={
                              <WithStyles(Checkbox)
                                className="HvCheckBox-icon HvList-icon"
                              />
                            }
                            indeterminateIcon={
                              <WithStyles(CheckboxPartial)
                                className="HvCheckBox-icon HvList-icon"
                              />
                            }
                            onBlur={[Function]}
                            onChange={[Function]}
                            value=""
                          />
                        }
                        disabled={false}
                        label="Value 1"
                        labelPlacement="end"
                      >
                        <ForwardRef(FormControlLabel)
                          className="HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                          classes={
                            Object {
                              "disabled": "Mui-disabled HvCheckBox-labelDisabled",
                              "label": "MuiFormControlLabel-label HvCheckBox-labelTypography",
                              "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                              "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                              "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                              "root": "MuiFormControlLabel-root",
                            }
                          }
                          control={
                            <WithStyles(ForwardRef(Checkbox))
                              checked={true}
                              checkedIcon={
                                <WithStyles(CheckboxCheck)
                                  className="HvCheckBox-icon HvList-icon"
                                />
                              }
                              className="HvCheckBox-checkBox"
                              color="default"
                              disableRipple={true}
                              disabled={false}
                              icon={
                                <WithStyles(Checkbox)
                                  className="HvCheckBox-icon HvList-icon"
                                />
                              }
                              indeterminateIcon={
                                <WithStyles(CheckboxPartial)
                                  className="HvCheckBox-icon HvList-icon"
                                />
                              }
                              onBlur={[Function]}
                              onChange={[Function]}
                              value=""
                            />
                          }
                          disabled={false}
                          label="Value 1"
                          labelPlacement="end"
                        >
                          <label
                            className="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                          >
                            <WithStyles(ForwardRef(Checkbox))
                              checked={true}
                              checkedIcon={
                                <WithStyles(CheckboxCheck)
                                  className="HvCheckBox-icon HvList-icon"
                                />
                              }
                              className="HvCheckBox-checkBox"
                              color="default"
                              disableRipple={true}
                              disabled={false}
                              icon={
                                <WithStyles(Checkbox)
                                  className="HvCheckBox-icon HvList-icon"
                                />
                              }
                              indeterminateIcon={
                                <WithStyles(CheckboxPartial)
                                  className="HvCheckBox-icon HvList-icon"
                                />
                              }
                              onBlur={[Function]}
                              onChange={[Function]}
                              value=""
                            >
                              <ForwardRef(Checkbox)
                                checked={true}
                                checkedIcon={
                                  <WithStyles(CheckboxCheck)
                                    className="HvCheckBox-icon HvList-icon"
                                  />
                                }
                                className="HvCheckBox-checkBox"
                                classes={
                                  Object {
                                    "checked": "Mui-checked",
                                    "colorPrimary": "MuiCheckbox-colorPrimary",
                                    "colorSecondary": "MuiCheckbox-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "indeterminate": "MuiCheckbox-indeterminate",
                                    "root": "MuiCheckbox-root",
                                  }
                                }
                                color="default"
                                disableRipple={true}
                                disabled={false}
                                icon={
                                  <WithStyles(Checkbox)
                                    className="HvCheckBox-icon HvList-icon"
                                  />
                                }
                                indeterminateIcon={
                                  <WithStyles(CheckboxPartial)
                                    className="HvCheckBox-icon HvList-icon"
                                  />
                                }
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              >
                                <WithStyles(ForwardRef(SwitchBase))
                                  checked={true}
                                  checkedIcon={
                                    <WithStyles(CheckboxCheck)
                                      className="HvCheckBox-icon HvList-icon"
                                      fontSize="default"
                                    />
                                  }
                                  className="HvCheckBox-checkBox"
                                  classes={
                                    Object {
                                      "checked": "Mui-checked",
                                      "disabled": "Mui-disabled",
                                      "root": "MuiCheckbox-root",
                                    }
                                  }
                                  color="default"
                                  disableRipple={true}
                                  disabled={false}
                                  icon={
                                    <WithStyles(Checkbox)
                                      className="HvCheckBox-icon HvList-icon"
                                      fontSize="default"
                                    />
                                  }
                                  inputProps={
                                    Object {
                                      "data-indeterminate": false,
                                    }
                                  }
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  type="checkbox"
                                  value=""
                                >
                                  <ForwardRef(SwitchBase)
                                    checked={true}
                                    checkedIcon={
                                      <WithStyles(CheckboxCheck)
                                        className="HvCheckBox-icon HvList-icon"
                                        fontSize="default"
                                      />
                                    }
                                    className="HvCheckBox-checkBox"
                                    classes={
                                      Object {
                                        "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                                        "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                                        "input": "PrivateSwitchBase-input-4",
                                        "root": "PrivateSwitchBase-root-1 MuiCheckbox-root",
                                      }
                                    }
                                    color="default"
                                    disableRipple={true}
                                    disabled={false}
                                    icon={
                                      <WithStyles(Checkbox)
                                        className="HvCheckBox-icon HvList-icon"
                                        fontSize="default"
                                      />
                                    }
                                    inputProps={
                                      Object {
                                        "data-indeterminate": false,
                                      }
                                    }
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    type="checkbox"
                                    value=""
                                  >
                                    <WithStyles(ForwardRef(IconButton))
                                      className="PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-2 Mui-checked"
                                      color="default"
                                      component="span"
                                      disableRipple={true}
                                      disabled={false}
                                      onBlur={[Function]}
                                      onFocus={[Function]}
                                      tabIndex={null}
                                    >
                                      <ForwardRef(IconButton)
                                        className="PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-2 Mui-checked"
                                        classes={
                                          Object {
                                            "colorInherit": "MuiIconButton-colorInherit",
                                            "colorPrimary": "MuiIconButton-colorPrimary",
                                            "colorSecondary": "MuiIconButton-colorSecondary",
                                            "disabled": "Mui-disabled",
                                            "edgeEnd": "MuiIconButton-edgeEnd",
                                            "edgeStart": "MuiIconButton-edgeStart",
                                            "label": "MuiIconButton-label",
                                            "root": "MuiIconButton-root",
                                            "sizeSmall": "MuiIconButton-sizeSmall",
                                          }
                                        }
                                        color="default"
                                        component="span"
                                        disableRipple={true}
                                        disabled={false}
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={null}
                                      >
                                        <WithStyles(ForwardRef(ButtonBase))
                                          centerRipple={true}
                                          className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-2 Mui-checked"
                                          component="span"
                                          disableRipple={true}
                                          disabled={false}
                                          focusRipple={true}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <ForwardRef(ButtonBase)
                                            centerRipple={true}
                                            className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-2 Mui-checked"
                                            classes={
                                              Object {
                                                "disabled": "Mui-disabled",
                                                "focusVisible": "Mui-focusVisible",
                                                "root": "MuiButtonBase-root",
                                              }
                                            }
                                            component="span"
                                            disableRipple={true}
                                            disabled={false}
                                            focusRipple={true}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <span
                                              aria-disabled={false}
                                              className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-2 Mui-checked"
                                              onBlur={[Function]}
                                              onDragLeave={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              tabIndex={null}
                                            >
                                              <span
                                                className="MuiIconButton-label"
                                              >
                                                <input
                                                  checked={true}
                                                  className="PrivateSwitchBase-input-4"
                                                  data-indeterminate={false}
                                                  disabled={false}
                                                  onChange={[Function]}
                                                  type="checkbox"
                                                  value=""
                                                />
                                                <WithStyles(CheckboxCheck)
                                                  className="HvCheckBox-icon HvList-icon"
                                                  fontSize="default"
                                                >
                                                  <CheckboxCheck
                                                    className="HvCheckBox-icon HvList-icon"
                                                    classes={
                                                      Object {
                                                        "root": "HvIconCheckboxCheck-root",
                                                        "rootL": "HvIconCheckboxCheck-rootL",
                                                        "rootM": "HvIconCheckboxCheck-rootM",
                                                        "rootS": "HvIconCheckboxCheck-rootS",
                                                        "rootXs": "HvIconCheckboxCheck-rootXs",
                                                      }
                                                    }
                                                    fontSize="default"
                                                  >
                                                    <div
                                                      className="HvCheckBox-icon HvList-icon HvIconCheckboxCheck-root HvIconCheckboxCheck-rootS"
                                                      fontSize="default"
                                                    >
                                                      <svg
                                                        focusable={false}
                                                        height="16px"
                                                        viewBox="0 0 16 16"
                                                        width="16px"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          className="color0"
                                                          d="M0 0h16v16H0z"
                                                          fill="#414141"
                                                        />
                                                        <path
                                                          className="color1"
                                                          d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                                          fill="#FFFFFF"
                                                        />
                                                      </svg>
                                                    </div>
                                                  </CheckboxCheck>
                                                </WithStyles(CheckboxCheck)>
                                              </span>
                                            </span>
                                          </ForwardRef(ButtonBase)>
                                        </WithStyles(ForwardRef(ButtonBase))>
                                      </ForwardRef(IconButton)>
                                    </WithStyles(ForwardRef(IconButton))>
                                  </ForwardRef(SwitchBase)>
                                </WithStyles(ForwardRef(SwitchBase))>
                              </ForwardRef(Checkbox)>
                            </WithStyles(ForwardRef(Checkbox))>
                            <WithStyles(ForwardRef(Typography))
                              className="MuiFormControlLabel-label HvCheckBox-labelTypography"
                              component="span"
                            >
                              <ForwardRef(Typography)
                                className="MuiFormControlLabel-label HvCheckBox-labelTypography"
                                classes={
                                  Object {
                                    "alignCenter": "MuiTypography-alignCenter",
                                    "alignJustify": "MuiTypography-alignJustify",
                                    "alignLeft": "MuiTypography-alignLeft",
                                    "alignRight": "MuiTypography-alignRight",
                                    "body1": "MuiTypography-body1",
                                    "body2": "MuiTypography-body2",
                                    "button": "MuiTypography-button",
                                    "caption": "MuiTypography-caption",
                                    "colorError": "MuiTypography-colorError",
                                    "colorInherit": "MuiTypography-colorInherit",
                                    "colorPrimary": "MuiTypography-colorPrimary",
                                    "colorSecondary": "MuiTypography-colorSecondary",
                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                    "displayBlock": "MuiTypography-displayBlock",
                                    "displayInline": "MuiTypography-displayInline",
                                    "gutterBottom": "MuiTypography-gutterBottom",
                                    "h1": "MuiTypography-h1",
                                    "h2": "MuiTypography-h2",
                                    "h3": "MuiTypography-h3",
                                    "h4": "MuiTypography-h4",
                                    "h5": "MuiTypography-h5",
                                    "h6": "MuiTypography-h6",
                                    "noWrap": "MuiTypography-noWrap",
                                    "overline": "MuiTypography-overline",
                                    "paragraph": "MuiTypography-paragraph",
                                    "root": "MuiTypography-root",
                                    "srOnly": "MuiTypography-srOnly",
                                    "subtitle1": "MuiTypography-subtitle1",
                                    "subtitle2": "MuiTypography-subtitle2",
                                  }
                                }
                                component="span"
                              >
                                <span
                                  className="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                                >
                                  Value 1
                                </span>
                              </ForwardRef(Typography)>
                            </WithStyles(ForwardRef(Typography))>
                          </label>
                        </ForwardRef(FormControlLabel)>
                      </WithStyles(ForwardRef(FormControlLabel))>
                    </HvCheckbox>
                  </WithStyles(HvCheckbox)>
                </ComponentFunction>
              </li>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
        <WithStyles(Focus)
          classes={
            Object {
              "focus": "HvList-focus",
            }
          }
          configuration={
            Object {
              "tabIndex": -1,
            }
          }
          isDropdown={true}
          key="1"
          rootRef={
            Object {
              "current": <div
                class="HvList-root"
              >
                <label
                  class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd HvList-selectAll"
                >
                  <span
                    aria-disabled="false"
                    class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox"
                  >
                    <span
                      class="MuiIconButton-label"
                    >
                      <input
                        class="PrivateSwitchBase-input-4"
                        data-indeterminate="true"
                        type="checkbox"
                        value=""
                      />
                      <div
                        class="HvCheckBox-icon HvIconCheckboxPartial-root HvIconCheckboxPartial-rootS"
                        font-size="default"
                      >
                        <svg
                          focusable="false"
                          height="16px"
                          viewBox="0 0 16 16"
                          width="16px"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            class="color0"
                            d="M0 0h16v16H0z"
                            fill="#FFFFFF"
                          />
                          <g
                            class="color1"
                            fill="#414141"
                          >
                            <path
                              d="M0 0v16h16V0zm15 15H1V1h14z"
                            />
                            <path
                              d="M4 7h8v2H4z"
                            />
                          </g>
                        </svg>
                      </div>
                    </span>
                  </span>
                  <span
                    class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                  >
                    <span
                      class="HvTypography-root HvTypography-highlightText"
                    >
                      2
                      <span
                        class="HvTypography-root HvTypography-normalText"
                      >
                         of 
                        3
                      </span>
                    </span>
                  </span>
                </label>
                <ul
                  aria-multiselectable="true"
                  class="HvList-list"
                  role="listbox"
                >
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <label
                      class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                    >
                      <span
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-2 Mui-checked"
                      >
                        <span
                          class="MuiIconButton-label"
                        >
                          <input
                            checked=""
                            class="PrivateSwitchBase-input-4"
                            data-indeterminate="false"
                            tabindex="0"
                            type="checkbox"
                            value=""
                          />
                          <div
                            class="HvCheckBox-icon HvList-icon HvIconCheckboxCheck-root HvIconCheckboxCheck-rootS"
                            font-size="default"
                          >
                            <svg
                              focusable="false"
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M0 0h16v16H0z"
                                fill="#414141"
                              />
                              <path
                                class="color1"
                                d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                fill="#FFFFFF"
                              />
                            </svg>
                          </div>
                        </span>
                      </span>
                      <span
                        class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                      >
                        Value 1
                      </span>
                    </label>
                  </li>
                  <li
                    aria-selected="false"
                    class="HvList-listItem HvList-selector HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <label
                      class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                    >
                      <span
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox"
                      >
                        <span
                          class="MuiIconButton-label"
                        >
                          <input
                            class="PrivateSwitchBase-input-4"
                            data-indeterminate="false"
                            tabindex="-1"
                            type="checkbox"
                            value=""
                          />
                          <div
                            class="HvCheckBox-icon HvList-icon HvIconCheckbox-root HvIconCheckbox-rootS"
                            font-size="default"
                          >
                            <svg
                              focusable="false"
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M0 0h16v16H0z"
                                fill="#FFFFFF"
                              />
                              <path
                                class="color1"
                                d="M0-.00291v16h16v-16zm15 15H1v-14h14z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                        </span>
                      </span>
                      <span
                        class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                      >
                        Value 2
                      </span>
                    </label>
                  </li>
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <label
                      class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                    >
                      <span
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-2 Mui-checked"
                      >
                        <span
                          class="MuiIconButton-label"
                        >
                          <input
                            checked=""
                            class="PrivateSwitchBase-input-4"
                            data-indeterminate="false"
                            tabindex="-1"
                            type="checkbox"
                            value=""
                          />
                          <div
                            class="HvCheckBox-icon HvList-icon HvIconCheckboxCheck-root HvIconCheckboxCheck-rootS"
                            font-size="default"
                          >
                            <svg
                              focusable="false"
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M0 0h16v16H0z"
                                fill="#414141"
                              />
                              <path
                                class="color1"
                                d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                fill="#FFFFFF"
                              />
                            </svg>
                          </div>
                        </span>
                      </span>
                      <span
                        class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                      >
                        Value 3
                      </span>
                    </label>
                  </li>
                </ul>
              </div>,
            }
          }
          selected={false}
          strategy="listbox"
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focus": "HvFocus-focus HvList-focus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            configuration={
              Object {
                "tabIndex": -1,
              }
            }
            isDropdown={true}
            rootRef={
              Object {
                "current": <div
                  class="HvList-root"
                >
                  <label
                    class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd HvList-selectAll"
                  >
                    <span
                      aria-disabled="false"
                      class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox"
                    >
                      <span
                        class="MuiIconButton-label"
                      >
                        <input
                          class="PrivateSwitchBase-input-4"
                          data-indeterminate="true"
                          type="checkbox"
                          value=""
                        />
                        <div
                          class="HvCheckBox-icon HvIconCheckboxPartial-root HvIconCheckboxPartial-rootS"
                          font-size="default"
                        >
                          <svg
                            focusable="false"
                            height="16px"
                            viewBox="0 0 16 16"
                            width="16px"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              class="color0"
                              d="M0 0h16v16H0z"
                              fill="#FFFFFF"
                            />
                            <g
                              class="color1"
                              fill="#414141"
                            >
                              <path
                                d="M0 0v16h16V0zm15 15H1V1h14z"
                              />
                              <path
                                d="M4 7h8v2H4z"
                              />
                            </g>
                          </svg>
                        </div>
                      </span>
                    </span>
                    <span
                      class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                    >
                      <span
                        class="HvTypography-root HvTypography-highlightText"
                      >
                        2
                        <span
                          class="HvTypography-root HvTypography-normalText"
                        >
                           of 
                          3
                        </span>
                      </span>
                    </span>
                  </label>
                  <ul
                    aria-multiselectable="true"
                    class="HvList-list"
                    role="listbox"
                  >
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <label
                        class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                      >
                        <span
                          aria-disabled="false"
                          class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-2 Mui-checked"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <input
                              checked=""
                              class="PrivateSwitchBase-input-4"
                              data-indeterminate="false"
                              tabindex="0"
                              type="checkbox"
                              value=""
                            />
                            <div
                              class="HvCheckBox-icon HvList-icon HvIconCheckboxCheck-root HvIconCheckboxCheck-rootS"
                              font-size="default"
                            >
                              <svg
                                focusable="false"
                                height="16px"
                                viewBox="0 0 16 16"
                                width="16px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M0 0h16v16H0z"
                                  fill="#414141"
                                />
                                <path
                                  class="color1"
                                  d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                  fill="#FFFFFF"
                                />
                              </svg>
                            </div>
                          </span>
                        </span>
                        <span
                          class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                        >
                          Value 1
                        </span>
                      </label>
                    </li>
                    <li
                      aria-selected="false"
                      class="HvList-listItem HvList-selector HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <label
                        class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                      >
                        <span
                          aria-disabled="false"
                          class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <input
                              class="PrivateSwitchBase-input-4"
                              data-indeterminate="false"
                              tabindex="-1"
                              type="checkbox"
                              value=""
                            />
                            <div
                              class="HvCheckBox-icon HvList-icon HvIconCheckbox-root HvIconCheckbox-rootS"
                              font-size="default"
                            >
                              <svg
                                focusable="false"
                                height="16px"
                                viewBox="0 0 16 16"
                                width="16px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M0 0h16v16H0z"
                                  fill="#FFFFFF"
                                />
                                <path
                                  class="color1"
                                  d="M0-.00291v16h16v-16zm15 15H1v-14h14z"
                                  fill="#414141"
                                />
                              </svg>
                            </div>
                          </span>
                        </span>
                        <span
                          class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                        >
                          Value 2
                        </span>
                      </label>
                    </li>
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <label
                        class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                      >
                        <span
                          aria-disabled="false"
                          class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-2 Mui-checked"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <input
                              checked=""
                              class="PrivateSwitchBase-input-4"
                              data-indeterminate="false"
                              tabindex="-1"
                              type="checkbox"
                              value=""
                            />
                            <div
                              class="HvCheckBox-icon HvList-icon HvIconCheckboxCheck-root HvIconCheckboxCheck-rootS"
                              font-size="default"
                            >
                              <svg
                                focusable="false"
                                height="16px"
                                viewBox="0 0 16 16"
                                width="16px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M0 0h16v16H0z"
                                  fill="#414141"
                                />
                                <path
                                  class="color1"
                                  d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                  fill="#FFFFFF"
                                />
                              </svg>
                            </div>
                          </span>
                        </span>
                        <span
                          class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                        >
                          Value 3
                        </span>
                      </label>
                    </li>
                  </ul>
                </div>,
              }
            }
            selected={false}
            strategy="listbox"
          >
            <ConditionalWrapper
              condition={false}
              wrapper={[Function]}
            >
              <li
                aria-selected={false}
                className="HvList-listItem HvList-selector HvFocus-root HvFocus-focusDisabled"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                role="option"
                selected={false}
              >
                <ComponentFunction>
                  <WithStyles(HvCheckbox)
                    checked={false}
                    classes={
                      Object {
                        "container": "HvList-selectorContainer",
                        "icon": "HvList-icon",
                      }
                    }
                    label="Value 2"
                    onChange={[Function]}
                  >
                    <HvCheckbox
                      checked={false}
                      classes={
                        Object {
                          "checkBox": "HvCheckBox-checkBox",
                          "container": "HvCheckBox-container HvList-selectorContainer",
                          "disableFocus": "HvCheckBox-disableFocus",
                          "icon": "HvCheckBox-icon HvList-icon",
                          "labelDisabled": "HvCheckBox-labelDisabled",
                          "labelEnd": "HvCheckBox-labelEnd",
                          "labelStart": "HvCheckBox-labelStart",
                          "labelTypography": "HvCheckBox-labelTypography",
                        }
                      }
                      label="Value 2"
                      onChange={[Function]}
                    >
                      <WithStyles(ForwardRef(FormControlLabel))
                        className="HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                        classes={
                          Object {
                            "disabled": "HvCheckBox-labelDisabled",
                            "label": "HvCheckBox-labelTypography",
                          }
                        }
                        control={
                          <WithStyles(ForwardRef(Checkbox))
                            checked={false}
                            checkedIcon={
                              <WithStyles(CheckboxCheck)
                                className="HvCheckBox-icon HvList-icon"
                              />
                            }
                            className="HvCheckBox-checkBox"
                            color="default"
                            disableRipple={true}
                            disabled={false}
                            icon={
                              <WithStyles(Checkbox)
                                className="HvCheckBox-icon HvList-icon"
                              />
                            }
                            indeterminateIcon={
                              <WithStyles(CheckboxPartial)
                                className="HvCheckBox-icon HvList-icon"
                              />
                            }
                            onBlur={[Function]}
                            onChange={[Function]}
                            value=""
                          />
                        }
                        disabled={false}
                        label="Value 2"
                        labelPlacement="end"
                      >
                        <ForwardRef(FormControlLabel)
                          className="HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                          classes={
                            Object {
                              "disabled": "Mui-disabled HvCheckBox-labelDisabled",
                              "label": "MuiFormControlLabel-label HvCheckBox-labelTypography",
                              "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                              "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                              "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                              "root": "MuiFormControlLabel-root",
                            }
                          }
                          control={
                            <WithStyles(ForwardRef(Checkbox))
                              checked={false}
                              checkedIcon={
                                <WithStyles(CheckboxCheck)
                                  className="HvCheckBox-icon HvList-icon"
                                />
                              }
                              className="HvCheckBox-checkBox"
                              color="default"
                              disableRipple={true}
                              disabled={false}
                              icon={
                                <WithStyles(Checkbox)
                                  className="HvCheckBox-icon HvList-icon"
                                />
                              }
                              indeterminateIcon={
                                <WithStyles(CheckboxPartial)
                                  className="HvCheckBox-icon HvList-icon"
                                />
                              }
                              onBlur={[Function]}
                              onChange={[Function]}
                              value=""
                            />
                          }
                          disabled={false}
                          label="Value 2"
                          labelPlacement="end"
                        >
                          <label
                            className="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                          >
                            <WithStyles(ForwardRef(Checkbox))
                              checked={false}
                              checkedIcon={
                                <WithStyles(CheckboxCheck)
                                  className="HvCheckBox-icon HvList-icon"
                                />
                              }
                              className="HvCheckBox-checkBox"
                              color="default"
                              disableRipple={true}
                              disabled={false}
                              icon={
                                <WithStyles(Checkbox)
                                  className="HvCheckBox-icon HvList-icon"
                                />
                              }
                              indeterminateIcon={
                                <WithStyles(CheckboxPartial)
                                  className="HvCheckBox-icon HvList-icon"
                                />
                              }
                              onBlur={[Function]}
                              onChange={[Function]}
                              value=""
                            >
                              <ForwardRef(Checkbox)
                                checked={false}
                                checkedIcon={
                                  <WithStyles(CheckboxCheck)
                                    className="HvCheckBox-icon HvList-icon"
                                  />
                                }
                                className="HvCheckBox-checkBox"
                                classes={
                                  Object {
                                    "checked": "Mui-checked",
                                    "colorPrimary": "MuiCheckbox-colorPrimary",
                                    "colorSecondary": "MuiCheckbox-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "indeterminate": "MuiCheckbox-indeterminate",
                                    "root": "MuiCheckbox-root",
                                  }
                                }
                                color="default"
                                disableRipple={true}
                                disabled={false}
                                icon={
                                  <WithStyles(Checkbox)
                                    className="HvCheckBox-icon HvList-icon"
                                  />
                                }
                                indeterminateIcon={
                                  <WithStyles(CheckboxPartial)
                                    className="HvCheckBox-icon HvList-icon"
                                  />
                                }
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              >
                                <WithStyles(ForwardRef(SwitchBase))
                                  checked={false}
                                  checkedIcon={
                                    <WithStyles(CheckboxCheck)
                                      className="HvCheckBox-icon HvList-icon"
                                      fontSize="default"
                                    />
                                  }
                                  className="HvCheckBox-checkBox"
                                  classes={
                                    Object {
                                      "checked": "Mui-checked",
                                      "disabled": "Mui-disabled",
                                      "root": "MuiCheckbox-root",
                                    }
                                  }
                                  color="default"
                                  disableRipple={true}
                                  disabled={false}
                                  icon={
                                    <WithStyles(Checkbox)
                                      className="HvCheckBox-icon HvList-icon"
                                      fontSize="default"
                                    />
                                  }
                                  inputProps={
                                    Object {
                                      "data-indeterminate": false,
                                    }
                                  }
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  type="checkbox"
                                  value=""
                                >
                                  <ForwardRef(SwitchBase)
                                    checked={false}
                                    checkedIcon={
                                      <WithStyles(CheckboxCheck)
                                        className="HvCheckBox-icon HvList-icon"
                                        fontSize="default"
                                      />
                                    }
                                    className="HvCheckBox-checkBox"
                                    classes={
                                      Object {
                                        "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                                        "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                                        "input": "PrivateSwitchBase-input-4",
                                        "root": "PrivateSwitchBase-root-1 MuiCheckbox-root",
                                      }
                                    }
                                    color="default"
                                    disableRipple={true}
                                    disabled={false}
                                    icon={
                                      <WithStyles(Checkbox)
                                        className="HvCheckBox-icon HvList-icon"
                                        fontSize="default"
                                      />
                                    }
                                    inputProps={
                                      Object {
                                        "data-indeterminate": false,
                                      }
                                    }
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    type="checkbox"
                                    value=""
                                  >
                                    <WithStyles(ForwardRef(IconButton))
                                      className="PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox"
                                      color="default"
                                      component="span"
                                      disableRipple={true}
                                      disabled={false}
                                      onBlur={[Function]}
                                      onFocus={[Function]}
                                      tabIndex={null}
                                    >
                                      <ForwardRef(IconButton)
                                        className="PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox"
                                        classes={
                                          Object {
                                            "colorInherit": "MuiIconButton-colorInherit",
                                            "colorPrimary": "MuiIconButton-colorPrimary",
                                            "colorSecondary": "MuiIconButton-colorSecondary",
                                            "disabled": "Mui-disabled",
                                            "edgeEnd": "MuiIconButton-edgeEnd",
                                            "edgeStart": "MuiIconButton-edgeStart",
                                            "label": "MuiIconButton-label",
                                            "root": "MuiIconButton-root",
                                            "sizeSmall": "MuiIconButton-sizeSmall",
                                          }
                                        }
                                        color="default"
                                        component="span"
                                        disableRipple={true}
                                        disabled={false}
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={null}
                                      >
                                        <WithStyles(ForwardRef(ButtonBase))
                                          centerRipple={true}
                                          className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox"
                                          component="span"
                                          disableRipple={true}
                                          disabled={false}
                                          focusRipple={true}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <ForwardRef(ButtonBase)
                                            centerRipple={true}
                                            className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox"
                                            classes={
                                              Object {
                                                "disabled": "Mui-disabled",
                                                "focusVisible": "Mui-focusVisible",
                                                "root": "MuiButtonBase-root",
                                              }
                                            }
                                            component="span"
                                            disableRipple={true}
                                            disabled={false}
                                            focusRipple={true}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <span
                                              aria-disabled={false}
                                              className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox"
                                              onBlur={[Function]}
                                              onDragLeave={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              tabIndex={null}
                                            >
                                              <span
                                                className="MuiIconButton-label"
                                              >
                                                <input
                                                  checked={false}
                                                  className="PrivateSwitchBase-input-4"
                                                  data-indeterminate={false}
                                                  disabled={false}
                                                  onChange={[Function]}
                                                  type="checkbox"
                                                  value=""
                                                />
                                                <WithStyles(Checkbox)
                                                  className="HvCheckBox-icon HvList-icon"
                                                  fontSize="default"
                                                >
                                                  <Checkbox
                                                    className="HvCheckBox-icon HvList-icon"
                                                    classes={
                                                      Object {
                                                        "root": "HvIconCheckbox-root",
                                                        "rootL": "HvIconCheckbox-rootL",
                                                        "rootM": "HvIconCheckbox-rootM",
                                                        "rootS": "HvIconCheckbox-rootS",
                                                        "rootXs": "HvIconCheckbox-rootXs",
                                                      }
                                                    }
                                                    fontSize="default"
                                                  >
                                                    <div
                                                      className="HvCheckBox-icon HvList-icon HvIconCheckbox-root HvIconCheckbox-rootS"
                                                      fontSize="default"
                                                    >
                                                      <svg
                                                        focusable={false}
                                                        height="16px"
                                                        viewBox="0 0 16 16"
                                                        width="16px"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          className="color0"
                                                          d="M0 0h16v16H0z"
                                                          fill="#FFFFFF"
                                                        />
                                                        <path
                                                          className="color1"
                                                          d="M0-.00291v16h16v-16zm15 15H1v-14h14z"
                                                          fill="#414141"
                                                        />
                                                      </svg>
                                                    </div>
                                                  </Checkbox>
                                                </WithStyles(Checkbox)>
                                              </span>
                                            </span>
                                          </ForwardRef(ButtonBase)>
                                        </WithStyles(ForwardRef(ButtonBase))>
                                      </ForwardRef(IconButton)>
                                    </WithStyles(ForwardRef(IconButton))>
                                  </ForwardRef(SwitchBase)>
                                </WithStyles(ForwardRef(SwitchBase))>
                              </ForwardRef(Checkbox)>
                            </WithStyles(ForwardRef(Checkbox))>
                            <WithStyles(ForwardRef(Typography))
                              className="MuiFormControlLabel-label HvCheckBox-labelTypography"
                              component="span"
                            >
                              <ForwardRef(Typography)
                                className="MuiFormControlLabel-label HvCheckBox-labelTypography"
                                classes={
                                  Object {
                                    "alignCenter": "MuiTypography-alignCenter",
                                    "alignJustify": "MuiTypography-alignJustify",
                                    "alignLeft": "MuiTypography-alignLeft",
                                    "alignRight": "MuiTypography-alignRight",
                                    "body1": "MuiTypography-body1",
                                    "body2": "MuiTypography-body2",
                                    "button": "MuiTypography-button",
                                    "caption": "MuiTypography-caption",
                                    "colorError": "MuiTypography-colorError",
                                    "colorInherit": "MuiTypography-colorInherit",
                                    "colorPrimary": "MuiTypography-colorPrimary",
                                    "colorSecondary": "MuiTypography-colorSecondary",
                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                    "displayBlock": "MuiTypography-displayBlock",
                                    "displayInline": "MuiTypography-displayInline",
                                    "gutterBottom": "MuiTypography-gutterBottom",
                                    "h1": "MuiTypography-h1",
                                    "h2": "MuiTypography-h2",
                                    "h3": "MuiTypography-h3",
                                    "h4": "MuiTypography-h4",
                                    "h5": "MuiTypography-h5",
                                    "h6": "MuiTypography-h6",
                                    "noWrap": "MuiTypography-noWrap",
                                    "overline": "MuiTypography-overline",
                                    "paragraph": "MuiTypography-paragraph",
                                    "root": "MuiTypography-root",
                                    "srOnly": "MuiTypography-srOnly",
                                    "subtitle1": "MuiTypography-subtitle1",
                                    "subtitle2": "MuiTypography-subtitle2",
                                  }
                                }
                                component="span"
                              >
                                <span
                                  className="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                                >
                                  Value 2
                                </span>
                              </ForwardRef(Typography)>
                            </WithStyles(ForwardRef(Typography))>
                          </label>
                        </ForwardRef(FormControlLabel)>
                      </WithStyles(ForwardRef(FormControlLabel))>
                    </HvCheckbox>
                  </WithStyles(HvCheckbox)>
                </ComponentFunction>
              </li>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
        <WithStyles(Focus)
          classes={
            Object {
              "focus": "HvList-focus",
            }
          }
          configuration={
            Object {
              "tabIndex": -1,
            }
          }
          isDropdown={true}
          key="2"
          rootRef={
            Object {
              "current": <div
                class="HvList-root"
              >
                <label
                  class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd HvList-selectAll"
                >
                  <span
                    aria-disabled="false"
                    class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox"
                  >
                    <span
                      class="MuiIconButton-label"
                    >
                      <input
                        class="PrivateSwitchBase-input-4"
                        data-indeterminate="true"
                        type="checkbox"
                        value=""
                      />
                      <div
                        class="HvCheckBox-icon HvIconCheckboxPartial-root HvIconCheckboxPartial-rootS"
                        font-size="default"
                      >
                        <svg
                          focusable="false"
                          height="16px"
                          viewBox="0 0 16 16"
                          width="16px"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            class="color0"
                            d="M0 0h16v16H0z"
                            fill="#FFFFFF"
                          />
                          <g
                            class="color1"
                            fill="#414141"
                          >
                            <path
                              d="M0 0v16h16V0zm15 15H1V1h14z"
                            />
                            <path
                              d="M4 7h8v2H4z"
                            />
                          </g>
                        </svg>
                      </div>
                    </span>
                  </span>
                  <span
                    class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                  >
                    <span
                      class="HvTypography-root HvTypography-highlightText"
                    >
                      2
                      <span
                        class="HvTypography-root HvTypography-normalText"
                      >
                         of 
                        3
                      </span>
                    </span>
                  </span>
                </label>
                <ul
                  aria-multiselectable="true"
                  class="HvList-list"
                  role="listbox"
                >
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <label
                      class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                    >
                      <span
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-2 Mui-checked"
                      >
                        <span
                          class="MuiIconButton-label"
                        >
                          <input
                            checked=""
                            class="PrivateSwitchBase-input-4"
                            data-indeterminate="false"
                            tabindex="0"
                            type="checkbox"
                            value=""
                          />
                          <div
                            class="HvCheckBox-icon HvList-icon HvIconCheckboxCheck-root HvIconCheckboxCheck-rootS"
                            font-size="default"
                          >
                            <svg
                              focusable="false"
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M0 0h16v16H0z"
                                fill="#414141"
                              />
                              <path
                                class="color1"
                                d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                fill="#FFFFFF"
                              />
                            </svg>
                          </div>
                        </span>
                      </span>
                      <span
                        class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                      >
                        Value 1
                      </span>
                    </label>
                  </li>
                  <li
                    aria-selected="false"
                    class="HvList-listItem HvList-selector HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <label
                      class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                    >
                      <span
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox"
                      >
                        <span
                          class="MuiIconButton-label"
                        >
                          <input
                            class="PrivateSwitchBase-input-4"
                            data-indeterminate="false"
                            tabindex="-1"
                            type="checkbox"
                            value=""
                          />
                          <div
                            class="HvCheckBox-icon HvList-icon HvIconCheckbox-root HvIconCheckbox-rootS"
                            font-size="default"
                          >
                            <svg
                              focusable="false"
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M0 0h16v16H0z"
                                fill="#FFFFFF"
                              />
                              <path
                                class="color1"
                                d="M0-.00291v16h16v-16zm15 15H1v-14h14z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                        </span>
                      </span>
                      <span
                        class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                      >
                        Value 2
                      </span>
                    </label>
                  </li>
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <label
                      class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                    >
                      <span
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-2 Mui-checked"
                      >
                        <span
                          class="MuiIconButton-label"
                        >
                          <input
                            checked=""
                            class="PrivateSwitchBase-input-4"
                            data-indeterminate="false"
                            tabindex="-1"
                            type="checkbox"
                            value=""
                          />
                          <div
                            class="HvCheckBox-icon HvList-icon HvIconCheckboxCheck-root HvIconCheckboxCheck-rootS"
                            font-size="default"
                          >
                            <svg
                              focusable="false"
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M0 0h16v16H0z"
                                fill="#414141"
                              />
                              <path
                                class="color1"
                                d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                fill="#FFFFFF"
                              />
                            </svg>
                          </div>
                        </span>
                      </span>
                      <span
                        class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                      >
                        Value 3
                      </span>
                    </label>
                  </li>
                </ul>
              </div>,
            }
          }
          selected={true}
          strategy="listbox"
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focus": "HvFocus-focus HvList-focus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            configuration={
              Object {
                "tabIndex": -1,
              }
            }
            isDropdown={true}
            rootRef={
              Object {
                "current": <div
                  class="HvList-root"
                >
                  <label
                    class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd HvList-selectAll"
                  >
                    <span
                      aria-disabled="false"
                      class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox"
                    >
                      <span
                        class="MuiIconButton-label"
                      >
                        <input
                          class="PrivateSwitchBase-input-4"
                          data-indeterminate="true"
                          type="checkbox"
                          value=""
                        />
                        <div
                          class="HvCheckBox-icon HvIconCheckboxPartial-root HvIconCheckboxPartial-rootS"
                          font-size="default"
                        >
                          <svg
                            focusable="false"
                            height="16px"
                            viewBox="0 0 16 16"
                            width="16px"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              class="color0"
                              d="M0 0h16v16H0z"
                              fill="#FFFFFF"
                            />
                            <g
                              class="color1"
                              fill="#414141"
                            >
                              <path
                                d="M0 0v16h16V0zm15 15H1V1h14z"
                              />
                              <path
                                d="M4 7h8v2H4z"
                              />
                            </g>
                          </svg>
                        </div>
                      </span>
                    </span>
                    <span
                      class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                    >
                      <span
                        class="HvTypography-root HvTypography-highlightText"
                      >
                        2
                        <span
                          class="HvTypography-root HvTypography-normalText"
                        >
                           of 
                          3
                        </span>
                      </span>
                    </span>
                  </label>
                  <ul
                    aria-multiselectable="true"
                    class="HvList-list"
                    role="listbox"
                  >
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <label
                        class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                      >
                        <span
                          aria-disabled="false"
                          class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-2 Mui-checked"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <input
                              checked=""
                              class="PrivateSwitchBase-input-4"
                              data-indeterminate="false"
                              tabindex="0"
                              type="checkbox"
                              value=""
                            />
                            <div
                              class="HvCheckBox-icon HvList-icon HvIconCheckboxCheck-root HvIconCheckboxCheck-rootS"
                              font-size="default"
                            >
                              <svg
                                focusable="false"
                                height="16px"
                                viewBox="0 0 16 16"
                                width="16px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M0 0h16v16H0z"
                                  fill="#414141"
                                />
                                <path
                                  class="color1"
                                  d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                  fill="#FFFFFF"
                                />
                              </svg>
                            </div>
                          </span>
                        </span>
                        <span
                          class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                        >
                          Value 1
                        </span>
                      </label>
                    </li>
                    <li
                      aria-selected="false"
                      class="HvList-listItem HvList-selector HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <label
                        class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                      >
                        <span
                          aria-disabled="false"
                          class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <input
                              class="PrivateSwitchBase-input-4"
                              data-indeterminate="false"
                              tabindex="-1"
                              type="checkbox"
                              value=""
                            />
                            <div
                              class="HvCheckBox-icon HvList-icon HvIconCheckbox-root HvIconCheckbox-rootS"
                              font-size="default"
                            >
                              <svg
                                focusable="false"
                                height="16px"
                                viewBox="0 0 16 16"
                                width="16px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M0 0h16v16H0z"
                                  fill="#FFFFFF"
                                />
                                <path
                                  class="color1"
                                  d="M0-.00291v16h16v-16zm15 15H1v-14h14z"
                                  fill="#414141"
                                />
                              </svg>
                            </div>
                          </span>
                        </span>
                        <span
                          class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                        >
                          Value 2
                        </span>
                      </label>
                    </li>
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <label
                        class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                      >
                        <span
                          aria-disabled="false"
                          class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-2 Mui-checked"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <input
                              checked=""
                              class="PrivateSwitchBase-input-4"
                              data-indeterminate="false"
                              tabindex="-1"
                              type="checkbox"
                              value=""
                            />
                            <div
                              class="HvCheckBox-icon HvList-icon HvIconCheckboxCheck-root HvIconCheckboxCheck-rootS"
                              font-size="default"
                            >
                              <svg
                                focusable="false"
                                height="16px"
                                viewBox="0 0 16 16"
                                width="16px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M0 0h16v16H0z"
                                  fill="#414141"
                                />
                                <path
                                  class="color1"
                                  d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                  fill="#FFFFFF"
                                />
                              </svg>
                            </div>
                          </span>
                        </span>
                        <span
                          class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                        >
                          Value 3
                        </span>
                      </label>
                    </li>
                  </ul>
                </div>,
              }
            }
            selected={true}
            strategy="listbox"
          >
            <ConditionalWrapper
              condition={false}
              wrapper={[Function]}
            >
              <li
                aria-selected={true}
                className="HvList-listItem HvList-selector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                role="option"
                selected={true}
              >
                <ComponentFunction>
                  <WithStyles(HvCheckbox)
                    checked={true}
                    classes={
                      Object {
                        "container": "HvList-selectorContainer",
                        "icon": "HvList-icon",
                      }
                    }
                    label="Value 3"
                    onChange={[Function]}
                  >
                    <HvCheckbox
                      checked={true}
                      classes={
                        Object {
                          "checkBox": "HvCheckBox-checkBox",
                          "container": "HvCheckBox-container HvList-selectorContainer",
                          "disableFocus": "HvCheckBox-disableFocus",
                          "icon": "HvCheckBox-icon HvList-icon",
                          "labelDisabled": "HvCheckBox-labelDisabled",
                          "labelEnd": "HvCheckBox-labelEnd",
                          "labelStart": "HvCheckBox-labelStart",
                          "labelTypography": "HvCheckBox-labelTypography",
                        }
                      }
                      label="Value 3"
                      onChange={[Function]}
                    >
                      <WithStyles(ForwardRef(FormControlLabel))
                        className="HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                        classes={
                          Object {
                            "disabled": "HvCheckBox-labelDisabled",
                            "label": "HvCheckBox-labelTypography",
                          }
                        }
                        control={
                          <WithStyles(ForwardRef(Checkbox))
                            checked={true}
                            checkedIcon={
                              <WithStyles(CheckboxCheck)
                                className="HvCheckBox-icon HvList-icon"
                              />
                            }
                            className="HvCheckBox-checkBox"
                            color="default"
                            disableRipple={true}
                            disabled={false}
                            icon={
                              <WithStyles(Checkbox)
                                className="HvCheckBox-icon HvList-icon"
                              />
                            }
                            indeterminateIcon={
                              <WithStyles(CheckboxPartial)
                                className="HvCheckBox-icon HvList-icon"
                              />
                            }
                            onBlur={[Function]}
                            onChange={[Function]}
                            value=""
                          />
                        }
                        disabled={false}
                        label="Value 3"
                        labelPlacement="end"
                      >
                        <ForwardRef(FormControlLabel)
                          className="HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                          classes={
                            Object {
                              "disabled": "Mui-disabled HvCheckBox-labelDisabled",
                              "label": "MuiFormControlLabel-label HvCheckBox-labelTypography",
                              "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                              "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                              "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                              "root": "MuiFormControlLabel-root",
                            }
                          }
                          control={
                            <WithStyles(ForwardRef(Checkbox))
                              checked={true}
                              checkedIcon={
                                <WithStyles(CheckboxCheck)
                                  className="HvCheckBox-icon HvList-icon"
                                />
                              }
                              className="HvCheckBox-checkBox"
                              color="default"
                              disableRipple={true}
                              disabled={false}
                              icon={
                                <WithStyles(Checkbox)
                                  className="HvCheckBox-icon HvList-icon"
                                />
                              }
                              indeterminateIcon={
                                <WithStyles(CheckboxPartial)
                                  className="HvCheckBox-icon HvList-icon"
                                />
                              }
                              onBlur={[Function]}
                              onChange={[Function]}
                              value=""
                            />
                          }
                          disabled={false}
                          label="Value 3"
                          labelPlacement="end"
                        >
                          <label
                            className="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                          >
                            <WithStyles(ForwardRef(Checkbox))
                              checked={true}
                              checkedIcon={
                                <WithStyles(CheckboxCheck)
                                  className="HvCheckBox-icon HvList-icon"
                                />
                              }
                              className="HvCheckBox-checkBox"
                              color="default"
                              disableRipple={true}
                              disabled={false}
                              icon={
                                <WithStyles(Checkbox)
                                  className="HvCheckBox-icon HvList-icon"
                                />
                              }
                              indeterminateIcon={
                                <WithStyles(CheckboxPartial)
                                  className="HvCheckBox-icon HvList-icon"
                                />
                              }
                              onBlur={[Function]}
                              onChange={[Function]}
                              value=""
                            >
                              <ForwardRef(Checkbox)
                                checked={true}
                                checkedIcon={
                                  <WithStyles(CheckboxCheck)
                                    className="HvCheckBox-icon HvList-icon"
                                  />
                                }
                                className="HvCheckBox-checkBox"
                                classes={
                                  Object {
                                    "checked": "Mui-checked",
                                    "colorPrimary": "MuiCheckbox-colorPrimary",
                                    "colorSecondary": "MuiCheckbox-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "indeterminate": "MuiCheckbox-indeterminate",
                                    "root": "MuiCheckbox-root",
                                  }
                                }
                                color="default"
                                disableRipple={true}
                                disabled={false}
                                icon={
                                  <WithStyles(Checkbox)
                                    className="HvCheckBox-icon HvList-icon"
                                  />
                                }
                                indeterminateIcon={
                                  <WithStyles(CheckboxPartial)
                                    className="HvCheckBox-icon HvList-icon"
                                  />
                                }
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              >
                                <WithStyles(ForwardRef(SwitchBase))
                                  checked={true}
                                  checkedIcon={
                                    <WithStyles(CheckboxCheck)
                                      className="HvCheckBox-icon HvList-icon"
                                      fontSize="default"
                                    />
                                  }
                                  className="HvCheckBox-checkBox"
                                  classes={
                                    Object {
                                      "checked": "Mui-checked",
                                      "disabled": "Mui-disabled",
                                      "root": "MuiCheckbox-root",
                                    }
                                  }
                                  color="default"
                                  disableRipple={true}
                                  disabled={false}
                                  icon={
                                    <WithStyles(Checkbox)
                                      className="HvCheckBox-icon HvList-icon"
                                      fontSize="default"
                                    />
                                  }
                                  inputProps={
                                    Object {
                                      "data-indeterminate": false,
                                    }
                                  }
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  type="checkbox"
                                  value=""
                                >
                                  <ForwardRef(SwitchBase)
                                    checked={true}
                                    checkedIcon={
                                      <WithStyles(CheckboxCheck)
                                        className="HvCheckBox-icon HvList-icon"
                                        fontSize="default"
                                      />
                                    }
                                    className="HvCheckBox-checkBox"
                                    classes={
                                      Object {
                                        "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                                        "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                                        "input": "PrivateSwitchBase-input-4",
                                        "root": "PrivateSwitchBase-root-1 MuiCheckbox-root",
                                      }
                                    }
                                    color="default"
                                    disableRipple={true}
                                    disabled={false}
                                    icon={
                                      <WithStyles(Checkbox)
                                        className="HvCheckBox-icon HvList-icon"
                                        fontSize="default"
                                      />
                                    }
                                    inputProps={
                                      Object {
                                        "data-indeterminate": false,
                                      }
                                    }
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    type="checkbox"
                                    value=""
                                  >
                                    <WithStyles(ForwardRef(IconButton))
                                      className="PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-2 Mui-checked"
                                      color="default"
                                      component="span"
                                      disableRipple={true}
                                      disabled={false}
                                      onBlur={[Function]}
                                      onFocus={[Function]}
                                      tabIndex={null}
                                    >
                                      <ForwardRef(IconButton)
                                        className="PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-2 Mui-checked"
                                        classes={
                                          Object {
                                            "colorInherit": "MuiIconButton-colorInherit",
                                            "colorPrimary": "MuiIconButton-colorPrimary",
                                            "colorSecondary": "MuiIconButton-colorSecondary",
                                            "disabled": "Mui-disabled",
                                            "edgeEnd": "MuiIconButton-edgeEnd",
                                            "edgeStart": "MuiIconButton-edgeStart",
                                            "label": "MuiIconButton-label",
                                            "root": "MuiIconButton-root",
                                            "sizeSmall": "MuiIconButton-sizeSmall",
                                          }
                                        }
                                        color="default"
                                        component="span"
                                        disableRipple={true}
                                        disabled={false}
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={null}
                                      >
                                        <WithStyles(ForwardRef(ButtonBase))
                                          centerRipple={true}
                                          className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-2 Mui-checked"
                                          component="span"
                                          disableRipple={true}
                                          disabled={false}
                                          focusRipple={true}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <ForwardRef(ButtonBase)
                                            centerRipple={true}
                                            className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-2 Mui-checked"
                                            classes={
                                              Object {
                                                "disabled": "Mui-disabled",
                                                "focusVisible": "Mui-focusVisible",
                                                "root": "MuiButtonBase-root",
                                              }
                                            }
                                            component="span"
                                            disableRipple={true}
                                            disabled={false}
                                            focusRipple={true}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <span
                                              aria-disabled={false}
                                              className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-2 Mui-checked"
                                              onBlur={[Function]}
                                              onDragLeave={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              tabIndex={null}
                                            >
                                              <span
                                                className="MuiIconButton-label"
                                              >
                                                <input
                                                  checked={true}
                                                  className="PrivateSwitchBase-input-4"
                                                  data-indeterminate={false}
                                                  disabled={false}
                                                  onChange={[Function]}
                                                  type="checkbox"
                                                  value=""
                                                />
                                                <WithStyles(CheckboxCheck)
                                                  className="HvCheckBox-icon HvList-icon"
                                                  fontSize="default"
                                                >
                                                  <CheckboxCheck
                                                    className="HvCheckBox-icon HvList-icon"
                                                    classes={
                                                      Object {
                                                        "root": "HvIconCheckboxCheck-root",
                                                        "rootL": "HvIconCheckboxCheck-rootL",
                                                        "rootM": "HvIconCheckboxCheck-rootM",
                                                        "rootS": "HvIconCheckboxCheck-rootS",
                                                        "rootXs": "HvIconCheckboxCheck-rootXs",
                                                      }
                                                    }
                                                    fontSize="default"
                                                  >
                                                    <div
                                                      className="HvCheckBox-icon HvList-icon HvIconCheckboxCheck-root HvIconCheckboxCheck-rootS"
                                                      fontSize="default"
                                                    >
                                                      <svg
                                                        focusable={false}
                                                        height="16px"
                                                        viewBox="0 0 16 16"
                                                        width="16px"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          className="color0"
                                                          d="M0 0h16v16H0z"
                                                          fill="#414141"
                                                        />
                                                        <path
                                                          className="color1"
                                                          d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                                          fill="#FFFFFF"
                                                        />
                                                      </svg>
                                                    </div>
                                                  </CheckboxCheck>
                                                </WithStyles(CheckboxCheck)>
                                              </span>
                                            </span>
                                          </ForwardRef(ButtonBase)>
                                        </WithStyles(ForwardRef(ButtonBase))>
                                      </ForwardRef(IconButton)>
                                    </WithStyles(ForwardRef(IconButton))>
                                  </ForwardRef(SwitchBase)>
                                </WithStyles(ForwardRef(SwitchBase))>
                              </ForwardRef(Checkbox)>
                            </WithStyles(ForwardRef(Checkbox))>
                            <WithStyles(ForwardRef(Typography))
                              className="MuiFormControlLabel-label HvCheckBox-labelTypography"
                              component="span"
                            >
                              <ForwardRef(Typography)
                                className="MuiFormControlLabel-label HvCheckBox-labelTypography"
                                classes={
                                  Object {
                                    "alignCenter": "MuiTypography-alignCenter",
                                    "alignJustify": "MuiTypography-alignJustify",
                                    "alignLeft": "MuiTypography-alignLeft",
                                    "alignRight": "MuiTypography-alignRight",
                                    "body1": "MuiTypography-body1",
                                    "body2": "MuiTypography-body2",
                                    "button": "MuiTypography-button",
                                    "caption": "MuiTypography-caption",
                                    "colorError": "MuiTypography-colorError",
                                    "colorInherit": "MuiTypography-colorInherit",
                                    "colorPrimary": "MuiTypography-colorPrimary",
                                    "colorSecondary": "MuiTypography-colorSecondary",
                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                    "displayBlock": "MuiTypography-displayBlock",
                                    "displayInline": "MuiTypography-displayInline",
                                    "gutterBottom": "MuiTypography-gutterBottom",
                                    "h1": "MuiTypography-h1",
                                    "h2": "MuiTypography-h2",
                                    "h3": "MuiTypography-h3",
                                    "h4": "MuiTypography-h4",
                                    "h5": "MuiTypography-h5",
                                    "h6": "MuiTypography-h6",
                                    "noWrap": "MuiTypography-noWrap",
                                    "overline": "MuiTypography-overline",
                                    "paragraph": "MuiTypography-paragraph",
                                    "root": "MuiTypography-root",
                                    "srOnly": "MuiTypography-srOnly",
                                    "subtitle1": "MuiTypography-subtitle1",
                                    "subtitle2": "MuiTypography-subtitle2",
                                  }
                                }
                                component="span"
                              >
                                <span
                                  className="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                                >
                                  Value 3
                                </span>
                              </ForwardRef(Typography)>
                            </WithStyles(ForwardRef(Typography))>
                          </label>
                        </ForwardRef(FormControlLabel)>
                      </WithStyles(ForwardRef(FormControlLabel))>
                    </HvCheckbox>
                  </WithStyles(HvCheckbox)>
                </ComponentFunction>
              </li>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
      </ul>
    </div>
  </List>
</WithStyles(List)>
`;

exports[`<List /> Single selection should render correctly 1`] = `
<WithStyles(List)
  onChange={[MockFunction]}
  onClick={[MockFunction]}
  selectDefault={true}
  singleSelectionToggle={false}
  values={
    Array [
      Object {
        "label": "Value 1",
      },
      Object {
        "label": "Value 2",
      },
      Object {
        "label": "Value 3",
      },
    ]
  }
>
  <List
    classes={
      Object {
        "box": "HvList-box",
        "condensed": "HvList-condensed",
        "disabled": "HvList-disabled",
        "focus": "HvList-focus",
        "icon": "HvList-icon",
        "label": "HvList-label",
        "labelIconLeftPadding": "HvList-labelIconLeftPadding",
        "link": "HvList-link",
        "list": "HvList-list",
        "listItem": "HvList-listItem",
        "noIconLeftPadding": "HvList-noIconLeftPadding",
        "root": "HvList-root",
        "selectAll": "HvList-selectAll",
        "selected": "HvList-selected",
        "selector": "HvList-selector",
        "selectorContainer": "HvList-selectorContainer",
        "textDisabled": "HvList-textDisabled",
        "truncate": "HvList-truncate",
      }
    }
    condensed={false}
    hasTooltips={false}
    labels={
      Object {
        "selectAll": "All",
        "selectionConjunction": "of",
      }
    }
    multiSelect={false}
    onChange={[MockFunction]}
    onClick={[MockFunction]}
    selectDefault={true}
    selectable={true}
    showSelectAll={false}
    singleSelectionToggle={false}
    useSelector={false}
    values={
      Array [
        Object {
          "label": "Value 1",
        },
        Object {
          "label": "Value 2",
        },
        Object {
          "label": "Value 3",
        },
      ]
    }
  >
    <div
      className="HvList-root"
    >
      <ul
        className="HvList-list"
        role="listbox"
      >
        <WithStyles(Focus)
          classes={
            Object {
              "focus": "HvList-focus",
            }
          }
          configuration={
            Object {
              "tabIndex": 0,
            }
          }
          isDropdown={true}
          key="0"
          rootRef={
            Object {
              "current": <div
                class="HvList-root"
              >
                <ul
                  class="HvList-list"
                  role="listbox"
                >
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="0"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                    >
                      Value 1
                    </p>
                  </li>
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 2
                    </p>
                  </li>
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 3
                    </p>
                  </li>
                </ul>
              </div>,
            }
          }
          selected={true}
          strategy="listbox"
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focus": "HvFocus-focus HvList-focus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            configuration={
              Object {
                "tabIndex": 0,
              }
            }
            isDropdown={true}
            rootRef={
              Object {
                "current": <div
                  class="HvList-root"
                >
                  <ul
                    class="HvList-list"
                    role="listbox"
                  >
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="0"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 1
                      </p>
                    </li>
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 2
                      </p>
                    </li>
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 3
                      </p>
                    </li>
                  </ul>
                </div>,
              }
            }
            selected={true}
            strategy="listbox"
          >
            <ConditionalWrapper
              condition={false}
              wrapper={[Function]}
            >
              <li
                aria-selected={true}
                className="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                role="option"
                selected={true}
              >
                <ComponentFunction>
                  <WithStyles(ForwardRef)
                    className="HvList-label HvList-truncate HvList-selected"
                    variant="selectedText"
                  >
                    <ForwardRef
                      className="HvList-label HvList-truncate HvList-selected"
                      classes={
                        Object {
                          "3xlTitle": "HvTypography-3xlTitle",
                          "4xlTitle": "HvTypography-4xlTitle",
                          "5xlTitle": "HvTypography-5xlTitle",
                          "disabledButtonText": "HvTypography-disabledButtonText",
                          "highlightText": "HvTypography-highlightText",
                          "infoText": "HvTypography-infoText",
                          "inlineLink": "HvTypography-inlineLink",
                          "lTitle": "HvTypography-lTitle",
                          "labelText": "HvTypography-labelText",
                          "mTitle": "HvTypography-mTitle",
                          "normalText": "HvTypography-normalText",
                          "placeholderText": "HvTypography-placeholderText",
                          "root": "HvTypography-root",
                          "sLink": "HvTypography-sLink",
                          "sText": "HvTypography-sText",
                          "sTitle": "HvTypography-sTitle",
                          "selectedNavText": "HvTypography-selectedNavText",
                          "selectedText": "HvTypography-selectedText",
                          "vizText": "HvTypography-vizText",
                          "xlTitle": "HvTypography-xlTitle",
                          "xsTitle": "HvTypography-xsTitle",
                          "xxlTitle": "HvTypography-xxlTitle",
                          "xxsTitle": "HvTypography-xxsTitle",
                        }
                      }
                      variant="selectedText"
                    >
                      <p
                        className="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 1
                      </p>
                    </ForwardRef>
                  </WithStyles(ForwardRef)>
                </ComponentFunction>
              </li>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
        <WithStyles(Focus)
          classes={
            Object {
              "focus": "HvList-focus",
            }
          }
          configuration={
            Object {
              "tabIndex": -1,
            }
          }
          isDropdown={true}
          key="1"
          rootRef={
            Object {
              "current": <div
                class="HvList-root"
              >
                <ul
                  class="HvList-list"
                  role="listbox"
                >
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="0"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                    >
                      Value 1
                    </p>
                  </li>
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 2
                    </p>
                  </li>
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 3
                    </p>
                  </li>
                </ul>
              </div>,
            }
          }
          selected={false}
          strategy="listbox"
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focus": "HvFocus-focus HvList-focus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            configuration={
              Object {
                "tabIndex": -1,
              }
            }
            isDropdown={true}
            rootRef={
              Object {
                "current": <div
                  class="HvList-root"
                >
                  <ul
                    class="HvList-list"
                    role="listbox"
                  >
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="0"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 1
                      </p>
                    </li>
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 2
                      </p>
                    </li>
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 3
                      </p>
                    </li>
                  </ul>
                </div>,
              }
            }
            selected={false}
            strategy="listbox"
          >
            <ConditionalWrapper
              condition={false}
              wrapper={[Function]}
            >
              <li
                className="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                role="option"
                selected={false}
              >
                <ComponentFunction>
                  <WithStyles(ForwardRef)
                    className="HvList-label HvList-truncate"
                    variant="normalText"
                  >
                    <ForwardRef
                      className="HvList-label HvList-truncate"
                      classes={
                        Object {
                          "3xlTitle": "HvTypography-3xlTitle",
                          "4xlTitle": "HvTypography-4xlTitle",
                          "5xlTitle": "HvTypography-5xlTitle",
                          "disabledButtonText": "HvTypography-disabledButtonText",
                          "highlightText": "HvTypography-highlightText",
                          "infoText": "HvTypography-infoText",
                          "inlineLink": "HvTypography-inlineLink",
                          "lTitle": "HvTypography-lTitle",
                          "labelText": "HvTypography-labelText",
                          "mTitle": "HvTypography-mTitle",
                          "normalText": "HvTypography-normalText",
                          "placeholderText": "HvTypography-placeholderText",
                          "root": "HvTypography-root",
                          "sLink": "HvTypography-sLink",
                          "sText": "HvTypography-sText",
                          "sTitle": "HvTypography-sTitle",
                          "selectedNavText": "HvTypography-selectedNavText",
                          "selectedText": "HvTypography-selectedText",
                          "vizText": "HvTypography-vizText",
                          "xlTitle": "HvTypography-xlTitle",
                          "xsTitle": "HvTypography-xsTitle",
                          "xxlTitle": "HvTypography-xxlTitle",
                          "xxsTitle": "HvTypography-xxsTitle",
                        }
                      }
                      variant="normalText"
                    >
                      <p
                        className="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 2
                      </p>
                    </ForwardRef>
                  </WithStyles(ForwardRef)>
                </ComponentFunction>
              </li>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
        <WithStyles(Focus)
          classes={
            Object {
              "focus": "HvList-focus",
            }
          }
          configuration={
            Object {
              "tabIndex": -1,
            }
          }
          isDropdown={true}
          key="2"
          rootRef={
            Object {
              "current": <div
                class="HvList-root"
              >
                <ul
                  class="HvList-list"
                  role="listbox"
                >
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="0"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                    >
                      Value 1
                    </p>
                  </li>
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 2
                    </p>
                  </li>
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                    >
                      Value 3
                    </p>
                  </li>
                </ul>
              </div>,
            }
          }
          selected={false}
          strategy="listbox"
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focus": "HvFocus-focus HvList-focus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            configuration={
              Object {
                "tabIndex": -1,
              }
            }
            isDropdown={true}
            rootRef={
              Object {
                "current": <div
                  class="HvList-root"
                >
                  <ul
                    class="HvList-list"
                    role="listbox"
                  >
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selected HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="0"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-selected HvTypography-root HvTypography-selectedText"
                      >
                        Value 1
                      </p>
                    </li>
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 2
                      </p>
                    </li>
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 3
                      </p>
                    </li>
                  </ul>
                </div>,
              }
            }
            selected={false}
            strategy="listbox"
          >
            <ConditionalWrapper
              condition={false}
              wrapper={[Function]}
            >
              <li
                className="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                role="option"
                selected={false}
              >
                <ComponentFunction>
                  <WithStyles(ForwardRef)
                    className="HvList-label HvList-truncate"
                    variant="normalText"
                  >
                    <ForwardRef
                      className="HvList-label HvList-truncate"
                      classes={
                        Object {
                          "3xlTitle": "HvTypography-3xlTitle",
                          "4xlTitle": "HvTypography-4xlTitle",
                          "5xlTitle": "HvTypography-5xlTitle",
                          "disabledButtonText": "HvTypography-disabledButtonText",
                          "highlightText": "HvTypography-highlightText",
                          "infoText": "HvTypography-infoText",
                          "inlineLink": "HvTypography-inlineLink",
                          "lTitle": "HvTypography-lTitle",
                          "labelText": "HvTypography-labelText",
                          "mTitle": "HvTypography-mTitle",
                          "normalText": "HvTypography-normalText",
                          "placeholderText": "HvTypography-placeholderText",
                          "root": "HvTypography-root",
                          "sLink": "HvTypography-sLink",
                          "sText": "HvTypography-sText",
                          "sTitle": "HvTypography-sTitle",
                          "selectedNavText": "HvTypography-selectedNavText",
                          "selectedText": "HvTypography-selectedText",
                          "vizText": "HvTypography-vizText",
                          "xlTitle": "HvTypography-xlTitle",
                          "xsTitle": "HvTypography-xsTitle",
                          "xxlTitle": "HvTypography-xxlTitle",
                          "xxsTitle": "HvTypography-xxsTitle",
                        }
                      }
                      variant="normalText"
                    >
                      <p
                        className="HvList-label HvList-truncate HvTypography-root HvTypography-normalText"
                      >
                        Value 3
                      </p>
                    </ForwardRef>
                  </WithStyles(ForwardRef)>
                </ComponentFunction>
              </li>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
      </ul>
    </div>
  </List>
</WithStyles(List)>
`;

exports[`<List /> Single selection with icons should render correctly 1`] = `
<WithStyles(List)
  values={
    Array [
      Object {
        "iconCallback": [Function],
        "label": "Value 1",
      },
      Object {
        "label": "Value 2",
      },
      Object {
        "label": "Value 3",
        "showNavIcon": true,
      },
    ]
  }
>
  <List
    classes={
      Object {
        "box": "HvList-box",
        "condensed": "HvList-condensed",
        "disabled": "HvList-disabled",
        "focus": "HvList-focus",
        "icon": "HvList-icon",
        "label": "HvList-label",
        "labelIconLeftPadding": "HvList-labelIconLeftPadding",
        "link": "HvList-link",
        "list": "HvList-list",
        "listItem": "HvList-listItem",
        "noIconLeftPadding": "HvList-noIconLeftPadding",
        "root": "HvList-root",
        "selectAll": "HvList-selectAll",
        "selected": "HvList-selected",
        "selector": "HvList-selector",
        "selectorContainer": "HvList-selectorContainer",
        "textDisabled": "HvList-textDisabled",
        "truncate": "HvList-truncate",
      }
    }
    condensed={false}
    hasTooltips={false}
    labels={
      Object {
        "selectAll": "All",
        "selectionConjunction": "of",
      }
    }
    multiSelect={false}
    onChange={[Function]}
    onClick={[Function]}
    selectDefault={false}
    selectable={true}
    showSelectAll={false}
    singleSelectionToggle={true}
    useSelector={false}
    values={
      Array [
        Object {
          "iconCallback": [Function],
          "label": "Value 1",
        },
        Object {
          "label": "Value 2",
        },
        Object {
          "label": "Value 3",
          "showNavIcon": true,
        },
      ]
    }
  >
    <div
      className="HvList-root"
    >
      <ul
        className="HvList-list"
        role="listbox"
      >
        <WithStyles(Focus)
          classes={
            Object {
              "focus": "HvList-focus",
            }
          }
          configuration={
            Object {
              "tabIndex": 0,
            }
          }
          isDropdown={true}
          key="0"
          rootRef={
            Object {
              "current": <div
                class="HvList-root"
              >
                <ul
                  class="HvList-list"
                  role="listbox"
                >
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="0"
                  >
                    <div
                      class="HvIconLineChart-root HvIconLineChart-rootS"
                    >
                      <svg
                        focusable="false"
                        height="16px"
                        viewBox="0 0 16 16"
                        width="16px"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          class="color0"
                          d="M1.086 11.453l-.707-.707 5.559-5.558 4.2 4.2 4.832-4.831.707.707-5.539 5.536-4.2-4.2zM0 15h16v1H0z"
                          fill="#414141"
                        />
                      </svg>
                    </div>
                    <p
                      class="HvList-label HvList-truncate HvList-labelIconLeftPadding HvTypography-root HvTypography-normalText"
                    >
                      Value 1
                    </p>
                  </li>
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-noIconLeftPadding HvTypography-root HvTypography-normalText"
                    >
                      Value 2
                    </p>
                  </li>
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-noIconLeftPadding HvTypography-root HvTypography-normalText"
                    >
                      Value 3
                    </p>
                    <div
                      class="HvList-box HvIconDropRightXS-root HvIconDropRightXS-rootXs"
                    >
                      <svg
                        focusable="false"
                        height="12px"
                        viewBox="0 0 12 12"
                        width="12px"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          class="color0"
                          d="M8.65 6.00006l-4.6 4.6-.7-.7L7.25 6l-3.9-3.9.7-.7z"
                          fill="#414141"
                        />
                      </svg>
                    </div>
                  </li>
                </ul>
              </div>,
            }
          }
          selected={false}
          strategy="listbox"
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focus": "HvFocus-focus HvList-focus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            configuration={
              Object {
                "tabIndex": 0,
              }
            }
            isDropdown={true}
            rootRef={
              Object {
                "current": <div
                  class="HvList-root"
                >
                  <ul
                    class="HvList-list"
                    role="listbox"
                  >
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="0"
                    >
                      <div
                        class="HvIconLineChart-root HvIconLineChart-rootS"
                      >
                        <svg
                          focusable="false"
                          height="16px"
                          viewBox="0 0 16 16"
                          width="16px"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            class="color0"
                            d="M1.086 11.453l-.707-.707 5.559-5.558 4.2 4.2 4.832-4.831.707.707-5.539 5.536-4.2-4.2zM0 15h16v1H0z"
                            fill="#414141"
                          />
                        </svg>
                      </div>
                      <p
                        class="HvList-label HvList-truncate HvList-labelIconLeftPadding HvTypography-root HvTypography-normalText"
                      >
                        Value 1
                      </p>
                    </li>
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-noIconLeftPadding HvTypography-root HvTypography-normalText"
                      >
                        Value 2
                      </p>
                    </li>
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-noIconLeftPadding HvTypography-root HvTypography-normalText"
                      >
                        Value 3
                      </p>
                      <div
                        class="HvList-box HvIconDropRightXS-root HvIconDropRightXS-rootXs"
                      >
                        <svg
                          focusable="false"
                          height="12px"
                          viewBox="0 0 12 12"
                          width="12px"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            class="color0"
                            d="M8.65 6.00006l-4.6 4.6-.7-.7L7.25 6l-3.9-3.9.7-.7z"
                            fill="#414141"
                          />
                        </svg>
                      </div>
                    </li>
                  </ul>
                </div>,
              }
            }
            selected={false}
            strategy="listbox"
          >
            <ConditionalWrapper
              condition={false}
              wrapper={[Function]}
            >
              <li
                className="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                role="option"
                selected={false}
              >
                <WithStyles(LineChart)>
                  <LineChart
                    classes={
                      Object {
                        "root": "HvIconLineChart-root",
                        "rootL": "HvIconLineChart-rootL",
                        "rootM": "HvIconLineChart-rootM",
                        "rootS": "HvIconLineChart-rootS",
                        "rootXs": "HvIconLineChart-rootXs",
                      }
                    }
                  >
                    <div
                      className="HvIconLineChart-root HvIconLineChart-rootS"
                    >
                      <svg
                        focusable={false}
                        height="16px"
                        viewBox="0 0 16 16"
                        width="16px"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          className="color0"
                          d="M1.086 11.453l-.707-.707 5.559-5.558 4.2 4.2 4.832-4.831.707.707-5.539 5.536-4.2-4.2zM0 15h16v1H0z"
                          fill="#414141"
                        />
                      </svg>
                    </div>
                  </LineChart>
                </WithStyles(LineChart)>
                <ComponentFunction>
                  <WithStyles(ForwardRef)
                    className="HvList-label HvList-truncate HvList-labelIconLeftPadding"
                    variant="normalText"
                  >
                    <ForwardRef
                      className="HvList-label HvList-truncate HvList-labelIconLeftPadding"
                      classes={
                        Object {
                          "3xlTitle": "HvTypography-3xlTitle",
                          "4xlTitle": "HvTypography-4xlTitle",
                          "5xlTitle": "HvTypography-5xlTitle",
                          "disabledButtonText": "HvTypography-disabledButtonText",
                          "highlightText": "HvTypography-highlightText",
                          "infoText": "HvTypography-infoText",
                          "inlineLink": "HvTypography-inlineLink",
                          "lTitle": "HvTypography-lTitle",
                          "labelText": "HvTypography-labelText",
                          "mTitle": "HvTypography-mTitle",
                          "normalText": "HvTypography-normalText",
                          "placeholderText": "HvTypography-placeholderText",
                          "root": "HvTypography-root",
                          "sLink": "HvTypography-sLink",
                          "sText": "HvTypography-sText",
                          "sTitle": "HvTypography-sTitle",
                          "selectedNavText": "HvTypography-selectedNavText",
                          "selectedText": "HvTypography-selectedText",
                          "vizText": "HvTypography-vizText",
                          "xlTitle": "HvTypography-xlTitle",
                          "xsTitle": "HvTypography-xsTitle",
                          "xxlTitle": "HvTypography-xxlTitle",
                          "xxsTitle": "HvTypography-xxsTitle",
                        }
                      }
                      variant="normalText"
                    >
                      <p
                        className="HvList-label HvList-truncate HvList-labelIconLeftPadding HvTypography-root HvTypography-normalText"
                      >
                        Value 1
                      </p>
                    </ForwardRef>
                  </WithStyles(ForwardRef)>
                </ComponentFunction>
              </li>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
        <WithStyles(Focus)
          classes={
            Object {
              "focus": "HvList-focus",
            }
          }
          configuration={
            Object {
              "tabIndex": -1,
            }
          }
          isDropdown={true}
          key="1"
          rootRef={
            Object {
              "current": <div
                class="HvList-root"
              >
                <ul
                  class="HvList-list"
                  role="listbox"
                >
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="0"
                  >
                    <div
                      class="HvIconLineChart-root HvIconLineChart-rootS"
                    >
                      <svg
                        focusable="false"
                        height="16px"
                        viewBox="0 0 16 16"
                        width="16px"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          class="color0"
                          d="M1.086 11.453l-.707-.707 5.559-5.558 4.2 4.2 4.832-4.831.707.707-5.539 5.536-4.2-4.2zM0 15h16v1H0z"
                          fill="#414141"
                        />
                      </svg>
                    </div>
                    <p
                      class="HvList-label HvList-truncate HvList-labelIconLeftPadding HvTypography-root HvTypography-normalText"
                    >
                      Value 1
                    </p>
                  </li>
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-noIconLeftPadding HvTypography-root HvTypography-normalText"
                    >
                      Value 2
                    </p>
                  </li>
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-noIconLeftPadding HvTypography-root HvTypography-normalText"
                    >
                      Value 3
                    </p>
                    <div
                      class="HvList-box HvIconDropRightXS-root HvIconDropRightXS-rootXs"
                    >
                      <svg
                        focusable="false"
                        height="12px"
                        viewBox="0 0 12 12"
                        width="12px"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          class="color0"
                          d="M8.65 6.00006l-4.6 4.6-.7-.7L7.25 6l-3.9-3.9.7-.7z"
                          fill="#414141"
                        />
                      </svg>
                    </div>
                  </li>
                </ul>
              </div>,
            }
          }
          selected={false}
          strategy="listbox"
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focus": "HvFocus-focus HvList-focus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            configuration={
              Object {
                "tabIndex": -1,
              }
            }
            isDropdown={true}
            rootRef={
              Object {
                "current": <div
                  class="HvList-root"
                >
                  <ul
                    class="HvList-list"
                    role="listbox"
                  >
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="0"
                    >
                      <div
                        class="HvIconLineChart-root HvIconLineChart-rootS"
                      >
                        <svg
                          focusable="false"
                          height="16px"
                          viewBox="0 0 16 16"
                          width="16px"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            class="color0"
                            d="M1.086 11.453l-.707-.707 5.559-5.558 4.2 4.2 4.832-4.831.707.707-5.539 5.536-4.2-4.2zM0 15h16v1H0z"
                            fill="#414141"
                          />
                        </svg>
                      </div>
                      <p
                        class="HvList-label HvList-truncate HvList-labelIconLeftPadding HvTypography-root HvTypography-normalText"
                      >
                        Value 1
                      </p>
                    </li>
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-noIconLeftPadding HvTypography-root HvTypography-normalText"
                      >
                        Value 2
                      </p>
                    </li>
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-noIconLeftPadding HvTypography-root HvTypography-normalText"
                      >
                        Value 3
                      </p>
                      <div
                        class="HvList-box HvIconDropRightXS-root HvIconDropRightXS-rootXs"
                      >
                        <svg
                          focusable="false"
                          height="12px"
                          viewBox="0 0 12 12"
                          width="12px"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            class="color0"
                            d="M8.65 6.00006l-4.6 4.6-.7-.7L7.25 6l-3.9-3.9.7-.7z"
                            fill="#414141"
                          />
                        </svg>
                      </div>
                    </li>
                  </ul>
                </div>,
              }
            }
            selected={false}
            strategy="listbox"
          >
            <ConditionalWrapper
              condition={false}
              wrapper={[Function]}
            >
              <li
                className="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                role="option"
                selected={false}
              >
                <ComponentFunction>
                  <WithStyles(ForwardRef)
                    className="HvList-label HvList-truncate HvList-noIconLeftPadding"
                    variant="normalText"
                  >
                    <ForwardRef
                      className="HvList-label HvList-truncate HvList-noIconLeftPadding"
                      classes={
                        Object {
                          "3xlTitle": "HvTypography-3xlTitle",
                          "4xlTitle": "HvTypography-4xlTitle",
                          "5xlTitle": "HvTypography-5xlTitle",
                          "disabledButtonText": "HvTypography-disabledButtonText",
                          "highlightText": "HvTypography-highlightText",
                          "infoText": "HvTypography-infoText",
                          "inlineLink": "HvTypography-inlineLink",
                          "lTitle": "HvTypography-lTitle",
                          "labelText": "HvTypography-labelText",
                          "mTitle": "HvTypography-mTitle",
                          "normalText": "HvTypography-normalText",
                          "placeholderText": "HvTypography-placeholderText",
                          "root": "HvTypography-root",
                          "sLink": "HvTypography-sLink",
                          "sText": "HvTypography-sText",
                          "sTitle": "HvTypography-sTitle",
                          "selectedNavText": "HvTypography-selectedNavText",
                          "selectedText": "HvTypography-selectedText",
                          "vizText": "HvTypography-vizText",
                          "xlTitle": "HvTypography-xlTitle",
                          "xsTitle": "HvTypography-xsTitle",
                          "xxlTitle": "HvTypography-xxlTitle",
                          "xxsTitle": "HvTypography-xxsTitle",
                        }
                      }
                      variant="normalText"
                    >
                      <p
                        className="HvList-label HvList-truncate HvList-noIconLeftPadding HvTypography-root HvTypography-normalText"
                      >
                        Value 2
                      </p>
                    </ForwardRef>
                  </WithStyles(ForwardRef)>
                </ComponentFunction>
              </li>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
        <WithStyles(Focus)
          classes={
            Object {
              "focus": "HvList-focus",
            }
          }
          configuration={
            Object {
              "tabIndex": -1,
            }
          }
          isDropdown={true}
          key="2"
          rootRef={
            Object {
              "current": <div
                class="HvList-root"
              >
                <ul
                  class="HvList-list"
                  role="listbox"
                >
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="0"
                  >
                    <div
                      class="HvIconLineChart-root HvIconLineChart-rootS"
                    >
                      <svg
                        focusable="false"
                        height="16px"
                        viewBox="0 0 16 16"
                        width="16px"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          class="color0"
                          d="M1.086 11.453l-.707-.707 5.559-5.558 4.2 4.2 4.832-4.831.707.707-5.539 5.536-4.2-4.2zM0 15h16v1H0z"
                          fill="#414141"
                        />
                      </svg>
                    </div>
                    <p
                      class="HvList-label HvList-truncate HvList-labelIconLeftPadding HvTypography-root HvTypography-normalText"
                    >
                      Value 1
                    </p>
                  </li>
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-noIconLeftPadding HvTypography-root HvTypography-normalText"
                    >
                      Value 2
                    </p>
                  </li>
                  <li
                    class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <p
                      class="HvList-label HvList-truncate HvList-noIconLeftPadding HvTypography-root HvTypography-normalText"
                    >
                      Value 3
                    </p>
                    <div
                      class="HvList-box HvIconDropRightXS-root HvIconDropRightXS-rootXs"
                    >
                      <svg
                        focusable="false"
                        height="12px"
                        viewBox="0 0 12 12"
                        width="12px"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          class="color0"
                          d="M8.65 6.00006l-4.6 4.6-.7-.7L7.25 6l-3.9-3.9.7-.7z"
                          fill="#414141"
                        />
                      </svg>
                    </div>
                  </li>
                </ul>
              </div>,
            }
          }
          selected={false}
          strategy="listbox"
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focus": "HvFocus-focus HvList-focus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            configuration={
              Object {
                "tabIndex": -1,
              }
            }
            isDropdown={true}
            rootRef={
              Object {
                "current": <div
                  class="HvList-root"
                >
                  <ul
                    class="HvList-list"
                    role="listbox"
                  >
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="0"
                    >
                      <div
                        class="HvIconLineChart-root HvIconLineChart-rootS"
                      >
                        <svg
                          focusable="false"
                          height="16px"
                          viewBox="0 0 16 16"
                          width="16px"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            class="color0"
                            d="M1.086 11.453l-.707-.707 5.559-5.558 4.2 4.2 4.832-4.831.707.707-5.539 5.536-4.2-4.2zM0 15h16v1H0z"
                            fill="#414141"
                          />
                        </svg>
                      </div>
                      <p
                        class="HvList-label HvList-truncate HvList-labelIconLeftPadding HvTypography-root HvTypography-normalText"
                      >
                        Value 1
                      </p>
                    </li>
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-noIconLeftPadding HvTypography-root HvTypography-normalText"
                      >
                        Value 2
                      </p>
                    </li>
                    <li
                      class="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <p
                        class="HvList-label HvList-truncate HvList-noIconLeftPadding HvTypography-root HvTypography-normalText"
                      >
                        Value 3
                      </p>
                      <div
                        class="HvList-box HvIconDropRightXS-root HvIconDropRightXS-rootXs"
                      >
                        <svg
                          focusable="false"
                          height="12px"
                          viewBox="0 0 12 12"
                          width="12px"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            class="color0"
                            d="M8.65 6.00006l-4.6 4.6-.7-.7L7.25 6l-3.9-3.9.7-.7z"
                            fill="#414141"
                          />
                        </svg>
                      </div>
                    </li>
                  </ul>
                </div>,
              }
            }
            selected={false}
            strategy="listbox"
          >
            <ConditionalWrapper
              condition={false}
              wrapper={[Function]}
            >
              <li
                className="HvList-listItem HvFocus-root HvFocus-focusDisabled"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                role="option"
                selected={false}
              >
                <ComponentFunction>
                  <WithStyles(ForwardRef)
                    className="HvList-label HvList-truncate HvList-noIconLeftPadding"
                    variant="normalText"
                  >
                    <ForwardRef
                      className="HvList-label HvList-truncate HvList-noIconLeftPadding"
                      classes={
                        Object {
                          "3xlTitle": "HvTypography-3xlTitle",
                          "4xlTitle": "HvTypography-4xlTitle",
                          "5xlTitle": "HvTypography-5xlTitle",
                          "disabledButtonText": "HvTypography-disabledButtonText",
                          "highlightText": "HvTypography-highlightText",
                          "infoText": "HvTypography-infoText",
                          "inlineLink": "HvTypography-inlineLink",
                          "lTitle": "HvTypography-lTitle",
                          "labelText": "HvTypography-labelText",
                          "mTitle": "HvTypography-mTitle",
                          "normalText": "HvTypography-normalText",
                          "placeholderText": "HvTypography-placeholderText",
                          "root": "HvTypography-root",
                          "sLink": "HvTypography-sLink",
                          "sText": "HvTypography-sText",
                          "sTitle": "HvTypography-sTitle",
                          "selectedNavText": "HvTypography-selectedNavText",
                          "selectedText": "HvTypography-selectedText",
                          "vizText": "HvTypography-vizText",
                          "xlTitle": "HvTypography-xlTitle",
                          "xsTitle": "HvTypography-xsTitle",
                          "xxlTitle": "HvTypography-xxlTitle",
                          "xxsTitle": "HvTypography-xxsTitle",
                        }
                      }
                      variant="normalText"
                    >
                      <p
                        className="HvList-label HvList-truncate HvList-noIconLeftPadding HvTypography-root HvTypography-normalText"
                      >
                        Value 3
                      </p>
                    </ForwardRef>
                  </WithStyles(ForwardRef)>
                </ComponentFunction>
                <WithStyles(DropRightXS)
                  className="HvList-box"
                  iconSize="XS"
                >
                  <DropRightXS
                    className="HvList-box"
                    classes={
                      Object {
                        "root": "HvIconDropRightXS-root",
                        "rootL": "HvIconDropRightXS-rootL",
                        "rootM": "HvIconDropRightXS-rootM",
                        "rootS": "HvIconDropRightXS-rootS",
                        "rootXs": "HvIconDropRightXS-rootXs",
                      }
                    }
                    iconSize="XS"
                  >
                    <div
                      className="HvList-box HvIconDropRightXS-root HvIconDropRightXS-rootXs"
                    >
                      <svg
                        focusable={false}
                        height="12px"
                        viewBox="0 0 12 12"
                        width="12px"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          className="color0"
                          d="M8.65 6.00006l-4.6 4.6-.7-.7L7.25 6l-3.9-3.9.7-.7z"
                          fill="#414141"
                        />
                      </svg>
                    </div>
                  </DropRightXS>
                </WithStyles(DropRightXS)>
              </li>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
      </ul>
    </div>
  </List>
</WithStyles(List)>
`;

exports[`<List /> Single selection with selectors should render correctly 1`] = `
<WithStyles(List)
  selectDefault={true}
  useSelector={true}
  values={
    Array [
      Object {
        "label": "Value 1",
      },
      Object {
        "label": "Value 2",
      },
      Object {
        "label": "Value 3",
      },
    ]
  }
>
  <List
    classes={
      Object {
        "box": "HvList-box",
        "condensed": "HvList-condensed",
        "disabled": "HvList-disabled",
        "focus": "HvList-focus",
        "icon": "HvList-icon",
        "label": "HvList-label",
        "labelIconLeftPadding": "HvList-labelIconLeftPadding",
        "link": "HvList-link",
        "list": "HvList-list",
        "listItem": "HvList-listItem",
        "noIconLeftPadding": "HvList-noIconLeftPadding",
        "root": "HvList-root",
        "selectAll": "HvList-selectAll",
        "selected": "HvList-selected",
        "selector": "HvList-selector",
        "selectorContainer": "HvList-selectorContainer",
        "textDisabled": "HvList-textDisabled",
        "truncate": "HvList-truncate",
      }
    }
    condensed={false}
    hasTooltips={false}
    labels={
      Object {
        "selectAll": "All",
        "selectionConjunction": "of",
      }
    }
    multiSelect={false}
    onChange={[Function]}
    onClick={[Function]}
    selectDefault={true}
    selectable={true}
    showSelectAll={false}
    singleSelectionToggle={true}
    useSelector={true}
    values={
      Array [
        Object {
          "label": "Value 1",
        },
        Object {
          "label": "Value 2",
        },
        Object {
          "label": "Value 3",
        },
      ]
    }
  >
    <div
      className="HvList-root"
    >
      <ul
        className="HvList-list"
        role="listbox"
      >
        <WithStyles(Focus)
          classes={
            Object {
              "focus": "HvList-focus",
            }
          }
          configuration={
            Object {
              "tabIndex": 0,
            }
          }
          isDropdown={true}
          key="0"
          rootRef={
            Object {
              "current": <div
                class="HvList-root"
              >
                <ul
                  class="HvList-list"
                  role="listbox"
                >
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <label
                      class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                    >
                      <span
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio PrivateSwitchBase-checked-2 Mui-checked"
                      >
                        <span
                          class="MuiIconButton-label"
                        >
                          <input
                            checked=""
                            class="PrivateSwitchBase-input-4"
                            tabindex="0"
                            type="radio"
                            value=""
                          />
                          <div
                            class="HvRadioButton-icon HvList-icon HvIconRadioButtonSelected-root HvIconRadioButtonSelected-rootS"
                          >
                            <svg
                              focusable="false"
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M8 0a8 8 0 108 8 8 8 0 00-8-8z"
                                fill="#414141"
                              />
                              <path
                                class="color1"
                                d="M8 12a4.013 4.013 0 01-4-4 4.013 4.013 0 014-4 4.013 4.013 0 014 4 4.013 4.013 0 01-4 4z"
                                fill="#FFFFFF"
                              />
                            </svg>
                          </div>
                        </span>
                      </span>
                      <span
                        class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography MuiTypography-body1"
                      >
                        Value 1
                      </span>
                    </label>
                  </li>
                  <li
                    class="HvList-listItem HvList-selector HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <label
                      class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                    >
                      <span
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                      >
                        <span
                          class="MuiIconButton-label"
                        >
                          <input
                            class="PrivateSwitchBase-input-4"
                            tabindex="-1"
                            type="radio"
                            value=""
                          />
                          <div
                            class="HvRadioButton-icon HvList-icon HvIconRadioButtonUnselected-root HvIconRadioButtonUnselected-rootS"
                          >
                            <svg
                              focusable="false"
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                fill="#FFFFFF"
                              />
                              <path
                                class="color1"
                                d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                        </span>
                      </span>
                      <span
                        class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography MuiTypography-body1"
                      >
                        Value 2
                      </span>
                    </label>
                  </li>
                  <li
                    class="HvList-listItem HvList-selector HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <label
                      class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                    >
                      <span
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                      >
                        <span
                          class="MuiIconButton-label"
                        >
                          <input
                            class="PrivateSwitchBase-input-4"
                            tabindex="-1"
                            type="radio"
                            value=""
                          />
                          <div
                            class="HvRadioButton-icon HvList-icon HvIconRadioButtonUnselected-root HvIconRadioButtonUnselected-rootS"
                          >
                            <svg
                              focusable="false"
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                fill="#FFFFFF"
                              />
                              <path
                                class="color1"
                                d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                        </span>
                      </span>
                      <span
                        class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography MuiTypography-body1"
                      >
                        Value 3
                      </span>
                    </label>
                  </li>
                </ul>
              </div>,
            }
          }
          selected={true}
          strategy="listbox"
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focus": "HvFocus-focus HvList-focus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            configuration={
              Object {
                "tabIndex": 0,
              }
            }
            isDropdown={true}
            rootRef={
              Object {
                "current": <div
                  class="HvList-root"
                >
                  <ul
                    class="HvList-list"
                    role="listbox"
                  >
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <label
                        class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                      >
                        <span
                          aria-disabled="false"
                          class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio PrivateSwitchBase-checked-2 Mui-checked"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <input
                              checked=""
                              class="PrivateSwitchBase-input-4"
                              tabindex="0"
                              type="radio"
                              value=""
                            />
                            <div
                              class="HvRadioButton-icon HvList-icon HvIconRadioButtonSelected-root HvIconRadioButtonSelected-rootS"
                            >
                              <svg
                                focusable="false"
                                height="16px"
                                viewBox="0 0 16 16"
                                width="16px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M8 0a8 8 0 108 8 8 8 0 00-8-8z"
                                  fill="#414141"
                                />
                                <path
                                  class="color1"
                                  d="M8 12a4.013 4.013 0 01-4-4 4.013 4.013 0 014-4 4.013 4.013 0 014 4 4.013 4.013 0 01-4 4z"
                                  fill="#FFFFFF"
                                />
                              </svg>
                            </div>
                          </span>
                        </span>
                        <span
                          class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography MuiTypography-body1"
                        >
                          Value 1
                        </span>
                      </label>
                    </li>
                    <li
                      class="HvList-listItem HvList-selector HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <label
                        class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                      >
                        <span
                          aria-disabled="false"
                          class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <input
                              class="PrivateSwitchBase-input-4"
                              tabindex="-1"
                              type="radio"
                              value=""
                            />
                            <div
                              class="HvRadioButton-icon HvList-icon HvIconRadioButtonUnselected-root HvIconRadioButtonUnselected-rootS"
                            >
                              <svg
                                focusable="false"
                                height="16px"
                                viewBox="0 0 16 16"
                                width="16px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                  fill="#FFFFFF"
                                />
                                <path
                                  class="color1"
                                  d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                  fill="#414141"
                                />
                              </svg>
                            </div>
                          </span>
                        </span>
                        <span
                          class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography MuiTypography-body1"
                        >
                          Value 2
                        </span>
                      </label>
                    </li>
                    <li
                      class="HvList-listItem HvList-selector HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <label
                        class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                      >
                        <span
                          aria-disabled="false"
                          class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <input
                              class="PrivateSwitchBase-input-4"
                              tabindex="-1"
                              type="radio"
                              value=""
                            />
                            <div
                              class="HvRadioButton-icon HvList-icon HvIconRadioButtonUnselected-root HvIconRadioButtonUnselected-rootS"
                            >
                              <svg
                                focusable="false"
                                height="16px"
                                viewBox="0 0 16 16"
                                width="16px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                  fill="#FFFFFF"
                                />
                                <path
                                  class="color1"
                                  d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                  fill="#414141"
                                />
                              </svg>
                            </div>
                          </span>
                        </span>
                        <span
                          class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography MuiTypography-body1"
                        >
                          Value 3
                        </span>
                      </label>
                    </li>
                  </ul>
                </div>,
              }
            }
            selected={true}
            strategy="listbox"
          >
            <ConditionalWrapper
              condition={false}
              wrapper={[Function]}
            >
              <li
                aria-selected={true}
                className="HvList-listItem HvList-selector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                role="option"
                selected={true}
              >
                <ComponentFunction>
                  <WithStyles(HvRadio)
                    checked={true}
                    classes={
                      Object {
                        "container": "HvList-selectorContainer",
                        "icon": "HvList-icon",
                      }
                    }
                    label="Value 1"
                  >
                    <HvRadio
                      checked={true}
                      classes={
                        Object {
                          "container": "HvRadioButton-container HvList-selectorContainer",
                          "disableFocus": "HvRadioButton-disableFocus",
                          "icon": "HvRadioButton-icon HvList-icon",
                          "labelDisabled": "HvRadioButton-labelDisabled",
                          "labelEnd": "HvRadioButton-labelEnd",
                          "labelStart": "HvRadioButton-labelStart",
                          "labelTypography": "HvRadioButton-labelTypography",
                          "radio": "HvRadioButton-radio",
                        }
                      }
                      label="Value 1"
                    >
                      <WithStyles(ForwardRef(FormControlLabel))
                        className="HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                        classes={
                          Object {
                            "disabled": "HvRadioButton-labelDisabled",
                            "label": "HvRadioButton-labelTypography",
                          }
                        }
                        control={
                          <WithStyles(ForwardRef(Radio))
                            checked={true}
                            checkedIcon={
                              <WithStyles(RadioButtonSelected)
                                className="HvRadioButton-icon HvList-icon"
                              />
                            }
                            className="HvRadioButton-radio"
                            color="default"
                            disableRipple={true}
                            icon={
                              <WithStyles(RadioButtonUnselected)
                                className="HvRadioButton-icon HvList-icon"
                              />
                            }
                            onBlur={[Function]}
                            onChange={[Function]}
                            value=""
                          />
                        }
                        label="Value 1"
                        labelPlacement="end"
                      >
                        <ForwardRef(FormControlLabel)
                          className="HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                          classes={
                            Object {
                              "disabled": "Mui-disabled HvRadioButton-labelDisabled",
                              "label": "MuiFormControlLabel-label HvRadioButton-labelTypography",
                              "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                              "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                              "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                              "root": "MuiFormControlLabel-root",
                            }
                          }
                          control={
                            <WithStyles(ForwardRef(Radio))
                              checked={true}
                              checkedIcon={
                                <WithStyles(RadioButtonSelected)
                                  className="HvRadioButton-icon HvList-icon"
                                />
                              }
                              className="HvRadioButton-radio"
                              color="default"
                              disableRipple={true}
                              icon={
                                <WithStyles(RadioButtonUnselected)
                                  className="HvRadioButton-icon HvList-icon"
                                />
                              }
                              onBlur={[Function]}
                              onChange={[Function]}
                              value=""
                            />
                          }
                          label="Value 1"
                          labelPlacement="end"
                        >
                          <label
                            className="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                          >
                            <WithStyles(ForwardRef(Radio))
                              checked={true}
                              checkedIcon={
                                <WithStyles(RadioButtonSelected)
                                  className="HvRadioButton-icon HvList-icon"
                                />
                              }
                              className="HvRadioButton-radio"
                              color="default"
                              disableRipple={true}
                              icon={
                                <WithStyles(RadioButtonUnselected)
                                  className="HvRadioButton-icon HvList-icon"
                                />
                              }
                              onBlur={[Function]}
                              onChange={[Function]}
                              value=""
                            >
                              <ForwardRef(Radio)
                                checked={true}
                                checkedIcon={
                                  <WithStyles(RadioButtonSelected)
                                    className="HvRadioButton-icon HvList-icon"
                                  />
                                }
                                className="HvRadioButton-radio"
                                classes={
                                  Object {
                                    "checked": "Mui-checked",
                                    "colorPrimary": "MuiRadio-colorPrimary",
                                    "colorSecondary": "MuiRadio-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "root": "MuiRadio-root",
                                  }
                                }
                                color="default"
                                disableRipple={true}
                                icon={
                                  <WithStyles(RadioButtonUnselected)
                                    className="HvRadioButton-icon HvList-icon"
                                  />
                                }
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              >
                                <WithStyles(ForwardRef(SwitchBase))
                                  checked={true}
                                  checkedIcon={
                                    <WithStyles(RadioButtonSelected)
                                      className="HvRadioButton-icon HvList-icon"
                                    />
                                  }
                                  className="HvRadioButton-radio"
                                  classes={
                                    Object {
                                      "checked": "Mui-checked",
                                      "disabled": "Mui-disabled",
                                      "root": "MuiRadio-root",
                                    }
                                  }
                                  color="default"
                                  disableRipple={true}
                                  disabled={false}
                                  icon={
                                    <WithStyles(RadioButtonUnselected)
                                      className="HvRadioButton-icon HvList-icon"
                                    />
                                  }
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  type="radio"
                                  value=""
                                >
                                  <ForwardRef(SwitchBase)
                                    checked={true}
                                    checkedIcon={
                                      <WithStyles(RadioButtonSelected)
                                        className="HvRadioButton-icon HvList-icon"
                                      />
                                    }
                                    className="HvRadioButton-radio"
                                    classes={
                                      Object {
                                        "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                                        "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                                        "input": "PrivateSwitchBase-input-4",
                                        "root": "PrivateSwitchBase-root-1 MuiRadio-root",
                                      }
                                    }
                                    color="default"
                                    disableRipple={true}
                                    disabled={false}
                                    icon={
                                      <WithStyles(RadioButtonUnselected)
                                        className="HvRadioButton-icon HvList-icon"
                                      />
                                    }
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    type="radio"
                                    value=""
                                  >
                                    <WithStyles(ForwardRef(IconButton))
                                      className="PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio PrivateSwitchBase-checked-2 Mui-checked"
                                      color="default"
                                      component="span"
                                      disableRipple={true}
                                      disabled={false}
                                      onBlur={[Function]}
                                      onFocus={[Function]}
                                      tabIndex={null}
                                    >
                                      <ForwardRef(IconButton)
                                        className="PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio PrivateSwitchBase-checked-2 Mui-checked"
                                        classes={
                                          Object {
                                            "colorInherit": "MuiIconButton-colorInherit",
                                            "colorPrimary": "MuiIconButton-colorPrimary",
                                            "colorSecondary": "MuiIconButton-colorSecondary",
                                            "disabled": "Mui-disabled",
                                            "edgeEnd": "MuiIconButton-edgeEnd",
                                            "edgeStart": "MuiIconButton-edgeStart",
                                            "label": "MuiIconButton-label",
                                            "root": "MuiIconButton-root",
                                            "sizeSmall": "MuiIconButton-sizeSmall",
                                          }
                                        }
                                        color="default"
                                        component="span"
                                        disableRipple={true}
                                        disabled={false}
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={null}
                                      >
                                        <WithStyles(ForwardRef(ButtonBase))
                                          centerRipple={true}
                                          className="MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio PrivateSwitchBase-checked-2 Mui-checked"
                                          component="span"
                                          disableRipple={true}
                                          disabled={false}
                                          focusRipple={true}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <ForwardRef(ButtonBase)
                                            centerRipple={true}
                                            className="MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio PrivateSwitchBase-checked-2 Mui-checked"
                                            classes={
                                              Object {
                                                "disabled": "Mui-disabled",
                                                "focusVisible": "Mui-focusVisible",
                                                "root": "MuiButtonBase-root",
                                              }
                                            }
                                            component="span"
                                            disableRipple={true}
                                            disabled={false}
                                            focusRipple={true}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <span
                                              aria-disabled={false}
                                              className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio PrivateSwitchBase-checked-2 Mui-checked"
                                              onBlur={[Function]}
                                              onDragLeave={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              tabIndex={null}
                                            >
                                              <span
                                                className="MuiIconButton-label"
                                              >
                                                <input
                                                  checked={true}
                                                  className="PrivateSwitchBase-input-4"
                                                  disabled={false}
                                                  onChange={[Function]}
                                                  type="radio"
                                                  value=""
                                                />
                                                <WithStyles(RadioButtonSelected)
                                                  className="HvRadioButton-icon HvList-icon"
                                                >
                                                  <RadioButtonSelected
                                                    className="HvRadioButton-icon HvList-icon"
                                                    classes={
                                                      Object {
                                                        "root": "HvIconRadioButtonSelected-root",
                                                        "rootL": "HvIconRadioButtonSelected-rootL",
                                                        "rootM": "HvIconRadioButtonSelected-rootM",
                                                        "rootS": "HvIconRadioButtonSelected-rootS",
                                                        "rootXs": "HvIconRadioButtonSelected-rootXs",
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      className="HvRadioButton-icon HvList-icon HvIconRadioButtonSelected-root HvIconRadioButtonSelected-rootS"
                                                    >
                                                      <svg
                                                        focusable={false}
                                                        height="16px"
                                                        viewBox="0 0 16 16"
                                                        width="16px"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          className="color0"
                                                          d="M8 0a8 8 0 108 8 8 8 0 00-8-8z"
                                                          fill="#414141"
                                                        />
                                                        <path
                                                          className="color1"
                                                          d="M8 12a4.013 4.013 0 01-4-4 4.013 4.013 0 014-4 4.013 4.013 0 014 4 4.013 4.013 0 01-4 4z"
                                                          fill="#FFFFFF"
                                                        />
                                                      </svg>
                                                    </div>
                                                  </RadioButtonSelected>
                                                </WithStyles(RadioButtonSelected)>
                                              </span>
                                            </span>
                                          </ForwardRef(ButtonBase)>
                                        </WithStyles(ForwardRef(ButtonBase))>
                                      </ForwardRef(IconButton)>
                                    </WithStyles(ForwardRef(IconButton))>
                                  </ForwardRef(SwitchBase)>
                                </WithStyles(ForwardRef(SwitchBase))>
                              </ForwardRef(Radio)>
                            </WithStyles(ForwardRef(Radio))>
                            <WithStyles(ForwardRef(Typography))
                              className="MuiFormControlLabel-label HvRadioButton-labelTypography"
                              component="span"
                            >
                              <ForwardRef(Typography)
                                className="MuiFormControlLabel-label HvRadioButton-labelTypography"
                                classes={
                                  Object {
                                    "alignCenter": "MuiTypography-alignCenter",
                                    "alignJustify": "MuiTypography-alignJustify",
                                    "alignLeft": "MuiTypography-alignLeft",
                                    "alignRight": "MuiTypography-alignRight",
                                    "body1": "MuiTypography-body1",
                                    "body2": "MuiTypography-body2",
                                    "button": "MuiTypography-button",
                                    "caption": "MuiTypography-caption",
                                    "colorError": "MuiTypography-colorError",
                                    "colorInherit": "MuiTypography-colorInherit",
                                    "colorPrimary": "MuiTypography-colorPrimary",
                                    "colorSecondary": "MuiTypography-colorSecondary",
                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                    "displayBlock": "MuiTypography-displayBlock",
                                    "displayInline": "MuiTypography-displayInline",
                                    "gutterBottom": "MuiTypography-gutterBottom",
                                    "h1": "MuiTypography-h1",
                                    "h2": "MuiTypography-h2",
                                    "h3": "MuiTypography-h3",
                                    "h4": "MuiTypography-h4",
                                    "h5": "MuiTypography-h5",
                                    "h6": "MuiTypography-h6",
                                    "noWrap": "MuiTypography-noWrap",
                                    "overline": "MuiTypography-overline",
                                    "paragraph": "MuiTypography-paragraph",
                                    "root": "MuiTypography-root",
                                    "srOnly": "MuiTypography-srOnly",
                                    "subtitle1": "MuiTypography-subtitle1",
                                    "subtitle2": "MuiTypography-subtitle2",
                                  }
                                }
                                component="span"
                              >
                                <span
                                  className="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography MuiTypography-body1"
                                >
                                  Value 1
                                </span>
                              </ForwardRef(Typography)>
                            </WithStyles(ForwardRef(Typography))>
                          </label>
                        </ForwardRef(FormControlLabel)>
                      </WithStyles(ForwardRef(FormControlLabel))>
                    </HvRadio>
                  </WithStyles(HvRadio)>
                </ComponentFunction>
              </li>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
        <WithStyles(Focus)
          classes={
            Object {
              "focus": "HvList-focus",
            }
          }
          configuration={
            Object {
              "tabIndex": -1,
            }
          }
          isDropdown={true}
          key="1"
          rootRef={
            Object {
              "current": <div
                class="HvList-root"
              >
                <ul
                  class="HvList-list"
                  role="listbox"
                >
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <label
                      class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                    >
                      <span
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio PrivateSwitchBase-checked-2 Mui-checked"
                      >
                        <span
                          class="MuiIconButton-label"
                        >
                          <input
                            checked=""
                            class="PrivateSwitchBase-input-4"
                            tabindex="0"
                            type="radio"
                            value=""
                          />
                          <div
                            class="HvRadioButton-icon HvList-icon HvIconRadioButtonSelected-root HvIconRadioButtonSelected-rootS"
                          >
                            <svg
                              focusable="false"
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M8 0a8 8 0 108 8 8 8 0 00-8-8z"
                                fill="#414141"
                              />
                              <path
                                class="color1"
                                d="M8 12a4.013 4.013 0 01-4-4 4.013 4.013 0 014-4 4.013 4.013 0 014 4 4.013 4.013 0 01-4 4z"
                                fill="#FFFFFF"
                              />
                            </svg>
                          </div>
                        </span>
                      </span>
                      <span
                        class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography MuiTypography-body1"
                      >
                        Value 1
                      </span>
                    </label>
                  </li>
                  <li
                    class="HvList-listItem HvList-selector HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <label
                      class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                    >
                      <span
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                      >
                        <span
                          class="MuiIconButton-label"
                        >
                          <input
                            class="PrivateSwitchBase-input-4"
                            tabindex="-1"
                            type="radio"
                            value=""
                          />
                          <div
                            class="HvRadioButton-icon HvList-icon HvIconRadioButtonUnselected-root HvIconRadioButtonUnselected-rootS"
                          >
                            <svg
                              focusable="false"
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                fill="#FFFFFF"
                              />
                              <path
                                class="color1"
                                d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                        </span>
                      </span>
                      <span
                        class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography MuiTypography-body1"
                      >
                        Value 2
                      </span>
                    </label>
                  </li>
                  <li
                    class="HvList-listItem HvList-selector HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <label
                      class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                    >
                      <span
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                      >
                        <span
                          class="MuiIconButton-label"
                        >
                          <input
                            class="PrivateSwitchBase-input-4"
                            tabindex="-1"
                            type="radio"
                            value=""
                          />
                          <div
                            class="HvRadioButton-icon HvList-icon HvIconRadioButtonUnselected-root HvIconRadioButtonUnselected-rootS"
                          >
                            <svg
                              focusable="false"
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                fill="#FFFFFF"
                              />
                              <path
                                class="color1"
                                d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                        </span>
                      </span>
                      <span
                        class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography MuiTypography-body1"
                      >
                        Value 3
                      </span>
                    </label>
                  </li>
                </ul>
              </div>,
            }
          }
          selected={false}
          strategy="listbox"
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focus": "HvFocus-focus HvList-focus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            configuration={
              Object {
                "tabIndex": -1,
              }
            }
            isDropdown={true}
            rootRef={
              Object {
                "current": <div
                  class="HvList-root"
                >
                  <ul
                    class="HvList-list"
                    role="listbox"
                  >
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <label
                        class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                      >
                        <span
                          aria-disabled="false"
                          class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio PrivateSwitchBase-checked-2 Mui-checked"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <input
                              checked=""
                              class="PrivateSwitchBase-input-4"
                              tabindex="0"
                              type="radio"
                              value=""
                            />
                            <div
                              class="HvRadioButton-icon HvList-icon HvIconRadioButtonSelected-root HvIconRadioButtonSelected-rootS"
                            >
                              <svg
                                focusable="false"
                                height="16px"
                                viewBox="0 0 16 16"
                                width="16px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M8 0a8 8 0 108 8 8 8 0 00-8-8z"
                                  fill="#414141"
                                />
                                <path
                                  class="color1"
                                  d="M8 12a4.013 4.013 0 01-4-4 4.013 4.013 0 014-4 4.013 4.013 0 014 4 4.013 4.013 0 01-4 4z"
                                  fill="#FFFFFF"
                                />
                              </svg>
                            </div>
                          </span>
                        </span>
                        <span
                          class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography MuiTypography-body1"
                        >
                          Value 1
                        </span>
                      </label>
                    </li>
                    <li
                      class="HvList-listItem HvList-selector HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <label
                        class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                      >
                        <span
                          aria-disabled="false"
                          class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <input
                              class="PrivateSwitchBase-input-4"
                              tabindex="-1"
                              type="radio"
                              value=""
                            />
                            <div
                              class="HvRadioButton-icon HvList-icon HvIconRadioButtonUnselected-root HvIconRadioButtonUnselected-rootS"
                            >
                              <svg
                                focusable="false"
                                height="16px"
                                viewBox="0 0 16 16"
                                width="16px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                  fill="#FFFFFF"
                                />
                                <path
                                  class="color1"
                                  d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                  fill="#414141"
                                />
                              </svg>
                            </div>
                          </span>
                        </span>
                        <span
                          class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography MuiTypography-body1"
                        >
                          Value 2
                        </span>
                      </label>
                    </li>
                    <li
                      class="HvList-listItem HvList-selector HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <label
                        class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                      >
                        <span
                          aria-disabled="false"
                          class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <input
                              class="PrivateSwitchBase-input-4"
                              tabindex="-1"
                              type="radio"
                              value=""
                            />
                            <div
                              class="HvRadioButton-icon HvList-icon HvIconRadioButtonUnselected-root HvIconRadioButtonUnselected-rootS"
                            >
                              <svg
                                focusable="false"
                                height="16px"
                                viewBox="0 0 16 16"
                                width="16px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                  fill="#FFFFFF"
                                />
                                <path
                                  class="color1"
                                  d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                  fill="#414141"
                                />
                              </svg>
                            </div>
                          </span>
                        </span>
                        <span
                          class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography MuiTypography-body1"
                        >
                          Value 3
                        </span>
                      </label>
                    </li>
                  </ul>
                </div>,
              }
            }
            selected={false}
            strategy="listbox"
          >
            <ConditionalWrapper
              condition={false}
              wrapper={[Function]}
            >
              <li
                className="HvList-listItem HvList-selector HvFocus-root HvFocus-focusDisabled"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                role="option"
                selected={false}
              >
                <ComponentFunction>
                  <WithStyles(HvRadio)
                    checked={false}
                    classes={
                      Object {
                        "container": "HvList-selectorContainer",
                        "icon": "HvList-icon",
                      }
                    }
                    label="Value 2"
                  >
                    <HvRadio
                      checked={false}
                      classes={
                        Object {
                          "container": "HvRadioButton-container HvList-selectorContainer",
                          "disableFocus": "HvRadioButton-disableFocus",
                          "icon": "HvRadioButton-icon HvList-icon",
                          "labelDisabled": "HvRadioButton-labelDisabled",
                          "labelEnd": "HvRadioButton-labelEnd",
                          "labelStart": "HvRadioButton-labelStart",
                          "labelTypography": "HvRadioButton-labelTypography",
                          "radio": "HvRadioButton-radio",
                        }
                      }
                      label="Value 2"
                    >
                      <WithStyles(ForwardRef(FormControlLabel))
                        className="HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                        classes={
                          Object {
                            "disabled": "HvRadioButton-labelDisabled",
                            "label": "HvRadioButton-labelTypography",
                          }
                        }
                        control={
                          <WithStyles(ForwardRef(Radio))
                            checked={false}
                            checkedIcon={
                              <WithStyles(RadioButtonSelected)
                                className="HvRadioButton-icon HvList-icon"
                              />
                            }
                            className="HvRadioButton-radio"
                            color="default"
                            disableRipple={true}
                            icon={
                              <WithStyles(RadioButtonUnselected)
                                className="HvRadioButton-icon HvList-icon"
                              />
                            }
                            onBlur={[Function]}
                            onChange={[Function]}
                            value=""
                          />
                        }
                        label="Value 2"
                        labelPlacement="end"
                      >
                        <ForwardRef(FormControlLabel)
                          className="HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                          classes={
                            Object {
                              "disabled": "Mui-disabled HvRadioButton-labelDisabled",
                              "label": "MuiFormControlLabel-label HvRadioButton-labelTypography",
                              "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                              "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                              "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                              "root": "MuiFormControlLabel-root",
                            }
                          }
                          control={
                            <WithStyles(ForwardRef(Radio))
                              checked={false}
                              checkedIcon={
                                <WithStyles(RadioButtonSelected)
                                  className="HvRadioButton-icon HvList-icon"
                                />
                              }
                              className="HvRadioButton-radio"
                              color="default"
                              disableRipple={true}
                              icon={
                                <WithStyles(RadioButtonUnselected)
                                  className="HvRadioButton-icon HvList-icon"
                                />
                              }
                              onBlur={[Function]}
                              onChange={[Function]}
                              value=""
                            />
                          }
                          label="Value 2"
                          labelPlacement="end"
                        >
                          <label
                            className="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                          >
                            <WithStyles(ForwardRef(Radio))
                              checked={false}
                              checkedIcon={
                                <WithStyles(RadioButtonSelected)
                                  className="HvRadioButton-icon HvList-icon"
                                />
                              }
                              className="HvRadioButton-radio"
                              color="default"
                              disableRipple={true}
                              icon={
                                <WithStyles(RadioButtonUnselected)
                                  className="HvRadioButton-icon HvList-icon"
                                />
                              }
                              onBlur={[Function]}
                              onChange={[Function]}
                              value=""
                            >
                              <ForwardRef(Radio)
                                checked={false}
                                checkedIcon={
                                  <WithStyles(RadioButtonSelected)
                                    className="HvRadioButton-icon HvList-icon"
                                  />
                                }
                                className="HvRadioButton-radio"
                                classes={
                                  Object {
                                    "checked": "Mui-checked",
                                    "colorPrimary": "MuiRadio-colorPrimary",
                                    "colorSecondary": "MuiRadio-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "root": "MuiRadio-root",
                                  }
                                }
                                color="default"
                                disableRipple={true}
                                icon={
                                  <WithStyles(RadioButtonUnselected)
                                    className="HvRadioButton-icon HvList-icon"
                                  />
                                }
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              >
                                <WithStyles(ForwardRef(SwitchBase))
                                  checked={false}
                                  checkedIcon={
                                    <WithStyles(RadioButtonSelected)
                                      className="HvRadioButton-icon HvList-icon"
                                    />
                                  }
                                  className="HvRadioButton-radio"
                                  classes={
                                    Object {
                                      "checked": "Mui-checked",
                                      "disabled": "Mui-disabled",
                                      "root": "MuiRadio-root",
                                    }
                                  }
                                  color="default"
                                  disableRipple={true}
                                  disabled={false}
                                  icon={
                                    <WithStyles(RadioButtonUnselected)
                                      className="HvRadioButton-icon HvList-icon"
                                    />
                                  }
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  type="radio"
                                  value=""
                                >
                                  <ForwardRef(SwitchBase)
                                    checked={false}
                                    checkedIcon={
                                      <WithStyles(RadioButtonSelected)
                                        className="HvRadioButton-icon HvList-icon"
                                      />
                                    }
                                    className="HvRadioButton-radio"
                                    classes={
                                      Object {
                                        "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                                        "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                                        "input": "PrivateSwitchBase-input-4",
                                        "root": "PrivateSwitchBase-root-1 MuiRadio-root",
                                      }
                                    }
                                    color="default"
                                    disableRipple={true}
                                    disabled={false}
                                    icon={
                                      <WithStyles(RadioButtonUnselected)
                                        className="HvRadioButton-icon HvList-icon"
                                      />
                                    }
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    type="radio"
                                    value=""
                                  >
                                    <WithStyles(ForwardRef(IconButton))
                                      className="PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                                      color="default"
                                      component="span"
                                      disableRipple={true}
                                      disabled={false}
                                      onBlur={[Function]}
                                      onFocus={[Function]}
                                      tabIndex={null}
                                    >
                                      <ForwardRef(IconButton)
                                        className="PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                                        classes={
                                          Object {
                                            "colorInherit": "MuiIconButton-colorInherit",
                                            "colorPrimary": "MuiIconButton-colorPrimary",
                                            "colorSecondary": "MuiIconButton-colorSecondary",
                                            "disabled": "Mui-disabled",
                                            "edgeEnd": "MuiIconButton-edgeEnd",
                                            "edgeStart": "MuiIconButton-edgeStart",
                                            "label": "MuiIconButton-label",
                                            "root": "MuiIconButton-root",
                                            "sizeSmall": "MuiIconButton-sizeSmall",
                                          }
                                        }
                                        color="default"
                                        component="span"
                                        disableRipple={true}
                                        disabled={false}
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={null}
                                      >
                                        <WithStyles(ForwardRef(ButtonBase))
                                          centerRipple={true}
                                          className="MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                                          component="span"
                                          disableRipple={true}
                                          disabled={false}
                                          focusRipple={true}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <ForwardRef(ButtonBase)
                                            centerRipple={true}
                                            className="MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                                            classes={
                                              Object {
                                                "disabled": "Mui-disabled",
                                                "focusVisible": "Mui-focusVisible",
                                                "root": "MuiButtonBase-root",
                                              }
                                            }
                                            component="span"
                                            disableRipple={true}
                                            disabled={false}
                                            focusRipple={true}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <span
                                              aria-disabled={false}
                                              className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                                              onBlur={[Function]}
                                              onDragLeave={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              tabIndex={null}
                                            >
                                              <span
                                                className="MuiIconButton-label"
                                              >
                                                <input
                                                  checked={false}
                                                  className="PrivateSwitchBase-input-4"
                                                  disabled={false}
                                                  onChange={[Function]}
                                                  type="radio"
                                                  value=""
                                                />
                                                <WithStyles(RadioButtonUnselected)
                                                  className="HvRadioButton-icon HvList-icon"
                                                >
                                                  <RadioButtonUnselected
                                                    className="HvRadioButton-icon HvList-icon"
                                                    classes={
                                                      Object {
                                                        "root": "HvIconRadioButtonUnselected-root",
                                                        "rootL": "HvIconRadioButtonUnselected-rootL",
                                                        "rootM": "HvIconRadioButtonUnselected-rootM",
                                                        "rootS": "HvIconRadioButtonUnselected-rootS",
                                                        "rootXs": "HvIconRadioButtonUnselected-rootXs",
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      className="HvRadioButton-icon HvList-icon HvIconRadioButtonUnselected-root HvIconRadioButtonUnselected-rootS"
                                                    >
                                                      <svg
                                                        focusable={false}
                                                        height="16px"
                                                        viewBox="0 0 16 16"
                                                        width="16px"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          className="color0"
                                                          d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                                          fill="#FFFFFF"
                                                        />
                                                        <path
                                                          className="color1"
                                                          d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                                          fill="#414141"
                                                        />
                                                      </svg>
                                                    </div>
                                                  </RadioButtonUnselected>
                                                </WithStyles(RadioButtonUnselected)>
                                              </span>
                                            </span>
                                          </ForwardRef(ButtonBase)>
                                        </WithStyles(ForwardRef(ButtonBase))>
                                      </ForwardRef(IconButton)>
                                    </WithStyles(ForwardRef(IconButton))>
                                  </ForwardRef(SwitchBase)>
                                </WithStyles(ForwardRef(SwitchBase))>
                              </ForwardRef(Radio)>
                            </WithStyles(ForwardRef(Radio))>
                            <WithStyles(ForwardRef(Typography))
                              className="MuiFormControlLabel-label HvRadioButton-labelTypography"
                              component="span"
                            >
                              <ForwardRef(Typography)
                                className="MuiFormControlLabel-label HvRadioButton-labelTypography"
                                classes={
                                  Object {
                                    "alignCenter": "MuiTypography-alignCenter",
                                    "alignJustify": "MuiTypography-alignJustify",
                                    "alignLeft": "MuiTypography-alignLeft",
                                    "alignRight": "MuiTypography-alignRight",
                                    "body1": "MuiTypography-body1",
                                    "body2": "MuiTypography-body2",
                                    "button": "MuiTypography-button",
                                    "caption": "MuiTypography-caption",
                                    "colorError": "MuiTypography-colorError",
                                    "colorInherit": "MuiTypography-colorInherit",
                                    "colorPrimary": "MuiTypography-colorPrimary",
                                    "colorSecondary": "MuiTypography-colorSecondary",
                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                    "displayBlock": "MuiTypography-displayBlock",
                                    "displayInline": "MuiTypography-displayInline",
                                    "gutterBottom": "MuiTypography-gutterBottom",
                                    "h1": "MuiTypography-h1",
                                    "h2": "MuiTypography-h2",
                                    "h3": "MuiTypography-h3",
                                    "h4": "MuiTypography-h4",
                                    "h5": "MuiTypography-h5",
                                    "h6": "MuiTypography-h6",
                                    "noWrap": "MuiTypography-noWrap",
                                    "overline": "MuiTypography-overline",
                                    "paragraph": "MuiTypography-paragraph",
                                    "root": "MuiTypography-root",
                                    "srOnly": "MuiTypography-srOnly",
                                    "subtitle1": "MuiTypography-subtitle1",
                                    "subtitle2": "MuiTypography-subtitle2",
                                  }
                                }
                                component="span"
                              >
                                <span
                                  className="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography MuiTypography-body1"
                                >
                                  Value 2
                                </span>
                              </ForwardRef(Typography)>
                            </WithStyles(ForwardRef(Typography))>
                          </label>
                        </ForwardRef(FormControlLabel)>
                      </WithStyles(ForwardRef(FormControlLabel))>
                    </HvRadio>
                  </WithStyles(HvRadio)>
                </ComponentFunction>
              </li>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
        <WithStyles(Focus)
          classes={
            Object {
              "focus": "HvList-focus",
            }
          }
          configuration={
            Object {
              "tabIndex": -1,
            }
          }
          isDropdown={true}
          key="2"
          rootRef={
            Object {
              "current": <div
                class="HvList-root"
              >
                <ul
                  class="HvList-list"
                  role="listbox"
                >
                  <li
                    aria-selected="true"
                    class="HvList-listItem HvList-selector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <label
                      class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                    >
                      <span
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio PrivateSwitchBase-checked-2 Mui-checked"
                      >
                        <span
                          class="MuiIconButton-label"
                        >
                          <input
                            checked=""
                            class="PrivateSwitchBase-input-4"
                            tabindex="0"
                            type="radio"
                            value=""
                          />
                          <div
                            class="HvRadioButton-icon HvList-icon HvIconRadioButtonSelected-root HvIconRadioButtonSelected-rootS"
                          >
                            <svg
                              focusable="false"
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M8 0a8 8 0 108 8 8 8 0 00-8-8z"
                                fill="#414141"
                              />
                              <path
                                class="color1"
                                d="M8 12a4.013 4.013 0 01-4-4 4.013 4.013 0 014-4 4.013 4.013 0 014 4 4.013 4.013 0 01-4 4z"
                                fill="#FFFFFF"
                              />
                            </svg>
                          </div>
                        </span>
                      </span>
                      <span
                        class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography MuiTypography-body1"
                      >
                        Value 1
                      </span>
                    </label>
                  </li>
                  <li
                    class="HvList-listItem HvList-selector HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <label
                      class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                    >
                      <span
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                      >
                        <span
                          class="MuiIconButton-label"
                        >
                          <input
                            class="PrivateSwitchBase-input-4"
                            tabindex="-1"
                            type="radio"
                            value=""
                          />
                          <div
                            class="HvRadioButton-icon HvList-icon HvIconRadioButtonUnselected-root HvIconRadioButtonUnselected-rootS"
                          >
                            <svg
                              focusable="false"
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                fill="#FFFFFF"
                              />
                              <path
                                class="color1"
                                d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                        </span>
                      </span>
                      <span
                        class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography MuiTypography-body1"
                      >
                        Value 2
                      </span>
                    </label>
                  </li>
                  <li
                    class="HvList-listItem HvList-selector HvFocus-root HvFocus-focusDisabled"
                    role="option"
                    tabindex="-1"
                  >
                    <label
                      class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                    >
                      <span
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                      >
                        <span
                          class="MuiIconButton-label"
                        >
                          <input
                            class="PrivateSwitchBase-input-4"
                            tabindex="-1"
                            type="radio"
                            value=""
                          />
                          <div
                            class="HvRadioButton-icon HvList-icon HvIconRadioButtonUnselected-root HvIconRadioButtonUnselected-rootS"
                          >
                            <svg
                              focusable="false"
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                fill="#FFFFFF"
                              />
                              <path
                                class="color1"
                                d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                        </span>
                      </span>
                      <span
                        class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography MuiTypography-body1"
                      >
                        Value 3
                      </span>
                    </label>
                  </li>
                </ul>
              </div>,
            }
          }
          selected={false}
          strategy="listbox"
        >
          <Focus
            classes={
              Object {
                "disabled": "HvFocus-disabled",
                "externalReference": "HvFocus-externalReference",
                "falseFocus": "HvFocus-falseFocus",
                "focus": "HvFocus-focus HvList-focus",
                "focusDisabled": "HvFocus-focusDisabled",
                "focused": "HvFocus-focused",
                "root": "HvFocus-root",
                "selected": "HvFocus-selected",
              }
            }
            configuration={
              Object {
                "tabIndex": -1,
              }
            }
            isDropdown={true}
            rootRef={
              Object {
                "current": <div
                  class="HvList-root"
                >
                  <ul
                    class="HvList-list"
                    role="listbox"
                  >
                    <li
                      aria-selected="true"
                      class="HvList-listItem HvList-selector HvFocus-root HvFocus-selected HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <label
                        class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                      >
                        <span
                          aria-disabled="false"
                          class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio PrivateSwitchBase-checked-2 Mui-checked"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <input
                              checked=""
                              class="PrivateSwitchBase-input-4"
                              tabindex="0"
                              type="radio"
                              value=""
                            />
                            <div
                              class="HvRadioButton-icon HvList-icon HvIconRadioButtonSelected-root HvIconRadioButtonSelected-rootS"
                            >
                              <svg
                                focusable="false"
                                height="16px"
                                viewBox="0 0 16 16"
                                width="16px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M8 0a8 8 0 108 8 8 8 0 00-8-8z"
                                  fill="#414141"
                                />
                                <path
                                  class="color1"
                                  d="M8 12a4.013 4.013 0 01-4-4 4.013 4.013 0 014-4 4.013 4.013 0 014 4 4.013 4.013 0 01-4 4z"
                                  fill="#FFFFFF"
                                />
                              </svg>
                            </div>
                          </span>
                        </span>
                        <span
                          class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography MuiTypography-body1"
                        >
                          Value 1
                        </span>
                      </label>
                    </li>
                    <li
                      class="HvList-listItem HvList-selector HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <label
                        class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                      >
                        <span
                          aria-disabled="false"
                          class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <input
                              class="PrivateSwitchBase-input-4"
                              tabindex="-1"
                              type="radio"
                              value=""
                            />
                            <div
                              class="HvRadioButton-icon HvList-icon HvIconRadioButtonUnselected-root HvIconRadioButtonUnselected-rootS"
                            >
                              <svg
                                focusable="false"
                                height="16px"
                                viewBox="0 0 16 16"
                                width="16px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                  fill="#FFFFFF"
                                />
                                <path
                                  class="color1"
                                  d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                  fill="#414141"
                                />
                              </svg>
                            </div>
                          </span>
                        </span>
                        <span
                          class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography MuiTypography-body1"
                        >
                          Value 2
                        </span>
                      </label>
                    </li>
                    <li
                      class="HvList-listItem HvList-selector HvFocus-root HvFocus-focusDisabled"
                      role="option"
                      tabindex="-1"
                    >
                      <label
                        class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                      >
                        <span
                          aria-disabled="false"
                          class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <input
                              class="PrivateSwitchBase-input-4"
                              tabindex="-1"
                              type="radio"
                              value=""
                            />
                            <div
                              class="HvRadioButton-icon HvList-icon HvIconRadioButtonUnselected-root HvIconRadioButtonUnselected-rootS"
                            >
                              <svg
                                focusable="false"
                                height="16px"
                                viewBox="0 0 16 16"
                                width="16px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                  fill="#FFFFFF"
                                />
                                <path
                                  class="color1"
                                  d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                  fill="#414141"
                                />
                              </svg>
                            </div>
                          </span>
                        </span>
                        <span
                          class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography MuiTypography-body1"
                        >
                          Value 3
                        </span>
                      </label>
                    </li>
                  </ul>
                </div>,
              }
            }
            selected={false}
            strategy="listbox"
          >
            <ConditionalWrapper
              condition={false}
              wrapper={[Function]}
            >
              <li
                className="HvList-listItem HvList-selector HvFocus-root HvFocus-focusDisabled"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                role="option"
                selected={false}
              >
                <ComponentFunction>
                  <WithStyles(HvRadio)
                    checked={false}
                    classes={
                      Object {
                        "container": "HvList-selectorContainer",
                        "icon": "HvList-icon",
                      }
                    }
                    label="Value 3"
                  >
                    <HvRadio
                      checked={false}
                      classes={
                        Object {
                          "container": "HvRadioButton-container HvList-selectorContainer",
                          "disableFocus": "HvRadioButton-disableFocus",
                          "icon": "HvRadioButton-icon HvList-icon",
                          "labelDisabled": "HvRadioButton-labelDisabled",
                          "labelEnd": "HvRadioButton-labelEnd",
                          "labelStart": "HvRadioButton-labelStart",
                          "labelTypography": "HvRadioButton-labelTypography",
                          "radio": "HvRadioButton-radio",
                        }
                      }
                      label="Value 3"
                    >
                      <WithStyles(ForwardRef(FormControlLabel))
                        className="HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                        classes={
                          Object {
                            "disabled": "HvRadioButton-labelDisabled",
                            "label": "HvRadioButton-labelTypography",
                          }
                        }
                        control={
                          <WithStyles(ForwardRef(Radio))
                            checked={false}
                            checkedIcon={
                              <WithStyles(RadioButtonSelected)
                                className="HvRadioButton-icon HvList-icon"
                              />
                            }
                            className="HvRadioButton-radio"
                            color="default"
                            disableRipple={true}
                            icon={
                              <WithStyles(RadioButtonUnselected)
                                className="HvRadioButton-icon HvList-icon"
                              />
                            }
                            onBlur={[Function]}
                            onChange={[Function]}
                            value=""
                          />
                        }
                        label="Value 3"
                        labelPlacement="end"
                      >
                        <ForwardRef(FormControlLabel)
                          className="HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                          classes={
                            Object {
                              "disabled": "Mui-disabled HvRadioButton-labelDisabled",
                              "label": "MuiFormControlLabel-label HvRadioButton-labelTypography",
                              "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                              "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                              "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                              "root": "MuiFormControlLabel-root",
                            }
                          }
                          control={
                            <WithStyles(ForwardRef(Radio))
                              checked={false}
                              checkedIcon={
                                <WithStyles(RadioButtonSelected)
                                  className="HvRadioButton-icon HvList-icon"
                                />
                              }
                              className="HvRadioButton-radio"
                              color="default"
                              disableRipple={true}
                              icon={
                                <WithStyles(RadioButtonUnselected)
                                  className="HvRadioButton-icon HvList-icon"
                                />
                              }
                              onBlur={[Function]}
                              onChange={[Function]}
                              value=""
                            />
                          }
                          label="Value 3"
                          labelPlacement="end"
                        >
                          <label
                            className="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                          >
                            <WithStyles(ForwardRef(Radio))
                              checked={false}
                              checkedIcon={
                                <WithStyles(RadioButtonSelected)
                                  className="HvRadioButton-icon HvList-icon"
                                />
                              }
                              className="HvRadioButton-radio"
                              color="default"
                              disableRipple={true}
                              icon={
                                <WithStyles(RadioButtonUnselected)
                                  className="HvRadioButton-icon HvList-icon"
                                />
                              }
                              onBlur={[Function]}
                              onChange={[Function]}
                              value=""
                            >
                              <ForwardRef(Radio)
                                checked={false}
                                checkedIcon={
                                  <WithStyles(RadioButtonSelected)
                                    className="HvRadioButton-icon HvList-icon"
                                  />
                                }
                                className="HvRadioButton-radio"
                                classes={
                                  Object {
                                    "checked": "Mui-checked",
                                    "colorPrimary": "MuiRadio-colorPrimary",
                                    "colorSecondary": "MuiRadio-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "root": "MuiRadio-root",
                                  }
                                }
                                color="default"
                                disableRipple={true}
                                icon={
                                  <WithStyles(RadioButtonUnselected)
                                    className="HvRadioButton-icon HvList-icon"
                                  />
                                }
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              >
                                <WithStyles(ForwardRef(SwitchBase))
                                  checked={false}
                                  checkedIcon={
                                    <WithStyles(RadioButtonSelected)
                                      className="HvRadioButton-icon HvList-icon"
                                    />
                                  }
                                  className="HvRadioButton-radio"
                                  classes={
                                    Object {
                                      "checked": "Mui-checked",
                                      "disabled": "Mui-disabled",
                                      "root": "MuiRadio-root",
                                    }
                                  }
                                  color="default"
                                  disableRipple={true}
                                  disabled={false}
                                  icon={
                                    <WithStyles(RadioButtonUnselected)
                                      className="HvRadioButton-icon HvList-icon"
                                    />
                                  }
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  type="radio"
                                  value=""
                                >
                                  <ForwardRef(SwitchBase)
                                    checked={false}
                                    checkedIcon={
                                      <WithStyles(RadioButtonSelected)
                                        className="HvRadioButton-icon HvList-icon"
                                      />
                                    }
                                    className="HvRadioButton-radio"
                                    classes={
                                      Object {
                                        "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                                        "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                                        "input": "PrivateSwitchBase-input-4",
                                        "root": "PrivateSwitchBase-root-1 MuiRadio-root",
                                      }
                                    }
                                    color="default"
                                    disableRipple={true}
                                    disabled={false}
                                    icon={
                                      <WithStyles(RadioButtonUnselected)
                                        className="HvRadioButton-icon HvList-icon"
                                      />
                                    }
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    type="radio"
                                    value=""
                                  >
                                    <WithStyles(ForwardRef(IconButton))
                                      className="PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                                      color="default"
                                      component="span"
                                      disableRipple={true}
                                      disabled={false}
                                      onBlur={[Function]}
                                      onFocus={[Function]}
                                      tabIndex={null}
                                    >
                                      <ForwardRef(IconButton)
                                        className="PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                                        classes={
                                          Object {
                                            "colorInherit": "MuiIconButton-colorInherit",
                                            "colorPrimary": "MuiIconButton-colorPrimary",
                                            "colorSecondary": "MuiIconButton-colorSecondary",
                                            "disabled": "Mui-disabled",
                                            "edgeEnd": "MuiIconButton-edgeEnd",
                                            "edgeStart": "MuiIconButton-edgeStart",
                                            "label": "MuiIconButton-label",
                                            "root": "MuiIconButton-root",
                                            "sizeSmall": "MuiIconButton-sizeSmall",
                                          }
                                        }
                                        color="default"
                                        component="span"
                                        disableRipple={true}
                                        disabled={false}
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={null}
                                      >
                                        <WithStyles(ForwardRef(ButtonBase))
                                          centerRipple={true}
                                          className="MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                                          component="span"
                                          disableRipple={true}
                                          disabled={false}
                                          focusRipple={true}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <ForwardRef(ButtonBase)
                                            centerRipple={true}
                                            className="MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                                            classes={
                                              Object {
                                                "disabled": "Mui-disabled",
                                                "focusVisible": "Mui-focusVisible",
                                                "root": "MuiButtonBase-root",
                                              }
                                            }
                                            component="span"
                                            disableRipple={true}
                                            disabled={false}
                                            focusRipple={true}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <span
                                              aria-disabled={false}
                                              className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root HvRadioButton-radio"
                                              onBlur={[Function]}
                                              onDragLeave={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              tabIndex={null}
                                            >
                                              <span
                                                className="MuiIconButton-label"
                                              >
                                                <input
                                                  checked={false}
                                                  className="PrivateSwitchBase-input-4"
                                                  disabled={false}
                                                  onChange={[Function]}
                                                  type="radio"
                                                  value=""
                                                />
                                                <WithStyles(RadioButtonUnselected)
                                                  className="HvRadioButton-icon HvList-icon"
                                                >
                                                  <RadioButtonUnselected
                                                    className="HvRadioButton-icon HvList-icon"
                                                    classes={
                                                      Object {
                                                        "root": "HvIconRadioButtonUnselected-root",
                                                        "rootL": "HvIconRadioButtonUnselected-rootL",
                                                        "rootM": "HvIconRadioButtonUnselected-rootM",
                                                        "rootS": "HvIconRadioButtonUnselected-rootS",
                                                        "rootXs": "HvIconRadioButtonUnselected-rootXs",
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      className="HvRadioButton-icon HvList-icon HvIconRadioButtonUnselected-root HvIconRadioButtonUnselected-rootS"
                                                    >
                                                      <svg
                                                        focusable={false}
                                                        height="16px"
                                                        viewBox="0 0 16 16"
                                                        width="16px"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          className="color0"
                                                          d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                                          fill="#FFFFFF"
                                                        />
                                                        <path
                                                          className="color1"
                                                          d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                                          fill="#414141"
                                                        />
                                                      </svg>
                                                    </div>
                                                  </RadioButtonUnselected>
                                                </WithStyles(RadioButtonUnselected)>
                                              </span>
                                            </span>
                                          </ForwardRef(ButtonBase)>
                                        </WithStyles(ForwardRef(ButtonBase))>
                                      </ForwardRef(IconButton)>
                                    </WithStyles(ForwardRef(IconButton))>
                                  </ForwardRef(SwitchBase)>
                                </WithStyles(ForwardRef(SwitchBase))>
                              </ForwardRef(Radio)>
                            </WithStyles(ForwardRef(Radio))>
                            <WithStyles(ForwardRef(Typography))
                              className="MuiFormControlLabel-label HvRadioButton-labelTypography"
                              component="span"
                            >
                              <ForwardRef(Typography)
                                className="MuiFormControlLabel-label HvRadioButton-labelTypography"
                                classes={
                                  Object {
                                    "alignCenter": "MuiTypography-alignCenter",
                                    "alignJustify": "MuiTypography-alignJustify",
                                    "alignLeft": "MuiTypography-alignLeft",
                                    "alignRight": "MuiTypography-alignRight",
                                    "body1": "MuiTypography-body1",
                                    "body2": "MuiTypography-body2",
                                    "button": "MuiTypography-button",
                                    "caption": "MuiTypography-caption",
                                    "colorError": "MuiTypography-colorError",
                                    "colorInherit": "MuiTypography-colorInherit",
                                    "colorPrimary": "MuiTypography-colorPrimary",
                                    "colorSecondary": "MuiTypography-colorSecondary",
                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                    "displayBlock": "MuiTypography-displayBlock",
                                    "displayInline": "MuiTypography-displayInline",
                                    "gutterBottom": "MuiTypography-gutterBottom",
                                    "h1": "MuiTypography-h1",
                                    "h2": "MuiTypography-h2",
                                    "h3": "MuiTypography-h3",
                                    "h4": "MuiTypography-h4",
                                    "h5": "MuiTypography-h5",
                                    "h6": "MuiTypography-h6",
                                    "noWrap": "MuiTypography-noWrap",
                                    "overline": "MuiTypography-overline",
                                    "paragraph": "MuiTypography-paragraph",
                                    "root": "MuiTypography-root",
                                    "srOnly": "MuiTypography-srOnly",
                                    "subtitle1": "MuiTypography-subtitle1",
                                    "subtitle2": "MuiTypography-subtitle2",
                                  }
                                }
                                component="span"
                              >
                                <span
                                  className="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography MuiTypography-body1"
                                >
                                  Value 3
                                </span>
                              </ForwardRef(Typography)>
                            </WithStyles(ForwardRef(Typography))>
                          </label>
                        </ForwardRef(FormControlLabel)>
                      </WithStyles(ForwardRef(FormControlLabel))>
                    </HvRadio>
                  </WithStyles(HvRadio)>
                </ComponentFunction>
              </li>
            </ConditionalWrapper>
          </Focus>
        </WithStyles(Focus)>
      </ul>
    </div>
  </List>
</WithStyles(List)>
`;
