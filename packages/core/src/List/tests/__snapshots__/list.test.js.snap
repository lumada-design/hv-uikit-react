// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<List /> Multi selection should render correctly 1`] = `
<HvProvider
  changeTheme={[Function]}
  theme={null}
  uiKitTheme="dawn"
>
  <StylesProvider
    generateClassName={[Function]}
    injectFirst={true}
  >
    <ThemeProvider
      theme={
        Object {
          "breakpoints": Object {
            "between": [Function],
            "down": [Function],
            "keys": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
            "only": [Function],
            "up": [Function],
            "values": Object {
              "lg": 1270,
              "md": 960,
              "sm": 600,
              "xl": 1920,
              "xs": 0,
            },
            "width": [Function],
          },
          "direction": "ltr",
          "hv": Object {
            "deprecated": Object {
              "palette": Object {
                "accent": Object {},
                "atmosphere": Object {},
                "base": Object {},
                "semantic": Object {},
                "support": Object {},
              },
              "typography": Object {
                "disabledText": Object {},
              },
              "viz": Object {
                "palette": Object {
                  "categorical": Object {},
                  "polarizes": Object {},
                  "sequential": Object {},
                  "undefinedState": Object {},
                },
              },
            },
            "name": "dawn",
            "palette": Object {
              "accent": Object {
                "acce0": "#FFFFFF",
                "acce1": "#414141",
                "acce2": "#146BD2",
                "acce2h": "#4389DB",
                "acce3": "#CC0000",
              },
              "atmosphere": Object {
                "atmo1": "#FFFFFF",
                "atmo2": "#F9F9F9",
                "atmo3": "#F5F5F5",
                "atmo4": "#F0F0F0",
                "atmo5": "#DEDEDE",
                "atmo6": "#BCBCBC",
                "atmo7": "#999999",
              },
              "base": Object {
                "base1": "#FFFFFF",
                "base2": "#414141",
              },
              "semantic": Object {
                "sema1": "#63A621",
                "sema10": "#EF9A9A",
                "sema11": "#E57373",
                "sema12": "#EF5350",
                "sema13": "#E53935",
                "sema14": "#C62828",
                "sema15": "#80DEEA",
                "sema16": "#4DD0E1",
                "sema17": "#26C6DA",
                "sema18": "#00ACC1",
                "sema19": "#00838F",
                "sema2": "#72CCCB",
                "sema3": "#E68C17",
                "sema4": "#FF5252",
                "sema5": "#C51162",
                "sema6": "#AA00FF",
                "sema7": "#D3E3F6",
                "sema8": "#DFECD1",
                "sema9": "#F5D8D8",
              },
              "support": Object {
                "supp1": "#0F8B8D",
                "supp2": "#734B6D",
                "supp3": "#4E7599",
                "supp4": "#C19C31",
                "supp5": "#546B6B",
              },
            },
            "spacing": Object {
              "lg": 60,
              "md": 30,
              "sm": 20,
              "xl": 90,
              "xs": 10,
            },
            "type": "light",
            "typography": Object {
              "3xlTitle": Object {
                "color": "#414141",
                "fontSize": "42px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "52px",
              },
              "4xlTitle": Object {
                "color": "#414141",
                "fontSize": "52px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "60px",
              },
              "5xlTitle": Object {
                "color": "#414141",
                "fontSize": "52px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "60px",
              },
              "disabledButtonText": Object {
                "color": "#999999",
                "fontSize": "14px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "disabledText": Object {
                "color": "#999999",
                "fontSize": "12px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "16px",
              },
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "highlightText": Object {
                "color": "#414141",
                "fontSize": "14px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "infoText": Object {
                "color": "#999999",
                "fontSize": "12px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "16px",
              },
              "inlineLink": Object {
                "color": "#146BD2",
                "fontSize": "14px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "lTitle": Object {
                "color": "#414141",
                "fontSize": "32px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "40px",
              },
              "labelText": Object {
                "color": "#414141",
                "fontSize": "12px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "16px",
              },
              "mTitle": Object {
                "color": "#414141",
                "fontSize": "22px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "30px",
              },
              "normalText": Object {
                "color": "#414141",
                "fontSize": "14px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "placeholderText": Object {
                "color": "#999999",
                "fontSize": "14px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "sLink": Object {
                "color": "#146BD2",
                "fontSize": "12px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "16px",
              },
              "sText": Object {
                "color": "#414141",
                "fontSize": "12px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "16px",
              },
              "sTitle": Object {
                "color": "#414141",
                "fontSize": "22px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "30px",
              },
              "selectedNavText": Object {
                "color": "#CC0000",
                "fontSize": "14px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "selectedText": Object {
                "background": "#414141",
                "color": "#F9F9F9",
                "fontSize": "14px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "vizText": Object {
                "color": "#414141",
                "fontSize": "10px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "15px",
              },
              "xlTitle": Object {
                "color": "#414141",
                "fontSize": "32px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "40px",
              },
              "xsTitle": Object {
                "color": "#414141",
                "fontSize": "18px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "28px",
              },
              "xxlTitle": Object {
                "color": "#414141",
                "fontSize": "42px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "52px",
              },
              "xxsTitle": Object {
                "color": "#414141",
                "fontSize": "18px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "28px",
              },
            },
            "viz": Object {
              "palette": Object {
                "categorical": Object {
                  "cviz1": "#2DB3E0",
                  "cviz10": "#419393",
                  "cviz11": "#58C9DD",
                  "cviz12": "#F8C189",
                  "cviz13": "#528BBF",
                  "cviz14": "#DE64BD",
                  "cviz15": "#73BF9C",
                  "cviz16": "#9672C1",
                  "cviz17": "#EB95AF",
                  "cviz18": "#646A98",
                  "cviz19": "#D88136",
                  "cviz2": "#FF990D",
                  "cviz20": "#309B59",
                  "cviz3": "#D31F6B",
                  "cviz4": "#FFD00A",
                  "cviz5": "#18C38A",
                  "cviz6": "#098CB2",
                  "cviz7": "#EA5B86",
                  "cviz8": "#9B469B",
                  "cviz9": "#F4763D",
                },
                "polarizes": Object {
                  "cviz21": "#869F1E",
                  "cviz22": "#A4991C",
                  "cviz23": "#C4931A",
                  "cviz24": "#E68C17",
                  "cviz25": "#F27034",
                  "cviz26": "#FF5252",
                  "cviz27": "#EC3D57",
                  "cviz28": "#D8265D",
                  "sema1": "#63A621",
                  "sema5": "#C51162",
                },
                "sequential": Object {
                  "cviz1": "#2DB3E0",
                  "cviz1_100": "#E3F1F6",
                  "cviz1_200": "#CFEAF3",
                  "cviz1_300": "#BAE3F3",
                  "cviz1_400": "#A6DCEE",
                  "cviz1_500": "#92D5EC",
                  "cviz1_600": "#7ECEE9",
                  "cviz1_700": "#69C7E7",
                  "cviz1_800": "#55C0E4",
                  "cviz1_900": "#40B9E2",
                },
                "undefinedState": Object {
                  "atmo5": "#DEDEDE",
                },
              },
            },
          },
          "mixins": Object {
            "gutters": [Function],
            "toolbar": Object {
              "@media (min-width:0px) and (orientation: landscape)": Object {
                "minHeight": 48,
              },
              "@media (min-width:600px)": Object {
                "minHeight": 64,
              },
              "minHeight": 56,
            },
          },
          "overrides": Object {
            "MuiAppBar": Object {
              "colorDefault": Object {
                "backgroundColor": "#FFFFFF",
                "contrastText": "#414141",
              },
              "root": Object {
                "@media (min-width: 600px)": Object {
                  "height": "50px",
                },
                "borderTop": "4px solid #CC0000",
              },
            },
            "MuiIconButton": Object {
              "root": Object {
                "&:focus": Object {
                  "outlineColor": "Highlight",
                  "outlineOffset": -2,
                  "outlineStyle": "auto",
                  "outlineWidth": 4,
                },
                "&:hover": Object {
                  "backgroundColor": "#F0F0F0",
                },
                "borderRadius": 0,
                "padding": 0,
              },
            },
            "MuiToolbar": Object {
              "dense": Object {
                "minHeight": "46px",
              },
              "gutters": Object {
                "@media (min-width:600px)": Object {
                  "paddingLeft": "20px",
                  "paddingRight": "20px",
                },
                "paddingLeft": "20px",
                "paddingRight": "20px",
              },
              "root": Object {
                "@media (min-width: 600px)": Object {
                  "minHeight": "46px",
                },
                "alignItems": "center",
              },
            },
          },
          "palette": Object {
            "acce0": "#FFFFFF",
            "acce1": "#414141",
            "acce2": "#146BD2",
            "acce2h": "#4389DB",
            "acce3": "#CC0000",
            "action": Object {
              "activatedOpacity": 0.12,
              "active": "rgba(0, 0, 0, 0.54)",
              "disabled": "rgba(0, 0, 0, 0.26)",
              "disabledBackground": "rgba(0, 0, 0, 0.12)",
              "disabledOpacity": 0.38,
              "focus": "rgba(0, 0, 0, 0.12)",
              "focusOpacity": 0.12,
              "hover": "rgba(0, 0, 0, 0.04)",
              "hoverOpacity": 0.04,
              "selected": "rgba(0, 0, 0, 0.08)",
              "selectedOpacity": 0.08,
            },
            "atmo1": "#FFFFFF",
            "atmo2": "#F9F9F9",
            "atmo3": "#F5F5F5",
            "atmo4": "#F0F0F0",
            "atmo5": "#DEDEDE",
            "atmo6": "#BCBCBC",
            "atmo7": "#999999",
            "augmentColor": [Function],
            "background": Object {
              "default": "#F5F5F5",
              "paper": "#fff",
            },
            "base1": "#FFFFFF",
            "base2": "#414141",
            "common": Object {
              "black": "#000",
              "white": "#fff",
            },
            "contrastThreshold": 3,
            "divider": "rgba(0, 0, 0, 0.12)",
            "error": Object {
              "contrastText": "#fff",
              "dark": "#d32f2f",
              "light": "#e57373",
              "main": "#f44336",
            },
            "getContrastText": [Function],
            "grey": Object {
              "100": "#f5f5f5",
              "200": "#eeeeee",
              "300": "#e0e0e0",
              "400": "#bdbdbd",
              "50": "#fafafa",
              "500": "#9e9e9e",
              "600": "#757575",
              "700": "#616161",
              "800": "#424242",
              "900": "#212121",
              "A100": "#d5d5d5",
              "A200": "#aaaaaa",
              "A400": "#303030",
              "A700": "#616161",
            },
            "info": Object {
              "contrastText": "#fff",
              "dark": "#1976d2",
              "light": "#64b5f6",
              "main": "#2196f3",
            },
            "primary": Object {
              "contrastText": "#fff",
              "dark": "rgb(14, 74, 147)",
              "light": "#4389DB",
              "main": "#146BD2",
            },
            "secondary": Object {
              "contrastText": "#fff",
              "dark": "rgb(45, 45, 45)",
              "light": "#999999",
              "main": "#414141",
            },
            "sema1": "#63A621",
            "sema10": "#EF9A9A",
            "sema11": "#E57373",
            "sema12": "#EF5350",
            "sema13": "#E53935",
            "sema14": "#C62828",
            "sema15": "#80DEEA",
            "sema16": "#4DD0E1",
            "sema17": "#26C6DA",
            "sema18": "#00ACC1",
            "sema19": "#00838F",
            "sema2": "#72CCCB",
            "sema3": "#E68C17",
            "sema4": "#FF5252",
            "sema5": "#C51162",
            "sema6": "#AA00FF",
            "sema7": "#D3E3F6",
            "sema8": "#DFECD1",
            "sema9": "#F5D8D8",
            "success": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#388e3c",
              "light": "#81c784",
              "main": "#4caf50",
            },
            "supp1": "#0F8B8D",
            "supp2": "#734B6D",
            "supp3": "#4E7599",
            "supp4": "#C19C31",
            "supp5": "#546B6B",
            "text": Object {
              "disabled": "#999999",
              "hint": "rgba(0, 0, 0, 0.38)",
              "primary": "#414141",
              "secondary": "rgba(0, 0, 0, 0.54)",
            },
            "tonalOffset": 0.2,
            "type": "light",
            "warning": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#f57c00",
              "light": "#ffb74d",
              "main": "#ff9800",
            },
          },
          "props": Object {
            "MuiButtonBase": Object {
              "disableRipple": true,
            },
            "MuiInput": Object {
              "disableUnderline": true,
            },
          },
          "shadows": Array [
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
          ],
          "shape": Object {
            "borderRadius": 0,
          },
          "spacing": [Function],
          "transitions": Object {
            "create": [Function],
            "duration": Object {
              "complex": 375,
              "enteringScreen": 225,
              "leavingScreen": 195,
              "short": 250,
              "shorter": 200,
              "shortest": 150,
              "standard": 300,
            },
            "easing": Object {
              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
            },
            "getAutoHeightDuration": [Function],
          },
          "typography": Object {
            "body1": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "14px",
              "fontWeight": 400,
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "body2": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "14px",
              "fontWeight": 400,
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "button": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "14px",
              "fontWeight": 600,
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
              "textTransform": "uppercase",
            },
            "caption": Object {
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "lineHeight": 1.66,
            },
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": 14,
            "fontWeightBold": 700,
            "fontWeightLight": 300,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "32px",
              "fontWeight": 600,
              "letterSpacing": "0.02em",
              "lineHeight": "40px",
            },
            "h2": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "32px",
              "fontWeight": 400,
              "letterSpacing": "0.02em",
              "lineHeight": "40px",
            },
            "h3": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "22px",
              "fontWeight": 600,
              "letterSpacing": "0.02em",
              "lineHeight": "30px",
            },
            "h4": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "22px",
              "fontWeight": 400,
              "letterSpacing": "0.02em",
              "lineHeight": "30px",
            },
            "h5": Object {
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "1.5rem",
              "fontWeight": 400,
              "lineHeight": 1.334,
            },
            "h6": Object {
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "1.25rem",
              "fontWeight": 500,
              "lineHeight": 1.6,
            },
            "htmlFontSize": 16,
            "overline": Object {
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "lineHeight": 2.66,
              "textTransform": "uppercase",
            },
            "pxToRem": [Function],
            "round": [Function],
            "subtitle1": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "14px",
              "fontWeight": 600,
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "subtitle2": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "12px",
              "fontWeight": 600,
              "letterSpacing": "0.02em",
              "lineHeight": "16px",
            },
            "suppressDeprecationWarnings": true,
          },
          "zIndex": Object {
            "appBar": 1100,
            "drawer": 1200,
            "mobileStepper": 1000,
            "modal": 1300,
            "snackbar": 1400,
            "speedDial": 1050,
            "tooltip": 1500,
          },
          Symbol(mui.nested): false,
        }
      }
    >
      <CssBaseline />
      <WithStyles(List)
        condensed={false}
        hasTooltips={false}
        id=""
        labels={
          Object {
            "selectAll": "All",
            "selectionConjunction": "of",
          }
        }
        multiSelect={true}
        onChange={
          [MockFunction] {
            "calls": Array [
              Array [
                Array [
                  Object {
                    "label": "Value 1",
                    "selected": true,
                  },
                  Object {
                    "label": "Value 2",
                    "selected": false,
                  },
                  Object {
                    "label": "Value 3",
                    "selected": false,
                  },
                ],
              ],
              Array [
                Array [
                  Object {
                    "label": "Value 1",
                    "selected": false,
                  },
                  Object {
                    "label": "Value 2",
                    "selected": true,
                  },
                  Object {
                    "label": "Value 3",
                    "selected": false,
                  },
                ],
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          }
        }
        onClick={[Function]}
        selectDefault={false}
        selectable={true}
        showSelectAll={true}
        singleSelectionToggle={true}
        useSelector={false}
        values={
          Array [
            Object {
              "label": "Value 1",
              "selected": true,
            },
            Object {
              "label": "Value 2",
            },
            Object {
              "label": "Value 3",
              "selected": true,
            },
          ]
        }
      >
        <List
          classes={
            Object {
              "box": "HvList-box",
              "condensed": "HvList-condensed",
              "disabled": "HvList-disabled",
              "label": "HvList-label",
              "labelIconLeftPadding": "HvList-labelIconLeftPadding",
              "listItem": "HvList-listItem",
              "noIconLeftPadding": "HvList-noIconLeftPadding",
              "root": "HvList-root",
              "selectAll": "HvList-selectAll",
              "selected": "HvList-selected",
              "selector": "HvList-selector",
              "selectorContainer": "HvList-selectorContainer",
              "textDisabled": "HvList-textDisabled",
              "truncate": "HvList-truncate",
            }
          }
          condensed={false}
          hasTooltips={false}
          id=""
          labels={
            Object {
              "selectAll": "All",
              "selectionConjunction": "of",
            }
          }
          multiSelect={true}
          onChange={
            [MockFunction] {
              "calls": Array [
                Array [
                  Array [
                    Object {
                      "label": "Value 1",
                      "selected": true,
                    },
                    Object {
                      "label": "Value 2",
                      "selected": false,
                    },
                    Object {
                      "label": "Value 3",
                      "selected": false,
                    },
                  ],
                ],
                Array [
                  Array [
                    Object {
                      "label": "Value 1",
                      "selected": false,
                    },
                    Object {
                      "label": "Value 2",
                      "selected": true,
                    },
                    Object {
                      "label": "Value 3",
                      "selected": false,
                    },
                  ],
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
          onClick={[Function]}
          selectDefault={false}
          selectable={true}
          showSelectAll={true}
          singleSelectionToggle={true}
          useSelector={false}
          values={
            Array [
              Object {
                "label": "Value 1",
                "selected": true,
              },
              Object {
                "label": "Value 2",
              },
              Object {
                "label": "Value 3",
                "selected": true,
              },
            ]
          }
        >
          <div>
            <ul
              aria-multiselectable={true}
              className="HvList-root"
              id="hv-list-8"
              role="listbox"
            >
              <WithStyles(Focus)
                configuration={
                  Object {
                    "tabIndex": 0,
                  }
                }
                disabled={false}
                focusDisabled={true}
                focusOnClick={false}
                key="0"
                rootRef={
                  Object {
                    "current": <div>
                      <ul
                        aria-multiselectable="true"
                        class="HvList-root"
                        id="hv-list-8"
                        role="listbox"
                      >
                        <li
                          aria-selected="true"
                          class="HvList-listItem HvList-selected Focus-root-107 Focus-selected-108 Focus-focusDisabled-110"
                          id="hv-list-8-item-0"
                          role="option"
                          tabindex="0"
                        >
                          <p
                            class="HvTypography-selectedText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-selected"
                          >
                            Value 1
                          </p>
                        </li>
                        <li
                          aria-selected="false"
                          class="HvList-listItem Focus-root-107 Focus-focusDisabled-110"
                          id="hv-list-8-item-1"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate"
                          >
                            Value 2
                          </p>
                        </li>
                        <li
                          aria-selected="true"
                          class="HvList-listItem HvList-selected Focus-root-107 Focus-selected-108 Focus-focusDisabled-110"
                          id="hv-list-8-item-2"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-selectedText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-selected"
                          >
                            Value 3
                          </p>
                        </li>
                      </ul>
                    </div>,
                  }
                }
                selected={true}
                strategy="listbox"
                useArrows={true}
                useFalseFocus={false}
              >
                <Focus
                  classes={
                    Object {
                      "disabled": "Focus-disabled-109",
                      "externalReference": "Focus-externalReference-112",
                      "falseFocus": "Focus-falseFocus-113",
                      "focusDisabled": "Focus-focusDisabled-110",
                      "focused": "Focus-focused-111",
                      "root": "Focus-root-107",
                      "selected": "Focus-selected-108",
                    }
                  }
                  configuration={
                    Object {
                      "tabIndex": 0,
                    }
                  }
                  disabled={false}
                  focusDisabled={true}
                  focusOnClick={false}
                  rootRef={
                    Object {
                      "current": <div>
                        <ul
                          aria-multiselectable="true"
                          class="HvList-root"
                          id="hv-list-8"
                          role="listbox"
                        >
                          <li
                            aria-selected="true"
                            class="HvList-listItem HvList-selected Focus-root-107 Focus-selected-108 Focus-focusDisabled-110"
                            id="hv-list-8-item-0"
                            role="option"
                            tabindex="0"
                          >
                            <p
                              class="HvTypography-selectedText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-selected"
                            >
                              Value 1
                            </p>
                          </li>
                          <li
                            aria-selected="false"
                            class="HvList-listItem Focus-root-107 Focus-focusDisabled-110"
                            id="hv-list-8-item-1"
                            role="option"
                            tabindex="-1"
                          >
                            <p
                              class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate"
                            >
                              Value 2
                            </p>
                          </li>
                          <li
                            aria-selected="true"
                            class="HvList-listItem HvList-selected Focus-root-107 Focus-selected-108 Focus-focusDisabled-110"
                            id="hv-list-8-item-2"
                            role="option"
                            tabindex="-1"
                          >
                            <p
                              class="HvTypography-selectedText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-selected"
                            >
                              Value 3
                            </p>
                          </li>
                        </ul>
                      </div>,
                    }
                  }
                  selected={true}
                  strategy="listbox"
                  useArrows={true}
                  useFalseFocus={false}
                >
                  <ConditionalWrapper
                    condition={false}
                    wrapper={[Function]}
                  >
                    <li
                      aria-selected={true}
                      className="HvList-listItem HvList-selected Focus-root-107 Focus-selected-108 Focus-focusDisabled-110"
                      id="hv-list-8-item-0"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      role="option"
                      selected={true}
                    >
                      <Text>
                        <WithStyles(ForwardRef)
                          className="HvList-label HvList-truncate HvList-selected"
                          variant="selectedText"
                        >
                          <ForwardRef
                            className="HvList-label HvList-truncate HvList-selected"
                            classes={
                              Object {
                                "3xlTitle": "HvTypography-3xlTitle",
                                "4xlTitle": "HvTypography-4xlTitle",
                                "5xlTitle": "HvTypography-5xlTitle",
                                "baseFontFamily": "HvTypography-baseFontFamily",
                                "disabledButtonText": "HvTypography-disabledButtonText",
                                "highlightText": "HvTypography-highlightText",
                                "infoText": "HvTypography-infoText",
                                "inlineLink": "HvTypography-inlineLink",
                                "lTitle": "HvTypography-lTitle",
                                "labelText": "HvTypography-labelText",
                                "mTitle": "HvTypography-mTitle",
                                "margin": "HvTypography-margin",
                                "normalText": "HvTypography-normalText",
                                "placeholderText": "HvTypography-placeholderText",
                                "sLink": "HvTypography-sLink",
                                "sText": "HvTypography-sText",
                                "sTitle": "HvTypography-sTitle",
                                "selectedNavText": "HvTypography-selectedNavText",
                                "selectedText": "HvTypography-selectedText",
                                "vizText": "HvTypography-vizText",
                                "xlTitle": "HvTypography-xlTitle",
                                "xsTitle": "HvTypography-xsTitle",
                                "xxlTitle": "HvTypography-xxlTitle",
                                "xxsTitle": "HvTypography-xxsTitle",
                              }
                            }
                            variant="selectedText"
                          >
                            <p
                              className="HvTypography-selectedText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-selected"
                            >
                              Value 1
                            </p>
                          </ForwardRef>
                        </WithStyles(ForwardRef)>
                      </Text>
                    </li>
                  </ConditionalWrapper>
                </Focus>
              </WithStyles(Focus)>
              <WithStyles(Focus)
                configuration={
                  Object {
                    "tabIndex": -1,
                  }
                }
                disabled={false}
                focusDisabled={true}
                focusOnClick={false}
                key="1"
                rootRef={
                  Object {
                    "current": <div>
                      <ul
                        aria-multiselectable="true"
                        class="HvList-root"
                        id="hv-list-8"
                        role="listbox"
                      >
                        <li
                          aria-selected="true"
                          class="HvList-listItem HvList-selected Focus-root-107 Focus-selected-108 Focus-focusDisabled-110"
                          id="hv-list-8-item-0"
                          role="option"
                          tabindex="0"
                        >
                          <p
                            class="HvTypography-selectedText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-selected"
                          >
                            Value 1
                          </p>
                        </li>
                        <li
                          aria-selected="false"
                          class="HvList-listItem Focus-root-107 Focus-focusDisabled-110"
                          id="hv-list-8-item-1"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate"
                          >
                            Value 2
                          </p>
                        </li>
                        <li
                          aria-selected="true"
                          class="HvList-listItem HvList-selected Focus-root-107 Focus-selected-108 Focus-focusDisabled-110"
                          id="hv-list-8-item-2"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-selectedText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-selected"
                          >
                            Value 3
                          </p>
                        </li>
                      </ul>
                    </div>,
                  }
                }
                selected={false}
                strategy="listbox"
                useArrows={true}
                useFalseFocus={false}
              >
                <Focus
                  classes={
                    Object {
                      "disabled": "Focus-disabled-109",
                      "externalReference": "Focus-externalReference-112",
                      "falseFocus": "Focus-falseFocus-113",
                      "focusDisabled": "Focus-focusDisabled-110",
                      "focused": "Focus-focused-111",
                      "root": "Focus-root-107",
                      "selected": "Focus-selected-108",
                    }
                  }
                  configuration={
                    Object {
                      "tabIndex": -1,
                    }
                  }
                  disabled={false}
                  focusDisabled={true}
                  focusOnClick={false}
                  rootRef={
                    Object {
                      "current": <div>
                        <ul
                          aria-multiselectable="true"
                          class="HvList-root"
                          id="hv-list-8"
                          role="listbox"
                        >
                          <li
                            aria-selected="true"
                            class="HvList-listItem HvList-selected Focus-root-107 Focus-selected-108 Focus-focusDisabled-110"
                            id="hv-list-8-item-0"
                            role="option"
                            tabindex="0"
                          >
                            <p
                              class="HvTypography-selectedText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-selected"
                            >
                              Value 1
                            </p>
                          </li>
                          <li
                            aria-selected="false"
                            class="HvList-listItem Focus-root-107 Focus-focusDisabled-110"
                            id="hv-list-8-item-1"
                            role="option"
                            tabindex="-1"
                          >
                            <p
                              class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate"
                            >
                              Value 2
                            </p>
                          </li>
                          <li
                            aria-selected="true"
                            class="HvList-listItem HvList-selected Focus-root-107 Focus-selected-108 Focus-focusDisabled-110"
                            id="hv-list-8-item-2"
                            role="option"
                            tabindex="-1"
                          >
                            <p
                              class="HvTypography-selectedText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-selected"
                            >
                              Value 3
                            </p>
                          </li>
                        </ul>
                      </div>,
                    }
                  }
                  selected={false}
                  strategy="listbox"
                  useArrows={true}
                  useFalseFocus={false}
                >
                  <ConditionalWrapper
                    condition={false}
                    wrapper={[Function]}
                  >
                    <li
                      aria-selected={false}
                      className="HvList-listItem Focus-root-107 Focus-focusDisabled-110"
                      id="hv-list-8-item-1"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      role="option"
                      selected={false}
                    >
                      <Text>
                        <WithStyles(ForwardRef)
                          className="HvList-label HvList-truncate"
                          variant="normalText"
                        >
                          <ForwardRef
                            className="HvList-label HvList-truncate"
                            classes={
                              Object {
                                "3xlTitle": "HvTypography-3xlTitle",
                                "4xlTitle": "HvTypography-4xlTitle",
                                "5xlTitle": "HvTypography-5xlTitle",
                                "baseFontFamily": "HvTypography-baseFontFamily",
                                "disabledButtonText": "HvTypography-disabledButtonText",
                                "highlightText": "HvTypography-highlightText",
                                "infoText": "HvTypography-infoText",
                                "inlineLink": "HvTypography-inlineLink",
                                "lTitle": "HvTypography-lTitle",
                                "labelText": "HvTypography-labelText",
                                "mTitle": "HvTypography-mTitle",
                                "margin": "HvTypography-margin",
                                "normalText": "HvTypography-normalText",
                                "placeholderText": "HvTypography-placeholderText",
                                "sLink": "HvTypography-sLink",
                                "sText": "HvTypography-sText",
                                "sTitle": "HvTypography-sTitle",
                                "selectedNavText": "HvTypography-selectedNavText",
                                "selectedText": "HvTypography-selectedText",
                                "vizText": "HvTypography-vizText",
                                "xlTitle": "HvTypography-xlTitle",
                                "xsTitle": "HvTypography-xsTitle",
                                "xxlTitle": "HvTypography-xxlTitle",
                                "xxsTitle": "HvTypography-xxsTitle",
                              }
                            }
                            variant="normalText"
                          >
                            <p
                              className="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate"
                            >
                              Value 2
                            </p>
                          </ForwardRef>
                        </WithStyles(ForwardRef)>
                      </Text>
                    </li>
                  </ConditionalWrapper>
                </Focus>
              </WithStyles(Focus)>
              <WithStyles(Focus)
                configuration={
                  Object {
                    "tabIndex": -1,
                  }
                }
                disabled={false}
                focusDisabled={true}
                focusOnClick={false}
                key="2"
                rootRef={
                  Object {
                    "current": <div>
                      <ul
                        aria-multiselectable="true"
                        class="HvList-root"
                        id="hv-list-8"
                        role="listbox"
                      >
                        <li
                          aria-selected="true"
                          class="HvList-listItem HvList-selected Focus-root-107 Focus-selected-108 Focus-focusDisabled-110"
                          id="hv-list-8-item-0"
                          role="option"
                          tabindex="0"
                        >
                          <p
                            class="HvTypography-selectedText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-selected"
                          >
                            Value 1
                          </p>
                        </li>
                        <li
                          aria-selected="false"
                          class="HvList-listItem Focus-root-107 Focus-focusDisabled-110"
                          id="hv-list-8-item-1"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate"
                          >
                            Value 2
                          </p>
                        </li>
                        <li
                          aria-selected="true"
                          class="HvList-listItem HvList-selected Focus-root-107 Focus-selected-108 Focus-focusDisabled-110"
                          id="hv-list-8-item-2"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-selectedText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-selected"
                          >
                            Value 3
                          </p>
                        </li>
                      </ul>
                    </div>,
                  }
                }
                selected={true}
                strategy="listbox"
                useArrows={true}
                useFalseFocus={false}
              >
                <Focus
                  classes={
                    Object {
                      "disabled": "Focus-disabled-109",
                      "externalReference": "Focus-externalReference-112",
                      "falseFocus": "Focus-falseFocus-113",
                      "focusDisabled": "Focus-focusDisabled-110",
                      "focused": "Focus-focused-111",
                      "root": "Focus-root-107",
                      "selected": "Focus-selected-108",
                    }
                  }
                  configuration={
                    Object {
                      "tabIndex": -1,
                    }
                  }
                  disabled={false}
                  focusDisabled={true}
                  focusOnClick={false}
                  rootRef={
                    Object {
                      "current": <div>
                        <ul
                          aria-multiselectable="true"
                          class="HvList-root"
                          id="hv-list-8"
                          role="listbox"
                        >
                          <li
                            aria-selected="true"
                            class="HvList-listItem HvList-selected Focus-root-107 Focus-selected-108 Focus-focusDisabled-110"
                            id="hv-list-8-item-0"
                            role="option"
                            tabindex="0"
                          >
                            <p
                              class="HvTypography-selectedText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-selected"
                            >
                              Value 1
                            </p>
                          </li>
                          <li
                            aria-selected="false"
                            class="HvList-listItem Focus-root-107 Focus-focusDisabled-110"
                            id="hv-list-8-item-1"
                            role="option"
                            tabindex="-1"
                          >
                            <p
                              class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate"
                            >
                              Value 2
                            </p>
                          </li>
                          <li
                            aria-selected="true"
                            class="HvList-listItem HvList-selected Focus-root-107 Focus-selected-108 Focus-focusDisabled-110"
                            id="hv-list-8-item-2"
                            role="option"
                            tabindex="-1"
                          >
                            <p
                              class="HvTypography-selectedText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-selected"
                            >
                              Value 3
                            </p>
                          </li>
                        </ul>
                      </div>,
                    }
                  }
                  selected={true}
                  strategy="listbox"
                  useArrows={true}
                  useFalseFocus={false}
                >
                  <ConditionalWrapper
                    condition={false}
                    wrapper={[Function]}
                  >
                    <li
                      aria-selected={true}
                      className="HvList-listItem HvList-selected Focus-root-107 Focus-selected-108 Focus-focusDisabled-110"
                      id="hv-list-8-item-2"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      role="option"
                      selected={true}
                    >
                      <Text>
                        <WithStyles(ForwardRef)
                          className="HvList-label HvList-truncate HvList-selected"
                          variant="selectedText"
                        >
                          <ForwardRef
                            className="HvList-label HvList-truncate HvList-selected"
                            classes={
                              Object {
                                "3xlTitle": "HvTypography-3xlTitle",
                                "4xlTitle": "HvTypography-4xlTitle",
                                "5xlTitle": "HvTypography-5xlTitle",
                                "baseFontFamily": "HvTypography-baseFontFamily",
                                "disabledButtonText": "HvTypography-disabledButtonText",
                                "highlightText": "HvTypography-highlightText",
                                "infoText": "HvTypography-infoText",
                                "inlineLink": "HvTypography-inlineLink",
                                "lTitle": "HvTypography-lTitle",
                                "labelText": "HvTypography-labelText",
                                "mTitle": "HvTypography-mTitle",
                                "margin": "HvTypography-margin",
                                "normalText": "HvTypography-normalText",
                                "placeholderText": "HvTypography-placeholderText",
                                "sLink": "HvTypography-sLink",
                                "sText": "HvTypography-sText",
                                "sTitle": "HvTypography-sTitle",
                                "selectedNavText": "HvTypography-selectedNavText",
                                "selectedText": "HvTypography-selectedText",
                                "vizText": "HvTypography-vizText",
                                "xlTitle": "HvTypography-xlTitle",
                                "xsTitle": "HvTypography-xsTitle",
                                "xxlTitle": "HvTypography-xxlTitle",
                                "xxsTitle": "HvTypography-xxsTitle",
                              }
                            }
                            variant="selectedText"
                          >
                            <p
                              className="HvTypography-selectedText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-selected"
                            >
                              Value 3
                            </p>
                          </ForwardRef>
                        </WithStyles(ForwardRef)>
                      </Text>
                    </li>
                  </ConditionalWrapper>
                </Focus>
              </WithStyles(Focus)>
            </ul>
          </div>
        </List>
      </WithStyles(List)>
    </ThemeProvider>
  </StylesProvider>
</HvProvider>
`;

exports[`<List /> Multi selection with selectors should render correctly 1`] = `
<HvProvider
  changeTheme={[Function]}
  theme={null}
  uiKitTheme="dawn"
>
  <StylesProvider
    generateClassName={[Function]}
    injectFirst={true}
  >
    <ThemeProvider
      theme={
        Object {
          "breakpoints": Object {
            "between": [Function],
            "down": [Function],
            "keys": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
            "only": [Function],
            "up": [Function],
            "values": Object {
              "lg": 1270,
              "md": 960,
              "sm": 600,
              "xl": 1920,
              "xs": 0,
            },
            "width": [Function],
          },
          "direction": "ltr",
          "hv": Object {
            "deprecated": Object {
              "palette": Object {
                "accent": Object {},
                "atmosphere": Object {},
                "base": Object {},
                "semantic": Object {},
                "support": Object {},
              },
              "typography": Object {
                "disabledText": Object {},
              },
              "viz": Object {
                "palette": Object {
                  "categorical": Object {},
                  "polarizes": Object {},
                  "sequential": Object {},
                  "undefinedState": Object {},
                },
              },
            },
            "name": "dawn",
            "palette": Object {
              "accent": Object {
                "acce0": "#FFFFFF",
                "acce1": "#414141",
                "acce2": "#146BD2",
                "acce2h": "#4389DB",
                "acce3": "#CC0000",
              },
              "atmosphere": Object {
                "atmo1": "#FFFFFF",
                "atmo2": "#F9F9F9",
                "atmo3": "#F5F5F5",
                "atmo4": "#F0F0F0",
                "atmo5": "#DEDEDE",
                "atmo6": "#BCBCBC",
                "atmo7": "#999999",
              },
              "base": Object {
                "base1": "#FFFFFF",
                "base2": "#414141",
              },
              "semantic": Object {
                "sema1": "#63A621",
                "sema10": "#EF9A9A",
                "sema11": "#E57373",
                "sema12": "#EF5350",
                "sema13": "#E53935",
                "sema14": "#C62828",
                "sema15": "#80DEEA",
                "sema16": "#4DD0E1",
                "sema17": "#26C6DA",
                "sema18": "#00ACC1",
                "sema19": "#00838F",
                "sema2": "#72CCCB",
                "sema3": "#E68C17",
                "sema4": "#FF5252",
                "sema5": "#C51162",
                "sema6": "#AA00FF",
                "sema7": "#D3E3F6",
                "sema8": "#DFECD1",
                "sema9": "#F5D8D8",
              },
              "support": Object {
                "supp1": "#0F8B8D",
                "supp2": "#734B6D",
                "supp3": "#4E7599",
                "supp4": "#C19C31",
                "supp5": "#546B6B",
              },
            },
            "spacing": Object {
              "lg": 60,
              "md": 30,
              "sm": 20,
              "xl": 90,
              "xs": 10,
            },
            "type": "light",
            "typography": Object {
              "3xlTitle": Object {
                "color": "#414141",
                "fontSize": "42px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "52px",
              },
              "4xlTitle": Object {
                "color": "#414141",
                "fontSize": "52px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "60px",
              },
              "5xlTitle": Object {
                "color": "#414141",
                "fontSize": "52px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "60px",
              },
              "disabledButtonText": Object {
                "color": "#999999",
                "fontSize": "14px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "disabledText": Object {
                "color": "#999999",
                "fontSize": "12px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "16px",
              },
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "highlightText": Object {
                "color": "#414141",
                "fontSize": "14px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "infoText": Object {
                "color": "#999999",
                "fontSize": "12px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "16px",
              },
              "inlineLink": Object {
                "color": "#146BD2",
                "fontSize": "14px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "lTitle": Object {
                "color": "#414141",
                "fontSize": "32px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "40px",
              },
              "labelText": Object {
                "color": "#414141",
                "fontSize": "12px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "16px",
              },
              "mTitle": Object {
                "color": "#414141",
                "fontSize": "22px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "30px",
              },
              "normalText": Object {
                "color": "#414141",
                "fontSize": "14px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "placeholderText": Object {
                "color": "#999999",
                "fontSize": "14px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "sLink": Object {
                "color": "#146BD2",
                "fontSize": "12px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "16px",
              },
              "sText": Object {
                "color": "#414141",
                "fontSize": "12px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "16px",
              },
              "sTitle": Object {
                "color": "#414141",
                "fontSize": "22px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "30px",
              },
              "selectedNavText": Object {
                "color": "#CC0000",
                "fontSize": "14px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "selectedText": Object {
                "background": "#414141",
                "color": "#F9F9F9",
                "fontSize": "14px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "vizText": Object {
                "color": "#414141",
                "fontSize": "10px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "15px",
              },
              "xlTitle": Object {
                "color": "#414141",
                "fontSize": "32px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "40px",
              },
              "xsTitle": Object {
                "color": "#414141",
                "fontSize": "18px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "28px",
              },
              "xxlTitle": Object {
                "color": "#414141",
                "fontSize": "42px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "52px",
              },
              "xxsTitle": Object {
                "color": "#414141",
                "fontSize": "18px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "28px",
              },
            },
            "viz": Object {
              "palette": Object {
                "categorical": Object {
                  "cviz1": "#2DB3E0",
                  "cviz10": "#419393",
                  "cviz11": "#58C9DD",
                  "cviz12": "#F8C189",
                  "cviz13": "#528BBF",
                  "cviz14": "#DE64BD",
                  "cviz15": "#73BF9C",
                  "cviz16": "#9672C1",
                  "cviz17": "#EB95AF",
                  "cviz18": "#646A98",
                  "cviz19": "#D88136",
                  "cviz2": "#FF990D",
                  "cviz20": "#309B59",
                  "cviz3": "#D31F6B",
                  "cviz4": "#FFD00A",
                  "cviz5": "#18C38A",
                  "cviz6": "#098CB2",
                  "cviz7": "#EA5B86",
                  "cviz8": "#9B469B",
                  "cviz9": "#F4763D",
                },
                "polarizes": Object {
                  "cviz21": "#869F1E",
                  "cviz22": "#A4991C",
                  "cviz23": "#C4931A",
                  "cviz24": "#E68C17",
                  "cviz25": "#F27034",
                  "cviz26": "#FF5252",
                  "cviz27": "#EC3D57",
                  "cviz28": "#D8265D",
                  "sema1": "#63A621",
                  "sema5": "#C51162",
                },
                "sequential": Object {
                  "cviz1": "#2DB3E0",
                  "cviz1_100": "#E3F1F6",
                  "cviz1_200": "#CFEAF3",
                  "cviz1_300": "#BAE3F3",
                  "cviz1_400": "#A6DCEE",
                  "cviz1_500": "#92D5EC",
                  "cviz1_600": "#7ECEE9",
                  "cviz1_700": "#69C7E7",
                  "cviz1_800": "#55C0E4",
                  "cviz1_900": "#40B9E2",
                },
                "undefinedState": Object {
                  "atmo5": "#DEDEDE",
                },
              },
            },
          },
          "mixins": Object {
            "gutters": [Function],
            "toolbar": Object {
              "@media (min-width:0px) and (orientation: landscape)": Object {
                "minHeight": 48,
              },
              "@media (min-width:600px)": Object {
                "minHeight": 64,
              },
              "minHeight": 56,
            },
          },
          "overrides": Object {
            "MuiAppBar": Object {
              "colorDefault": Object {
                "backgroundColor": "#FFFFFF",
                "contrastText": "#414141",
              },
              "root": Object {
                "@media (min-width: 600px)": Object {
                  "height": "50px",
                },
                "borderTop": "4px solid #CC0000",
              },
            },
            "MuiIconButton": Object {
              "root": Object {
                "&:focus": Object {
                  "outlineColor": "Highlight",
                  "outlineOffset": -2,
                  "outlineStyle": "auto",
                  "outlineWidth": 4,
                },
                "&:hover": Object {
                  "backgroundColor": "#F0F0F0",
                },
                "borderRadius": 0,
                "padding": 0,
              },
            },
            "MuiToolbar": Object {
              "dense": Object {
                "minHeight": "46px",
              },
              "gutters": Object {
                "@media (min-width:600px)": Object {
                  "paddingLeft": "20px",
                  "paddingRight": "20px",
                },
                "paddingLeft": "20px",
                "paddingRight": "20px",
              },
              "root": Object {
                "@media (min-width: 600px)": Object {
                  "minHeight": "46px",
                },
                "alignItems": "center",
              },
            },
          },
          "palette": Object {
            "acce0": "#FFFFFF",
            "acce1": "#414141",
            "acce2": "#146BD2",
            "acce2h": "#4389DB",
            "acce3": "#CC0000",
            "action": Object {
              "activatedOpacity": 0.12,
              "active": "rgba(0, 0, 0, 0.54)",
              "disabled": "rgba(0, 0, 0, 0.26)",
              "disabledBackground": "rgba(0, 0, 0, 0.12)",
              "disabledOpacity": 0.38,
              "focus": "rgba(0, 0, 0, 0.12)",
              "focusOpacity": 0.12,
              "hover": "rgba(0, 0, 0, 0.04)",
              "hoverOpacity": 0.04,
              "selected": "rgba(0, 0, 0, 0.08)",
              "selectedOpacity": 0.08,
            },
            "atmo1": "#FFFFFF",
            "atmo2": "#F9F9F9",
            "atmo3": "#F5F5F5",
            "atmo4": "#F0F0F0",
            "atmo5": "#DEDEDE",
            "atmo6": "#BCBCBC",
            "atmo7": "#999999",
            "augmentColor": [Function],
            "background": Object {
              "default": "#F5F5F5",
              "paper": "#fff",
            },
            "base1": "#FFFFFF",
            "base2": "#414141",
            "common": Object {
              "black": "#000",
              "white": "#fff",
            },
            "contrastThreshold": 3,
            "divider": "rgba(0, 0, 0, 0.12)",
            "error": Object {
              "contrastText": "#fff",
              "dark": "#d32f2f",
              "light": "#e57373",
              "main": "#f44336",
            },
            "getContrastText": [Function],
            "grey": Object {
              "100": "#f5f5f5",
              "200": "#eeeeee",
              "300": "#e0e0e0",
              "400": "#bdbdbd",
              "50": "#fafafa",
              "500": "#9e9e9e",
              "600": "#757575",
              "700": "#616161",
              "800": "#424242",
              "900": "#212121",
              "A100": "#d5d5d5",
              "A200": "#aaaaaa",
              "A400": "#303030",
              "A700": "#616161",
            },
            "info": Object {
              "contrastText": "#fff",
              "dark": "#1976d2",
              "light": "#64b5f6",
              "main": "#2196f3",
            },
            "primary": Object {
              "contrastText": "#fff",
              "dark": "rgb(14, 74, 147)",
              "light": "#4389DB",
              "main": "#146BD2",
            },
            "secondary": Object {
              "contrastText": "#fff",
              "dark": "rgb(45, 45, 45)",
              "light": "#999999",
              "main": "#414141",
            },
            "sema1": "#63A621",
            "sema10": "#EF9A9A",
            "sema11": "#E57373",
            "sema12": "#EF5350",
            "sema13": "#E53935",
            "sema14": "#C62828",
            "sema15": "#80DEEA",
            "sema16": "#4DD0E1",
            "sema17": "#26C6DA",
            "sema18": "#00ACC1",
            "sema19": "#00838F",
            "sema2": "#72CCCB",
            "sema3": "#E68C17",
            "sema4": "#FF5252",
            "sema5": "#C51162",
            "sema6": "#AA00FF",
            "sema7": "#D3E3F6",
            "sema8": "#DFECD1",
            "sema9": "#F5D8D8",
            "success": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#388e3c",
              "light": "#81c784",
              "main": "#4caf50",
            },
            "supp1": "#0F8B8D",
            "supp2": "#734B6D",
            "supp3": "#4E7599",
            "supp4": "#C19C31",
            "supp5": "#546B6B",
            "text": Object {
              "disabled": "#999999",
              "hint": "rgba(0, 0, 0, 0.38)",
              "primary": "#414141",
              "secondary": "rgba(0, 0, 0, 0.54)",
            },
            "tonalOffset": 0.2,
            "type": "light",
            "warning": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#f57c00",
              "light": "#ffb74d",
              "main": "#ff9800",
            },
          },
          "props": Object {
            "MuiButtonBase": Object {
              "disableRipple": true,
            },
            "MuiInput": Object {
              "disableUnderline": true,
            },
          },
          "shadows": Array [
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
          ],
          "shape": Object {
            "borderRadius": 0,
          },
          "spacing": [Function],
          "transitions": Object {
            "create": [Function],
            "duration": Object {
              "complex": 375,
              "enteringScreen": 225,
              "leavingScreen": 195,
              "short": 250,
              "shorter": 200,
              "shortest": 150,
              "standard": 300,
            },
            "easing": Object {
              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
            },
            "getAutoHeightDuration": [Function],
          },
          "typography": Object {
            "body1": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "14px",
              "fontWeight": 400,
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "body2": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "14px",
              "fontWeight": 400,
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "button": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "14px",
              "fontWeight": 600,
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
              "textTransform": "uppercase",
            },
            "caption": Object {
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "lineHeight": 1.66,
            },
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": 14,
            "fontWeightBold": 700,
            "fontWeightLight": 300,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "32px",
              "fontWeight": 600,
              "letterSpacing": "0.02em",
              "lineHeight": "40px",
            },
            "h2": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "32px",
              "fontWeight": 400,
              "letterSpacing": "0.02em",
              "lineHeight": "40px",
            },
            "h3": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "22px",
              "fontWeight": 600,
              "letterSpacing": "0.02em",
              "lineHeight": "30px",
            },
            "h4": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "22px",
              "fontWeight": 400,
              "letterSpacing": "0.02em",
              "lineHeight": "30px",
            },
            "h5": Object {
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "1.5rem",
              "fontWeight": 400,
              "lineHeight": 1.334,
            },
            "h6": Object {
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "1.25rem",
              "fontWeight": 500,
              "lineHeight": 1.6,
            },
            "htmlFontSize": 16,
            "overline": Object {
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "lineHeight": 2.66,
              "textTransform": "uppercase",
            },
            "pxToRem": [Function],
            "round": [Function],
            "subtitle1": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "14px",
              "fontWeight": 600,
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "subtitle2": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "12px",
              "fontWeight": 600,
              "letterSpacing": "0.02em",
              "lineHeight": "16px",
            },
            "suppressDeprecationWarnings": true,
          },
          "zIndex": Object {
            "appBar": 1100,
            "drawer": 1200,
            "mobileStepper": 1000,
            "modal": 1300,
            "snackbar": 1400,
            "speedDial": 1050,
            "tooltip": 1500,
          },
          Symbol(mui.nested): false,
        }
      }
    >
      <CssBaseline />
      <WithStyles(List)
        condensed={false}
        hasTooltips={false}
        id=""
        labels={
          Object {
            "selectAll": "All",
            "selectionConjunction": "of",
          }
        }
        multiSelect={true}
        onChange={
          [MockFunction] {
            "calls": Array [
              Array [
                Array [
                  Object {
                    "label": "Value 1",
                    "selected": true,
                  },
                  Object {
                    "label": "Value 2",
                    "selected": false,
                  },
                  Object {
                    "label": "Value 3",
                    "selected": false,
                  },
                ],
              ],
              Array [
                Array [
                  Object {
                    "label": "Value 1",
                    "selected": false,
                  },
                  Object {
                    "label": "Value 2",
                    "selected": true,
                  },
                  Object {
                    "label": "Value 3",
                    "selected": false,
                  },
                ],
              ],
              Array [
                Array [
                  Object {
                    "label": "Value 1",
                    "selected": true,
                  },
                  Object {
                    "label": "Value 2",
                    "selected": true,
                  },
                  Object {
                    "label": "Value 3",
                    "selected": true,
                  },
                ],
              ],
              Array [
                Array [
                  Object {
                    "label": "Value 1",
                    "selected": false,
                  },
                  Object {
                    "label": "Value 2",
                    "selected": false,
                  },
                  Object {
                    "label": "Value 3",
                    "selected": true,
                  },
                ],
              ],
              Array [
                Array [
                  Object {
                    "label": "Value 1",
                    "selected": false,
                  },
                  Object {
                    "label": "Value 2",
                    "selected": false,
                  },
                  Object {
                    "label": "Value 3",
                    "selected": false,
                  },
                ],
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          }
        }
        onClick={[Function]}
        selectDefault={false}
        selectable={true}
        showSelectAll={true}
        singleSelectionToggle={true}
        useSelector={true}
        values={
          Array [
            Object {
              "label": "Value 1",
              "selected": true,
            },
            Object {
              "label": "Value 2",
            },
            Object {
              "label": "Value 3",
              "selected": true,
            },
          ]
        }
      >
        <List
          classes={
            Object {
              "box": "HvList-box",
              "condensed": "HvList-condensed",
              "disabled": "HvList-disabled",
              "label": "HvList-label",
              "labelIconLeftPadding": "HvList-labelIconLeftPadding",
              "listItem": "HvList-listItem",
              "noIconLeftPadding": "HvList-noIconLeftPadding",
              "root": "HvList-root",
              "selectAll": "HvList-selectAll",
              "selected": "HvList-selected",
              "selector": "HvList-selector",
              "selectorContainer": "HvList-selectorContainer",
              "textDisabled": "HvList-textDisabled",
              "truncate": "HvList-truncate",
            }
          }
          condensed={false}
          hasTooltips={false}
          id=""
          labels={
            Object {
              "selectAll": "All",
              "selectionConjunction": "of",
            }
          }
          multiSelect={true}
          onChange={
            [MockFunction] {
              "calls": Array [
                Array [
                  Array [
                    Object {
                      "label": "Value 1",
                      "selected": true,
                    },
                    Object {
                      "label": "Value 2",
                      "selected": false,
                    },
                    Object {
                      "label": "Value 3",
                      "selected": false,
                    },
                  ],
                ],
                Array [
                  Array [
                    Object {
                      "label": "Value 1",
                      "selected": false,
                    },
                    Object {
                      "label": "Value 2",
                      "selected": true,
                    },
                    Object {
                      "label": "Value 3",
                      "selected": false,
                    },
                  ],
                ],
                Array [
                  Array [
                    Object {
                      "label": "Value 1",
                      "selected": true,
                    },
                    Object {
                      "label": "Value 2",
                      "selected": true,
                    },
                    Object {
                      "label": "Value 3",
                      "selected": true,
                    },
                  ],
                ],
                Array [
                  Array [
                    Object {
                      "label": "Value 1",
                      "selected": false,
                    },
                    Object {
                      "label": "Value 2",
                      "selected": false,
                    },
                    Object {
                      "label": "Value 3",
                      "selected": true,
                    },
                  ],
                ],
                Array [
                  Array [
                    Object {
                      "label": "Value 1",
                      "selected": false,
                    },
                    Object {
                      "label": "Value 2",
                      "selected": false,
                    },
                    Object {
                      "label": "Value 3",
                      "selected": false,
                    },
                  ],
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
          onClick={[Function]}
          selectDefault={false}
          selectable={true}
          showSelectAll={true}
          singleSelectionToggle={true}
          useSelector={true}
          values={
            Array [
              Object {
                "label": "Value 1",
                "selected": true,
              },
              Object {
                "label": "Value 2",
              },
              Object {
                "label": "Value 3",
                "selected": true,
              },
            ]
          }
        >
          <div>
            <WithStyles(HvCheckbox)
              checked={false}
              className="HvList-selectAll"
              classes={
                Object {
                  "container": "HvList-selectorContainer",
                }
              }
              disabled={false}
              indeterminate={true}
              label="2 of 3"
              labelPlacement="end"
              onChange={[Function]}
              value=""
            >
              <HvCheckbox
                checked={false}
                className="HvList-selectAll"
                classes={
                  Object {
                    "checkBox": "HvCheckBox-checkBox",
                    "container": "HvCheckBox-container HvList-selectorContainer",
                    "disableFocus": "HvCheckBox-disableFocus",
                    "icon": "HvCheckBox-icon",
                    "labelDisabled": "HvCheckBox-labelDisabled",
                    "labelEnd": "HvCheckBox-labelEnd",
                    "labelStart": "HvCheckBox-labelStart",
                    "labelTypography": "HvCheckBox-labelTypography",
                  }
                }
                disabled={false}
                indeterminate={true}
                label="2 of 3"
                labelPlacement="end"
                onChange={[Function]}
                value=""
              >
                <WithStyles(ForwardRef(FormControlLabel))
                  className="HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd HvList-selectAll"
                  classes={
                    Object {
                      "disabled": "HvCheckBox-labelDisabled",
                      "label": "HvCheckBox-labelTypography",
                    }
                  }
                  control={
                    <ForwardRef(WithStyles)
                      checked={false}
                      checkedIcon={
                        <ForwardRef(WithStyles)
                          className="HvCheckBox-icon"
                        />
                      }
                      className="HvCheckBox-checkBox"
                      color="default"
                      disableRipple={true}
                      disabled={false}
                      icon={
                        <ForwardRef(WithStyles)
                          className="HvCheckBox-icon"
                        />
                      }
                      id="hv-checkbox-15-input"
                      indeterminate={true}
                      indeterminateIcon={
                        <ForwardRef(WithStyles)
                          className="HvCheckBox-icon"
                        />
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      value=""
                    />
                  }
                  disabled={false}
                  id="hv-checkbox-15"
                  label="2 of 3"
                  labelPlacement="end"
                >
                  <ForwardRef(FormControlLabel)
                    className="HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd HvList-selectAll"
                    classes={
                      Object {
                        "disabled": "Mui-disabled HvCheckBox-labelDisabled",
                        "label": "MuiFormControlLabel-label HvCheckBox-labelTypography",
                        "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                        "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                        "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                        "root": "MuiFormControlLabel-root",
                      }
                    }
                    control={
                      <ForwardRef(WithStyles)
                        checked={false}
                        checkedIcon={
                          <ForwardRef(WithStyles)
                            className="HvCheckBox-icon"
                          />
                        }
                        className="HvCheckBox-checkBox"
                        color="default"
                        disableRipple={true}
                        disabled={false}
                        icon={
                          <ForwardRef(WithStyles)
                            className="HvCheckBox-icon"
                          />
                        }
                        id="hv-checkbox-15-input"
                        indeterminate={true}
                        indeterminateIcon={
                          <ForwardRef(WithStyles)
                            className="HvCheckBox-icon"
                          />
                        }
                        onBlur={[Function]}
                        onChange={[Function]}
                        value=""
                      />
                    }
                    disabled={false}
                    id="hv-checkbox-15"
                    label="2 of 3"
                    labelPlacement="end"
                  >
                    <label
                      className="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd HvList-selectAll"
                      id="hv-checkbox-15"
                    >
                      <WithStyles(ForwardRef(Checkbox))
                        checked={false}
                        checkedIcon={
                          <ForwardRef(WithStyles)
                            className="HvCheckBox-icon"
                          />
                        }
                        className="HvCheckBox-checkBox"
                        color="default"
                        disableRipple={true}
                        disabled={false}
                        icon={
                          <ForwardRef(WithStyles)
                            className="HvCheckBox-icon"
                          />
                        }
                        id="hv-checkbox-15-input"
                        indeterminate={true}
                        indeterminateIcon={
                          <ForwardRef(WithStyles)
                            className="HvCheckBox-icon"
                          />
                        }
                        onBlur={[Function]}
                        onChange={[Function]}
                        value=""
                      >
                        <ForwardRef(Checkbox)
                          checked={false}
                          checkedIcon={
                            <ForwardRef(WithStyles)
                              className="HvCheckBox-icon"
                            />
                          }
                          className="HvCheckBox-checkBox"
                          classes={
                            Object {
                              "checked": "Mui-checked",
                              "colorPrimary": "MuiCheckbox-colorPrimary",
                              "colorSecondary": "MuiCheckbox-colorSecondary",
                              "disabled": "Mui-disabled",
                              "indeterminate": "MuiCheckbox-indeterminate",
                              "root": "MuiCheckbox-root",
                            }
                          }
                          color="default"
                          disableRipple={true}
                          disabled={false}
                          icon={
                            <ForwardRef(WithStyles)
                              className="HvCheckBox-icon"
                            />
                          }
                          id="hv-checkbox-15-input"
                          indeterminate={true}
                          indeterminateIcon={
                            <ForwardRef(WithStyles)
                              className="HvCheckBox-icon"
                            />
                          }
                          onBlur={[Function]}
                          onChange={[Function]}
                          value=""
                        >
                          <WithStyles(ForwardRef(SwitchBase))
                            checked={false}
                            checkedIcon={
                              <ForwardRef(WithStyles)
                                className="HvCheckBox-icon"
                                fontSize="default"
                              />
                            }
                            className="HvCheckBox-checkBox"
                            classes={
                              Object {
                                "checked": "Mui-checked",
                                "disabled": "Mui-disabled",
                                "root": "MuiCheckbox-root MuiCheckbox-indeterminate",
                              }
                            }
                            color="default"
                            disableRipple={true}
                            disabled={false}
                            icon={
                              <ForwardRef(WithStyles)
                                className="HvCheckBox-icon"
                                fontSize="default"
                              />
                            }
                            id="hv-checkbox-15-input"
                            inputProps={
                              Object {
                                "data-indeterminate": true,
                              }
                            }
                            onBlur={[Function]}
                            onChange={[Function]}
                            type="checkbox"
                            value=""
                          >
                            <ForwardRef(SwitchBase)
                              checked={false}
                              checkedIcon={
                                <ForwardRef(WithStyles)
                                  className="HvCheckBox-icon"
                                  fontSize="default"
                                />
                              }
                              className="HvCheckBox-checkBox"
                              classes={
                                Object {
                                  "checked": "PrivateSwitchBase-checked-162 Mui-checked",
                                  "disabled": "PrivateSwitchBase-disabled-163 Mui-disabled",
                                  "input": "PrivateSwitchBase-input-164",
                                  "root": "PrivateSwitchBase-root-161 MuiCheckbox-root MuiCheckbox-indeterminate",
                                }
                              }
                              color="default"
                              disableRipple={true}
                              disabled={false}
                              icon={
                                <ForwardRef(WithStyles)
                                  className="HvCheckBox-icon"
                                  fontSize="default"
                                />
                              }
                              id="hv-checkbox-15-input"
                              inputProps={
                                Object {
                                  "data-indeterminate": true,
                                }
                              }
                              onBlur={[Function]}
                              onChange={[Function]}
                              type="checkbox"
                              value=""
                            >
                              <WithStyles(ForwardRef(IconButton))
                                className="PrivateSwitchBase-root-161 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox"
                                color="default"
                                component="span"
                                disableRipple={true}
                                disabled={false}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <ForwardRef(IconButton)
                                  className="PrivateSwitchBase-root-161 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox"
                                  classes={
                                    Object {
                                      "colorInherit": "MuiIconButton-colorInherit",
                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                      "edgeStart": "MuiIconButton-edgeStart",
                                      "label": "MuiIconButton-label",
                                      "root": "MuiIconButton-root",
                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                    }
                                  }
                                  color="default"
                                  component="span"
                                  disableRipple={true}
                                  disabled={false}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    centerRipple={true}
                                    className="MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox"
                                    component="span"
                                    disableRipple={true}
                                    disabled={false}
                                    focusRipple={true}
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    tabIndex={null}
                                  >
                                    <ForwardRef(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      component="span"
                                      disableRipple={true}
                                      disabled={false}
                                      focusRipple={true}
                                      onBlur={[Function]}
                                      onFocus={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        aria-disabled={false}
                                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox"
                                        onBlur={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={null}
                                      >
                                        <span
                                          className="MuiIconButton-label"
                                        >
                                          <input
                                            checked={false}
                                            className="PrivateSwitchBase-input-164"
                                            data-indeterminate={true}
                                            disabled={false}
                                            id="hv-checkbox-15-input"
                                            onChange={[Function]}
                                            type="checkbox"
                                            value=""
                                          />
                                          <WithStyles(CheckboxPartial)
                                            className="HvCheckBox-icon"
                                            fontSize="default"
                                          >
                                            <CheckboxPartial
                                              className="HvCheckBox-icon"
                                              classes={
                                                Object {
                                                  "root": "HvIconCheckboxPartial-root",
                                                  "rootL": "HvIconCheckboxPartial-rootL",
                                                  "rootM": "HvIconCheckboxPartial-rootM",
                                                  "rootS": "HvIconCheckboxPartial-rootS",
                                                  "rootXs": "HvIconCheckboxPartial-rootXs",
                                                }
                                              }
                                              fontSize="default"
                                            >
                                              <div
                                                className="HvCheckBox-icon HvIconCheckboxPartial-root HvIconCheckboxPartial-rootS"
                                                fontSize="default"
                                              >
                                                <svg
                                                  focusable={false}
                                                  height="16px"
                                                  viewBox="0 0 16 16"
                                                  width="16px"
                                                  xmlns="http://www.w3.org/2000/svg"
                                                >
                                                  <path
                                                    className="color0"
                                                    d="M0 0h16v16H0z"
                                                    fill="#FFFFFF"
                                                  />
                                                  <g
                                                    className="color1"
                                                    fill="#414141"
                                                  >
                                                    <path
                                                      d="M0 0v16h16V0zm15 15H1V1h14z"
                                                    />
                                                    <path
                                                      d="M4 7h8v2H4z"
                                                    />
                                                  </g>
                                                </svg>
                                              </div>
                                            </CheckboxPartial>
                                          </WithStyles(CheckboxPartial)>
                                        </span>
                                        <NoSsr />
                                      </span>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(IconButton)>
                              </WithStyles(ForwardRef(IconButton))>
                            </ForwardRef(SwitchBase)>
                          </WithStyles(ForwardRef(SwitchBase))>
                        </ForwardRef(Checkbox)>
                      </WithStyles(ForwardRef(Checkbox))>
                      <WithStyles(ForwardRef(Typography))
                        className="MuiFormControlLabel-label HvCheckBox-labelTypography"
                        component="span"
                      >
                        <ForwardRef(Typography)
                          className="MuiFormControlLabel-label HvCheckBox-labelTypography"
                          classes={
                            Object {
                              "alignCenter": "MuiTypography-alignCenter",
                              "alignJustify": "MuiTypography-alignJustify",
                              "alignLeft": "MuiTypography-alignLeft",
                              "alignRight": "MuiTypography-alignRight",
                              "body1": "MuiTypography-body1",
                              "body2": "MuiTypography-body2",
                              "button": "MuiTypography-button",
                              "caption": "MuiTypography-caption",
                              "colorError": "MuiTypography-colorError",
                              "colorInherit": "MuiTypography-colorInherit",
                              "colorPrimary": "MuiTypography-colorPrimary",
                              "colorSecondary": "MuiTypography-colorSecondary",
                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                              "displayBlock": "MuiTypography-displayBlock",
                              "displayInline": "MuiTypography-displayInline",
                              "gutterBottom": "MuiTypography-gutterBottom",
                              "h1": "MuiTypography-h1",
                              "h2": "MuiTypography-h2",
                              "h3": "MuiTypography-h3",
                              "h4": "MuiTypography-h4",
                              "h5": "MuiTypography-h5",
                              "h6": "MuiTypography-h6",
                              "noWrap": "MuiTypography-noWrap",
                              "overline": "MuiTypography-overline",
                              "paragraph": "MuiTypography-paragraph",
                              "root": "MuiTypography-root",
                              "srOnly": "MuiTypography-srOnly",
                              "subtitle1": "MuiTypography-subtitle1",
                              "subtitle2": "MuiTypography-subtitle2",
                            }
                          }
                          component="span"
                        >
                          <span
                            className="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                          >
                            2 of 3
                          </span>
                        </ForwardRef(Typography)>
                      </WithStyles(ForwardRef(Typography))>
                    </label>
                  </ForwardRef(FormControlLabel)>
                </WithStyles(ForwardRef(FormControlLabel))>
              </HvCheckbox>
            </WithStyles(HvCheckbox)>
            <ul
              aria-multiselectable={true}
              className="HvList-root"
              id="hv-list-14"
              role="listbox"
            >
              <WithStyles(Focus)
                configuration={
                  Object {
                    "tabIndex": 0,
                  }
                }
                disabled={false}
                focusDisabled={true}
                focusOnClick={false}
                key="0"
                rootRef={
                  Object {
                    "current": <div>
                      <label
                        class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd HvList-selectAll"
                        id="hv-checkbox-15"
                      >
                        <span
                          aria-disabled="false"
                          class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <input
                              class="PrivateSwitchBase-input-164"
                              data-indeterminate="true"
                              id="hv-checkbox-15-input"
                              type="checkbox"
                              value=""
                            />
                            <div
                              class="HvCheckBox-icon HvIconCheckboxPartial-root HvIconCheckboxPartial-rootS"
                              font-size="default"
                            >
                              <svg
                                focusable="false"
                                height="16px"
                                viewBox="0 0 16 16"
                                width="16px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M0 0h16v16H0z"
                                  fill="#FFFFFF"
                                />
                                <g
                                  class="color1"
                                  fill="#414141"
                                >
                                  <path
                                    d="M0 0v16h16V0zm15 15H1V1h14z"
                                  />
                                  <path
                                    d="M4 7h8v2H4z"
                                  />
                                </g>
                              </svg>
                            </div>
                          </span>
                        </span>
                        <span
                          class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                        >
                          2 of 3
                        </span>
                      </label>
                      <ul
                        aria-multiselectable="true"
                        class="HvList-root"
                        id="hv-list-14"
                        role="listbox"
                      >
                        <li
                          aria-selected="true"
                          class="HvList-listItem HvList-selector Focus-root-207 Focus-selected-208 Focus-focusDisabled-210"
                          id="hv-list-14-item-0"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                            id="hv-list-14-item-0-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-162 Mui-checked"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  checked=""
                                  class="PrivateSwitchBase-input-164"
                                  data-indeterminate="false"
                                  id="hv-list-14-item-0-selector-input"
                                  tabindex="0"
                                  type="checkbox"
                                  value=""
                                />
                                <div
                                  class="HvCheckBox-icon HvIconCheckboxCheck-root HvIconCheckboxCheck-rootS"
                                  font-size="default"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M0 0h16v16H0z"
                                      fill="#414141"
                                    />
                                    <path
                                      class="color1"
                                      d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                      fill="#FFFFFF"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 1
                            </span>
                          </label>
                        </li>
                        <li
                          aria-selected="false"
                          class="HvList-listItem HvList-selector Focus-root-207 Focus-focusDisabled-210"
                          id="hv-list-14-item-1"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                            id="hv-list-14-item-1-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  class="PrivateSwitchBase-input-164"
                                  data-indeterminate="false"
                                  id="hv-list-14-item-1-selector-input"
                                  tabindex="-1"
                                  type="checkbox"
                                  value=""
                                />
                                <div
                                  class="HvCheckBox-icon HvIconCheckbox-root HvIconCheckbox-rootS"
                                  font-size="default"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M0 0h16v16H0z"
                                      fill="#FFFFFF"
                                    />
                                    <path
                                      class="color1"
                                      d="M0-.00291v16h16v-16zm15 15H1v-14h14z"
                                      fill="#414141"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 2
                            </span>
                          </label>
                        </li>
                        <li
                          aria-selected="true"
                          class="HvList-listItem HvList-selector Focus-root-207 Focus-selected-208 Focus-focusDisabled-210"
                          id="hv-list-14-item-2"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                            id="hv-list-14-item-2-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-162 Mui-checked"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  checked=""
                                  class="PrivateSwitchBase-input-164"
                                  data-indeterminate="false"
                                  id="hv-list-14-item-2-selector-input"
                                  tabindex="-1"
                                  type="checkbox"
                                  value=""
                                />
                                <div
                                  class="HvCheckBox-icon HvIconCheckboxCheck-root HvIconCheckboxCheck-rootS"
                                  font-size="default"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M0 0h16v16H0z"
                                      fill="#414141"
                                    />
                                    <path
                                      class="color1"
                                      d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                      fill="#FFFFFF"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 3
                            </span>
                          </label>
                        </li>
                      </ul>
                    </div>,
                  }
                }
                selected={true}
                strategy="listbox"
                useArrows={true}
                useFalseFocus={false}
              >
                <Focus
                  classes={
                    Object {
                      "disabled": "Focus-disabled-209",
                      "externalReference": "Focus-externalReference-212",
                      "falseFocus": "Focus-falseFocus-213",
                      "focusDisabled": "Focus-focusDisabled-210",
                      "focused": "Focus-focused-211",
                      "root": "Focus-root-207",
                      "selected": "Focus-selected-208",
                    }
                  }
                  configuration={
                    Object {
                      "tabIndex": 0,
                    }
                  }
                  disabled={false}
                  focusDisabled={true}
                  focusOnClick={false}
                  rootRef={
                    Object {
                      "current": <div>
                        <label
                          class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd HvList-selectAll"
                          id="hv-checkbox-15"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                class="PrivateSwitchBase-input-164"
                                data-indeterminate="true"
                                id="hv-checkbox-15-input"
                                type="checkbox"
                                value=""
                              />
                              <div
                                class="HvCheckBox-icon HvIconCheckboxPartial-root HvIconCheckboxPartial-rootS"
                                font-size="default"
                              >
                                <svg
                                  focusable="false"
                                  height="16px"
                                  viewBox="0 0 16 16"
                                  width="16px"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M0 0h16v16H0z"
                                    fill="#FFFFFF"
                                  />
                                  <g
                                    class="color1"
                                    fill="#414141"
                                  >
                                    <path
                                      d="M0 0v16h16V0zm15 15H1V1h14z"
                                    />
                                    <path
                                      d="M4 7h8v2H4z"
                                    />
                                  </g>
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                          >
                            2 of 3
                          </span>
                        </label>
                        <ul
                          aria-multiselectable="true"
                          class="HvList-root"
                          id="hv-list-14"
                          role="listbox"
                        >
                          <li
                            aria-selected="true"
                            class="HvList-listItem HvList-selector Focus-root-207 Focus-selected-208 Focus-focusDisabled-210"
                            id="hv-list-14-item-0"
                            role="option"
                            tabindex="-1"
                          >
                            <label
                              class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                              id="hv-list-14-item-0-selector"
                            >
                              <span
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-162 Mui-checked"
                              >
                                <span
                                  class="MuiIconButton-label"
                                >
                                  <input
                                    checked=""
                                    class="PrivateSwitchBase-input-164"
                                    data-indeterminate="false"
                                    id="hv-list-14-item-0-selector-input"
                                    tabindex="0"
                                    type="checkbox"
                                    value=""
                                  />
                                  <div
                                    class="HvCheckBox-icon HvIconCheckboxCheck-root HvIconCheckboxCheck-rootS"
                                    font-size="default"
                                  >
                                    <svg
                                      focusable="false"
                                      height="16px"
                                      viewBox="0 0 16 16"
                                      width="16px"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        class="color0"
                                        d="M0 0h16v16H0z"
                                        fill="#414141"
                                      />
                                      <path
                                        class="color1"
                                        d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                        fill="#FFFFFF"
                                      />
                                    </svg>
                                  </div>
                                </span>
                              </span>
                              <span
                                class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                              >
                                Value 1
                              </span>
                            </label>
                          </li>
                          <li
                            aria-selected="false"
                            class="HvList-listItem HvList-selector Focus-root-207 Focus-focusDisabled-210"
                            id="hv-list-14-item-1"
                            role="option"
                            tabindex="-1"
                          >
                            <label
                              class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                              id="hv-list-14-item-1-selector"
                            >
                              <span
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox"
                              >
                                <span
                                  class="MuiIconButton-label"
                                >
                                  <input
                                    class="PrivateSwitchBase-input-164"
                                    data-indeterminate="false"
                                    id="hv-list-14-item-1-selector-input"
                                    tabindex="-1"
                                    type="checkbox"
                                    value=""
                                  />
                                  <div
                                    class="HvCheckBox-icon HvIconCheckbox-root HvIconCheckbox-rootS"
                                    font-size="default"
                                  >
                                    <svg
                                      focusable="false"
                                      height="16px"
                                      viewBox="0 0 16 16"
                                      width="16px"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        class="color0"
                                        d="M0 0h16v16H0z"
                                        fill="#FFFFFF"
                                      />
                                      <path
                                        class="color1"
                                        d="M0-.00291v16h16v-16zm15 15H1v-14h14z"
                                        fill="#414141"
                                      />
                                    </svg>
                                  </div>
                                </span>
                              </span>
                              <span
                                class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                              >
                                Value 2
                              </span>
                            </label>
                          </li>
                          <li
                            aria-selected="true"
                            class="HvList-listItem HvList-selector Focus-root-207 Focus-selected-208 Focus-focusDisabled-210"
                            id="hv-list-14-item-2"
                            role="option"
                            tabindex="-1"
                          >
                            <label
                              class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                              id="hv-list-14-item-2-selector"
                            >
                              <span
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-162 Mui-checked"
                              >
                                <span
                                  class="MuiIconButton-label"
                                >
                                  <input
                                    checked=""
                                    class="PrivateSwitchBase-input-164"
                                    data-indeterminate="false"
                                    id="hv-list-14-item-2-selector-input"
                                    tabindex="-1"
                                    type="checkbox"
                                    value=""
                                  />
                                  <div
                                    class="HvCheckBox-icon HvIconCheckboxCheck-root HvIconCheckboxCheck-rootS"
                                    font-size="default"
                                  >
                                    <svg
                                      focusable="false"
                                      height="16px"
                                      viewBox="0 0 16 16"
                                      width="16px"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        class="color0"
                                        d="M0 0h16v16H0z"
                                        fill="#414141"
                                      />
                                      <path
                                        class="color1"
                                        d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                        fill="#FFFFFF"
                                      />
                                    </svg>
                                  </div>
                                </span>
                              </span>
                              <span
                                class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                              >
                                Value 3
                              </span>
                            </label>
                          </li>
                        </ul>
                      </div>,
                    }
                  }
                  selected={true}
                  strategy="listbox"
                  useArrows={true}
                  useFalseFocus={false}
                >
                  <ConditionalWrapper
                    condition={false}
                    wrapper={[Function]}
                  >
                    <li
                      aria-selected={true}
                      className="HvList-listItem HvList-selector Focus-root-207 Focus-selected-208 Focus-focusDisabled-210"
                      id="hv-list-14-item-0"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      role="option"
                      selected={true}
                    >
                      <WithStyles(HvCheckbox)
                        checked={true}
                        className=""
                        classes={
                          Object {
                            "container": "HvList-selectorContainer",
                            "labelTypography": "HvList-truncate",
                          }
                        }
                        disabled={false}
                        id="hv-list-14-item-0-selector"
                        label="Value 1"
                        labelPlacement="end"
                        onChange={[Function]}
                        value=""
                      >
                        <HvCheckbox
                          checked={true}
                          className=""
                          classes={
                            Object {
                              "checkBox": "HvCheckBox-checkBox",
                              "container": "HvCheckBox-container HvList-selectorContainer",
                              "disableFocus": "HvCheckBox-disableFocus",
                              "icon": "HvCheckBox-icon",
                              "labelDisabled": "HvCheckBox-labelDisabled",
                              "labelEnd": "HvCheckBox-labelEnd",
                              "labelStart": "HvCheckBox-labelStart",
                              "labelTypography": "HvCheckBox-labelTypography HvList-truncate",
                            }
                          }
                          disabled={false}
                          id="hv-list-14-item-0-selector"
                          label="Value 1"
                          labelPlacement="end"
                          onChange={[Function]}
                          value=""
                        >
                          <WithStyles(ForwardRef(FormControlLabel))
                            className="HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                            classes={
                              Object {
                                "disabled": "HvCheckBox-labelDisabled",
                                "label": "HvCheckBox-labelTypography HvList-truncate",
                              }
                            }
                            control={
                              <ForwardRef(WithStyles)
                                checked={true}
                                checkedIcon={
                                  <ForwardRef(WithStyles)
                                    className="HvCheckBox-icon"
                                  />
                                }
                                className="HvCheckBox-checkBox"
                                color="default"
                                disableRipple={true}
                                disabled={false}
                                icon={
                                  <ForwardRef(WithStyles)
                                    className="HvCheckBox-icon"
                                  />
                                }
                                id="hv-list-14-item-0-selector-input"
                                indeterminateIcon={
                                  <ForwardRef(WithStyles)
                                    className="HvCheckBox-icon"
                                  />
                                }
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              />
                            }
                            disabled={false}
                            id="hv-list-14-item-0-selector"
                            label="Value 1"
                            labelPlacement="end"
                          >
                            <ForwardRef(FormControlLabel)
                              className="HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                              classes={
                                Object {
                                  "disabled": "Mui-disabled HvCheckBox-labelDisabled",
                                  "label": "MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate",
                                  "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                  "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                  "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                  "root": "MuiFormControlLabel-root",
                                }
                              }
                              control={
                                <ForwardRef(WithStyles)
                                  checked={true}
                                  checkedIcon={
                                    <ForwardRef(WithStyles)
                                      className="HvCheckBox-icon"
                                    />
                                  }
                                  className="HvCheckBox-checkBox"
                                  color="default"
                                  disableRipple={true}
                                  disabled={false}
                                  icon={
                                    <ForwardRef(WithStyles)
                                      className="HvCheckBox-icon"
                                    />
                                  }
                                  id="hv-list-14-item-0-selector-input"
                                  indeterminateIcon={
                                    <ForwardRef(WithStyles)
                                      className="HvCheckBox-icon"
                                    />
                                  }
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  value=""
                                />
                              }
                              disabled={false}
                              id="hv-list-14-item-0-selector"
                              label="Value 1"
                              labelPlacement="end"
                            >
                              <label
                                className="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                                id="hv-list-14-item-0-selector"
                              >
                                <WithStyles(ForwardRef(Checkbox))
                                  checked={true}
                                  checkedIcon={
                                    <ForwardRef(WithStyles)
                                      className="HvCheckBox-icon"
                                    />
                                  }
                                  className="HvCheckBox-checkBox"
                                  color="default"
                                  disableRipple={true}
                                  disabled={false}
                                  icon={
                                    <ForwardRef(WithStyles)
                                      className="HvCheckBox-icon"
                                    />
                                  }
                                  id="hv-list-14-item-0-selector-input"
                                  indeterminateIcon={
                                    <ForwardRef(WithStyles)
                                      className="HvCheckBox-icon"
                                    />
                                  }
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  value=""
                                >
                                  <ForwardRef(Checkbox)
                                    checked={true}
                                    checkedIcon={
                                      <ForwardRef(WithStyles)
                                        className="HvCheckBox-icon"
                                      />
                                    }
                                    className="HvCheckBox-checkBox"
                                    classes={
                                      Object {
                                        "checked": "Mui-checked",
                                        "colorPrimary": "MuiCheckbox-colorPrimary",
                                        "colorSecondary": "MuiCheckbox-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "indeterminate": "MuiCheckbox-indeterminate",
                                        "root": "MuiCheckbox-root",
                                      }
                                    }
                                    color="default"
                                    disableRipple={true}
                                    disabled={false}
                                    icon={
                                      <ForwardRef(WithStyles)
                                        className="HvCheckBox-icon"
                                      />
                                    }
                                    id="hv-list-14-item-0-selector-input"
                                    indeterminateIcon={
                                      <ForwardRef(WithStyles)
                                        className="HvCheckBox-icon"
                                      />
                                    }
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    value=""
                                  >
                                    <WithStyles(ForwardRef(SwitchBase))
                                      checked={true}
                                      checkedIcon={
                                        <ForwardRef(WithStyles)
                                          className="HvCheckBox-icon"
                                          fontSize="default"
                                        />
                                      }
                                      className="HvCheckBox-checkBox"
                                      classes={
                                        Object {
                                          "checked": "Mui-checked",
                                          "disabled": "Mui-disabled",
                                          "root": "MuiCheckbox-root",
                                        }
                                      }
                                      color="default"
                                      disableRipple={true}
                                      disabled={false}
                                      icon={
                                        <ForwardRef(WithStyles)
                                          className="HvCheckBox-icon"
                                          fontSize="default"
                                        />
                                      }
                                      id="hv-list-14-item-0-selector-input"
                                      inputProps={
                                        Object {
                                          "data-indeterminate": false,
                                        }
                                      }
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      type="checkbox"
                                      value=""
                                    >
                                      <ForwardRef(SwitchBase)
                                        checked={true}
                                        checkedIcon={
                                          <ForwardRef(WithStyles)
                                            className="HvCheckBox-icon"
                                            fontSize="default"
                                          />
                                        }
                                        className="HvCheckBox-checkBox"
                                        classes={
                                          Object {
                                            "checked": "PrivateSwitchBase-checked-162 Mui-checked",
                                            "disabled": "PrivateSwitchBase-disabled-163 Mui-disabled",
                                            "input": "PrivateSwitchBase-input-164",
                                            "root": "PrivateSwitchBase-root-161 MuiCheckbox-root",
                                          }
                                        }
                                        color="default"
                                        disableRipple={true}
                                        disabled={false}
                                        icon={
                                          <ForwardRef(WithStyles)
                                            className="HvCheckBox-icon"
                                            fontSize="default"
                                          />
                                        }
                                        id="hv-list-14-item-0-selector-input"
                                        inputProps={
                                          Object {
                                            "data-indeterminate": false,
                                          }
                                        }
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        type="checkbox"
                                        value=""
                                      >
                                        <WithStyles(ForwardRef(IconButton))
                                          className="PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-162 Mui-checked"
                                          color="default"
                                          component="span"
                                          disableRipple={true}
                                          disabled={false}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <ForwardRef(IconButton)
                                            className="PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-162 Mui-checked"
                                            classes={
                                              Object {
                                                "colorInherit": "MuiIconButton-colorInherit",
                                                "colorPrimary": "MuiIconButton-colorPrimary",
                                                "colorSecondary": "MuiIconButton-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "edgeEnd": "MuiIconButton-edgeEnd",
                                                "edgeStart": "MuiIconButton-edgeStart",
                                                "label": "MuiIconButton-label",
                                                "root": "MuiIconButton-root",
                                                "sizeSmall": "MuiIconButton-sizeSmall",
                                              }
                                            }
                                            color="default"
                                            component="span"
                                            disableRipple={true}
                                            disabled={false}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              centerRipple={true}
                                              className="MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-162 Mui-checked"
                                              component="span"
                                              disableRipple={true}
                                              disabled={false}
                                              focusRipple={true}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <ForwardRef(ButtonBase)
                                                centerRipple={true}
                                                className="MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-162 Mui-checked"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="span"
                                                disableRipple={true}
                                                disabled={false}
                                                focusRipple={true}
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                tabIndex={null}
                                              >
                                                <span
                                                  aria-disabled={false}
                                                  className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-162 Mui-checked"
                                                  onBlur={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  tabIndex={null}
                                                >
                                                  <span
                                                    className="MuiIconButton-label"
                                                  >
                                                    <input
                                                      checked={true}
                                                      className="PrivateSwitchBase-input-164"
                                                      data-indeterminate={false}
                                                      disabled={false}
                                                      id="hv-list-14-item-0-selector-input"
                                                      onChange={[Function]}
                                                      type="checkbox"
                                                      value=""
                                                    />
                                                    <WithStyles(CheckboxCheck)
                                                      className="HvCheckBox-icon"
                                                      fontSize="default"
                                                    >
                                                      <CheckboxCheck
                                                        className="HvCheckBox-icon"
                                                        classes={
                                                          Object {
                                                            "root": "HvIconCheckboxCheck-root",
                                                            "rootL": "HvIconCheckboxCheck-rootL",
                                                            "rootM": "HvIconCheckboxCheck-rootM",
                                                            "rootS": "HvIconCheckboxCheck-rootS",
                                                            "rootXs": "HvIconCheckboxCheck-rootXs",
                                                          }
                                                        }
                                                        fontSize="default"
                                                      >
                                                        <div
                                                          className="HvCheckBox-icon HvIconCheckboxCheck-root HvIconCheckboxCheck-rootS"
                                                          fontSize="default"
                                                        >
                                                          <svg
                                                            focusable={false}
                                                            height="16px"
                                                            viewBox="0 0 16 16"
                                                            width="16px"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              className="color0"
                                                              d="M0 0h16v16H0z"
                                                              fill="#414141"
                                                            />
                                                            <path
                                                              className="color1"
                                                              d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                                              fill="#FFFFFF"
                                                            />
                                                          </svg>
                                                        </div>
                                                      </CheckboxCheck>
                                                    </WithStyles(CheckboxCheck)>
                                                  </span>
                                                  <NoSsr />
                                                </span>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(IconButton)>
                                        </WithStyles(ForwardRef(IconButton))>
                                      </ForwardRef(SwitchBase)>
                                    </WithStyles(ForwardRef(SwitchBase))>
                                  </ForwardRef(Checkbox)>
                                </WithStyles(ForwardRef(Checkbox))>
                                <WithStyles(ForwardRef(Typography))
                                  className="MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate"
                                  component="span"
                                >
                                  <ForwardRef(Typography)
                                    className="MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                    component="span"
                                  >
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                                    >
                                      Value 1
                                    </span>
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                              </label>
                            </ForwardRef(FormControlLabel)>
                          </WithStyles(ForwardRef(FormControlLabel))>
                        </HvCheckbox>
                      </WithStyles(HvCheckbox)>
                    </li>
                  </ConditionalWrapper>
                </Focus>
              </WithStyles(Focus)>
              <WithStyles(Focus)
                configuration={
                  Object {
                    "tabIndex": -1,
                  }
                }
                disabled={false}
                focusDisabled={true}
                focusOnClick={false}
                key="1"
                rootRef={
                  Object {
                    "current": <div>
                      <label
                        class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd HvList-selectAll"
                        id="hv-checkbox-15"
                      >
                        <span
                          aria-disabled="false"
                          class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <input
                              class="PrivateSwitchBase-input-164"
                              data-indeterminate="true"
                              id="hv-checkbox-15-input"
                              type="checkbox"
                              value=""
                            />
                            <div
                              class="HvCheckBox-icon HvIconCheckboxPartial-root HvIconCheckboxPartial-rootS"
                              font-size="default"
                            >
                              <svg
                                focusable="false"
                                height="16px"
                                viewBox="0 0 16 16"
                                width="16px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M0 0h16v16H0z"
                                  fill="#FFFFFF"
                                />
                                <g
                                  class="color1"
                                  fill="#414141"
                                >
                                  <path
                                    d="M0 0v16h16V0zm15 15H1V1h14z"
                                  />
                                  <path
                                    d="M4 7h8v2H4z"
                                  />
                                </g>
                              </svg>
                            </div>
                          </span>
                        </span>
                        <span
                          class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                        >
                          2 of 3
                        </span>
                      </label>
                      <ul
                        aria-multiselectable="true"
                        class="HvList-root"
                        id="hv-list-14"
                        role="listbox"
                      >
                        <li
                          aria-selected="true"
                          class="HvList-listItem HvList-selector Focus-root-207 Focus-selected-208 Focus-focusDisabled-210"
                          id="hv-list-14-item-0"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                            id="hv-list-14-item-0-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-162 Mui-checked"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  checked=""
                                  class="PrivateSwitchBase-input-164"
                                  data-indeterminate="false"
                                  id="hv-list-14-item-0-selector-input"
                                  tabindex="0"
                                  type="checkbox"
                                  value=""
                                />
                                <div
                                  class="HvCheckBox-icon HvIconCheckboxCheck-root HvIconCheckboxCheck-rootS"
                                  font-size="default"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M0 0h16v16H0z"
                                      fill="#414141"
                                    />
                                    <path
                                      class="color1"
                                      d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                      fill="#FFFFFF"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 1
                            </span>
                          </label>
                        </li>
                        <li
                          aria-selected="false"
                          class="HvList-listItem HvList-selector Focus-root-207 Focus-focusDisabled-210"
                          id="hv-list-14-item-1"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                            id="hv-list-14-item-1-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  class="PrivateSwitchBase-input-164"
                                  data-indeterminate="false"
                                  id="hv-list-14-item-1-selector-input"
                                  tabindex="-1"
                                  type="checkbox"
                                  value=""
                                />
                                <div
                                  class="HvCheckBox-icon HvIconCheckbox-root HvIconCheckbox-rootS"
                                  font-size="default"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M0 0h16v16H0z"
                                      fill="#FFFFFF"
                                    />
                                    <path
                                      class="color1"
                                      d="M0-.00291v16h16v-16zm15 15H1v-14h14z"
                                      fill="#414141"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 2
                            </span>
                          </label>
                        </li>
                        <li
                          aria-selected="true"
                          class="HvList-listItem HvList-selector Focus-root-207 Focus-selected-208 Focus-focusDisabled-210"
                          id="hv-list-14-item-2"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                            id="hv-list-14-item-2-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-162 Mui-checked"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  checked=""
                                  class="PrivateSwitchBase-input-164"
                                  data-indeterminate="false"
                                  id="hv-list-14-item-2-selector-input"
                                  tabindex="-1"
                                  type="checkbox"
                                  value=""
                                />
                                <div
                                  class="HvCheckBox-icon HvIconCheckboxCheck-root HvIconCheckboxCheck-rootS"
                                  font-size="default"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M0 0h16v16H0z"
                                      fill="#414141"
                                    />
                                    <path
                                      class="color1"
                                      d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                      fill="#FFFFFF"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 3
                            </span>
                          </label>
                        </li>
                      </ul>
                    </div>,
                  }
                }
                selected={false}
                strategy="listbox"
                useArrows={true}
                useFalseFocus={false}
              >
                <Focus
                  classes={
                    Object {
                      "disabled": "Focus-disabled-209",
                      "externalReference": "Focus-externalReference-212",
                      "falseFocus": "Focus-falseFocus-213",
                      "focusDisabled": "Focus-focusDisabled-210",
                      "focused": "Focus-focused-211",
                      "root": "Focus-root-207",
                      "selected": "Focus-selected-208",
                    }
                  }
                  configuration={
                    Object {
                      "tabIndex": -1,
                    }
                  }
                  disabled={false}
                  focusDisabled={true}
                  focusOnClick={false}
                  rootRef={
                    Object {
                      "current": <div>
                        <label
                          class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd HvList-selectAll"
                          id="hv-checkbox-15"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                class="PrivateSwitchBase-input-164"
                                data-indeterminate="true"
                                id="hv-checkbox-15-input"
                                type="checkbox"
                                value=""
                              />
                              <div
                                class="HvCheckBox-icon HvIconCheckboxPartial-root HvIconCheckboxPartial-rootS"
                                font-size="default"
                              >
                                <svg
                                  focusable="false"
                                  height="16px"
                                  viewBox="0 0 16 16"
                                  width="16px"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M0 0h16v16H0z"
                                    fill="#FFFFFF"
                                  />
                                  <g
                                    class="color1"
                                    fill="#414141"
                                  >
                                    <path
                                      d="M0 0v16h16V0zm15 15H1V1h14z"
                                    />
                                    <path
                                      d="M4 7h8v2H4z"
                                    />
                                  </g>
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                          >
                            2 of 3
                          </span>
                        </label>
                        <ul
                          aria-multiselectable="true"
                          class="HvList-root"
                          id="hv-list-14"
                          role="listbox"
                        >
                          <li
                            aria-selected="true"
                            class="HvList-listItem HvList-selector Focus-root-207 Focus-selected-208 Focus-focusDisabled-210"
                            id="hv-list-14-item-0"
                            role="option"
                            tabindex="-1"
                          >
                            <label
                              class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                              id="hv-list-14-item-0-selector"
                            >
                              <span
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-162 Mui-checked"
                              >
                                <span
                                  class="MuiIconButton-label"
                                >
                                  <input
                                    checked=""
                                    class="PrivateSwitchBase-input-164"
                                    data-indeterminate="false"
                                    id="hv-list-14-item-0-selector-input"
                                    tabindex="0"
                                    type="checkbox"
                                    value=""
                                  />
                                  <div
                                    class="HvCheckBox-icon HvIconCheckboxCheck-root HvIconCheckboxCheck-rootS"
                                    font-size="default"
                                  >
                                    <svg
                                      focusable="false"
                                      height="16px"
                                      viewBox="0 0 16 16"
                                      width="16px"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        class="color0"
                                        d="M0 0h16v16H0z"
                                        fill="#414141"
                                      />
                                      <path
                                        class="color1"
                                        d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                        fill="#FFFFFF"
                                      />
                                    </svg>
                                  </div>
                                </span>
                              </span>
                              <span
                                class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                              >
                                Value 1
                              </span>
                            </label>
                          </li>
                          <li
                            aria-selected="false"
                            class="HvList-listItem HvList-selector Focus-root-207 Focus-focusDisabled-210"
                            id="hv-list-14-item-1"
                            role="option"
                            tabindex="-1"
                          >
                            <label
                              class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                              id="hv-list-14-item-1-selector"
                            >
                              <span
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox"
                              >
                                <span
                                  class="MuiIconButton-label"
                                >
                                  <input
                                    class="PrivateSwitchBase-input-164"
                                    data-indeterminate="false"
                                    id="hv-list-14-item-1-selector-input"
                                    tabindex="-1"
                                    type="checkbox"
                                    value=""
                                  />
                                  <div
                                    class="HvCheckBox-icon HvIconCheckbox-root HvIconCheckbox-rootS"
                                    font-size="default"
                                  >
                                    <svg
                                      focusable="false"
                                      height="16px"
                                      viewBox="0 0 16 16"
                                      width="16px"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        class="color0"
                                        d="M0 0h16v16H0z"
                                        fill="#FFFFFF"
                                      />
                                      <path
                                        class="color1"
                                        d="M0-.00291v16h16v-16zm15 15H1v-14h14z"
                                        fill="#414141"
                                      />
                                    </svg>
                                  </div>
                                </span>
                              </span>
                              <span
                                class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                              >
                                Value 2
                              </span>
                            </label>
                          </li>
                          <li
                            aria-selected="true"
                            class="HvList-listItem HvList-selector Focus-root-207 Focus-selected-208 Focus-focusDisabled-210"
                            id="hv-list-14-item-2"
                            role="option"
                            tabindex="-1"
                          >
                            <label
                              class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                              id="hv-list-14-item-2-selector"
                            >
                              <span
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-162 Mui-checked"
                              >
                                <span
                                  class="MuiIconButton-label"
                                >
                                  <input
                                    checked=""
                                    class="PrivateSwitchBase-input-164"
                                    data-indeterminate="false"
                                    id="hv-list-14-item-2-selector-input"
                                    tabindex="-1"
                                    type="checkbox"
                                    value=""
                                  />
                                  <div
                                    class="HvCheckBox-icon HvIconCheckboxCheck-root HvIconCheckboxCheck-rootS"
                                    font-size="default"
                                  >
                                    <svg
                                      focusable="false"
                                      height="16px"
                                      viewBox="0 0 16 16"
                                      width="16px"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        class="color0"
                                        d="M0 0h16v16H0z"
                                        fill="#414141"
                                      />
                                      <path
                                        class="color1"
                                        d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                        fill="#FFFFFF"
                                      />
                                    </svg>
                                  </div>
                                </span>
                              </span>
                              <span
                                class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                              >
                                Value 3
                              </span>
                            </label>
                          </li>
                        </ul>
                      </div>,
                    }
                  }
                  selected={false}
                  strategy="listbox"
                  useArrows={true}
                  useFalseFocus={false}
                >
                  <ConditionalWrapper
                    condition={false}
                    wrapper={[Function]}
                  >
                    <li
                      aria-selected={false}
                      className="HvList-listItem HvList-selector Focus-root-207 Focus-focusDisabled-210"
                      id="hv-list-14-item-1"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      role="option"
                      selected={false}
                    >
                      <WithStyles(HvCheckbox)
                        checked={false}
                        className=""
                        classes={
                          Object {
                            "container": "HvList-selectorContainer",
                            "labelTypography": "HvList-truncate",
                          }
                        }
                        disabled={false}
                        id="hv-list-14-item-1-selector"
                        label="Value 2"
                        labelPlacement="end"
                        onChange={[Function]}
                        value=""
                      >
                        <HvCheckbox
                          checked={false}
                          className=""
                          classes={
                            Object {
                              "checkBox": "HvCheckBox-checkBox",
                              "container": "HvCheckBox-container HvList-selectorContainer",
                              "disableFocus": "HvCheckBox-disableFocus",
                              "icon": "HvCheckBox-icon",
                              "labelDisabled": "HvCheckBox-labelDisabled",
                              "labelEnd": "HvCheckBox-labelEnd",
                              "labelStart": "HvCheckBox-labelStart",
                              "labelTypography": "HvCheckBox-labelTypography HvList-truncate",
                            }
                          }
                          disabled={false}
                          id="hv-list-14-item-1-selector"
                          label="Value 2"
                          labelPlacement="end"
                          onChange={[Function]}
                          value=""
                        >
                          <WithStyles(ForwardRef(FormControlLabel))
                            className="HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                            classes={
                              Object {
                                "disabled": "HvCheckBox-labelDisabled",
                                "label": "HvCheckBox-labelTypography HvList-truncate",
                              }
                            }
                            control={
                              <ForwardRef(WithStyles)
                                checked={false}
                                checkedIcon={
                                  <ForwardRef(WithStyles)
                                    className="HvCheckBox-icon"
                                  />
                                }
                                className="HvCheckBox-checkBox"
                                color="default"
                                disableRipple={true}
                                disabled={false}
                                icon={
                                  <ForwardRef(WithStyles)
                                    className="HvCheckBox-icon"
                                  />
                                }
                                id="hv-list-14-item-1-selector-input"
                                indeterminateIcon={
                                  <ForwardRef(WithStyles)
                                    className="HvCheckBox-icon"
                                  />
                                }
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              />
                            }
                            disabled={false}
                            id="hv-list-14-item-1-selector"
                            label="Value 2"
                            labelPlacement="end"
                          >
                            <ForwardRef(FormControlLabel)
                              className="HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                              classes={
                                Object {
                                  "disabled": "Mui-disabled HvCheckBox-labelDisabled",
                                  "label": "MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate",
                                  "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                  "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                  "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                  "root": "MuiFormControlLabel-root",
                                }
                              }
                              control={
                                <ForwardRef(WithStyles)
                                  checked={false}
                                  checkedIcon={
                                    <ForwardRef(WithStyles)
                                      className="HvCheckBox-icon"
                                    />
                                  }
                                  className="HvCheckBox-checkBox"
                                  color="default"
                                  disableRipple={true}
                                  disabled={false}
                                  icon={
                                    <ForwardRef(WithStyles)
                                      className="HvCheckBox-icon"
                                    />
                                  }
                                  id="hv-list-14-item-1-selector-input"
                                  indeterminateIcon={
                                    <ForwardRef(WithStyles)
                                      className="HvCheckBox-icon"
                                    />
                                  }
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  value=""
                                />
                              }
                              disabled={false}
                              id="hv-list-14-item-1-selector"
                              label="Value 2"
                              labelPlacement="end"
                            >
                              <label
                                className="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                                id="hv-list-14-item-1-selector"
                              >
                                <WithStyles(ForwardRef(Checkbox))
                                  checked={false}
                                  checkedIcon={
                                    <ForwardRef(WithStyles)
                                      className="HvCheckBox-icon"
                                    />
                                  }
                                  className="HvCheckBox-checkBox"
                                  color="default"
                                  disableRipple={true}
                                  disabled={false}
                                  icon={
                                    <ForwardRef(WithStyles)
                                      className="HvCheckBox-icon"
                                    />
                                  }
                                  id="hv-list-14-item-1-selector-input"
                                  indeterminateIcon={
                                    <ForwardRef(WithStyles)
                                      className="HvCheckBox-icon"
                                    />
                                  }
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  value=""
                                >
                                  <ForwardRef(Checkbox)
                                    checked={false}
                                    checkedIcon={
                                      <ForwardRef(WithStyles)
                                        className="HvCheckBox-icon"
                                      />
                                    }
                                    className="HvCheckBox-checkBox"
                                    classes={
                                      Object {
                                        "checked": "Mui-checked",
                                        "colorPrimary": "MuiCheckbox-colorPrimary",
                                        "colorSecondary": "MuiCheckbox-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "indeterminate": "MuiCheckbox-indeterminate",
                                        "root": "MuiCheckbox-root",
                                      }
                                    }
                                    color="default"
                                    disableRipple={true}
                                    disabled={false}
                                    icon={
                                      <ForwardRef(WithStyles)
                                        className="HvCheckBox-icon"
                                      />
                                    }
                                    id="hv-list-14-item-1-selector-input"
                                    indeterminateIcon={
                                      <ForwardRef(WithStyles)
                                        className="HvCheckBox-icon"
                                      />
                                    }
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    value=""
                                  >
                                    <WithStyles(ForwardRef(SwitchBase))
                                      checked={false}
                                      checkedIcon={
                                        <ForwardRef(WithStyles)
                                          className="HvCheckBox-icon"
                                          fontSize="default"
                                        />
                                      }
                                      className="HvCheckBox-checkBox"
                                      classes={
                                        Object {
                                          "checked": "Mui-checked",
                                          "disabled": "Mui-disabled",
                                          "root": "MuiCheckbox-root",
                                        }
                                      }
                                      color="default"
                                      disableRipple={true}
                                      disabled={false}
                                      icon={
                                        <ForwardRef(WithStyles)
                                          className="HvCheckBox-icon"
                                          fontSize="default"
                                        />
                                      }
                                      id="hv-list-14-item-1-selector-input"
                                      inputProps={
                                        Object {
                                          "data-indeterminate": false,
                                        }
                                      }
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      type="checkbox"
                                      value=""
                                    >
                                      <ForwardRef(SwitchBase)
                                        checked={false}
                                        checkedIcon={
                                          <ForwardRef(WithStyles)
                                            className="HvCheckBox-icon"
                                            fontSize="default"
                                          />
                                        }
                                        className="HvCheckBox-checkBox"
                                        classes={
                                          Object {
                                            "checked": "PrivateSwitchBase-checked-162 Mui-checked",
                                            "disabled": "PrivateSwitchBase-disabled-163 Mui-disabled",
                                            "input": "PrivateSwitchBase-input-164",
                                            "root": "PrivateSwitchBase-root-161 MuiCheckbox-root",
                                          }
                                        }
                                        color="default"
                                        disableRipple={true}
                                        disabled={false}
                                        icon={
                                          <ForwardRef(WithStyles)
                                            className="HvCheckBox-icon"
                                            fontSize="default"
                                          />
                                        }
                                        id="hv-list-14-item-1-selector-input"
                                        inputProps={
                                          Object {
                                            "data-indeterminate": false,
                                          }
                                        }
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        type="checkbox"
                                        value=""
                                      >
                                        <WithStyles(ForwardRef(IconButton))
                                          className="PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox"
                                          color="default"
                                          component="span"
                                          disableRipple={true}
                                          disabled={false}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <ForwardRef(IconButton)
                                            className="PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox"
                                            classes={
                                              Object {
                                                "colorInherit": "MuiIconButton-colorInherit",
                                                "colorPrimary": "MuiIconButton-colorPrimary",
                                                "colorSecondary": "MuiIconButton-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "edgeEnd": "MuiIconButton-edgeEnd",
                                                "edgeStart": "MuiIconButton-edgeStart",
                                                "label": "MuiIconButton-label",
                                                "root": "MuiIconButton-root",
                                                "sizeSmall": "MuiIconButton-sizeSmall",
                                              }
                                            }
                                            color="default"
                                            component="span"
                                            disableRipple={true}
                                            disabled={false}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              centerRipple={true}
                                              className="MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox"
                                              component="span"
                                              disableRipple={true}
                                              disabled={false}
                                              focusRipple={true}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <ForwardRef(ButtonBase)
                                                centerRipple={true}
                                                className="MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="span"
                                                disableRipple={true}
                                                disabled={false}
                                                focusRipple={true}
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                tabIndex={null}
                                              >
                                                <span
                                                  aria-disabled={false}
                                                  className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox"
                                                  onBlur={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  tabIndex={null}
                                                >
                                                  <span
                                                    className="MuiIconButton-label"
                                                  >
                                                    <input
                                                      checked={false}
                                                      className="PrivateSwitchBase-input-164"
                                                      data-indeterminate={false}
                                                      disabled={false}
                                                      id="hv-list-14-item-1-selector-input"
                                                      onChange={[Function]}
                                                      type="checkbox"
                                                      value=""
                                                    />
                                                    <WithStyles(Checkbox)
                                                      className="HvCheckBox-icon"
                                                      fontSize="default"
                                                    >
                                                      <Checkbox
                                                        className="HvCheckBox-icon"
                                                        classes={
                                                          Object {
                                                            "root": "HvIconCheckbox-root",
                                                            "rootL": "HvIconCheckbox-rootL",
                                                            "rootM": "HvIconCheckbox-rootM",
                                                            "rootS": "HvIconCheckbox-rootS",
                                                            "rootXs": "HvIconCheckbox-rootXs",
                                                          }
                                                        }
                                                        fontSize="default"
                                                      >
                                                        <div
                                                          className="HvCheckBox-icon HvIconCheckbox-root HvIconCheckbox-rootS"
                                                          fontSize="default"
                                                        >
                                                          <svg
                                                            focusable={false}
                                                            height="16px"
                                                            viewBox="0 0 16 16"
                                                            width="16px"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              className="color0"
                                                              d="M0 0h16v16H0z"
                                                              fill="#FFFFFF"
                                                            />
                                                            <path
                                                              className="color1"
                                                              d="M0-.00291v16h16v-16zm15 15H1v-14h14z"
                                                              fill="#414141"
                                                            />
                                                          </svg>
                                                        </div>
                                                      </Checkbox>
                                                    </WithStyles(Checkbox)>
                                                  </span>
                                                  <NoSsr />
                                                </span>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(IconButton)>
                                        </WithStyles(ForwardRef(IconButton))>
                                      </ForwardRef(SwitchBase)>
                                    </WithStyles(ForwardRef(SwitchBase))>
                                  </ForwardRef(Checkbox)>
                                </WithStyles(ForwardRef(Checkbox))>
                                <WithStyles(ForwardRef(Typography))
                                  className="MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate"
                                  component="span"
                                >
                                  <ForwardRef(Typography)
                                    className="MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                    component="span"
                                  >
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                                    >
                                      Value 2
                                    </span>
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                              </label>
                            </ForwardRef(FormControlLabel)>
                          </WithStyles(ForwardRef(FormControlLabel))>
                        </HvCheckbox>
                      </WithStyles(HvCheckbox)>
                    </li>
                  </ConditionalWrapper>
                </Focus>
              </WithStyles(Focus)>
              <WithStyles(Focus)
                configuration={
                  Object {
                    "tabIndex": -1,
                  }
                }
                disabled={false}
                focusDisabled={true}
                focusOnClick={false}
                key="2"
                rootRef={
                  Object {
                    "current": <div>
                      <label
                        class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd HvList-selectAll"
                        id="hv-checkbox-15"
                      >
                        <span
                          aria-disabled="false"
                          class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <input
                              class="PrivateSwitchBase-input-164"
                              data-indeterminate="true"
                              id="hv-checkbox-15-input"
                              type="checkbox"
                              value=""
                            />
                            <div
                              class="HvCheckBox-icon HvIconCheckboxPartial-root HvIconCheckboxPartial-rootS"
                              font-size="default"
                            >
                              <svg
                                focusable="false"
                                height="16px"
                                viewBox="0 0 16 16"
                                width="16px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M0 0h16v16H0z"
                                  fill="#FFFFFF"
                                />
                                <g
                                  class="color1"
                                  fill="#414141"
                                >
                                  <path
                                    d="M0 0v16h16V0zm15 15H1V1h14z"
                                  />
                                  <path
                                    d="M4 7h8v2H4z"
                                  />
                                </g>
                              </svg>
                            </div>
                          </span>
                        </span>
                        <span
                          class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                        >
                          2 of 3
                        </span>
                      </label>
                      <ul
                        aria-multiselectable="true"
                        class="HvList-root"
                        id="hv-list-14"
                        role="listbox"
                      >
                        <li
                          aria-selected="true"
                          class="HvList-listItem HvList-selector Focus-root-207 Focus-selected-208 Focus-focusDisabled-210"
                          id="hv-list-14-item-0"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                            id="hv-list-14-item-0-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-162 Mui-checked"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  checked=""
                                  class="PrivateSwitchBase-input-164"
                                  data-indeterminate="false"
                                  id="hv-list-14-item-0-selector-input"
                                  tabindex="0"
                                  type="checkbox"
                                  value=""
                                />
                                <div
                                  class="HvCheckBox-icon HvIconCheckboxCheck-root HvIconCheckboxCheck-rootS"
                                  font-size="default"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M0 0h16v16H0z"
                                      fill="#414141"
                                    />
                                    <path
                                      class="color1"
                                      d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                      fill="#FFFFFF"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 1
                            </span>
                          </label>
                        </li>
                        <li
                          aria-selected="false"
                          class="HvList-listItem HvList-selector Focus-root-207 Focus-focusDisabled-210"
                          id="hv-list-14-item-1"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                            id="hv-list-14-item-1-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  class="PrivateSwitchBase-input-164"
                                  data-indeterminate="false"
                                  id="hv-list-14-item-1-selector-input"
                                  tabindex="-1"
                                  type="checkbox"
                                  value=""
                                />
                                <div
                                  class="HvCheckBox-icon HvIconCheckbox-root HvIconCheckbox-rootS"
                                  font-size="default"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M0 0h16v16H0z"
                                      fill="#FFFFFF"
                                    />
                                    <path
                                      class="color1"
                                      d="M0-.00291v16h16v-16zm15 15H1v-14h14z"
                                      fill="#414141"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 2
                            </span>
                          </label>
                        </li>
                        <li
                          aria-selected="true"
                          class="HvList-listItem HvList-selector Focus-root-207 Focus-selected-208 Focus-focusDisabled-210"
                          id="hv-list-14-item-2"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                            id="hv-list-14-item-2-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-162 Mui-checked"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  checked=""
                                  class="PrivateSwitchBase-input-164"
                                  data-indeterminate="false"
                                  id="hv-list-14-item-2-selector-input"
                                  tabindex="-1"
                                  type="checkbox"
                                  value=""
                                />
                                <div
                                  class="HvCheckBox-icon HvIconCheckboxCheck-root HvIconCheckboxCheck-rootS"
                                  font-size="default"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M0 0h16v16H0z"
                                      fill="#414141"
                                    />
                                    <path
                                      class="color1"
                                      d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                      fill="#FFFFFF"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 3
                            </span>
                          </label>
                        </li>
                      </ul>
                    </div>,
                  }
                }
                selected={true}
                strategy="listbox"
                useArrows={true}
                useFalseFocus={false}
              >
                <Focus
                  classes={
                    Object {
                      "disabled": "Focus-disabled-209",
                      "externalReference": "Focus-externalReference-212",
                      "falseFocus": "Focus-falseFocus-213",
                      "focusDisabled": "Focus-focusDisabled-210",
                      "focused": "Focus-focused-211",
                      "root": "Focus-root-207",
                      "selected": "Focus-selected-208",
                    }
                  }
                  configuration={
                    Object {
                      "tabIndex": -1,
                    }
                  }
                  disabled={false}
                  focusDisabled={true}
                  focusOnClick={false}
                  rootRef={
                    Object {
                      "current": <div>
                        <label
                          class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd HvList-selectAll"
                          id="hv-checkbox-15"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                class="PrivateSwitchBase-input-164"
                                data-indeterminate="true"
                                id="hv-checkbox-15-input"
                                type="checkbox"
                                value=""
                              />
                              <div
                                class="HvCheckBox-icon HvIconCheckboxPartial-root HvIconCheckboxPartial-rootS"
                                font-size="default"
                              >
                                <svg
                                  focusable="false"
                                  height="16px"
                                  viewBox="0 0 16 16"
                                  width="16px"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M0 0h16v16H0z"
                                    fill="#FFFFFF"
                                  />
                                  <g
                                    class="color1"
                                    fill="#414141"
                                  >
                                    <path
                                      d="M0 0v16h16V0zm15 15H1V1h14z"
                                    />
                                    <path
                                      d="M4 7h8v2H4z"
                                    />
                                  </g>
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography MuiTypography-body1"
                          >
                            2 of 3
                          </span>
                        </label>
                        <ul
                          aria-multiselectable="true"
                          class="HvList-root"
                          id="hv-list-14"
                          role="listbox"
                        >
                          <li
                            aria-selected="true"
                            class="HvList-listItem HvList-selector Focus-root-207 Focus-selected-208 Focus-focusDisabled-210"
                            id="hv-list-14-item-0"
                            role="option"
                            tabindex="-1"
                          >
                            <label
                              class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                              id="hv-list-14-item-0-selector"
                            >
                              <span
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-162 Mui-checked"
                              >
                                <span
                                  class="MuiIconButton-label"
                                >
                                  <input
                                    checked=""
                                    class="PrivateSwitchBase-input-164"
                                    data-indeterminate="false"
                                    id="hv-list-14-item-0-selector-input"
                                    tabindex="0"
                                    type="checkbox"
                                    value=""
                                  />
                                  <div
                                    class="HvCheckBox-icon HvIconCheckboxCheck-root HvIconCheckboxCheck-rootS"
                                    font-size="default"
                                  >
                                    <svg
                                      focusable="false"
                                      height="16px"
                                      viewBox="0 0 16 16"
                                      width="16px"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        class="color0"
                                        d="M0 0h16v16H0z"
                                        fill="#414141"
                                      />
                                      <path
                                        class="color1"
                                        d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                        fill="#FFFFFF"
                                      />
                                    </svg>
                                  </div>
                                </span>
                              </span>
                              <span
                                class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                              >
                                Value 1
                              </span>
                            </label>
                          </li>
                          <li
                            aria-selected="false"
                            class="HvList-listItem HvList-selector Focus-root-207 Focus-focusDisabled-210"
                            id="hv-list-14-item-1"
                            role="option"
                            tabindex="-1"
                          >
                            <label
                              class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                              id="hv-list-14-item-1-selector"
                            >
                              <span
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox"
                              >
                                <span
                                  class="MuiIconButton-label"
                                >
                                  <input
                                    class="PrivateSwitchBase-input-164"
                                    data-indeterminate="false"
                                    id="hv-list-14-item-1-selector-input"
                                    tabindex="-1"
                                    type="checkbox"
                                    value=""
                                  />
                                  <div
                                    class="HvCheckBox-icon HvIconCheckbox-root HvIconCheckbox-rootS"
                                    font-size="default"
                                  >
                                    <svg
                                      focusable="false"
                                      height="16px"
                                      viewBox="0 0 16 16"
                                      width="16px"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        class="color0"
                                        d="M0 0h16v16H0z"
                                        fill="#FFFFFF"
                                      />
                                      <path
                                        class="color1"
                                        d="M0-.00291v16h16v-16zm15 15H1v-14h14z"
                                        fill="#414141"
                                      />
                                    </svg>
                                  </div>
                                </span>
                              </span>
                              <span
                                class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                              >
                                Value 2
                              </span>
                            </label>
                          </li>
                          <li
                            aria-selected="true"
                            class="HvList-listItem HvList-selector Focus-root-207 Focus-selected-208 Focus-focusDisabled-210"
                            id="hv-list-14-item-2"
                            role="option"
                            tabindex="-1"
                          >
                            <label
                              class="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                              id="hv-list-14-item-2-selector"
                            >
                              <span
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-162 Mui-checked"
                              >
                                <span
                                  class="MuiIconButton-label"
                                >
                                  <input
                                    checked=""
                                    class="PrivateSwitchBase-input-164"
                                    data-indeterminate="false"
                                    id="hv-list-14-item-2-selector-input"
                                    tabindex="-1"
                                    type="checkbox"
                                    value=""
                                  />
                                  <div
                                    class="HvCheckBox-icon HvIconCheckboxCheck-root HvIconCheckboxCheck-rootS"
                                    font-size="default"
                                  >
                                    <svg
                                      focusable="false"
                                      height="16px"
                                      viewBox="0 0 16 16"
                                      width="16px"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        class="color0"
                                        d="M0 0h16v16H0z"
                                        fill="#414141"
                                      />
                                      <path
                                        class="color1"
                                        d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                        fill="#FFFFFF"
                                      />
                                    </svg>
                                  </div>
                                </span>
                              </span>
                              <span
                                class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                              >
                                Value 3
                              </span>
                            </label>
                          </li>
                        </ul>
                      </div>,
                    }
                  }
                  selected={true}
                  strategy="listbox"
                  useArrows={true}
                  useFalseFocus={false}
                >
                  <ConditionalWrapper
                    condition={false}
                    wrapper={[Function]}
                  >
                    <li
                      aria-selected={true}
                      className="HvList-listItem HvList-selector Focus-root-207 Focus-selected-208 Focus-focusDisabled-210"
                      id="hv-list-14-item-2"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      role="option"
                      selected={true}
                    >
                      <WithStyles(HvCheckbox)
                        checked={true}
                        className=""
                        classes={
                          Object {
                            "container": "HvList-selectorContainer",
                            "labelTypography": "HvList-truncate",
                          }
                        }
                        disabled={false}
                        id="hv-list-14-item-2-selector"
                        label="Value 3"
                        labelPlacement="end"
                        onChange={[Function]}
                        value=""
                      >
                        <HvCheckbox
                          checked={true}
                          className=""
                          classes={
                            Object {
                              "checkBox": "HvCheckBox-checkBox",
                              "container": "HvCheckBox-container HvList-selectorContainer",
                              "disableFocus": "HvCheckBox-disableFocus",
                              "icon": "HvCheckBox-icon",
                              "labelDisabled": "HvCheckBox-labelDisabled",
                              "labelEnd": "HvCheckBox-labelEnd",
                              "labelStart": "HvCheckBox-labelStart",
                              "labelTypography": "HvCheckBox-labelTypography HvList-truncate",
                            }
                          }
                          disabled={false}
                          id="hv-list-14-item-2-selector"
                          label="Value 3"
                          labelPlacement="end"
                          onChange={[Function]}
                          value=""
                        >
                          <WithStyles(ForwardRef(FormControlLabel))
                            className="HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                            classes={
                              Object {
                                "disabled": "HvCheckBox-labelDisabled",
                                "label": "HvCheckBox-labelTypography HvList-truncate",
                              }
                            }
                            control={
                              <ForwardRef(WithStyles)
                                checked={true}
                                checkedIcon={
                                  <ForwardRef(WithStyles)
                                    className="HvCheckBox-icon"
                                  />
                                }
                                className="HvCheckBox-checkBox"
                                color="default"
                                disableRipple={true}
                                disabled={false}
                                icon={
                                  <ForwardRef(WithStyles)
                                    className="HvCheckBox-icon"
                                  />
                                }
                                id="hv-list-14-item-2-selector-input"
                                indeterminateIcon={
                                  <ForwardRef(WithStyles)
                                    className="HvCheckBox-icon"
                                  />
                                }
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              />
                            }
                            disabled={false}
                            id="hv-list-14-item-2-selector"
                            label="Value 3"
                            labelPlacement="end"
                          >
                            <ForwardRef(FormControlLabel)
                              className="HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                              classes={
                                Object {
                                  "disabled": "Mui-disabled HvCheckBox-labelDisabled",
                                  "label": "MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate",
                                  "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                  "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                  "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                  "root": "MuiFormControlLabel-root",
                                }
                              }
                              control={
                                <ForwardRef(WithStyles)
                                  checked={true}
                                  checkedIcon={
                                    <ForwardRef(WithStyles)
                                      className="HvCheckBox-icon"
                                    />
                                  }
                                  className="HvCheckBox-checkBox"
                                  color="default"
                                  disableRipple={true}
                                  disabled={false}
                                  icon={
                                    <ForwardRef(WithStyles)
                                      className="HvCheckBox-icon"
                                    />
                                  }
                                  id="hv-list-14-item-2-selector-input"
                                  indeterminateIcon={
                                    <ForwardRef(WithStyles)
                                      className="HvCheckBox-icon"
                                    />
                                  }
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  value=""
                                />
                              }
                              disabled={false}
                              id="hv-list-14-item-2-selector"
                              label="Value 3"
                              labelPlacement="end"
                            >
                              <label
                                className="MuiFormControlLabel-root HvCheckBox-container HvList-selectorContainer HvCheckBox-labelEnd"
                                id="hv-list-14-item-2-selector"
                              >
                                <WithStyles(ForwardRef(Checkbox))
                                  checked={true}
                                  checkedIcon={
                                    <ForwardRef(WithStyles)
                                      className="HvCheckBox-icon"
                                    />
                                  }
                                  className="HvCheckBox-checkBox"
                                  color="default"
                                  disableRipple={true}
                                  disabled={false}
                                  icon={
                                    <ForwardRef(WithStyles)
                                      className="HvCheckBox-icon"
                                    />
                                  }
                                  id="hv-list-14-item-2-selector-input"
                                  indeterminateIcon={
                                    <ForwardRef(WithStyles)
                                      className="HvCheckBox-icon"
                                    />
                                  }
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  value=""
                                >
                                  <ForwardRef(Checkbox)
                                    checked={true}
                                    checkedIcon={
                                      <ForwardRef(WithStyles)
                                        className="HvCheckBox-icon"
                                      />
                                    }
                                    className="HvCheckBox-checkBox"
                                    classes={
                                      Object {
                                        "checked": "Mui-checked",
                                        "colorPrimary": "MuiCheckbox-colorPrimary",
                                        "colorSecondary": "MuiCheckbox-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "indeterminate": "MuiCheckbox-indeterminate",
                                        "root": "MuiCheckbox-root",
                                      }
                                    }
                                    color="default"
                                    disableRipple={true}
                                    disabled={false}
                                    icon={
                                      <ForwardRef(WithStyles)
                                        className="HvCheckBox-icon"
                                      />
                                    }
                                    id="hv-list-14-item-2-selector-input"
                                    indeterminateIcon={
                                      <ForwardRef(WithStyles)
                                        className="HvCheckBox-icon"
                                      />
                                    }
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    value=""
                                  >
                                    <WithStyles(ForwardRef(SwitchBase))
                                      checked={true}
                                      checkedIcon={
                                        <ForwardRef(WithStyles)
                                          className="HvCheckBox-icon"
                                          fontSize="default"
                                        />
                                      }
                                      className="HvCheckBox-checkBox"
                                      classes={
                                        Object {
                                          "checked": "Mui-checked",
                                          "disabled": "Mui-disabled",
                                          "root": "MuiCheckbox-root",
                                        }
                                      }
                                      color="default"
                                      disableRipple={true}
                                      disabled={false}
                                      icon={
                                        <ForwardRef(WithStyles)
                                          className="HvCheckBox-icon"
                                          fontSize="default"
                                        />
                                      }
                                      id="hv-list-14-item-2-selector-input"
                                      inputProps={
                                        Object {
                                          "data-indeterminate": false,
                                        }
                                      }
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      type="checkbox"
                                      value=""
                                    >
                                      <ForwardRef(SwitchBase)
                                        checked={true}
                                        checkedIcon={
                                          <ForwardRef(WithStyles)
                                            className="HvCheckBox-icon"
                                            fontSize="default"
                                          />
                                        }
                                        className="HvCheckBox-checkBox"
                                        classes={
                                          Object {
                                            "checked": "PrivateSwitchBase-checked-162 Mui-checked",
                                            "disabled": "PrivateSwitchBase-disabled-163 Mui-disabled",
                                            "input": "PrivateSwitchBase-input-164",
                                            "root": "PrivateSwitchBase-root-161 MuiCheckbox-root",
                                          }
                                        }
                                        color="default"
                                        disableRipple={true}
                                        disabled={false}
                                        icon={
                                          <ForwardRef(WithStyles)
                                            className="HvCheckBox-icon"
                                            fontSize="default"
                                          />
                                        }
                                        id="hv-list-14-item-2-selector-input"
                                        inputProps={
                                          Object {
                                            "data-indeterminate": false,
                                          }
                                        }
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        type="checkbox"
                                        value=""
                                      >
                                        <WithStyles(ForwardRef(IconButton))
                                          className="PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-162 Mui-checked"
                                          color="default"
                                          component="span"
                                          disableRipple={true}
                                          disabled={false}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <ForwardRef(IconButton)
                                            className="PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-162 Mui-checked"
                                            classes={
                                              Object {
                                                "colorInherit": "MuiIconButton-colorInherit",
                                                "colorPrimary": "MuiIconButton-colorPrimary",
                                                "colorSecondary": "MuiIconButton-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "edgeEnd": "MuiIconButton-edgeEnd",
                                                "edgeStart": "MuiIconButton-edgeStart",
                                                "label": "MuiIconButton-label",
                                                "root": "MuiIconButton-root",
                                                "sizeSmall": "MuiIconButton-sizeSmall",
                                              }
                                            }
                                            color="default"
                                            component="span"
                                            disableRipple={true}
                                            disabled={false}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              centerRipple={true}
                                              className="MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-162 Mui-checked"
                                              component="span"
                                              disableRipple={true}
                                              disabled={false}
                                              focusRipple={true}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <ForwardRef(ButtonBase)
                                                centerRipple={true}
                                                className="MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-162 Mui-checked"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="span"
                                                disableRipple={true}
                                                disabled={false}
                                                focusRipple={true}
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                tabIndex={null}
                                              >
                                                <span
                                                  aria-disabled={false}
                                                  className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-161 MuiCheckbox-root HvCheckBox-checkBox PrivateSwitchBase-checked-162 Mui-checked"
                                                  onBlur={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  tabIndex={null}
                                                >
                                                  <span
                                                    className="MuiIconButton-label"
                                                  >
                                                    <input
                                                      checked={true}
                                                      className="PrivateSwitchBase-input-164"
                                                      data-indeterminate={false}
                                                      disabled={false}
                                                      id="hv-list-14-item-2-selector-input"
                                                      onChange={[Function]}
                                                      type="checkbox"
                                                      value=""
                                                    />
                                                    <WithStyles(CheckboxCheck)
                                                      className="HvCheckBox-icon"
                                                      fontSize="default"
                                                    >
                                                      <CheckboxCheck
                                                        className="HvCheckBox-icon"
                                                        classes={
                                                          Object {
                                                            "root": "HvIconCheckboxCheck-root",
                                                            "rootL": "HvIconCheckboxCheck-rootL",
                                                            "rootM": "HvIconCheckboxCheck-rootM",
                                                            "rootS": "HvIconCheckboxCheck-rootS",
                                                            "rootXs": "HvIconCheckboxCheck-rootXs",
                                                          }
                                                        }
                                                        fontSize="default"
                                                      >
                                                        <div
                                                          className="HvCheckBox-icon HvIconCheckboxCheck-root HvIconCheckboxCheck-rootS"
                                                          fontSize="default"
                                                        >
                                                          <svg
                                                            focusable={false}
                                                            height="16px"
                                                            viewBox="0 0 16 16"
                                                            width="16px"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              className="color0"
                                                              d="M0 0h16v16H0z"
                                                              fill="#414141"
                                                            />
                                                            <path
                                                              className="color1"
                                                              d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                                              fill="#FFFFFF"
                                                            />
                                                          </svg>
                                                        </div>
                                                      </CheckboxCheck>
                                                    </WithStyles(CheckboxCheck)>
                                                  </span>
                                                  <NoSsr />
                                                </span>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(IconButton)>
                                        </WithStyles(ForwardRef(IconButton))>
                                      </ForwardRef(SwitchBase)>
                                    </WithStyles(ForwardRef(SwitchBase))>
                                  </ForwardRef(Checkbox)>
                                </WithStyles(ForwardRef(Checkbox))>
                                <WithStyles(ForwardRef(Typography))
                                  className="MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate"
                                  component="span"
                                >
                                  <ForwardRef(Typography)
                                    className="MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                    component="span"
                                  >
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography HvList-truncate MuiTypography-body1"
                                    >
                                      Value 3
                                    </span>
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                              </label>
                            </ForwardRef(FormControlLabel)>
                          </WithStyles(ForwardRef(FormControlLabel))>
                        </HvCheckbox>
                      </WithStyles(HvCheckbox)>
                    </li>
                  </ConditionalWrapper>
                </Focus>
              </WithStyles(Focus)>
            </ul>
          </div>
        </List>
      </WithStyles(List)>
    </ThemeProvider>
  </StylesProvider>
</HvProvider>
`;

exports[`<List /> Single selection should render correctly 1`] = `
<HvProvider
  changeTheme={[Function]}
  theme={null}
  uiKitTheme="dawn"
>
  <StylesProvider
    generateClassName={[Function]}
    injectFirst={true}
  >
    <ThemeProvider
      theme={
        Object {
          "breakpoints": Object {
            "between": [Function],
            "down": [Function],
            "keys": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
            "only": [Function],
            "up": [Function],
            "values": Object {
              "lg": 1270,
              "md": 960,
              "sm": 600,
              "xl": 1920,
              "xs": 0,
            },
            "width": [Function],
          },
          "direction": "ltr",
          "hv": Object {
            "deprecated": Object {
              "palette": Object {
                "accent": Object {},
                "atmosphere": Object {},
                "base": Object {},
                "semantic": Object {},
                "support": Object {},
              },
              "typography": Object {
                "disabledText": Object {},
              },
              "viz": Object {
                "palette": Object {
                  "categorical": Object {},
                  "polarizes": Object {},
                  "sequential": Object {},
                  "undefinedState": Object {},
                },
              },
            },
            "name": "dawn",
            "palette": Object {
              "accent": Object {
                "acce0": "#FFFFFF",
                "acce1": "#414141",
                "acce2": "#146BD2",
                "acce2h": "#4389DB",
                "acce3": "#CC0000",
              },
              "atmosphere": Object {
                "atmo1": "#FFFFFF",
                "atmo2": "#F9F9F9",
                "atmo3": "#F5F5F5",
                "atmo4": "#F0F0F0",
                "atmo5": "#DEDEDE",
                "atmo6": "#BCBCBC",
                "atmo7": "#999999",
              },
              "base": Object {
                "base1": "#FFFFFF",
                "base2": "#414141",
              },
              "semantic": Object {
                "sema1": "#63A621",
                "sema10": "#EF9A9A",
                "sema11": "#E57373",
                "sema12": "#EF5350",
                "sema13": "#E53935",
                "sema14": "#C62828",
                "sema15": "#80DEEA",
                "sema16": "#4DD0E1",
                "sema17": "#26C6DA",
                "sema18": "#00ACC1",
                "sema19": "#00838F",
                "sema2": "#72CCCB",
                "sema3": "#E68C17",
                "sema4": "#FF5252",
                "sema5": "#C51162",
                "sema6": "#AA00FF",
                "sema7": "#D3E3F6",
                "sema8": "#DFECD1",
                "sema9": "#F5D8D8",
              },
              "support": Object {
                "supp1": "#0F8B8D",
                "supp2": "#734B6D",
                "supp3": "#4E7599",
                "supp4": "#C19C31",
                "supp5": "#546B6B",
              },
            },
            "spacing": Object {
              "lg": 60,
              "md": 30,
              "sm": 20,
              "xl": 90,
              "xs": 10,
            },
            "type": "light",
            "typography": Object {
              "3xlTitle": Object {
                "color": "#414141",
                "fontSize": "42px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "52px",
              },
              "4xlTitle": Object {
                "color": "#414141",
                "fontSize": "52px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "60px",
              },
              "5xlTitle": Object {
                "color": "#414141",
                "fontSize": "52px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "60px",
              },
              "disabledButtonText": Object {
                "color": "#999999",
                "fontSize": "14px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "disabledText": Object {
                "color": "#999999",
                "fontSize": "12px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "16px",
              },
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "highlightText": Object {
                "color": "#414141",
                "fontSize": "14px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "infoText": Object {
                "color": "#999999",
                "fontSize": "12px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "16px",
              },
              "inlineLink": Object {
                "color": "#146BD2",
                "fontSize": "14px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "lTitle": Object {
                "color": "#414141",
                "fontSize": "32px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "40px",
              },
              "labelText": Object {
                "color": "#414141",
                "fontSize": "12px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "16px",
              },
              "mTitle": Object {
                "color": "#414141",
                "fontSize": "22px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "30px",
              },
              "normalText": Object {
                "color": "#414141",
                "fontSize": "14px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "placeholderText": Object {
                "color": "#999999",
                "fontSize": "14px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "sLink": Object {
                "color": "#146BD2",
                "fontSize": "12px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "16px",
              },
              "sText": Object {
                "color": "#414141",
                "fontSize": "12px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "16px",
              },
              "sTitle": Object {
                "color": "#414141",
                "fontSize": "22px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "30px",
              },
              "selectedNavText": Object {
                "color": "#CC0000",
                "fontSize": "14px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "selectedText": Object {
                "background": "#414141",
                "color": "#F9F9F9",
                "fontSize": "14px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "vizText": Object {
                "color": "#414141",
                "fontSize": "10px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "15px",
              },
              "xlTitle": Object {
                "color": "#414141",
                "fontSize": "32px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "40px",
              },
              "xsTitle": Object {
                "color": "#414141",
                "fontSize": "18px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "28px",
              },
              "xxlTitle": Object {
                "color": "#414141",
                "fontSize": "42px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "52px",
              },
              "xxsTitle": Object {
                "color": "#414141",
                "fontSize": "18px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "28px",
              },
            },
            "viz": Object {
              "palette": Object {
                "categorical": Object {
                  "cviz1": "#2DB3E0",
                  "cviz10": "#419393",
                  "cviz11": "#58C9DD",
                  "cviz12": "#F8C189",
                  "cviz13": "#528BBF",
                  "cviz14": "#DE64BD",
                  "cviz15": "#73BF9C",
                  "cviz16": "#9672C1",
                  "cviz17": "#EB95AF",
                  "cviz18": "#646A98",
                  "cviz19": "#D88136",
                  "cviz2": "#FF990D",
                  "cviz20": "#309B59",
                  "cviz3": "#D31F6B",
                  "cviz4": "#FFD00A",
                  "cviz5": "#18C38A",
                  "cviz6": "#098CB2",
                  "cviz7": "#EA5B86",
                  "cviz8": "#9B469B",
                  "cviz9": "#F4763D",
                },
                "polarizes": Object {
                  "cviz21": "#869F1E",
                  "cviz22": "#A4991C",
                  "cviz23": "#C4931A",
                  "cviz24": "#E68C17",
                  "cviz25": "#F27034",
                  "cviz26": "#FF5252",
                  "cviz27": "#EC3D57",
                  "cviz28": "#D8265D",
                  "sema1": "#63A621",
                  "sema5": "#C51162",
                },
                "sequential": Object {
                  "cviz1": "#2DB3E0",
                  "cviz1_100": "#E3F1F6",
                  "cviz1_200": "#CFEAF3",
                  "cviz1_300": "#BAE3F3",
                  "cviz1_400": "#A6DCEE",
                  "cviz1_500": "#92D5EC",
                  "cviz1_600": "#7ECEE9",
                  "cviz1_700": "#69C7E7",
                  "cviz1_800": "#55C0E4",
                  "cviz1_900": "#40B9E2",
                },
                "undefinedState": Object {
                  "atmo5": "#DEDEDE",
                },
              },
            },
          },
          "mixins": Object {
            "gutters": [Function],
            "toolbar": Object {
              "@media (min-width:0px) and (orientation: landscape)": Object {
                "minHeight": 48,
              },
              "@media (min-width:600px)": Object {
                "minHeight": 64,
              },
              "minHeight": 56,
            },
          },
          "overrides": Object {
            "MuiAppBar": Object {
              "colorDefault": Object {
                "backgroundColor": "#FFFFFF",
                "contrastText": "#414141",
              },
              "root": Object {
                "@media (min-width: 600px)": Object {
                  "height": "50px",
                },
                "borderTop": "4px solid #CC0000",
              },
            },
            "MuiIconButton": Object {
              "root": Object {
                "&:focus": Object {
                  "outlineColor": "Highlight",
                  "outlineOffset": -2,
                  "outlineStyle": "auto",
                  "outlineWidth": 4,
                },
                "&:hover": Object {
                  "backgroundColor": "#F0F0F0",
                },
                "borderRadius": 0,
                "padding": 0,
              },
            },
            "MuiToolbar": Object {
              "dense": Object {
                "minHeight": "46px",
              },
              "gutters": Object {
                "@media (min-width:600px)": Object {
                  "paddingLeft": "20px",
                  "paddingRight": "20px",
                },
                "paddingLeft": "20px",
                "paddingRight": "20px",
              },
              "root": Object {
                "@media (min-width: 600px)": Object {
                  "minHeight": "46px",
                },
                "alignItems": "center",
              },
            },
          },
          "palette": Object {
            "acce0": "#FFFFFF",
            "acce1": "#414141",
            "acce2": "#146BD2",
            "acce2h": "#4389DB",
            "acce3": "#CC0000",
            "action": Object {
              "activatedOpacity": 0.12,
              "active": "rgba(0, 0, 0, 0.54)",
              "disabled": "rgba(0, 0, 0, 0.26)",
              "disabledBackground": "rgba(0, 0, 0, 0.12)",
              "disabledOpacity": 0.38,
              "focus": "rgba(0, 0, 0, 0.12)",
              "focusOpacity": 0.12,
              "hover": "rgba(0, 0, 0, 0.04)",
              "hoverOpacity": 0.04,
              "selected": "rgba(0, 0, 0, 0.08)",
              "selectedOpacity": 0.08,
            },
            "atmo1": "#FFFFFF",
            "atmo2": "#F9F9F9",
            "atmo3": "#F5F5F5",
            "atmo4": "#F0F0F0",
            "atmo5": "#DEDEDE",
            "atmo6": "#BCBCBC",
            "atmo7": "#999999",
            "augmentColor": [Function],
            "background": Object {
              "default": "#F5F5F5",
              "paper": "#fff",
            },
            "base1": "#FFFFFF",
            "base2": "#414141",
            "common": Object {
              "black": "#000",
              "white": "#fff",
            },
            "contrastThreshold": 3,
            "divider": "rgba(0, 0, 0, 0.12)",
            "error": Object {
              "contrastText": "#fff",
              "dark": "#d32f2f",
              "light": "#e57373",
              "main": "#f44336",
            },
            "getContrastText": [Function],
            "grey": Object {
              "100": "#f5f5f5",
              "200": "#eeeeee",
              "300": "#e0e0e0",
              "400": "#bdbdbd",
              "50": "#fafafa",
              "500": "#9e9e9e",
              "600": "#757575",
              "700": "#616161",
              "800": "#424242",
              "900": "#212121",
              "A100": "#d5d5d5",
              "A200": "#aaaaaa",
              "A400": "#303030",
              "A700": "#616161",
            },
            "info": Object {
              "contrastText": "#fff",
              "dark": "#1976d2",
              "light": "#64b5f6",
              "main": "#2196f3",
            },
            "primary": Object {
              "contrastText": "#fff",
              "dark": "rgb(14, 74, 147)",
              "light": "#4389DB",
              "main": "#146BD2",
            },
            "secondary": Object {
              "contrastText": "#fff",
              "dark": "rgb(45, 45, 45)",
              "light": "#999999",
              "main": "#414141",
            },
            "sema1": "#63A621",
            "sema10": "#EF9A9A",
            "sema11": "#E57373",
            "sema12": "#EF5350",
            "sema13": "#E53935",
            "sema14": "#C62828",
            "sema15": "#80DEEA",
            "sema16": "#4DD0E1",
            "sema17": "#26C6DA",
            "sema18": "#00ACC1",
            "sema19": "#00838F",
            "sema2": "#72CCCB",
            "sema3": "#E68C17",
            "sema4": "#FF5252",
            "sema5": "#C51162",
            "sema6": "#AA00FF",
            "sema7": "#D3E3F6",
            "sema8": "#DFECD1",
            "sema9": "#F5D8D8",
            "success": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#388e3c",
              "light": "#81c784",
              "main": "#4caf50",
            },
            "supp1": "#0F8B8D",
            "supp2": "#734B6D",
            "supp3": "#4E7599",
            "supp4": "#C19C31",
            "supp5": "#546B6B",
            "text": Object {
              "disabled": "#999999",
              "hint": "rgba(0, 0, 0, 0.38)",
              "primary": "#414141",
              "secondary": "rgba(0, 0, 0, 0.54)",
            },
            "tonalOffset": 0.2,
            "type": "light",
            "warning": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#f57c00",
              "light": "#ffb74d",
              "main": "#ff9800",
            },
          },
          "props": Object {
            "MuiButtonBase": Object {
              "disableRipple": true,
            },
            "MuiInput": Object {
              "disableUnderline": true,
            },
          },
          "shadows": Array [
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
          ],
          "shape": Object {
            "borderRadius": 0,
          },
          "spacing": [Function],
          "transitions": Object {
            "create": [Function],
            "duration": Object {
              "complex": 375,
              "enteringScreen": 225,
              "leavingScreen": 195,
              "short": 250,
              "shorter": 200,
              "shortest": 150,
              "standard": 300,
            },
            "easing": Object {
              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
            },
            "getAutoHeightDuration": [Function],
          },
          "typography": Object {
            "body1": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "14px",
              "fontWeight": 400,
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "body2": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "14px",
              "fontWeight": 400,
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "button": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "14px",
              "fontWeight": 600,
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
              "textTransform": "uppercase",
            },
            "caption": Object {
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "lineHeight": 1.66,
            },
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": 14,
            "fontWeightBold": 700,
            "fontWeightLight": 300,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "32px",
              "fontWeight": 600,
              "letterSpacing": "0.02em",
              "lineHeight": "40px",
            },
            "h2": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "32px",
              "fontWeight": 400,
              "letterSpacing": "0.02em",
              "lineHeight": "40px",
            },
            "h3": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "22px",
              "fontWeight": 600,
              "letterSpacing": "0.02em",
              "lineHeight": "30px",
            },
            "h4": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "22px",
              "fontWeight": 400,
              "letterSpacing": "0.02em",
              "lineHeight": "30px",
            },
            "h5": Object {
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "1.5rem",
              "fontWeight": 400,
              "lineHeight": 1.334,
            },
            "h6": Object {
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "1.25rem",
              "fontWeight": 500,
              "lineHeight": 1.6,
            },
            "htmlFontSize": 16,
            "overline": Object {
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "lineHeight": 2.66,
              "textTransform": "uppercase",
            },
            "pxToRem": [Function],
            "round": [Function],
            "subtitle1": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "14px",
              "fontWeight": 600,
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "subtitle2": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "12px",
              "fontWeight": 600,
              "letterSpacing": "0.02em",
              "lineHeight": "16px",
            },
            "suppressDeprecationWarnings": true,
          },
          "zIndex": Object {
            "appBar": 1100,
            "drawer": 1200,
            "mobileStepper": 1000,
            "modal": 1300,
            "snackbar": 1400,
            "speedDial": 1050,
            "tooltip": 1500,
          },
          Symbol(mui.nested): false,
        }
      }
    >
      <CssBaseline />
      <WithStyles(List)
        condensed={false}
        hasTooltips={false}
        id=""
        labels={
          Object {
            "selectAll": "All",
            "selectionConjunction": "of",
          }
        }
        multiSelect={false}
        onChange={[MockFunction]}
        onClick={[MockFunction]}
        selectDefault={true}
        selectable={true}
        showSelectAll={false}
        singleSelectionToggle={false}
        useSelector={false}
        values={
          Array [
            Object {
              "label": "Value 1",
            },
            Object {
              "label": "Value 2",
            },
            Object {
              "label": "Value 3",
            },
          ]
        }
      >
        <List
          classes={
            Object {
              "box": "HvList-box",
              "condensed": "HvList-condensed",
              "disabled": "HvList-disabled",
              "label": "HvList-label",
              "labelIconLeftPadding": "HvList-labelIconLeftPadding",
              "listItem": "HvList-listItem",
              "noIconLeftPadding": "HvList-noIconLeftPadding",
              "root": "HvList-root",
              "selectAll": "HvList-selectAll",
              "selected": "HvList-selected",
              "selector": "HvList-selector",
              "selectorContainer": "HvList-selectorContainer",
              "textDisabled": "HvList-textDisabled",
              "truncate": "HvList-truncate",
            }
          }
          condensed={false}
          hasTooltips={false}
          id=""
          labels={
            Object {
              "selectAll": "All",
              "selectionConjunction": "of",
            }
          }
          multiSelect={false}
          onChange={[MockFunction]}
          onClick={[MockFunction]}
          selectDefault={true}
          selectable={true}
          showSelectAll={false}
          singleSelectionToggle={false}
          useSelector={false}
          values={
            Array [
              Object {
                "label": "Value 1",
              },
              Object {
                "label": "Value 2",
              },
              Object {
                "label": "Value 3",
              },
            ]
          }
        >
          <div>
            <ul
              className="HvList-root"
              id="hv-list-1"
              role="listbox"
            >
              <WithStyles(Focus)
                configuration={
                  Object {
                    "tabIndex": 0,
                  }
                }
                disabled={false}
                focusDisabled={true}
                focusOnClick={false}
                key="0"
                rootRef={
                  Object {
                    "current": <div>
                      <ul
                        class="HvList-root"
                        id="hv-list-1"
                        role="listbox"
                      >
                        <li
                          aria-selected="true"
                          class="HvList-listItem HvList-selected Focus-root-1 Focus-selected-2 Focus-focusDisabled-4"
                          id="hv-list-1-item-0"
                          role="option"
                          tabindex="0"
                        >
                          <p
                            class="HvTypography-selectedText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-selected"
                          >
                            Value 1
                          </p>
                        </li>
                        <li
                          class="HvList-listItem Focus-root-1 Focus-focusDisabled-4"
                          id="hv-list-1-item-1"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate"
                          >
                            Value 2
                          </p>
                        </li>
                        <li
                          class="HvList-listItem Focus-root-1 Focus-focusDisabled-4"
                          id="hv-list-1-item-2"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate"
                          >
                            Value 3
                          </p>
                        </li>
                      </ul>
                    </div>,
                  }
                }
                selected={true}
                strategy="listbox"
                useArrows={true}
                useFalseFocus={false}
              >
                <Focus
                  classes={
                    Object {
                      "disabled": "Focus-disabled-3",
                      "externalReference": "Focus-externalReference-6",
                      "falseFocus": "Focus-falseFocus-7",
                      "focusDisabled": "Focus-focusDisabled-4",
                      "focused": "Focus-focused-5",
                      "root": "Focus-root-1",
                      "selected": "Focus-selected-2",
                    }
                  }
                  configuration={
                    Object {
                      "tabIndex": 0,
                    }
                  }
                  disabled={false}
                  focusDisabled={true}
                  focusOnClick={false}
                  rootRef={
                    Object {
                      "current": <div>
                        <ul
                          class="HvList-root"
                          id="hv-list-1"
                          role="listbox"
                        >
                          <li
                            aria-selected="true"
                            class="HvList-listItem HvList-selected Focus-root-1 Focus-selected-2 Focus-focusDisabled-4"
                            id="hv-list-1-item-0"
                            role="option"
                            tabindex="0"
                          >
                            <p
                              class="HvTypography-selectedText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-selected"
                            >
                              Value 1
                            </p>
                          </li>
                          <li
                            class="HvList-listItem Focus-root-1 Focus-focusDisabled-4"
                            id="hv-list-1-item-1"
                            role="option"
                            tabindex="-1"
                          >
                            <p
                              class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate"
                            >
                              Value 2
                            </p>
                          </li>
                          <li
                            class="HvList-listItem Focus-root-1 Focus-focusDisabled-4"
                            id="hv-list-1-item-2"
                            role="option"
                            tabindex="-1"
                          >
                            <p
                              class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate"
                            >
                              Value 3
                            </p>
                          </li>
                        </ul>
                      </div>,
                    }
                  }
                  selected={true}
                  strategy="listbox"
                  useArrows={true}
                  useFalseFocus={false}
                >
                  <ConditionalWrapper
                    condition={false}
                    wrapper={[Function]}
                  >
                    <li
                      aria-selected={true}
                      className="HvList-listItem HvList-selected Focus-root-1 Focus-selected-2 Focus-focusDisabled-4"
                      id="hv-list-1-item-0"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      role="option"
                      selected={true}
                    >
                      <Text>
                        <WithStyles(ForwardRef)
                          className="HvList-label HvList-truncate HvList-selected"
                          variant="selectedText"
                        >
                          <ForwardRef
                            className="HvList-label HvList-truncate HvList-selected"
                            classes={
                              Object {
                                "3xlTitle": "HvTypography-3xlTitle",
                                "4xlTitle": "HvTypography-4xlTitle",
                                "5xlTitle": "HvTypography-5xlTitle",
                                "baseFontFamily": "HvTypography-baseFontFamily",
                                "disabledButtonText": "HvTypography-disabledButtonText",
                                "highlightText": "HvTypography-highlightText",
                                "infoText": "HvTypography-infoText",
                                "inlineLink": "HvTypography-inlineLink",
                                "lTitle": "HvTypography-lTitle",
                                "labelText": "HvTypography-labelText",
                                "mTitle": "HvTypography-mTitle",
                                "margin": "HvTypography-margin",
                                "normalText": "HvTypography-normalText",
                                "placeholderText": "HvTypography-placeholderText",
                                "sLink": "HvTypography-sLink",
                                "sText": "HvTypography-sText",
                                "sTitle": "HvTypography-sTitle",
                                "selectedNavText": "HvTypography-selectedNavText",
                                "selectedText": "HvTypography-selectedText",
                                "vizText": "HvTypography-vizText",
                                "xlTitle": "HvTypography-xlTitle",
                                "xsTitle": "HvTypography-xsTitle",
                                "xxlTitle": "HvTypography-xxlTitle",
                                "xxsTitle": "HvTypography-xxsTitle",
                              }
                            }
                            variant="selectedText"
                          >
                            <p
                              className="HvTypography-selectedText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-selected"
                            >
                              Value 1
                            </p>
                          </ForwardRef>
                        </WithStyles(ForwardRef)>
                      </Text>
                    </li>
                  </ConditionalWrapper>
                </Focus>
              </WithStyles(Focus)>
              <WithStyles(Focus)
                configuration={
                  Object {
                    "tabIndex": -1,
                  }
                }
                disabled={false}
                focusDisabled={true}
                focusOnClick={false}
                key="1"
                rootRef={
                  Object {
                    "current": <div>
                      <ul
                        class="HvList-root"
                        id="hv-list-1"
                        role="listbox"
                      >
                        <li
                          aria-selected="true"
                          class="HvList-listItem HvList-selected Focus-root-1 Focus-selected-2 Focus-focusDisabled-4"
                          id="hv-list-1-item-0"
                          role="option"
                          tabindex="0"
                        >
                          <p
                            class="HvTypography-selectedText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-selected"
                          >
                            Value 1
                          </p>
                        </li>
                        <li
                          class="HvList-listItem Focus-root-1 Focus-focusDisabled-4"
                          id="hv-list-1-item-1"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate"
                          >
                            Value 2
                          </p>
                        </li>
                        <li
                          class="HvList-listItem Focus-root-1 Focus-focusDisabled-4"
                          id="hv-list-1-item-2"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate"
                          >
                            Value 3
                          </p>
                        </li>
                      </ul>
                    </div>,
                  }
                }
                selected={false}
                strategy="listbox"
                useArrows={true}
                useFalseFocus={false}
              >
                <Focus
                  classes={
                    Object {
                      "disabled": "Focus-disabled-3",
                      "externalReference": "Focus-externalReference-6",
                      "falseFocus": "Focus-falseFocus-7",
                      "focusDisabled": "Focus-focusDisabled-4",
                      "focused": "Focus-focused-5",
                      "root": "Focus-root-1",
                      "selected": "Focus-selected-2",
                    }
                  }
                  configuration={
                    Object {
                      "tabIndex": -1,
                    }
                  }
                  disabled={false}
                  focusDisabled={true}
                  focusOnClick={false}
                  rootRef={
                    Object {
                      "current": <div>
                        <ul
                          class="HvList-root"
                          id="hv-list-1"
                          role="listbox"
                        >
                          <li
                            aria-selected="true"
                            class="HvList-listItem HvList-selected Focus-root-1 Focus-selected-2 Focus-focusDisabled-4"
                            id="hv-list-1-item-0"
                            role="option"
                            tabindex="0"
                          >
                            <p
                              class="HvTypography-selectedText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-selected"
                            >
                              Value 1
                            </p>
                          </li>
                          <li
                            class="HvList-listItem Focus-root-1 Focus-focusDisabled-4"
                            id="hv-list-1-item-1"
                            role="option"
                            tabindex="-1"
                          >
                            <p
                              class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate"
                            >
                              Value 2
                            </p>
                          </li>
                          <li
                            class="HvList-listItem Focus-root-1 Focus-focusDisabled-4"
                            id="hv-list-1-item-2"
                            role="option"
                            tabindex="-1"
                          >
                            <p
                              class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate"
                            >
                              Value 3
                            </p>
                          </li>
                        </ul>
                      </div>,
                    }
                  }
                  selected={false}
                  strategy="listbox"
                  useArrows={true}
                  useFalseFocus={false}
                >
                  <ConditionalWrapper
                    condition={false}
                    wrapper={[Function]}
                  >
                    <li
                      className="HvList-listItem Focus-root-1 Focus-focusDisabled-4"
                      id="hv-list-1-item-1"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      role="option"
                      selected={false}
                    >
                      <Text>
                        <WithStyles(ForwardRef)
                          className="HvList-label HvList-truncate"
                          variant="normalText"
                        >
                          <ForwardRef
                            className="HvList-label HvList-truncate"
                            classes={
                              Object {
                                "3xlTitle": "HvTypography-3xlTitle",
                                "4xlTitle": "HvTypography-4xlTitle",
                                "5xlTitle": "HvTypography-5xlTitle",
                                "baseFontFamily": "HvTypography-baseFontFamily",
                                "disabledButtonText": "HvTypography-disabledButtonText",
                                "highlightText": "HvTypography-highlightText",
                                "infoText": "HvTypography-infoText",
                                "inlineLink": "HvTypography-inlineLink",
                                "lTitle": "HvTypography-lTitle",
                                "labelText": "HvTypography-labelText",
                                "mTitle": "HvTypography-mTitle",
                                "margin": "HvTypography-margin",
                                "normalText": "HvTypography-normalText",
                                "placeholderText": "HvTypography-placeholderText",
                                "sLink": "HvTypography-sLink",
                                "sText": "HvTypography-sText",
                                "sTitle": "HvTypography-sTitle",
                                "selectedNavText": "HvTypography-selectedNavText",
                                "selectedText": "HvTypography-selectedText",
                                "vizText": "HvTypography-vizText",
                                "xlTitle": "HvTypography-xlTitle",
                                "xsTitle": "HvTypography-xsTitle",
                                "xxlTitle": "HvTypography-xxlTitle",
                                "xxsTitle": "HvTypography-xxsTitle",
                              }
                            }
                            variant="normalText"
                          >
                            <p
                              className="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate"
                            >
                              Value 2
                            </p>
                          </ForwardRef>
                        </WithStyles(ForwardRef)>
                      </Text>
                    </li>
                  </ConditionalWrapper>
                </Focus>
              </WithStyles(Focus)>
              <WithStyles(Focus)
                configuration={
                  Object {
                    "tabIndex": -1,
                  }
                }
                disabled={false}
                focusDisabled={true}
                focusOnClick={false}
                key="2"
                rootRef={
                  Object {
                    "current": <div>
                      <ul
                        class="HvList-root"
                        id="hv-list-1"
                        role="listbox"
                      >
                        <li
                          aria-selected="true"
                          class="HvList-listItem HvList-selected Focus-root-1 Focus-selected-2 Focus-focusDisabled-4"
                          id="hv-list-1-item-0"
                          role="option"
                          tabindex="0"
                        >
                          <p
                            class="HvTypography-selectedText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-selected"
                          >
                            Value 1
                          </p>
                        </li>
                        <li
                          class="HvList-listItem Focus-root-1 Focus-focusDisabled-4"
                          id="hv-list-1-item-1"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate"
                          >
                            Value 2
                          </p>
                        </li>
                        <li
                          class="HvList-listItem Focus-root-1 Focus-focusDisabled-4"
                          id="hv-list-1-item-2"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate"
                          >
                            Value 3
                          </p>
                        </li>
                      </ul>
                    </div>,
                  }
                }
                selected={false}
                strategy="listbox"
                useArrows={true}
                useFalseFocus={false}
              >
                <Focus
                  classes={
                    Object {
                      "disabled": "Focus-disabled-3",
                      "externalReference": "Focus-externalReference-6",
                      "falseFocus": "Focus-falseFocus-7",
                      "focusDisabled": "Focus-focusDisabled-4",
                      "focused": "Focus-focused-5",
                      "root": "Focus-root-1",
                      "selected": "Focus-selected-2",
                    }
                  }
                  configuration={
                    Object {
                      "tabIndex": -1,
                    }
                  }
                  disabled={false}
                  focusDisabled={true}
                  focusOnClick={false}
                  rootRef={
                    Object {
                      "current": <div>
                        <ul
                          class="HvList-root"
                          id="hv-list-1"
                          role="listbox"
                        >
                          <li
                            aria-selected="true"
                            class="HvList-listItem HvList-selected Focus-root-1 Focus-selected-2 Focus-focusDisabled-4"
                            id="hv-list-1-item-0"
                            role="option"
                            tabindex="0"
                          >
                            <p
                              class="HvTypography-selectedText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-selected"
                            >
                              Value 1
                            </p>
                          </li>
                          <li
                            class="HvList-listItem Focus-root-1 Focus-focusDisabled-4"
                            id="hv-list-1-item-1"
                            role="option"
                            tabindex="-1"
                          >
                            <p
                              class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate"
                            >
                              Value 2
                            </p>
                          </li>
                          <li
                            class="HvList-listItem Focus-root-1 Focus-focusDisabled-4"
                            id="hv-list-1-item-2"
                            role="option"
                            tabindex="-1"
                          >
                            <p
                              class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate"
                            >
                              Value 3
                            </p>
                          </li>
                        </ul>
                      </div>,
                    }
                  }
                  selected={false}
                  strategy="listbox"
                  useArrows={true}
                  useFalseFocus={false}
                >
                  <ConditionalWrapper
                    condition={false}
                    wrapper={[Function]}
                  >
                    <li
                      className="HvList-listItem Focus-root-1 Focus-focusDisabled-4"
                      id="hv-list-1-item-2"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      role="option"
                      selected={false}
                    >
                      <Text>
                        <WithStyles(ForwardRef)
                          className="HvList-label HvList-truncate"
                          variant="normalText"
                        >
                          <ForwardRef
                            className="HvList-label HvList-truncate"
                            classes={
                              Object {
                                "3xlTitle": "HvTypography-3xlTitle",
                                "4xlTitle": "HvTypography-4xlTitle",
                                "5xlTitle": "HvTypography-5xlTitle",
                                "baseFontFamily": "HvTypography-baseFontFamily",
                                "disabledButtonText": "HvTypography-disabledButtonText",
                                "highlightText": "HvTypography-highlightText",
                                "infoText": "HvTypography-infoText",
                                "inlineLink": "HvTypography-inlineLink",
                                "lTitle": "HvTypography-lTitle",
                                "labelText": "HvTypography-labelText",
                                "mTitle": "HvTypography-mTitle",
                                "margin": "HvTypography-margin",
                                "normalText": "HvTypography-normalText",
                                "placeholderText": "HvTypography-placeholderText",
                                "sLink": "HvTypography-sLink",
                                "sText": "HvTypography-sText",
                                "sTitle": "HvTypography-sTitle",
                                "selectedNavText": "HvTypography-selectedNavText",
                                "selectedText": "HvTypography-selectedText",
                                "vizText": "HvTypography-vizText",
                                "xlTitle": "HvTypography-xlTitle",
                                "xsTitle": "HvTypography-xsTitle",
                                "xxlTitle": "HvTypography-xxlTitle",
                                "xxsTitle": "HvTypography-xxsTitle",
                              }
                            }
                            variant="normalText"
                          >
                            <p
                              className="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate"
                            >
                              Value 3
                            </p>
                          </ForwardRef>
                        </WithStyles(ForwardRef)>
                      </Text>
                    </li>
                  </ConditionalWrapper>
                </Focus>
              </WithStyles(Focus)>
            </ul>
          </div>
        </List>
      </WithStyles(List)>
    </ThemeProvider>
  </StylesProvider>
</HvProvider>
`;

exports[`<List /> Single selection with icons should render correctly 1`] = `
<HvProvider
  changeTheme={[Function]}
  theme={null}
  uiKitTheme="dawn"
>
  <StylesProvider
    generateClassName={[Function]}
    injectFirst={true}
  >
    <ThemeProvider
      theme={
        Object {
          "breakpoints": Object {
            "between": [Function],
            "down": [Function],
            "keys": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
            "only": [Function],
            "up": [Function],
            "values": Object {
              "lg": 1270,
              "md": 960,
              "sm": 600,
              "xl": 1920,
              "xs": 0,
            },
            "width": [Function],
          },
          "direction": "ltr",
          "hv": Object {
            "deprecated": Object {
              "palette": Object {
                "accent": Object {},
                "atmosphere": Object {},
                "base": Object {},
                "semantic": Object {},
                "support": Object {},
              },
              "typography": Object {
                "disabledText": Object {},
              },
              "viz": Object {
                "palette": Object {
                  "categorical": Object {},
                  "polarizes": Object {},
                  "sequential": Object {},
                  "undefinedState": Object {},
                },
              },
            },
            "name": "dawn",
            "palette": Object {
              "accent": Object {
                "acce0": "#FFFFFF",
                "acce1": "#414141",
                "acce2": "#146BD2",
                "acce2h": "#4389DB",
                "acce3": "#CC0000",
              },
              "atmosphere": Object {
                "atmo1": "#FFFFFF",
                "atmo2": "#F9F9F9",
                "atmo3": "#F5F5F5",
                "atmo4": "#F0F0F0",
                "atmo5": "#DEDEDE",
                "atmo6": "#BCBCBC",
                "atmo7": "#999999",
              },
              "base": Object {
                "base1": "#FFFFFF",
                "base2": "#414141",
              },
              "semantic": Object {
                "sema1": "#63A621",
                "sema10": "#EF9A9A",
                "sema11": "#E57373",
                "sema12": "#EF5350",
                "sema13": "#E53935",
                "sema14": "#C62828",
                "sema15": "#80DEEA",
                "sema16": "#4DD0E1",
                "sema17": "#26C6DA",
                "sema18": "#00ACC1",
                "sema19": "#00838F",
                "sema2": "#72CCCB",
                "sema3": "#E68C17",
                "sema4": "#FF5252",
                "sema5": "#C51162",
                "sema6": "#AA00FF",
                "sema7": "#D3E3F6",
                "sema8": "#DFECD1",
                "sema9": "#F5D8D8",
              },
              "support": Object {
                "supp1": "#0F8B8D",
                "supp2": "#734B6D",
                "supp3": "#4E7599",
                "supp4": "#C19C31",
                "supp5": "#546B6B",
              },
            },
            "spacing": Object {
              "lg": 60,
              "md": 30,
              "sm": 20,
              "xl": 90,
              "xs": 10,
            },
            "type": "light",
            "typography": Object {
              "3xlTitle": Object {
                "color": "#414141",
                "fontSize": "42px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "52px",
              },
              "4xlTitle": Object {
                "color": "#414141",
                "fontSize": "52px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "60px",
              },
              "5xlTitle": Object {
                "color": "#414141",
                "fontSize": "52px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "60px",
              },
              "disabledButtonText": Object {
                "color": "#999999",
                "fontSize": "14px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "disabledText": Object {
                "color": "#999999",
                "fontSize": "12px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "16px",
              },
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "highlightText": Object {
                "color": "#414141",
                "fontSize": "14px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "infoText": Object {
                "color": "#999999",
                "fontSize": "12px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "16px",
              },
              "inlineLink": Object {
                "color": "#146BD2",
                "fontSize": "14px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "lTitle": Object {
                "color": "#414141",
                "fontSize": "32px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "40px",
              },
              "labelText": Object {
                "color": "#414141",
                "fontSize": "12px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "16px",
              },
              "mTitle": Object {
                "color": "#414141",
                "fontSize": "22px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "30px",
              },
              "normalText": Object {
                "color": "#414141",
                "fontSize": "14px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "placeholderText": Object {
                "color": "#999999",
                "fontSize": "14px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "sLink": Object {
                "color": "#146BD2",
                "fontSize": "12px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "16px",
              },
              "sText": Object {
                "color": "#414141",
                "fontSize": "12px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "16px",
              },
              "sTitle": Object {
                "color": "#414141",
                "fontSize": "22px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "30px",
              },
              "selectedNavText": Object {
                "color": "#CC0000",
                "fontSize": "14px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "selectedText": Object {
                "background": "#414141",
                "color": "#F9F9F9",
                "fontSize": "14px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "vizText": Object {
                "color": "#414141",
                "fontSize": "10px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "15px",
              },
              "xlTitle": Object {
                "color": "#414141",
                "fontSize": "32px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "40px",
              },
              "xsTitle": Object {
                "color": "#414141",
                "fontSize": "18px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "28px",
              },
              "xxlTitle": Object {
                "color": "#414141",
                "fontSize": "42px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "52px",
              },
              "xxsTitle": Object {
                "color": "#414141",
                "fontSize": "18px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "28px",
              },
            },
            "viz": Object {
              "palette": Object {
                "categorical": Object {
                  "cviz1": "#2DB3E0",
                  "cviz10": "#419393",
                  "cviz11": "#58C9DD",
                  "cviz12": "#F8C189",
                  "cviz13": "#528BBF",
                  "cviz14": "#DE64BD",
                  "cviz15": "#73BF9C",
                  "cviz16": "#9672C1",
                  "cviz17": "#EB95AF",
                  "cviz18": "#646A98",
                  "cviz19": "#D88136",
                  "cviz2": "#FF990D",
                  "cviz20": "#309B59",
                  "cviz3": "#D31F6B",
                  "cviz4": "#FFD00A",
                  "cviz5": "#18C38A",
                  "cviz6": "#098CB2",
                  "cviz7": "#EA5B86",
                  "cviz8": "#9B469B",
                  "cviz9": "#F4763D",
                },
                "polarizes": Object {
                  "cviz21": "#869F1E",
                  "cviz22": "#A4991C",
                  "cviz23": "#C4931A",
                  "cviz24": "#E68C17",
                  "cviz25": "#F27034",
                  "cviz26": "#FF5252",
                  "cviz27": "#EC3D57",
                  "cviz28": "#D8265D",
                  "sema1": "#63A621",
                  "sema5": "#C51162",
                },
                "sequential": Object {
                  "cviz1": "#2DB3E0",
                  "cviz1_100": "#E3F1F6",
                  "cviz1_200": "#CFEAF3",
                  "cviz1_300": "#BAE3F3",
                  "cviz1_400": "#A6DCEE",
                  "cviz1_500": "#92D5EC",
                  "cviz1_600": "#7ECEE9",
                  "cviz1_700": "#69C7E7",
                  "cviz1_800": "#55C0E4",
                  "cviz1_900": "#40B9E2",
                },
                "undefinedState": Object {
                  "atmo5": "#DEDEDE",
                },
              },
            },
          },
          "mixins": Object {
            "gutters": [Function],
            "toolbar": Object {
              "@media (min-width:0px) and (orientation: landscape)": Object {
                "minHeight": 48,
              },
              "@media (min-width:600px)": Object {
                "minHeight": 64,
              },
              "minHeight": 56,
            },
          },
          "overrides": Object {
            "MuiAppBar": Object {
              "colorDefault": Object {
                "backgroundColor": "#FFFFFF",
                "contrastText": "#414141",
              },
              "root": Object {
                "@media (min-width: 600px)": Object {
                  "height": "50px",
                },
                "borderTop": "4px solid #CC0000",
              },
            },
            "MuiIconButton": Object {
              "root": Object {
                "&:focus": Object {
                  "outlineColor": "Highlight",
                  "outlineOffset": -2,
                  "outlineStyle": "auto",
                  "outlineWidth": 4,
                },
                "&:hover": Object {
                  "backgroundColor": "#F0F0F0",
                },
                "borderRadius": 0,
                "padding": 0,
              },
            },
            "MuiToolbar": Object {
              "dense": Object {
                "minHeight": "46px",
              },
              "gutters": Object {
                "@media (min-width:600px)": Object {
                  "paddingLeft": "20px",
                  "paddingRight": "20px",
                },
                "paddingLeft": "20px",
                "paddingRight": "20px",
              },
              "root": Object {
                "@media (min-width: 600px)": Object {
                  "minHeight": "46px",
                },
                "alignItems": "center",
              },
            },
          },
          "palette": Object {
            "acce0": "#FFFFFF",
            "acce1": "#414141",
            "acce2": "#146BD2",
            "acce2h": "#4389DB",
            "acce3": "#CC0000",
            "action": Object {
              "activatedOpacity": 0.12,
              "active": "rgba(0, 0, 0, 0.54)",
              "disabled": "rgba(0, 0, 0, 0.26)",
              "disabledBackground": "rgba(0, 0, 0, 0.12)",
              "disabledOpacity": 0.38,
              "focus": "rgba(0, 0, 0, 0.12)",
              "focusOpacity": 0.12,
              "hover": "rgba(0, 0, 0, 0.04)",
              "hoverOpacity": 0.04,
              "selected": "rgba(0, 0, 0, 0.08)",
              "selectedOpacity": 0.08,
            },
            "atmo1": "#FFFFFF",
            "atmo2": "#F9F9F9",
            "atmo3": "#F5F5F5",
            "atmo4": "#F0F0F0",
            "atmo5": "#DEDEDE",
            "atmo6": "#BCBCBC",
            "atmo7": "#999999",
            "augmentColor": [Function],
            "background": Object {
              "default": "#F5F5F5",
              "paper": "#fff",
            },
            "base1": "#FFFFFF",
            "base2": "#414141",
            "common": Object {
              "black": "#000",
              "white": "#fff",
            },
            "contrastThreshold": 3,
            "divider": "rgba(0, 0, 0, 0.12)",
            "error": Object {
              "contrastText": "#fff",
              "dark": "#d32f2f",
              "light": "#e57373",
              "main": "#f44336",
            },
            "getContrastText": [Function],
            "grey": Object {
              "100": "#f5f5f5",
              "200": "#eeeeee",
              "300": "#e0e0e0",
              "400": "#bdbdbd",
              "50": "#fafafa",
              "500": "#9e9e9e",
              "600": "#757575",
              "700": "#616161",
              "800": "#424242",
              "900": "#212121",
              "A100": "#d5d5d5",
              "A200": "#aaaaaa",
              "A400": "#303030",
              "A700": "#616161",
            },
            "info": Object {
              "contrastText": "#fff",
              "dark": "#1976d2",
              "light": "#64b5f6",
              "main": "#2196f3",
            },
            "primary": Object {
              "contrastText": "#fff",
              "dark": "rgb(14, 74, 147)",
              "light": "#4389DB",
              "main": "#146BD2",
            },
            "secondary": Object {
              "contrastText": "#fff",
              "dark": "rgb(45, 45, 45)",
              "light": "#999999",
              "main": "#414141",
            },
            "sema1": "#63A621",
            "sema10": "#EF9A9A",
            "sema11": "#E57373",
            "sema12": "#EF5350",
            "sema13": "#E53935",
            "sema14": "#C62828",
            "sema15": "#80DEEA",
            "sema16": "#4DD0E1",
            "sema17": "#26C6DA",
            "sema18": "#00ACC1",
            "sema19": "#00838F",
            "sema2": "#72CCCB",
            "sema3": "#E68C17",
            "sema4": "#FF5252",
            "sema5": "#C51162",
            "sema6": "#AA00FF",
            "sema7": "#D3E3F6",
            "sema8": "#DFECD1",
            "sema9": "#F5D8D8",
            "success": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#388e3c",
              "light": "#81c784",
              "main": "#4caf50",
            },
            "supp1": "#0F8B8D",
            "supp2": "#734B6D",
            "supp3": "#4E7599",
            "supp4": "#C19C31",
            "supp5": "#546B6B",
            "text": Object {
              "disabled": "#999999",
              "hint": "rgba(0, 0, 0, 0.38)",
              "primary": "#414141",
              "secondary": "rgba(0, 0, 0, 0.54)",
            },
            "tonalOffset": 0.2,
            "type": "light",
            "warning": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#f57c00",
              "light": "#ffb74d",
              "main": "#ff9800",
            },
          },
          "props": Object {
            "MuiButtonBase": Object {
              "disableRipple": true,
            },
            "MuiInput": Object {
              "disableUnderline": true,
            },
          },
          "shadows": Array [
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
          ],
          "shape": Object {
            "borderRadius": 0,
          },
          "spacing": [Function],
          "transitions": Object {
            "create": [Function],
            "duration": Object {
              "complex": 375,
              "enteringScreen": 225,
              "leavingScreen": 195,
              "short": 250,
              "shorter": 200,
              "shortest": 150,
              "standard": 300,
            },
            "easing": Object {
              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
            },
            "getAutoHeightDuration": [Function],
          },
          "typography": Object {
            "body1": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "14px",
              "fontWeight": 400,
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "body2": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "14px",
              "fontWeight": 400,
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "button": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "14px",
              "fontWeight": 600,
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
              "textTransform": "uppercase",
            },
            "caption": Object {
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "lineHeight": 1.66,
            },
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": 14,
            "fontWeightBold": 700,
            "fontWeightLight": 300,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "32px",
              "fontWeight": 600,
              "letterSpacing": "0.02em",
              "lineHeight": "40px",
            },
            "h2": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "32px",
              "fontWeight": 400,
              "letterSpacing": "0.02em",
              "lineHeight": "40px",
            },
            "h3": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "22px",
              "fontWeight": 600,
              "letterSpacing": "0.02em",
              "lineHeight": "30px",
            },
            "h4": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "22px",
              "fontWeight": 400,
              "letterSpacing": "0.02em",
              "lineHeight": "30px",
            },
            "h5": Object {
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "1.5rem",
              "fontWeight": 400,
              "lineHeight": 1.334,
            },
            "h6": Object {
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "1.25rem",
              "fontWeight": 500,
              "lineHeight": 1.6,
            },
            "htmlFontSize": 16,
            "overline": Object {
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "lineHeight": 2.66,
              "textTransform": "uppercase",
            },
            "pxToRem": [Function],
            "round": [Function],
            "subtitle1": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "14px",
              "fontWeight": 600,
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "subtitle2": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "12px",
              "fontWeight": 600,
              "letterSpacing": "0.02em",
              "lineHeight": "16px",
            },
            "suppressDeprecationWarnings": true,
          },
          "zIndex": Object {
            "appBar": 1100,
            "drawer": 1200,
            "mobileStepper": 1000,
            "modal": 1300,
            "snackbar": 1400,
            "speedDial": 1050,
            "tooltip": 1500,
          },
          Symbol(mui.nested): false,
        }
      }
    >
      <CssBaseline />
      <WithStyles(List)
        condensed={false}
        hasTooltips={false}
        id=""
        labels={
          Object {
            "selectAll": "All",
            "selectionConjunction": "of",
          }
        }
        multiSelect={false}
        onChange={[Function]}
        onClick={[Function]}
        selectDefault={false}
        selectable={true}
        showSelectAll={false}
        singleSelectionToggle={true}
        useSelector={false}
        values={
          Array [
            Object {
              "iconCallback": [Function],
              "label": "Value 1",
            },
            Object {
              "label": "Value 2",
            },
            Object {
              "label": "Value 3",
              "showNavIcon": true,
            },
          ]
        }
      >
        <List
          classes={
            Object {
              "box": "HvList-box",
              "condensed": "HvList-condensed",
              "disabled": "HvList-disabled",
              "label": "HvList-label",
              "labelIconLeftPadding": "HvList-labelIconLeftPadding",
              "listItem": "HvList-listItem",
              "noIconLeftPadding": "HvList-noIconLeftPadding",
              "root": "HvList-root",
              "selectAll": "HvList-selectAll",
              "selected": "HvList-selected",
              "selector": "HvList-selector",
              "selectorContainer": "HvList-selectorContainer",
              "textDisabled": "HvList-textDisabled",
              "truncate": "HvList-truncate",
            }
          }
          condensed={false}
          hasTooltips={false}
          id=""
          labels={
            Object {
              "selectAll": "All",
              "selectionConjunction": "of",
            }
          }
          multiSelect={false}
          onChange={[Function]}
          onClick={[Function]}
          selectDefault={false}
          selectable={true}
          showSelectAll={false}
          singleSelectionToggle={true}
          useSelector={false}
          values={
            Array [
              Object {
                "iconCallback": [Function],
                "label": "Value 1",
              },
              Object {
                "label": "Value 2",
              },
              Object {
                "label": "Value 3",
                "showNavIcon": true,
              },
            ]
          }
        >
          <div>
            <ul
              className="HvList-root"
              id="hv-list-7"
              role="listbox"
            >
              <WithStyles(Focus)
                configuration={
                  Object {
                    "tabIndex": 0,
                  }
                }
                disabled={false}
                focusDisabled={true}
                focusOnClick={false}
                key="0"
                rootRef={
                  Object {
                    "current": <div>
                      <ul
                        class="HvList-root"
                        id="hv-list-7"
                        role="listbox"
                      >
                        <li
                          class="HvList-listItem Focus-root-100 Focus-focusDisabled-103"
                          id="hv-list-7-item-0"
                          role="option"
                          tabindex="0"
                        >
                          <div
                            class="HvIconLineChart-root HvIconLineChart-rootS"
                          >
                            <svg
                              focusable="false"
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M1.086 11.453l-.707-.707 5.559-5.558 4.2 4.2 4.832-4.831.707.707-5.539 5.536-4.2-4.2zM0 15h16v1H0z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                          <p
                            class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-labelIconLeftPadding"
                          >
                            Value 1
                          </p>
                        </li>
                        <li
                          class="HvList-listItem Focus-root-100 Focus-focusDisabled-103"
                          id="hv-list-7-item-1"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-noIconLeftPadding"
                          >
                            Value 2
                          </p>
                        </li>
                        <li
                          class="HvList-listItem Focus-root-100 Focus-focusDisabled-103"
                          id="hv-list-7-item-2"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-noIconLeftPadding"
                          >
                            Value 3
                          </p>
                          <div
                            class="HvList-box HvIconDropRightXS-root HvIconDropRightXS-rootXs"
                          >
                            <svg
                              focusable="false"
                              height="12px"
                              viewBox="0 0 12 12"
                              width="12px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M8.65 6.00006l-4.6 4.6-.7-.7L7.25 6l-3.9-3.9.7-.7z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                        </li>
                      </ul>
                    </div>,
                  }
                }
                selected={false}
                strategy="listbox"
                useArrows={true}
                useFalseFocus={false}
              >
                <Focus
                  classes={
                    Object {
                      "disabled": "Focus-disabled-102",
                      "externalReference": "Focus-externalReference-105",
                      "falseFocus": "Focus-falseFocus-106",
                      "focusDisabled": "Focus-focusDisabled-103",
                      "focused": "Focus-focused-104",
                      "root": "Focus-root-100",
                      "selected": "Focus-selected-101",
                    }
                  }
                  configuration={
                    Object {
                      "tabIndex": 0,
                    }
                  }
                  disabled={false}
                  focusDisabled={true}
                  focusOnClick={false}
                  rootRef={
                    Object {
                      "current": <div>
                        <ul
                          class="HvList-root"
                          id="hv-list-7"
                          role="listbox"
                        >
                          <li
                            class="HvList-listItem Focus-root-100 Focus-focusDisabled-103"
                            id="hv-list-7-item-0"
                            role="option"
                            tabindex="0"
                          >
                            <div
                              class="HvIconLineChart-root HvIconLineChart-rootS"
                            >
                              <svg
                                focusable="false"
                                height="16px"
                                viewBox="0 0 16 16"
                                width="16px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M1.086 11.453l-.707-.707 5.559-5.558 4.2 4.2 4.832-4.831.707.707-5.539 5.536-4.2-4.2zM0 15h16v1H0z"
                                  fill="#414141"
                                />
                              </svg>
                            </div>
                            <p
                              class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-labelIconLeftPadding"
                            >
                              Value 1
                            </p>
                          </li>
                          <li
                            class="HvList-listItem Focus-root-100 Focus-focusDisabled-103"
                            id="hv-list-7-item-1"
                            role="option"
                            tabindex="-1"
                          >
                            <p
                              class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-noIconLeftPadding"
                            >
                              Value 2
                            </p>
                          </li>
                          <li
                            class="HvList-listItem Focus-root-100 Focus-focusDisabled-103"
                            id="hv-list-7-item-2"
                            role="option"
                            tabindex="-1"
                          >
                            <p
                              class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-noIconLeftPadding"
                            >
                              Value 3
                            </p>
                            <div
                              class="HvList-box HvIconDropRightXS-root HvIconDropRightXS-rootXs"
                            >
                              <svg
                                focusable="false"
                                height="12px"
                                viewBox="0 0 12 12"
                                width="12px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M8.65 6.00006l-4.6 4.6-.7-.7L7.25 6l-3.9-3.9.7-.7z"
                                  fill="#414141"
                                />
                              </svg>
                            </div>
                          </li>
                        </ul>
                      </div>,
                    }
                  }
                  selected={false}
                  strategy="listbox"
                  useArrows={true}
                  useFalseFocus={false}
                >
                  <ConditionalWrapper
                    condition={false}
                    wrapper={[Function]}
                  >
                    <li
                      className="HvList-listItem Focus-root-100 Focus-focusDisabled-103"
                      id="hv-list-7-item-0"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      role="option"
                      selected={false}
                    >
                      <WithStyles(LineChart)>
                        <LineChart
                          classes={
                            Object {
                              "root": "HvIconLineChart-root",
                              "rootL": "HvIconLineChart-rootL",
                              "rootM": "HvIconLineChart-rootM",
                              "rootS": "HvIconLineChart-rootS",
                              "rootXs": "HvIconLineChart-rootXs",
                            }
                          }
                        >
                          <div
                            className="HvIconLineChart-root HvIconLineChart-rootS"
                          >
                            <svg
                              focusable={false}
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                className="color0"
                                d="M1.086 11.453l-.707-.707 5.559-5.558 4.2 4.2 4.832-4.831.707.707-5.539 5.536-4.2-4.2zM0 15h16v1H0z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                        </LineChart>
                      </WithStyles(LineChart)>
                      <Text>
                        <WithStyles(ForwardRef)
                          className="HvList-label HvList-truncate HvList-labelIconLeftPadding"
                          variant="normalText"
                        >
                          <ForwardRef
                            className="HvList-label HvList-truncate HvList-labelIconLeftPadding"
                            classes={
                              Object {
                                "3xlTitle": "HvTypography-3xlTitle",
                                "4xlTitle": "HvTypography-4xlTitle",
                                "5xlTitle": "HvTypography-5xlTitle",
                                "baseFontFamily": "HvTypography-baseFontFamily",
                                "disabledButtonText": "HvTypography-disabledButtonText",
                                "highlightText": "HvTypography-highlightText",
                                "infoText": "HvTypography-infoText",
                                "inlineLink": "HvTypography-inlineLink",
                                "lTitle": "HvTypography-lTitle",
                                "labelText": "HvTypography-labelText",
                                "mTitle": "HvTypography-mTitle",
                                "margin": "HvTypography-margin",
                                "normalText": "HvTypography-normalText",
                                "placeholderText": "HvTypography-placeholderText",
                                "sLink": "HvTypography-sLink",
                                "sText": "HvTypography-sText",
                                "sTitle": "HvTypography-sTitle",
                                "selectedNavText": "HvTypography-selectedNavText",
                                "selectedText": "HvTypography-selectedText",
                                "vizText": "HvTypography-vizText",
                                "xlTitle": "HvTypography-xlTitle",
                                "xsTitle": "HvTypography-xsTitle",
                                "xxlTitle": "HvTypography-xxlTitle",
                                "xxsTitle": "HvTypography-xxsTitle",
                              }
                            }
                            variant="normalText"
                          >
                            <p
                              className="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-labelIconLeftPadding"
                            >
                              Value 1
                            </p>
                          </ForwardRef>
                        </WithStyles(ForwardRef)>
                      </Text>
                    </li>
                  </ConditionalWrapper>
                </Focus>
              </WithStyles(Focus)>
              <WithStyles(Focus)
                configuration={
                  Object {
                    "tabIndex": -1,
                  }
                }
                disabled={false}
                focusDisabled={true}
                focusOnClick={false}
                key="1"
                rootRef={
                  Object {
                    "current": <div>
                      <ul
                        class="HvList-root"
                        id="hv-list-7"
                        role="listbox"
                      >
                        <li
                          class="HvList-listItem Focus-root-100 Focus-focusDisabled-103"
                          id="hv-list-7-item-0"
                          role="option"
                          tabindex="0"
                        >
                          <div
                            class="HvIconLineChart-root HvIconLineChart-rootS"
                          >
                            <svg
                              focusable="false"
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M1.086 11.453l-.707-.707 5.559-5.558 4.2 4.2 4.832-4.831.707.707-5.539 5.536-4.2-4.2zM0 15h16v1H0z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                          <p
                            class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-labelIconLeftPadding"
                          >
                            Value 1
                          </p>
                        </li>
                        <li
                          class="HvList-listItem Focus-root-100 Focus-focusDisabled-103"
                          id="hv-list-7-item-1"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-noIconLeftPadding"
                          >
                            Value 2
                          </p>
                        </li>
                        <li
                          class="HvList-listItem Focus-root-100 Focus-focusDisabled-103"
                          id="hv-list-7-item-2"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-noIconLeftPadding"
                          >
                            Value 3
                          </p>
                          <div
                            class="HvList-box HvIconDropRightXS-root HvIconDropRightXS-rootXs"
                          >
                            <svg
                              focusable="false"
                              height="12px"
                              viewBox="0 0 12 12"
                              width="12px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M8.65 6.00006l-4.6 4.6-.7-.7L7.25 6l-3.9-3.9.7-.7z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                        </li>
                      </ul>
                    </div>,
                  }
                }
                selected={false}
                strategy="listbox"
                useArrows={true}
                useFalseFocus={false}
              >
                <Focus
                  classes={
                    Object {
                      "disabled": "Focus-disabled-102",
                      "externalReference": "Focus-externalReference-105",
                      "falseFocus": "Focus-falseFocus-106",
                      "focusDisabled": "Focus-focusDisabled-103",
                      "focused": "Focus-focused-104",
                      "root": "Focus-root-100",
                      "selected": "Focus-selected-101",
                    }
                  }
                  configuration={
                    Object {
                      "tabIndex": -1,
                    }
                  }
                  disabled={false}
                  focusDisabled={true}
                  focusOnClick={false}
                  rootRef={
                    Object {
                      "current": <div>
                        <ul
                          class="HvList-root"
                          id="hv-list-7"
                          role="listbox"
                        >
                          <li
                            class="HvList-listItem Focus-root-100 Focus-focusDisabled-103"
                            id="hv-list-7-item-0"
                            role="option"
                            tabindex="0"
                          >
                            <div
                              class="HvIconLineChart-root HvIconLineChart-rootS"
                            >
                              <svg
                                focusable="false"
                                height="16px"
                                viewBox="0 0 16 16"
                                width="16px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M1.086 11.453l-.707-.707 5.559-5.558 4.2 4.2 4.832-4.831.707.707-5.539 5.536-4.2-4.2zM0 15h16v1H0z"
                                  fill="#414141"
                                />
                              </svg>
                            </div>
                            <p
                              class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-labelIconLeftPadding"
                            >
                              Value 1
                            </p>
                          </li>
                          <li
                            class="HvList-listItem Focus-root-100 Focus-focusDisabled-103"
                            id="hv-list-7-item-1"
                            role="option"
                            tabindex="-1"
                          >
                            <p
                              class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-noIconLeftPadding"
                            >
                              Value 2
                            </p>
                          </li>
                          <li
                            class="HvList-listItem Focus-root-100 Focus-focusDisabled-103"
                            id="hv-list-7-item-2"
                            role="option"
                            tabindex="-1"
                          >
                            <p
                              class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-noIconLeftPadding"
                            >
                              Value 3
                            </p>
                            <div
                              class="HvList-box HvIconDropRightXS-root HvIconDropRightXS-rootXs"
                            >
                              <svg
                                focusable="false"
                                height="12px"
                                viewBox="0 0 12 12"
                                width="12px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M8.65 6.00006l-4.6 4.6-.7-.7L7.25 6l-3.9-3.9.7-.7z"
                                  fill="#414141"
                                />
                              </svg>
                            </div>
                          </li>
                        </ul>
                      </div>,
                    }
                  }
                  selected={false}
                  strategy="listbox"
                  useArrows={true}
                  useFalseFocus={false}
                >
                  <ConditionalWrapper
                    condition={false}
                    wrapper={[Function]}
                  >
                    <li
                      className="HvList-listItem Focus-root-100 Focus-focusDisabled-103"
                      id="hv-list-7-item-1"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      role="option"
                      selected={false}
                    >
                      <Text>
                        <WithStyles(ForwardRef)
                          className="HvList-label HvList-truncate HvList-noIconLeftPadding"
                          variant="normalText"
                        >
                          <ForwardRef
                            className="HvList-label HvList-truncate HvList-noIconLeftPadding"
                            classes={
                              Object {
                                "3xlTitle": "HvTypography-3xlTitle",
                                "4xlTitle": "HvTypography-4xlTitle",
                                "5xlTitle": "HvTypography-5xlTitle",
                                "baseFontFamily": "HvTypography-baseFontFamily",
                                "disabledButtonText": "HvTypography-disabledButtonText",
                                "highlightText": "HvTypography-highlightText",
                                "infoText": "HvTypography-infoText",
                                "inlineLink": "HvTypography-inlineLink",
                                "lTitle": "HvTypography-lTitle",
                                "labelText": "HvTypography-labelText",
                                "mTitle": "HvTypography-mTitle",
                                "margin": "HvTypography-margin",
                                "normalText": "HvTypography-normalText",
                                "placeholderText": "HvTypography-placeholderText",
                                "sLink": "HvTypography-sLink",
                                "sText": "HvTypography-sText",
                                "sTitle": "HvTypography-sTitle",
                                "selectedNavText": "HvTypography-selectedNavText",
                                "selectedText": "HvTypography-selectedText",
                                "vizText": "HvTypography-vizText",
                                "xlTitle": "HvTypography-xlTitle",
                                "xsTitle": "HvTypography-xsTitle",
                                "xxlTitle": "HvTypography-xxlTitle",
                                "xxsTitle": "HvTypography-xxsTitle",
                              }
                            }
                            variant="normalText"
                          >
                            <p
                              className="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-noIconLeftPadding"
                            >
                              Value 2
                            </p>
                          </ForwardRef>
                        </WithStyles(ForwardRef)>
                      </Text>
                    </li>
                  </ConditionalWrapper>
                </Focus>
              </WithStyles(Focus)>
              <WithStyles(Focus)
                configuration={
                  Object {
                    "tabIndex": -1,
                  }
                }
                disabled={false}
                focusDisabled={true}
                focusOnClick={false}
                key="2"
                rootRef={
                  Object {
                    "current": <div>
                      <ul
                        class="HvList-root"
                        id="hv-list-7"
                        role="listbox"
                      >
                        <li
                          class="HvList-listItem Focus-root-100 Focus-focusDisabled-103"
                          id="hv-list-7-item-0"
                          role="option"
                          tabindex="0"
                        >
                          <div
                            class="HvIconLineChart-root HvIconLineChart-rootS"
                          >
                            <svg
                              focusable="false"
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M1.086 11.453l-.707-.707 5.559-5.558 4.2 4.2 4.832-4.831.707.707-5.539 5.536-4.2-4.2zM0 15h16v1H0z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                          <p
                            class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-labelIconLeftPadding"
                          >
                            Value 1
                          </p>
                        </li>
                        <li
                          class="HvList-listItem Focus-root-100 Focus-focusDisabled-103"
                          id="hv-list-7-item-1"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-noIconLeftPadding"
                          >
                            Value 2
                          </p>
                        </li>
                        <li
                          class="HvList-listItem Focus-root-100 Focus-focusDisabled-103"
                          id="hv-list-7-item-2"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-noIconLeftPadding"
                          >
                            Value 3
                          </p>
                          <div
                            class="HvList-box HvIconDropRightXS-root HvIconDropRightXS-rootXs"
                          >
                            <svg
                              focusable="false"
                              height="12px"
                              viewBox="0 0 12 12"
                              width="12px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M8.65 6.00006l-4.6 4.6-.7-.7L7.25 6l-3.9-3.9.7-.7z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                        </li>
                      </ul>
                    </div>,
                  }
                }
                selected={false}
                strategy="listbox"
                useArrows={true}
                useFalseFocus={false}
              >
                <Focus
                  classes={
                    Object {
                      "disabled": "Focus-disabled-102",
                      "externalReference": "Focus-externalReference-105",
                      "falseFocus": "Focus-falseFocus-106",
                      "focusDisabled": "Focus-focusDisabled-103",
                      "focused": "Focus-focused-104",
                      "root": "Focus-root-100",
                      "selected": "Focus-selected-101",
                    }
                  }
                  configuration={
                    Object {
                      "tabIndex": -1,
                    }
                  }
                  disabled={false}
                  focusDisabled={true}
                  focusOnClick={false}
                  rootRef={
                    Object {
                      "current": <div>
                        <ul
                          class="HvList-root"
                          id="hv-list-7"
                          role="listbox"
                        >
                          <li
                            class="HvList-listItem Focus-root-100 Focus-focusDisabled-103"
                            id="hv-list-7-item-0"
                            role="option"
                            tabindex="0"
                          >
                            <div
                              class="HvIconLineChart-root HvIconLineChart-rootS"
                            >
                              <svg
                                focusable="false"
                                height="16px"
                                viewBox="0 0 16 16"
                                width="16px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M1.086 11.453l-.707-.707 5.559-5.558 4.2 4.2 4.832-4.831.707.707-5.539 5.536-4.2-4.2zM0 15h16v1H0z"
                                  fill="#414141"
                                />
                              </svg>
                            </div>
                            <p
                              class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-labelIconLeftPadding"
                            >
                              Value 1
                            </p>
                          </li>
                          <li
                            class="HvList-listItem Focus-root-100 Focus-focusDisabled-103"
                            id="hv-list-7-item-1"
                            role="option"
                            tabindex="-1"
                          >
                            <p
                              class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-noIconLeftPadding"
                            >
                              Value 2
                            </p>
                          </li>
                          <li
                            class="HvList-listItem Focus-root-100 Focus-focusDisabled-103"
                            id="hv-list-7-item-2"
                            role="option"
                            tabindex="-1"
                          >
                            <p
                              class="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-noIconLeftPadding"
                            >
                              Value 3
                            </p>
                            <div
                              class="HvList-box HvIconDropRightXS-root HvIconDropRightXS-rootXs"
                            >
                              <svg
                                focusable="false"
                                height="12px"
                                viewBox="0 0 12 12"
                                width="12px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M8.65 6.00006l-4.6 4.6-.7-.7L7.25 6l-3.9-3.9.7-.7z"
                                  fill="#414141"
                                />
                              </svg>
                            </div>
                          </li>
                        </ul>
                      </div>,
                    }
                  }
                  selected={false}
                  strategy="listbox"
                  useArrows={true}
                  useFalseFocus={false}
                >
                  <ConditionalWrapper
                    condition={false}
                    wrapper={[Function]}
                  >
                    <li
                      className="HvList-listItem Focus-root-100 Focus-focusDisabled-103"
                      id="hv-list-7-item-2"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      role="option"
                      selected={false}
                    >
                      <Text>
                        <WithStyles(ForwardRef)
                          className="HvList-label HvList-truncate HvList-noIconLeftPadding"
                          variant="normalText"
                        >
                          <ForwardRef
                            className="HvList-label HvList-truncate HvList-noIconLeftPadding"
                            classes={
                              Object {
                                "3xlTitle": "HvTypography-3xlTitle",
                                "4xlTitle": "HvTypography-4xlTitle",
                                "5xlTitle": "HvTypography-5xlTitle",
                                "baseFontFamily": "HvTypography-baseFontFamily",
                                "disabledButtonText": "HvTypography-disabledButtonText",
                                "highlightText": "HvTypography-highlightText",
                                "infoText": "HvTypography-infoText",
                                "inlineLink": "HvTypography-inlineLink",
                                "lTitle": "HvTypography-lTitle",
                                "labelText": "HvTypography-labelText",
                                "mTitle": "HvTypography-mTitle",
                                "margin": "HvTypography-margin",
                                "normalText": "HvTypography-normalText",
                                "placeholderText": "HvTypography-placeholderText",
                                "sLink": "HvTypography-sLink",
                                "sText": "HvTypography-sText",
                                "sTitle": "HvTypography-sTitle",
                                "selectedNavText": "HvTypography-selectedNavText",
                                "selectedText": "HvTypography-selectedText",
                                "vizText": "HvTypography-vizText",
                                "xlTitle": "HvTypography-xlTitle",
                                "xsTitle": "HvTypography-xsTitle",
                                "xxlTitle": "HvTypography-xxlTitle",
                                "xxsTitle": "HvTypography-xxsTitle",
                              }
                            }
                            variant="normalText"
                          >
                            <p
                              className="HvTypography-normalText HvTypography-baseFontFamily HvTypography-margin HvList-label HvList-truncate HvList-noIconLeftPadding"
                            >
                              Value 3
                            </p>
                          </ForwardRef>
                        </WithStyles(ForwardRef)>
                      </Text>
                      <WithStyles(DropRightXS)
                        className="HvList-box"
                        iconSize="XS"
                      >
                        <DropRightXS
                          className="HvList-box"
                          classes={
                            Object {
                              "root": "HvIconDropRightXS-root",
                              "rootL": "HvIconDropRightXS-rootL",
                              "rootM": "HvIconDropRightXS-rootM",
                              "rootS": "HvIconDropRightXS-rootS",
                              "rootXs": "HvIconDropRightXS-rootXs",
                            }
                          }
                          iconSize="XS"
                        >
                          <div
                            className="HvList-box HvIconDropRightXS-root HvIconDropRightXS-rootXs"
                          >
                            <svg
                              focusable={false}
                              height="12px"
                              viewBox="0 0 12 12"
                              width="12px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                className="color0"
                                d="M8.65 6.00006l-4.6 4.6-.7-.7L7.25 6l-3.9-3.9.7-.7z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                        </DropRightXS>
                      </WithStyles(DropRightXS)>
                    </li>
                  </ConditionalWrapper>
                </Focus>
              </WithStyles(Focus)>
            </ul>
          </div>
        </List>
      </WithStyles(List)>
    </ThemeProvider>
  </StylesProvider>
</HvProvider>
`;

exports[`<List /> Single selection with selectors should render correctly 1`] = `
<HvProvider
  changeTheme={[Function]}
  theme={null}
  uiKitTheme="dawn"
>
  <StylesProvider
    generateClassName={[Function]}
    injectFirst={true}
  >
    <ThemeProvider
      theme={
        Object {
          "breakpoints": Object {
            "between": [Function],
            "down": [Function],
            "keys": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
            "only": [Function],
            "up": [Function],
            "values": Object {
              "lg": 1270,
              "md": 960,
              "sm": 600,
              "xl": 1920,
              "xs": 0,
            },
            "width": [Function],
          },
          "direction": "ltr",
          "hv": Object {
            "deprecated": Object {
              "palette": Object {
                "accent": Object {},
                "atmosphere": Object {},
                "base": Object {},
                "semantic": Object {},
                "support": Object {},
              },
              "typography": Object {
                "disabledText": Object {},
              },
              "viz": Object {
                "palette": Object {
                  "categorical": Object {},
                  "polarizes": Object {},
                  "sequential": Object {},
                  "undefinedState": Object {},
                },
              },
            },
            "name": "dawn",
            "palette": Object {
              "accent": Object {
                "acce0": "#FFFFFF",
                "acce1": "#414141",
                "acce2": "#146BD2",
                "acce2h": "#4389DB",
                "acce3": "#CC0000",
              },
              "atmosphere": Object {
                "atmo1": "#FFFFFF",
                "atmo2": "#F9F9F9",
                "atmo3": "#F5F5F5",
                "atmo4": "#F0F0F0",
                "atmo5": "#DEDEDE",
                "atmo6": "#BCBCBC",
                "atmo7": "#999999",
              },
              "base": Object {
                "base1": "#FFFFFF",
                "base2": "#414141",
              },
              "semantic": Object {
                "sema1": "#63A621",
                "sema10": "#EF9A9A",
                "sema11": "#E57373",
                "sema12": "#EF5350",
                "sema13": "#E53935",
                "sema14": "#C62828",
                "sema15": "#80DEEA",
                "sema16": "#4DD0E1",
                "sema17": "#26C6DA",
                "sema18": "#00ACC1",
                "sema19": "#00838F",
                "sema2": "#72CCCB",
                "sema3": "#E68C17",
                "sema4": "#FF5252",
                "sema5": "#C51162",
                "sema6": "#AA00FF",
                "sema7": "#D3E3F6",
                "sema8": "#DFECD1",
                "sema9": "#F5D8D8",
              },
              "support": Object {
                "supp1": "#0F8B8D",
                "supp2": "#734B6D",
                "supp3": "#4E7599",
                "supp4": "#C19C31",
                "supp5": "#546B6B",
              },
            },
            "spacing": Object {
              "lg": 60,
              "md": 30,
              "sm": 20,
              "xl": 90,
              "xs": 10,
            },
            "type": "light",
            "typography": Object {
              "3xlTitle": Object {
                "color": "#414141",
                "fontSize": "42px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "52px",
              },
              "4xlTitle": Object {
                "color": "#414141",
                "fontSize": "52px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "60px",
              },
              "5xlTitle": Object {
                "color": "#414141",
                "fontSize": "52px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "60px",
              },
              "disabledButtonText": Object {
                "color": "#999999",
                "fontSize": "14px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "disabledText": Object {
                "color": "#999999",
                "fontSize": "12px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "16px",
              },
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "highlightText": Object {
                "color": "#414141",
                "fontSize": "14px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "infoText": Object {
                "color": "#999999",
                "fontSize": "12px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "16px",
              },
              "inlineLink": Object {
                "color": "#146BD2",
                "fontSize": "14px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "lTitle": Object {
                "color": "#414141",
                "fontSize": "32px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "40px",
              },
              "labelText": Object {
                "color": "#414141",
                "fontSize": "12px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "16px",
              },
              "mTitle": Object {
                "color": "#414141",
                "fontSize": "22px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "30px",
              },
              "normalText": Object {
                "color": "#414141",
                "fontSize": "14px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "placeholderText": Object {
                "color": "#999999",
                "fontSize": "14px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "sLink": Object {
                "color": "#146BD2",
                "fontSize": "12px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "16px",
              },
              "sText": Object {
                "color": "#414141",
                "fontSize": "12px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "16px",
              },
              "sTitle": Object {
                "color": "#414141",
                "fontSize": "22px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "30px",
              },
              "selectedNavText": Object {
                "color": "#CC0000",
                "fontSize": "14px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "selectedText": Object {
                "background": "#414141",
                "color": "#F9F9F9",
                "fontSize": "14px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "20px",
              },
              "vizText": Object {
                "color": "#414141",
                "fontSize": "10px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "15px",
              },
              "xlTitle": Object {
                "color": "#414141",
                "fontSize": "32px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "40px",
              },
              "xsTitle": Object {
                "color": "#414141",
                "fontSize": "18px",
                "fontWeight": 600,
                "letterSpacing": "0.02em",
                "lineHeight": "28px",
              },
              "xxlTitle": Object {
                "color": "#414141",
                "fontSize": "42px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "52px",
              },
              "xxsTitle": Object {
                "color": "#414141",
                "fontSize": "18px",
                "fontWeight": 400,
                "letterSpacing": "0.02em",
                "lineHeight": "28px",
              },
            },
            "viz": Object {
              "palette": Object {
                "categorical": Object {
                  "cviz1": "#2DB3E0",
                  "cviz10": "#419393",
                  "cviz11": "#58C9DD",
                  "cviz12": "#F8C189",
                  "cviz13": "#528BBF",
                  "cviz14": "#DE64BD",
                  "cviz15": "#73BF9C",
                  "cviz16": "#9672C1",
                  "cviz17": "#EB95AF",
                  "cviz18": "#646A98",
                  "cviz19": "#D88136",
                  "cviz2": "#FF990D",
                  "cviz20": "#309B59",
                  "cviz3": "#D31F6B",
                  "cviz4": "#FFD00A",
                  "cviz5": "#18C38A",
                  "cviz6": "#098CB2",
                  "cviz7": "#EA5B86",
                  "cviz8": "#9B469B",
                  "cviz9": "#F4763D",
                },
                "polarizes": Object {
                  "cviz21": "#869F1E",
                  "cviz22": "#A4991C",
                  "cviz23": "#C4931A",
                  "cviz24": "#E68C17",
                  "cviz25": "#F27034",
                  "cviz26": "#FF5252",
                  "cviz27": "#EC3D57",
                  "cviz28": "#D8265D",
                  "sema1": "#63A621",
                  "sema5": "#C51162",
                },
                "sequential": Object {
                  "cviz1": "#2DB3E0",
                  "cviz1_100": "#E3F1F6",
                  "cviz1_200": "#CFEAF3",
                  "cviz1_300": "#BAE3F3",
                  "cviz1_400": "#A6DCEE",
                  "cviz1_500": "#92D5EC",
                  "cviz1_600": "#7ECEE9",
                  "cviz1_700": "#69C7E7",
                  "cviz1_800": "#55C0E4",
                  "cviz1_900": "#40B9E2",
                },
                "undefinedState": Object {
                  "atmo5": "#DEDEDE",
                },
              },
            },
          },
          "mixins": Object {
            "gutters": [Function],
            "toolbar": Object {
              "@media (min-width:0px) and (orientation: landscape)": Object {
                "minHeight": 48,
              },
              "@media (min-width:600px)": Object {
                "minHeight": 64,
              },
              "minHeight": 56,
            },
          },
          "overrides": Object {
            "MuiAppBar": Object {
              "colorDefault": Object {
                "backgroundColor": "#FFFFFF",
                "contrastText": "#414141",
              },
              "root": Object {
                "@media (min-width: 600px)": Object {
                  "height": "50px",
                },
                "borderTop": "4px solid #CC0000",
              },
            },
            "MuiIconButton": Object {
              "root": Object {
                "&:focus": Object {
                  "outlineColor": "Highlight",
                  "outlineOffset": -2,
                  "outlineStyle": "auto",
                  "outlineWidth": 4,
                },
                "&:hover": Object {
                  "backgroundColor": "#F0F0F0",
                },
                "borderRadius": 0,
                "padding": 0,
              },
            },
            "MuiToolbar": Object {
              "dense": Object {
                "minHeight": "46px",
              },
              "gutters": Object {
                "@media (min-width:600px)": Object {
                  "paddingLeft": "20px",
                  "paddingRight": "20px",
                },
                "paddingLeft": "20px",
                "paddingRight": "20px",
              },
              "root": Object {
                "@media (min-width: 600px)": Object {
                  "minHeight": "46px",
                },
                "alignItems": "center",
              },
            },
          },
          "palette": Object {
            "acce0": "#FFFFFF",
            "acce1": "#414141",
            "acce2": "#146BD2",
            "acce2h": "#4389DB",
            "acce3": "#CC0000",
            "action": Object {
              "activatedOpacity": 0.12,
              "active": "rgba(0, 0, 0, 0.54)",
              "disabled": "rgba(0, 0, 0, 0.26)",
              "disabledBackground": "rgba(0, 0, 0, 0.12)",
              "disabledOpacity": 0.38,
              "focus": "rgba(0, 0, 0, 0.12)",
              "focusOpacity": 0.12,
              "hover": "rgba(0, 0, 0, 0.04)",
              "hoverOpacity": 0.04,
              "selected": "rgba(0, 0, 0, 0.08)",
              "selectedOpacity": 0.08,
            },
            "atmo1": "#FFFFFF",
            "atmo2": "#F9F9F9",
            "atmo3": "#F5F5F5",
            "atmo4": "#F0F0F0",
            "atmo5": "#DEDEDE",
            "atmo6": "#BCBCBC",
            "atmo7": "#999999",
            "augmentColor": [Function],
            "background": Object {
              "default": "#F5F5F5",
              "paper": "#fff",
            },
            "base1": "#FFFFFF",
            "base2": "#414141",
            "common": Object {
              "black": "#000",
              "white": "#fff",
            },
            "contrastThreshold": 3,
            "divider": "rgba(0, 0, 0, 0.12)",
            "error": Object {
              "contrastText": "#fff",
              "dark": "#d32f2f",
              "light": "#e57373",
              "main": "#f44336",
            },
            "getContrastText": [Function],
            "grey": Object {
              "100": "#f5f5f5",
              "200": "#eeeeee",
              "300": "#e0e0e0",
              "400": "#bdbdbd",
              "50": "#fafafa",
              "500": "#9e9e9e",
              "600": "#757575",
              "700": "#616161",
              "800": "#424242",
              "900": "#212121",
              "A100": "#d5d5d5",
              "A200": "#aaaaaa",
              "A400": "#303030",
              "A700": "#616161",
            },
            "info": Object {
              "contrastText": "#fff",
              "dark": "#1976d2",
              "light": "#64b5f6",
              "main": "#2196f3",
            },
            "primary": Object {
              "contrastText": "#fff",
              "dark": "rgb(14, 74, 147)",
              "light": "#4389DB",
              "main": "#146BD2",
            },
            "secondary": Object {
              "contrastText": "#fff",
              "dark": "rgb(45, 45, 45)",
              "light": "#999999",
              "main": "#414141",
            },
            "sema1": "#63A621",
            "sema10": "#EF9A9A",
            "sema11": "#E57373",
            "sema12": "#EF5350",
            "sema13": "#E53935",
            "sema14": "#C62828",
            "sema15": "#80DEEA",
            "sema16": "#4DD0E1",
            "sema17": "#26C6DA",
            "sema18": "#00ACC1",
            "sema19": "#00838F",
            "sema2": "#72CCCB",
            "sema3": "#E68C17",
            "sema4": "#FF5252",
            "sema5": "#C51162",
            "sema6": "#AA00FF",
            "sema7": "#D3E3F6",
            "sema8": "#DFECD1",
            "sema9": "#F5D8D8",
            "success": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#388e3c",
              "light": "#81c784",
              "main": "#4caf50",
            },
            "supp1": "#0F8B8D",
            "supp2": "#734B6D",
            "supp3": "#4E7599",
            "supp4": "#C19C31",
            "supp5": "#546B6B",
            "text": Object {
              "disabled": "#999999",
              "hint": "rgba(0, 0, 0, 0.38)",
              "primary": "#414141",
              "secondary": "rgba(0, 0, 0, 0.54)",
            },
            "tonalOffset": 0.2,
            "type": "light",
            "warning": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#f57c00",
              "light": "#ffb74d",
              "main": "#ff9800",
            },
          },
          "props": Object {
            "MuiButtonBase": Object {
              "disableRipple": true,
            },
            "MuiInput": Object {
              "disableUnderline": true,
            },
          },
          "shadows": Array [
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
          ],
          "shape": Object {
            "borderRadius": 0,
          },
          "spacing": [Function],
          "transitions": Object {
            "create": [Function],
            "duration": Object {
              "complex": 375,
              "enteringScreen": 225,
              "leavingScreen": 195,
              "short": 250,
              "shorter": 200,
              "shortest": 150,
              "standard": 300,
            },
            "easing": Object {
              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
            },
            "getAutoHeightDuration": [Function],
          },
          "typography": Object {
            "body1": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "14px",
              "fontWeight": 400,
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "body2": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "14px",
              "fontWeight": 400,
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "button": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "14px",
              "fontWeight": 600,
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
              "textTransform": "uppercase",
            },
            "caption": Object {
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "lineHeight": 1.66,
            },
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": 14,
            "fontWeightBold": 700,
            "fontWeightLight": 300,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "32px",
              "fontWeight": 600,
              "letterSpacing": "0.02em",
              "lineHeight": "40px",
            },
            "h2": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "32px",
              "fontWeight": 400,
              "letterSpacing": "0.02em",
              "lineHeight": "40px",
            },
            "h3": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "22px",
              "fontWeight": 600,
              "letterSpacing": "0.02em",
              "lineHeight": "30px",
            },
            "h4": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "22px",
              "fontWeight": 400,
              "letterSpacing": "0.02em",
              "lineHeight": "30px",
            },
            "h5": Object {
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "1.5rem",
              "fontWeight": 400,
              "lineHeight": 1.334,
            },
            "h6": Object {
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "1.25rem",
              "fontWeight": 500,
              "lineHeight": 1.6,
            },
            "htmlFontSize": 16,
            "overline": Object {
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "lineHeight": 2.66,
              "textTransform": "uppercase",
            },
            "pxToRem": [Function],
            "round": [Function],
            "subtitle1": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "14px",
              "fontWeight": 600,
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "subtitle2": Object {
              "color": "#414141",
              "fontFamily": Array [
                "'Open Sans'",
                "Arial",
                "Helvetica",
                "sans-serif",
              ],
              "fontSize": "12px",
              "fontWeight": 600,
              "letterSpacing": "0.02em",
              "lineHeight": "16px",
            },
            "suppressDeprecationWarnings": true,
          },
          "zIndex": Object {
            "appBar": 1100,
            "drawer": 1200,
            "mobileStepper": 1000,
            "modal": 1300,
            "snackbar": 1400,
            "speedDial": 1050,
            "tooltip": 1500,
          },
          Symbol(mui.nested): false,
        }
      }
    >
      <CssBaseline />
      <WithStyles(List)
        condensed={false}
        hasTooltips={false}
        id=""
        labels={
          Object {
            "selectAll": "All",
            "selectionConjunction": "of",
          }
        }
        multiSelect={false}
        onChange={[Function]}
        onClick={[Function]}
        selectDefault={true}
        selectable={true}
        showSelectAll={false}
        singleSelectionToggle={true}
        useSelector={true}
        values={
          Array [
            Object {
              "label": "Value 1",
            },
            Object {
              "label": "Value 2",
            },
            Object {
              "label": "Value 3",
            },
          ]
        }
      >
        <List
          classes={
            Object {
              "box": "HvList-box",
              "condensed": "HvList-condensed",
              "disabled": "HvList-disabled",
              "label": "HvList-label",
              "labelIconLeftPadding": "HvList-labelIconLeftPadding",
              "listItem": "HvList-listItem",
              "noIconLeftPadding": "HvList-noIconLeftPadding",
              "root": "HvList-root",
              "selectAll": "HvList-selectAll",
              "selected": "HvList-selected",
              "selector": "HvList-selector",
              "selectorContainer": "HvList-selectorContainer",
              "textDisabled": "HvList-textDisabled",
              "truncate": "HvList-truncate",
            }
          }
          condensed={false}
          hasTooltips={false}
          id=""
          labels={
            Object {
              "selectAll": "All",
              "selectionConjunction": "of",
            }
          }
          multiSelect={false}
          onChange={[Function]}
          onClick={[Function]}
          selectDefault={true}
          selectable={true}
          showSelectAll={false}
          singleSelectionToggle={true}
          useSelector={true}
          values={
            Array [
              Object {
                "label": "Value 1",
              },
              Object {
                "label": "Value 2",
              },
              Object {
                "label": "Value 3",
              },
            ]
          }
        >
          <div>
            <ul
              className="HvList-root"
              id="hv-list-6"
              role="listbox"
            >
              <WithStyles(Focus)
                configuration={
                  Object {
                    "tabIndex": 0,
                  }
                }
                disabled={false}
                focusDisabled={true}
                focusOnClick={false}
                key="0"
                rootRef={
                  Object {
                    "current": <div>
                      <ul
                        class="HvList-root"
                        id="hv-list-6"
                        role="listbox"
                      >
                        <li
                          aria-selected="true"
                          class="HvList-listItem HvList-selector Focus-root-36 Focus-selected-37 Focus-focusDisabled-39"
                          id="hv-list-6-item-0"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                            id="hv-list-6-item-0-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio PrivateSwitchBase-checked-55 Mui-checked"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  checked=""
                                  class="PrivateSwitchBase-input-57"
                                  id="hv-list-6-item-0-selector-input"
                                  tabindex="0"
                                  type="radio"
                                  value=""
                                />
                                <div
                                  class="HvRadioButton-icon HvIconRadioButtonSelected-root HvIconRadioButtonSelected-rootS"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M8 0a8 8 0 108 8 8 8 0 00-8-8z"
                                      fill="#414141"
                                    />
                                    <path
                                      class="color1"
                                      d="M8 12a4.013 4.013 0 01-4-4 4.013 4.013 0 014-4 4.013 4.013 0 014 4 4.013 4.013 0 01-4 4z"
                                      fill="#FFFFFF"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 1
                            </span>
                          </label>
                        </li>
                        <li
                          class="HvList-listItem HvList-selector Focus-root-36 Focus-focusDisabled-39"
                          id="hv-list-6-item-1"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                            id="hv-list-6-item-1-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  class="PrivateSwitchBase-input-57"
                                  id="hv-list-6-item-1-selector-input"
                                  tabindex="-1"
                                  type="radio"
                                  value=""
                                />
                                <div
                                  class="HvRadioButton-icon HvIconRadioButtonUnselected-root HvIconRadioButtonUnselected-rootS"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                      fill="#FFFFFF"
                                    />
                                    <path
                                      class="color1"
                                      d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                      fill="#414141"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 2
                            </span>
                          </label>
                        </li>
                        <li
                          class="HvList-listItem HvList-selector Focus-root-36 Focus-focusDisabled-39"
                          id="hv-list-6-item-2"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                            id="hv-list-6-item-2-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  class="PrivateSwitchBase-input-57"
                                  id="hv-list-6-item-2-selector-input"
                                  tabindex="-1"
                                  type="radio"
                                  value=""
                                />
                                <div
                                  class="HvRadioButton-icon HvIconRadioButtonUnselected-root HvIconRadioButtonUnselected-rootS"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                      fill="#FFFFFF"
                                    />
                                    <path
                                      class="color1"
                                      d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                      fill="#414141"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 3
                            </span>
                          </label>
                        </li>
                      </ul>
                    </div>,
                  }
                }
                selected={true}
                strategy="listbox"
                useArrows={true}
                useFalseFocus={false}
              >
                <Focus
                  classes={
                    Object {
                      "disabled": "Focus-disabled-38",
                      "externalReference": "Focus-externalReference-41",
                      "falseFocus": "Focus-falseFocus-42",
                      "focusDisabled": "Focus-focusDisabled-39",
                      "focused": "Focus-focused-40",
                      "root": "Focus-root-36",
                      "selected": "Focus-selected-37",
                    }
                  }
                  configuration={
                    Object {
                      "tabIndex": 0,
                    }
                  }
                  disabled={false}
                  focusDisabled={true}
                  focusOnClick={false}
                  rootRef={
                    Object {
                      "current": <div>
                        <ul
                          class="HvList-root"
                          id="hv-list-6"
                          role="listbox"
                        >
                          <li
                            aria-selected="true"
                            class="HvList-listItem HvList-selector Focus-root-36 Focus-selected-37 Focus-focusDisabled-39"
                            id="hv-list-6-item-0"
                            role="option"
                            tabindex="-1"
                          >
                            <label
                              class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                              id="hv-list-6-item-0-selector"
                            >
                              <span
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio PrivateSwitchBase-checked-55 Mui-checked"
                              >
                                <span
                                  class="MuiIconButton-label"
                                >
                                  <input
                                    checked=""
                                    class="PrivateSwitchBase-input-57"
                                    id="hv-list-6-item-0-selector-input"
                                    tabindex="0"
                                    type="radio"
                                    value=""
                                  />
                                  <div
                                    class="HvRadioButton-icon HvIconRadioButtonSelected-root HvIconRadioButtonSelected-rootS"
                                  >
                                    <svg
                                      focusable="false"
                                      height="16px"
                                      viewBox="0 0 16 16"
                                      width="16px"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        class="color0"
                                        d="M8 0a8 8 0 108 8 8 8 0 00-8-8z"
                                        fill="#414141"
                                      />
                                      <path
                                        class="color1"
                                        d="M8 12a4.013 4.013 0 01-4-4 4.013 4.013 0 014-4 4.013 4.013 0 014 4 4.013 4.013 0 01-4 4z"
                                        fill="#FFFFFF"
                                      />
                                    </svg>
                                  </div>
                                </span>
                              </span>
                              <span
                                class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                              >
                                Value 1
                              </span>
                            </label>
                          </li>
                          <li
                            class="HvList-listItem HvList-selector Focus-root-36 Focus-focusDisabled-39"
                            id="hv-list-6-item-1"
                            role="option"
                            tabindex="-1"
                          >
                            <label
                              class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                              id="hv-list-6-item-1-selector"
                            >
                              <span
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio"
                              >
                                <span
                                  class="MuiIconButton-label"
                                >
                                  <input
                                    class="PrivateSwitchBase-input-57"
                                    id="hv-list-6-item-1-selector-input"
                                    tabindex="-1"
                                    type="radio"
                                    value=""
                                  />
                                  <div
                                    class="HvRadioButton-icon HvIconRadioButtonUnselected-root HvIconRadioButtonUnselected-rootS"
                                  >
                                    <svg
                                      focusable="false"
                                      height="16px"
                                      viewBox="0 0 16 16"
                                      width="16px"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        class="color0"
                                        d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                        fill="#FFFFFF"
                                      />
                                      <path
                                        class="color1"
                                        d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                        fill="#414141"
                                      />
                                    </svg>
                                  </div>
                                </span>
                              </span>
                              <span
                                class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                              >
                                Value 2
                              </span>
                            </label>
                          </li>
                          <li
                            class="HvList-listItem HvList-selector Focus-root-36 Focus-focusDisabled-39"
                            id="hv-list-6-item-2"
                            role="option"
                            tabindex="-1"
                          >
                            <label
                              class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                              id="hv-list-6-item-2-selector"
                            >
                              <span
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio"
                              >
                                <span
                                  class="MuiIconButton-label"
                                >
                                  <input
                                    class="PrivateSwitchBase-input-57"
                                    id="hv-list-6-item-2-selector-input"
                                    tabindex="-1"
                                    type="radio"
                                    value=""
                                  />
                                  <div
                                    class="HvRadioButton-icon HvIconRadioButtonUnselected-root HvIconRadioButtonUnselected-rootS"
                                  >
                                    <svg
                                      focusable="false"
                                      height="16px"
                                      viewBox="0 0 16 16"
                                      width="16px"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        class="color0"
                                        d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                        fill="#FFFFFF"
                                      />
                                      <path
                                        class="color1"
                                        d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                        fill="#414141"
                                      />
                                    </svg>
                                  </div>
                                </span>
                              </span>
                              <span
                                class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                              >
                                Value 3
                              </span>
                            </label>
                          </li>
                        </ul>
                      </div>,
                    }
                  }
                  selected={true}
                  strategy="listbox"
                  useArrows={true}
                  useFalseFocus={false}
                >
                  <ConditionalWrapper
                    condition={false}
                    wrapper={[Function]}
                  >
                    <li
                      aria-selected={true}
                      className="HvList-listItem HvList-selector Focus-root-36 Focus-selected-37 Focus-focusDisabled-39"
                      id="hv-list-6-item-0"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      role="option"
                      selected={true}
                    >
                      <WithStyles(HvRadio)
                        checked={true}
                        className=""
                        classes={
                          Object {
                            "container": "HvList-selectorContainer",
                            "labelTypography": "HvList-truncate",
                          }
                        }
                        disabled={false}
                        id="hv-list-6-item-0-selector"
                        label="Value 1"
                        labelPlacement="end"
                        onChange={[Function]}
                        value=""
                      >
                        <HvRadio
                          checked={true}
                          className=""
                          classes={
                            Object {
                              "container": "HvRadioButton-container HvList-selectorContainer",
                              "disableFocus": "HvRadioButton-disableFocus",
                              "icon": "HvRadioButton-icon",
                              "labelDisabled": "HvRadioButton-labelDisabled",
                              "labelEnd": "HvRadioButton-labelEnd",
                              "labelStart": "HvRadioButton-labelStart",
                              "labelTypography": "HvRadioButton-labelTypography HvList-truncate",
                              "radio": "HvRadioButton-radio",
                            }
                          }
                          disabled={false}
                          id="hv-list-6-item-0-selector"
                          label="Value 1"
                          labelPlacement="end"
                          onChange={[Function]}
                          value=""
                        >
                          <WithStyles(ForwardRef(FormControlLabel))
                            className="HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                            classes={
                              Object {
                                "disabled": "HvRadioButton-labelDisabled",
                                "label": "HvRadioButton-labelTypography HvList-truncate",
                              }
                            }
                            control={
                              <ForwardRef(WithStyles)
                                checked={true}
                                checkedIcon={
                                  <ForwardRef(WithStyles)
                                    className="HvRadioButton-icon"
                                  />
                                }
                                className="HvRadioButton-radio"
                                color="default"
                                disableRipple={true}
                                disabled={false}
                                icon={
                                  <ForwardRef(WithStyles)
                                    className="HvRadioButton-icon"
                                  />
                                }
                                id="hv-list-6-item-0-selector-input"
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              />
                            }
                            id="hv-list-6-item-0-selector"
                            label="Value 1"
                            labelPlacement="end"
                          >
                            <ForwardRef(FormControlLabel)
                              className="HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                              classes={
                                Object {
                                  "disabled": "Mui-disabled HvRadioButton-labelDisabled",
                                  "label": "MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate",
                                  "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                  "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                  "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                  "root": "MuiFormControlLabel-root",
                                }
                              }
                              control={
                                <ForwardRef(WithStyles)
                                  checked={true}
                                  checkedIcon={
                                    <ForwardRef(WithStyles)
                                      className="HvRadioButton-icon"
                                    />
                                  }
                                  className="HvRadioButton-radio"
                                  color="default"
                                  disableRipple={true}
                                  disabled={false}
                                  icon={
                                    <ForwardRef(WithStyles)
                                      className="HvRadioButton-icon"
                                    />
                                  }
                                  id="hv-list-6-item-0-selector-input"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  value=""
                                />
                              }
                              id="hv-list-6-item-0-selector"
                              label="Value 1"
                              labelPlacement="end"
                            >
                              <label
                                className="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                                id="hv-list-6-item-0-selector"
                              >
                                <WithStyles(ForwardRef(Radio))
                                  checked={true}
                                  checkedIcon={
                                    <ForwardRef(WithStyles)
                                      className="HvRadioButton-icon"
                                    />
                                  }
                                  className="HvRadioButton-radio"
                                  color="default"
                                  disableRipple={true}
                                  disabled={false}
                                  icon={
                                    <ForwardRef(WithStyles)
                                      className="HvRadioButton-icon"
                                    />
                                  }
                                  id="hv-list-6-item-0-selector-input"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  value=""
                                >
                                  <ForwardRef(Radio)
                                    checked={true}
                                    checkedIcon={
                                      <ForwardRef(WithStyles)
                                        className="HvRadioButton-icon"
                                      />
                                    }
                                    className="HvRadioButton-radio"
                                    classes={
                                      Object {
                                        "checked": "Mui-checked",
                                        "colorPrimary": "MuiRadio-colorPrimary",
                                        "colorSecondary": "MuiRadio-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "root": "MuiRadio-root",
                                      }
                                    }
                                    color="default"
                                    disableRipple={true}
                                    disabled={false}
                                    icon={
                                      <ForwardRef(WithStyles)
                                        className="HvRadioButton-icon"
                                      />
                                    }
                                    id="hv-list-6-item-0-selector-input"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    value=""
                                  >
                                    <WithStyles(ForwardRef(SwitchBase))
                                      checked={true}
                                      checkedIcon={
                                        <ForwardRef(WithStyles)
                                          className="HvRadioButton-icon"
                                        />
                                      }
                                      className="HvRadioButton-radio"
                                      classes={
                                        Object {
                                          "checked": "Mui-checked",
                                          "disabled": "Mui-disabled",
                                          "root": "MuiRadio-root",
                                        }
                                      }
                                      color="default"
                                      disableRipple={true}
                                      disabled={false}
                                      icon={
                                        <ForwardRef(WithStyles)
                                          className="HvRadioButton-icon"
                                        />
                                      }
                                      id="hv-list-6-item-0-selector-input"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      type="radio"
                                      value=""
                                    >
                                      <ForwardRef(SwitchBase)
                                        checked={true}
                                        checkedIcon={
                                          <ForwardRef(WithStyles)
                                            className="HvRadioButton-icon"
                                          />
                                        }
                                        className="HvRadioButton-radio"
                                        classes={
                                          Object {
                                            "checked": "PrivateSwitchBase-checked-55 Mui-checked",
                                            "disabled": "PrivateSwitchBase-disabled-56 Mui-disabled",
                                            "input": "PrivateSwitchBase-input-57",
                                            "root": "PrivateSwitchBase-root-54 MuiRadio-root",
                                          }
                                        }
                                        color="default"
                                        disableRipple={true}
                                        disabled={false}
                                        icon={
                                          <ForwardRef(WithStyles)
                                            className="HvRadioButton-icon"
                                          />
                                        }
                                        id="hv-list-6-item-0-selector-input"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        type="radio"
                                        value=""
                                      >
                                        <WithStyles(ForwardRef(IconButton))
                                          className="PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio PrivateSwitchBase-checked-55 Mui-checked"
                                          color="default"
                                          component="span"
                                          disableRipple={true}
                                          disabled={false}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <ForwardRef(IconButton)
                                            className="PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio PrivateSwitchBase-checked-55 Mui-checked"
                                            classes={
                                              Object {
                                                "colorInherit": "MuiIconButton-colorInherit",
                                                "colorPrimary": "MuiIconButton-colorPrimary",
                                                "colorSecondary": "MuiIconButton-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "edgeEnd": "MuiIconButton-edgeEnd",
                                                "edgeStart": "MuiIconButton-edgeStart",
                                                "label": "MuiIconButton-label",
                                                "root": "MuiIconButton-root",
                                                "sizeSmall": "MuiIconButton-sizeSmall",
                                              }
                                            }
                                            color="default"
                                            component="span"
                                            disableRipple={true}
                                            disabled={false}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              centerRipple={true}
                                              className="MuiIconButton-root PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio PrivateSwitchBase-checked-55 Mui-checked"
                                              component="span"
                                              disableRipple={true}
                                              disabled={false}
                                              focusRipple={true}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <ForwardRef(ButtonBase)
                                                centerRipple={true}
                                                className="MuiIconButton-root PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio PrivateSwitchBase-checked-55 Mui-checked"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="span"
                                                disableRipple={true}
                                                disabled={false}
                                                focusRipple={true}
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                tabIndex={null}
                                              >
                                                <span
                                                  aria-disabled={false}
                                                  className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio PrivateSwitchBase-checked-55 Mui-checked"
                                                  onBlur={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  tabIndex={null}
                                                >
                                                  <span
                                                    className="MuiIconButton-label"
                                                  >
                                                    <input
                                                      checked={true}
                                                      className="PrivateSwitchBase-input-57"
                                                      disabled={false}
                                                      id="hv-list-6-item-0-selector-input"
                                                      onChange={[Function]}
                                                      type="radio"
                                                      value=""
                                                    />
                                                    <WithStyles(RadioButtonSelected)
                                                      className="HvRadioButton-icon"
                                                    >
                                                      <RadioButtonSelected
                                                        className="HvRadioButton-icon"
                                                        classes={
                                                          Object {
                                                            "root": "HvIconRadioButtonSelected-root",
                                                            "rootL": "HvIconRadioButtonSelected-rootL",
                                                            "rootM": "HvIconRadioButtonSelected-rootM",
                                                            "rootS": "HvIconRadioButtonSelected-rootS",
                                                            "rootXs": "HvIconRadioButtonSelected-rootXs",
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="HvRadioButton-icon HvIconRadioButtonSelected-root HvIconRadioButtonSelected-rootS"
                                                        >
                                                          <svg
                                                            focusable={false}
                                                            height="16px"
                                                            viewBox="0 0 16 16"
                                                            width="16px"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              className="color0"
                                                              d="M8 0a8 8 0 108 8 8 8 0 00-8-8z"
                                                              fill="#414141"
                                                            />
                                                            <path
                                                              className="color1"
                                                              d="M8 12a4.013 4.013 0 01-4-4 4.013 4.013 0 014-4 4.013 4.013 0 014 4 4.013 4.013 0 01-4 4z"
                                                              fill="#FFFFFF"
                                                            />
                                                          </svg>
                                                        </div>
                                                      </RadioButtonSelected>
                                                    </WithStyles(RadioButtonSelected)>
                                                  </span>
                                                  <NoSsr />
                                                </span>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(IconButton)>
                                        </WithStyles(ForwardRef(IconButton))>
                                      </ForwardRef(SwitchBase)>
                                    </WithStyles(ForwardRef(SwitchBase))>
                                  </ForwardRef(Radio)>
                                </WithStyles(ForwardRef(Radio))>
                                <WithStyles(ForwardRef(Typography))
                                  className="MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate"
                                  component="span"
                                >
                                  <ForwardRef(Typography)
                                    className="MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                    component="span"
                                  >
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                                    >
                                      Value 1
                                    </span>
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                              </label>
                            </ForwardRef(FormControlLabel)>
                          </WithStyles(ForwardRef(FormControlLabel))>
                        </HvRadio>
                      </WithStyles(HvRadio)>
                    </li>
                  </ConditionalWrapper>
                </Focus>
              </WithStyles(Focus)>
              <WithStyles(Focus)
                configuration={
                  Object {
                    "tabIndex": -1,
                  }
                }
                disabled={false}
                focusDisabled={true}
                focusOnClick={false}
                key="1"
                rootRef={
                  Object {
                    "current": <div>
                      <ul
                        class="HvList-root"
                        id="hv-list-6"
                        role="listbox"
                      >
                        <li
                          aria-selected="true"
                          class="HvList-listItem HvList-selector Focus-root-36 Focus-selected-37 Focus-focusDisabled-39"
                          id="hv-list-6-item-0"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                            id="hv-list-6-item-0-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio PrivateSwitchBase-checked-55 Mui-checked"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  checked=""
                                  class="PrivateSwitchBase-input-57"
                                  id="hv-list-6-item-0-selector-input"
                                  tabindex="0"
                                  type="radio"
                                  value=""
                                />
                                <div
                                  class="HvRadioButton-icon HvIconRadioButtonSelected-root HvIconRadioButtonSelected-rootS"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M8 0a8 8 0 108 8 8 8 0 00-8-8z"
                                      fill="#414141"
                                    />
                                    <path
                                      class="color1"
                                      d="M8 12a4.013 4.013 0 01-4-4 4.013 4.013 0 014-4 4.013 4.013 0 014 4 4.013 4.013 0 01-4 4z"
                                      fill="#FFFFFF"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 1
                            </span>
                          </label>
                        </li>
                        <li
                          class="HvList-listItem HvList-selector Focus-root-36 Focus-focusDisabled-39"
                          id="hv-list-6-item-1"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                            id="hv-list-6-item-1-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  class="PrivateSwitchBase-input-57"
                                  id="hv-list-6-item-1-selector-input"
                                  tabindex="-1"
                                  type="radio"
                                  value=""
                                />
                                <div
                                  class="HvRadioButton-icon HvIconRadioButtonUnselected-root HvIconRadioButtonUnselected-rootS"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                      fill="#FFFFFF"
                                    />
                                    <path
                                      class="color1"
                                      d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                      fill="#414141"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 2
                            </span>
                          </label>
                        </li>
                        <li
                          class="HvList-listItem HvList-selector Focus-root-36 Focus-focusDisabled-39"
                          id="hv-list-6-item-2"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                            id="hv-list-6-item-2-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  class="PrivateSwitchBase-input-57"
                                  id="hv-list-6-item-2-selector-input"
                                  tabindex="-1"
                                  type="radio"
                                  value=""
                                />
                                <div
                                  class="HvRadioButton-icon HvIconRadioButtonUnselected-root HvIconRadioButtonUnselected-rootS"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                      fill="#FFFFFF"
                                    />
                                    <path
                                      class="color1"
                                      d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                      fill="#414141"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 3
                            </span>
                          </label>
                        </li>
                      </ul>
                    </div>,
                  }
                }
                selected={false}
                strategy="listbox"
                useArrows={true}
                useFalseFocus={false}
              >
                <Focus
                  classes={
                    Object {
                      "disabled": "Focus-disabled-38",
                      "externalReference": "Focus-externalReference-41",
                      "falseFocus": "Focus-falseFocus-42",
                      "focusDisabled": "Focus-focusDisabled-39",
                      "focused": "Focus-focused-40",
                      "root": "Focus-root-36",
                      "selected": "Focus-selected-37",
                    }
                  }
                  configuration={
                    Object {
                      "tabIndex": -1,
                    }
                  }
                  disabled={false}
                  focusDisabled={true}
                  focusOnClick={false}
                  rootRef={
                    Object {
                      "current": <div>
                        <ul
                          class="HvList-root"
                          id="hv-list-6"
                          role="listbox"
                        >
                          <li
                            aria-selected="true"
                            class="HvList-listItem HvList-selector Focus-root-36 Focus-selected-37 Focus-focusDisabled-39"
                            id="hv-list-6-item-0"
                            role="option"
                            tabindex="-1"
                          >
                            <label
                              class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                              id="hv-list-6-item-0-selector"
                            >
                              <span
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio PrivateSwitchBase-checked-55 Mui-checked"
                              >
                                <span
                                  class="MuiIconButton-label"
                                >
                                  <input
                                    checked=""
                                    class="PrivateSwitchBase-input-57"
                                    id="hv-list-6-item-0-selector-input"
                                    tabindex="0"
                                    type="radio"
                                    value=""
                                  />
                                  <div
                                    class="HvRadioButton-icon HvIconRadioButtonSelected-root HvIconRadioButtonSelected-rootS"
                                  >
                                    <svg
                                      focusable="false"
                                      height="16px"
                                      viewBox="0 0 16 16"
                                      width="16px"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        class="color0"
                                        d="M8 0a8 8 0 108 8 8 8 0 00-8-8z"
                                        fill="#414141"
                                      />
                                      <path
                                        class="color1"
                                        d="M8 12a4.013 4.013 0 01-4-4 4.013 4.013 0 014-4 4.013 4.013 0 014 4 4.013 4.013 0 01-4 4z"
                                        fill="#FFFFFF"
                                      />
                                    </svg>
                                  </div>
                                </span>
                              </span>
                              <span
                                class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                              >
                                Value 1
                              </span>
                            </label>
                          </li>
                          <li
                            class="HvList-listItem HvList-selector Focus-root-36 Focus-focusDisabled-39"
                            id="hv-list-6-item-1"
                            role="option"
                            tabindex="-1"
                          >
                            <label
                              class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                              id="hv-list-6-item-1-selector"
                            >
                              <span
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio"
                              >
                                <span
                                  class="MuiIconButton-label"
                                >
                                  <input
                                    class="PrivateSwitchBase-input-57"
                                    id="hv-list-6-item-1-selector-input"
                                    tabindex="-1"
                                    type="radio"
                                    value=""
                                  />
                                  <div
                                    class="HvRadioButton-icon HvIconRadioButtonUnselected-root HvIconRadioButtonUnselected-rootS"
                                  >
                                    <svg
                                      focusable="false"
                                      height="16px"
                                      viewBox="0 0 16 16"
                                      width="16px"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        class="color0"
                                        d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                        fill="#FFFFFF"
                                      />
                                      <path
                                        class="color1"
                                        d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                        fill="#414141"
                                      />
                                    </svg>
                                  </div>
                                </span>
                              </span>
                              <span
                                class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                              >
                                Value 2
                              </span>
                            </label>
                          </li>
                          <li
                            class="HvList-listItem HvList-selector Focus-root-36 Focus-focusDisabled-39"
                            id="hv-list-6-item-2"
                            role="option"
                            tabindex="-1"
                          >
                            <label
                              class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                              id="hv-list-6-item-2-selector"
                            >
                              <span
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio"
                              >
                                <span
                                  class="MuiIconButton-label"
                                >
                                  <input
                                    class="PrivateSwitchBase-input-57"
                                    id="hv-list-6-item-2-selector-input"
                                    tabindex="-1"
                                    type="radio"
                                    value=""
                                  />
                                  <div
                                    class="HvRadioButton-icon HvIconRadioButtonUnselected-root HvIconRadioButtonUnselected-rootS"
                                  >
                                    <svg
                                      focusable="false"
                                      height="16px"
                                      viewBox="0 0 16 16"
                                      width="16px"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        class="color0"
                                        d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                        fill="#FFFFFF"
                                      />
                                      <path
                                        class="color1"
                                        d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                        fill="#414141"
                                      />
                                    </svg>
                                  </div>
                                </span>
                              </span>
                              <span
                                class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                              >
                                Value 3
                              </span>
                            </label>
                          </li>
                        </ul>
                      </div>,
                    }
                  }
                  selected={false}
                  strategy="listbox"
                  useArrows={true}
                  useFalseFocus={false}
                >
                  <ConditionalWrapper
                    condition={false}
                    wrapper={[Function]}
                  >
                    <li
                      className="HvList-listItem HvList-selector Focus-root-36 Focus-focusDisabled-39"
                      id="hv-list-6-item-1"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      role="option"
                      selected={false}
                    >
                      <WithStyles(HvRadio)
                        checked={false}
                        className=""
                        classes={
                          Object {
                            "container": "HvList-selectorContainer",
                            "labelTypography": "HvList-truncate",
                          }
                        }
                        disabled={false}
                        id="hv-list-6-item-1-selector"
                        label="Value 2"
                        labelPlacement="end"
                        onChange={[Function]}
                        value=""
                      >
                        <HvRadio
                          checked={false}
                          className=""
                          classes={
                            Object {
                              "container": "HvRadioButton-container HvList-selectorContainer",
                              "disableFocus": "HvRadioButton-disableFocus",
                              "icon": "HvRadioButton-icon",
                              "labelDisabled": "HvRadioButton-labelDisabled",
                              "labelEnd": "HvRadioButton-labelEnd",
                              "labelStart": "HvRadioButton-labelStart",
                              "labelTypography": "HvRadioButton-labelTypography HvList-truncate",
                              "radio": "HvRadioButton-radio",
                            }
                          }
                          disabled={false}
                          id="hv-list-6-item-1-selector"
                          label="Value 2"
                          labelPlacement="end"
                          onChange={[Function]}
                          value=""
                        >
                          <WithStyles(ForwardRef(FormControlLabel))
                            className="HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                            classes={
                              Object {
                                "disabled": "HvRadioButton-labelDisabled",
                                "label": "HvRadioButton-labelTypography HvList-truncate",
                              }
                            }
                            control={
                              <ForwardRef(WithStyles)
                                checked={false}
                                checkedIcon={
                                  <ForwardRef(WithStyles)
                                    className="HvRadioButton-icon"
                                  />
                                }
                                className="HvRadioButton-radio"
                                color="default"
                                disableRipple={true}
                                disabled={false}
                                icon={
                                  <ForwardRef(WithStyles)
                                    className="HvRadioButton-icon"
                                  />
                                }
                                id="hv-list-6-item-1-selector-input"
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              />
                            }
                            id="hv-list-6-item-1-selector"
                            label="Value 2"
                            labelPlacement="end"
                          >
                            <ForwardRef(FormControlLabel)
                              className="HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                              classes={
                                Object {
                                  "disabled": "Mui-disabled HvRadioButton-labelDisabled",
                                  "label": "MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate",
                                  "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                  "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                  "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                  "root": "MuiFormControlLabel-root",
                                }
                              }
                              control={
                                <ForwardRef(WithStyles)
                                  checked={false}
                                  checkedIcon={
                                    <ForwardRef(WithStyles)
                                      className="HvRadioButton-icon"
                                    />
                                  }
                                  className="HvRadioButton-radio"
                                  color="default"
                                  disableRipple={true}
                                  disabled={false}
                                  icon={
                                    <ForwardRef(WithStyles)
                                      className="HvRadioButton-icon"
                                    />
                                  }
                                  id="hv-list-6-item-1-selector-input"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  value=""
                                />
                              }
                              id="hv-list-6-item-1-selector"
                              label="Value 2"
                              labelPlacement="end"
                            >
                              <label
                                className="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                                id="hv-list-6-item-1-selector"
                              >
                                <WithStyles(ForwardRef(Radio))
                                  checked={false}
                                  checkedIcon={
                                    <ForwardRef(WithStyles)
                                      className="HvRadioButton-icon"
                                    />
                                  }
                                  className="HvRadioButton-radio"
                                  color="default"
                                  disableRipple={true}
                                  disabled={false}
                                  icon={
                                    <ForwardRef(WithStyles)
                                      className="HvRadioButton-icon"
                                    />
                                  }
                                  id="hv-list-6-item-1-selector-input"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  value=""
                                >
                                  <ForwardRef(Radio)
                                    checked={false}
                                    checkedIcon={
                                      <ForwardRef(WithStyles)
                                        className="HvRadioButton-icon"
                                      />
                                    }
                                    className="HvRadioButton-radio"
                                    classes={
                                      Object {
                                        "checked": "Mui-checked",
                                        "colorPrimary": "MuiRadio-colorPrimary",
                                        "colorSecondary": "MuiRadio-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "root": "MuiRadio-root",
                                      }
                                    }
                                    color="default"
                                    disableRipple={true}
                                    disabled={false}
                                    icon={
                                      <ForwardRef(WithStyles)
                                        className="HvRadioButton-icon"
                                      />
                                    }
                                    id="hv-list-6-item-1-selector-input"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    value=""
                                  >
                                    <WithStyles(ForwardRef(SwitchBase))
                                      checked={false}
                                      checkedIcon={
                                        <ForwardRef(WithStyles)
                                          className="HvRadioButton-icon"
                                        />
                                      }
                                      className="HvRadioButton-radio"
                                      classes={
                                        Object {
                                          "checked": "Mui-checked",
                                          "disabled": "Mui-disabled",
                                          "root": "MuiRadio-root",
                                        }
                                      }
                                      color="default"
                                      disableRipple={true}
                                      disabled={false}
                                      icon={
                                        <ForwardRef(WithStyles)
                                          className="HvRadioButton-icon"
                                        />
                                      }
                                      id="hv-list-6-item-1-selector-input"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      type="radio"
                                      value=""
                                    >
                                      <ForwardRef(SwitchBase)
                                        checked={false}
                                        checkedIcon={
                                          <ForwardRef(WithStyles)
                                            className="HvRadioButton-icon"
                                          />
                                        }
                                        className="HvRadioButton-radio"
                                        classes={
                                          Object {
                                            "checked": "PrivateSwitchBase-checked-55 Mui-checked",
                                            "disabled": "PrivateSwitchBase-disabled-56 Mui-disabled",
                                            "input": "PrivateSwitchBase-input-57",
                                            "root": "PrivateSwitchBase-root-54 MuiRadio-root",
                                          }
                                        }
                                        color="default"
                                        disableRipple={true}
                                        disabled={false}
                                        icon={
                                          <ForwardRef(WithStyles)
                                            className="HvRadioButton-icon"
                                          />
                                        }
                                        id="hv-list-6-item-1-selector-input"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        type="radio"
                                        value=""
                                      >
                                        <WithStyles(ForwardRef(IconButton))
                                          className="PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio"
                                          color="default"
                                          component="span"
                                          disableRipple={true}
                                          disabled={false}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <ForwardRef(IconButton)
                                            className="PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio"
                                            classes={
                                              Object {
                                                "colorInherit": "MuiIconButton-colorInherit",
                                                "colorPrimary": "MuiIconButton-colorPrimary",
                                                "colorSecondary": "MuiIconButton-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "edgeEnd": "MuiIconButton-edgeEnd",
                                                "edgeStart": "MuiIconButton-edgeStart",
                                                "label": "MuiIconButton-label",
                                                "root": "MuiIconButton-root",
                                                "sizeSmall": "MuiIconButton-sizeSmall",
                                              }
                                            }
                                            color="default"
                                            component="span"
                                            disableRipple={true}
                                            disabled={false}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              centerRipple={true}
                                              className="MuiIconButton-root PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio"
                                              component="span"
                                              disableRipple={true}
                                              disabled={false}
                                              focusRipple={true}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <ForwardRef(ButtonBase)
                                                centerRipple={true}
                                                className="MuiIconButton-root PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="span"
                                                disableRipple={true}
                                                disabled={false}
                                                focusRipple={true}
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                tabIndex={null}
                                              >
                                                <span
                                                  aria-disabled={false}
                                                  className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio"
                                                  onBlur={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  tabIndex={null}
                                                >
                                                  <span
                                                    className="MuiIconButton-label"
                                                  >
                                                    <input
                                                      checked={false}
                                                      className="PrivateSwitchBase-input-57"
                                                      disabled={false}
                                                      id="hv-list-6-item-1-selector-input"
                                                      onChange={[Function]}
                                                      type="radio"
                                                      value=""
                                                    />
                                                    <WithStyles(RadioButtonUnselected)
                                                      className="HvRadioButton-icon"
                                                    >
                                                      <RadioButtonUnselected
                                                        className="HvRadioButton-icon"
                                                        classes={
                                                          Object {
                                                            "root": "HvIconRadioButtonUnselected-root",
                                                            "rootL": "HvIconRadioButtonUnselected-rootL",
                                                            "rootM": "HvIconRadioButtonUnselected-rootM",
                                                            "rootS": "HvIconRadioButtonUnselected-rootS",
                                                            "rootXs": "HvIconRadioButtonUnselected-rootXs",
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="HvRadioButton-icon HvIconRadioButtonUnselected-root HvIconRadioButtonUnselected-rootS"
                                                        >
                                                          <svg
                                                            focusable={false}
                                                            height="16px"
                                                            viewBox="0 0 16 16"
                                                            width="16px"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              className="color0"
                                                              d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                                              fill="#FFFFFF"
                                                            />
                                                            <path
                                                              className="color1"
                                                              d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                                              fill="#414141"
                                                            />
                                                          </svg>
                                                        </div>
                                                      </RadioButtonUnselected>
                                                    </WithStyles(RadioButtonUnselected)>
                                                  </span>
                                                  <NoSsr />
                                                </span>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(IconButton)>
                                        </WithStyles(ForwardRef(IconButton))>
                                      </ForwardRef(SwitchBase)>
                                    </WithStyles(ForwardRef(SwitchBase))>
                                  </ForwardRef(Radio)>
                                </WithStyles(ForwardRef(Radio))>
                                <WithStyles(ForwardRef(Typography))
                                  className="MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate"
                                  component="span"
                                >
                                  <ForwardRef(Typography)
                                    className="MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                    component="span"
                                  >
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                                    >
                                      Value 2
                                    </span>
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                              </label>
                            </ForwardRef(FormControlLabel)>
                          </WithStyles(ForwardRef(FormControlLabel))>
                        </HvRadio>
                      </WithStyles(HvRadio)>
                    </li>
                  </ConditionalWrapper>
                </Focus>
              </WithStyles(Focus)>
              <WithStyles(Focus)
                configuration={
                  Object {
                    "tabIndex": -1,
                  }
                }
                disabled={false}
                focusDisabled={true}
                focusOnClick={false}
                key="2"
                rootRef={
                  Object {
                    "current": <div>
                      <ul
                        class="HvList-root"
                        id="hv-list-6"
                        role="listbox"
                      >
                        <li
                          aria-selected="true"
                          class="HvList-listItem HvList-selector Focus-root-36 Focus-selected-37 Focus-focusDisabled-39"
                          id="hv-list-6-item-0"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                            id="hv-list-6-item-0-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio PrivateSwitchBase-checked-55 Mui-checked"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  checked=""
                                  class="PrivateSwitchBase-input-57"
                                  id="hv-list-6-item-0-selector-input"
                                  tabindex="0"
                                  type="radio"
                                  value=""
                                />
                                <div
                                  class="HvRadioButton-icon HvIconRadioButtonSelected-root HvIconRadioButtonSelected-rootS"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M8 0a8 8 0 108 8 8 8 0 00-8-8z"
                                      fill="#414141"
                                    />
                                    <path
                                      class="color1"
                                      d="M8 12a4.013 4.013 0 01-4-4 4.013 4.013 0 014-4 4.013 4.013 0 014 4 4.013 4.013 0 01-4 4z"
                                      fill="#FFFFFF"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 1
                            </span>
                          </label>
                        </li>
                        <li
                          class="HvList-listItem HvList-selector Focus-root-36 Focus-focusDisabled-39"
                          id="hv-list-6-item-1"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                            id="hv-list-6-item-1-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  class="PrivateSwitchBase-input-57"
                                  id="hv-list-6-item-1-selector-input"
                                  tabindex="-1"
                                  type="radio"
                                  value=""
                                />
                                <div
                                  class="HvRadioButton-icon HvIconRadioButtonUnselected-root HvIconRadioButtonUnselected-rootS"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                      fill="#FFFFFF"
                                    />
                                    <path
                                      class="color1"
                                      d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                      fill="#414141"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 2
                            </span>
                          </label>
                        </li>
                        <li
                          class="HvList-listItem HvList-selector Focus-root-36 Focus-focusDisabled-39"
                          id="hv-list-6-item-2"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                            id="hv-list-6-item-2-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  class="PrivateSwitchBase-input-57"
                                  id="hv-list-6-item-2-selector-input"
                                  tabindex="-1"
                                  type="radio"
                                  value=""
                                />
                                <div
                                  class="HvRadioButton-icon HvIconRadioButtonUnselected-root HvIconRadioButtonUnselected-rootS"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                      fill="#FFFFFF"
                                    />
                                    <path
                                      class="color1"
                                      d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                      fill="#414141"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                            >
                              Value 3
                            </span>
                          </label>
                        </li>
                      </ul>
                    </div>,
                  }
                }
                selected={false}
                strategy="listbox"
                useArrows={true}
                useFalseFocus={false}
              >
                <Focus
                  classes={
                    Object {
                      "disabled": "Focus-disabled-38",
                      "externalReference": "Focus-externalReference-41",
                      "falseFocus": "Focus-falseFocus-42",
                      "focusDisabled": "Focus-focusDisabled-39",
                      "focused": "Focus-focused-40",
                      "root": "Focus-root-36",
                      "selected": "Focus-selected-37",
                    }
                  }
                  configuration={
                    Object {
                      "tabIndex": -1,
                    }
                  }
                  disabled={false}
                  focusDisabled={true}
                  focusOnClick={false}
                  rootRef={
                    Object {
                      "current": <div>
                        <ul
                          class="HvList-root"
                          id="hv-list-6"
                          role="listbox"
                        >
                          <li
                            aria-selected="true"
                            class="HvList-listItem HvList-selector Focus-root-36 Focus-selected-37 Focus-focusDisabled-39"
                            id="hv-list-6-item-0"
                            role="option"
                            tabindex="-1"
                          >
                            <label
                              class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                              id="hv-list-6-item-0-selector"
                            >
                              <span
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio PrivateSwitchBase-checked-55 Mui-checked"
                              >
                                <span
                                  class="MuiIconButton-label"
                                >
                                  <input
                                    checked=""
                                    class="PrivateSwitchBase-input-57"
                                    id="hv-list-6-item-0-selector-input"
                                    tabindex="0"
                                    type="radio"
                                    value=""
                                  />
                                  <div
                                    class="HvRadioButton-icon HvIconRadioButtonSelected-root HvIconRadioButtonSelected-rootS"
                                  >
                                    <svg
                                      focusable="false"
                                      height="16px"
                                      viewBox="0 0 16 16"
                                      width="16px"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        class="color0"
                                        d="M8 0a8 8 0 108 8 8 8 0 00-8-8z"
                                        fill="#414141"
                                      />
                                      <path
                                        class="color1"
                                        d="M8 12a4.013 4.013 0 01-4-4 4.013 4.013 0 014-4 4.013 4.013 0 014 4 4.013 4.013 0 01-4 4z"
                                        fill="#FFFFFF"
                                      />
                                    </svg>
                                  </div>
                                </span>
                              </span>
                              <span
                                class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                              >
                                Value 1
                              </span>
                            </label>
                          </li>
                          <li
                            class="HvList-listItem HvList-selector Focus-root-36 Focus-focusDisabled-39"
                            id="hv-list-6-item-1"
                            role="option"
                            tabindex="-1"
                          >
                            <label
                              class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                              id="hv-list-6-item-1-selector"
                            >
                              <span
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio"
                              >
                                <span
                                  class="MuiIconButton-label"
                                >
                                  <input
                                    class="PrivateSwitchBase-input-57"
                                    id="hv-list-6-item-1-selector-input"
                                    tabindex="-1"
                                    type="radio"
                                    value=""
                                  />
                                  <div
                                    class="HvRadioButton-icon HvIconRadioButtonUnselected-root HvIconRadioButtonUnselected-rootS"
                                  >
                                    <svg
                                      focusable="false"
                                      height="16px"
                                      viewBox="0 0 16 16"
                                      width="16px"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        class="color0"
                                        d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                        fill="#FFFFFF"
                                      />
                                      <path
                                        class="color1"
                                        d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                        fill="#414141"
                                      />
                                    </svg>
                                  </div>
                                </span>
                              </span>
                              <span
                                class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                              >
                                Value 2
                              </span>
                            </label>
                          </li>
                          <li
                            class="HvList-listItem HvList-selector Focus-root-36 Focus-focusDisabled-39"
                            id="hv-list-6-item-2"
                            role="option"
                            tabindex="-1"
                          >
                            <label
                              class="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                              id="hv-list-6-item-2-selector"
                            >
                              <span
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio"
                              >
                                <span
                                  class="MuiIconButton-label"
                                >
                                  <input
                                    class="PrivateSwitchBase-input-57"
                                    id="hv-list-6-item-2-selector-input"
                                    tabindex="-1"
                                    type="radio"
                                    value=""
                                  />
                                  <div
                                    class="HvRadioButton-icon HvIconRadioButtonUnselected-root HvIconRadioButtonUnselected-rootS"
                                  >
                                    <svg
                                      focusable="false"
                                      height="16px"
                                      viewBox="0 0 16 16"
                                      width="16px"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        class="color0"
                                        d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                        fill="#FFFFFF"
                                      />
                                      <path
                                        class="color1"
                                        d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                        fill="#414141"
                                      />
                                    </svg>
                                  </div>
                                </span>
                              </span>
                              <span
                                class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                              >
                                Value 3
                              </span>
                            </label>
                          </li>
                        </ul>
                      </div>,
                    }
                  }
                  selected={false}
                  strategy="listbox"
                  useArrows={true}
                  useFalseFocus={false}
                >
                  <ConditionalWrapper
                    condition={false}
                    wrapper={[Function]}
                  >
                    <li
                      className="HvList-listItem HvList-selector Focus-root-36 Focus-focusDisabled-39"
                      id="hv-list-6-item-2"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      role="option"
                      selected={false}
                    >
                      <WithStyles(HvRadio)
                        checked={false}
                        className=""
                        classes={
                          Object {
                            "container": "HvList-selectorContainer",
                            "labelTypography": "HvList-truncate",
                          }
                        }
                        disabled={false}
                        id="hv-list-6-item-2-selector"
                        label="Value 3"
                        labelPlacement="end"
                        onChange={[Function]}
                        value=""
                      >
                        <HvRadio
                          checked={false}
                          className=""
                          classes={
                            Object {
                              "container": "HvRadioButton-container HvList-selectorContainer",
                              "disableFocus": "HvRadioButton-disableFocus",
                              "icon": "HvRadioButton-icon",
                              "labelDisabled": "HvRadioButton-labelDisabled",
                              "labelEnd": "HvRadioButton-labelEnd",
                              "labelStart": "HvRadioButton-labelStart",
                              "labelTypography": "HvRadioButton-labelTypography HvList-truncate",
                              "radio": "HvRadioButton-radio",
                            }
                          }
                          disabled={false}
                          id="hv-list-6-item-2-selector"
                          label="Value 3"
                          labelPlacement="end"
                          onChange={[Function]}
                          value=""
                        >
                          <WithStyles(ForwardRef(FormControlLabel))
                            className="HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                            classes={
                              Object {
                                "disabled": "HvRadioButton-labelDisabled",
                                "label": "HvRadioButton-labelTypography HvList-truncate",
                              }
                            }
                            control={
                              <ForwardRef(WithStyles)
                                checked={false}
                                checkedIcon={
                                  <ForwardRef(WithStyles)
                                    className="HvRadioButton-icon"
                                  />
                                }
                                className="HvRadioButton-radio"
                                color="default"
                                disableRipple={true}
                                disabled={false}
                                icon={
                                  <ForwardRef(WithStyles)
                                    className="HvRadioButton-icon"
                                  />
                                }
                                id="hv-list-6-item-2-selector-input"
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              />
                            }
                            id="hv-list-6-item-2-selector"
                            label="Value 3"
                            labelPlacement="end"
                          >
                            <ForwardRef(FormControlLabel)
                              className="HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                              classes={
                                Object {
                                  "disabled": "Mui-disabled HvRadioButton-labelDisabled",
                                  "label": "MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate",
                                  "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                  "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                  "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                  "root": "MuiFormControlLabel-root",
                                }
                              }
                              control={
                                <ForwardRef(WithStyles)
                                  checked={false}
                                  checkedIcon={
                                    <ForwardRef(WithStyles)
                                      className="HvRadioButton-icon"
                                    />
                                  }
                                  className="HvRadioButton-radio"
                                  color="default"
                                  disableRipple={true}
                                  disabled={false}
                                  icon={
                                    <ForwardRef(WithStyles)
                                      className="HvRadioButton-icon"
                                    />
                                  }
                                  id="hv-list-6-item-2-selector-input"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  value=""
                                />
                              }
                              id="hv-list-6-item-2-selector"
                              label="Value 3"
                              labelPlacement="end"
                            >
                              <label
                                className="MuiFormControlLabel-root HvRadioButton-container HvList-selectorContainer HvRadioButton-labelEnd"
                                id="hv-list-6-item-2-selector"
                              >
                                <WithStyles(ForwardRef(Radio))
                                  checked={false}
                                  checkedIcon={
                                    <ForwardRef(WithStyles)
                                      className="HvRadioButton-icon"
                                    />
                                  }
                                  className="HvRadioButton-radio"
                                  color="default"
                                  disableRipple={true}
                                  disabled={false}
                                  icon={
                                    <ForwardRef(WithStyles)
                                      className="HvRadioButton-icon"
                                    />
                                  }
                                  id="hv-list-6-item-2-selector-input"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  value=""
                                >
                                  <ForwardRef(Radio)
                                    checked={false}
                                    checkedIcon={
                                      <ForwardRef(WithStyles)
                                        className="HvRadioButton-icon"
                                      />
                                    }
                                    className="HvRadioButton-radio"
                                    classes={
                                      Object {
                                        "checked": "Mui-checked",
                                        "colorPrimary": "MuiRadio-colorPrimary",
                                        "colorSecondary": "MuiRadio-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "root": "MuiRadio-root",
                                      }
                                    }
                                    color="default"
                                    disableRipple={true}
                                    disabled={false}
                                    icon={
                                      <ForwardRef(WithStyles)
                                        className="HvRadioButton-icon"
                                      />
                                    }
                                    id="hv-list-6-item-2-selector-input"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    value=""
                                  >
                                    <WithStyles(ForwardRef(SwitchBase))
                                      checked={false}
                                      checkedIcon={
                                        <ForwardRef(WithStyles)
                                          className="HvRadioButton-icon"
                                        />
                                      }
                                      className="HvRadioButton-radio"
                                      classes={
                                        Object {
                                          "checked": "Mui-checked",
                                          "disabled": "Mui-disabled",
                                          "root": "MuiRadio-root",
                                        }
                                      }
                                      color="default"
                                      disableRipple={true}
                                      disabled={false}
                                      icon={
                                        <ForwardRef(WithStyles)
                                          className="HvRadioButton-icon"
                                        />
                                      }
                                      id="hv-list-6-item-2-selector-input"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      type="radio"
                                      value=""
                                    >
                                      <ForwardRef(SwitchBase)
                                        checked={false}
                                        checkedIcon={
                                          <ForwardRef(WithStyles)
                                            className="HvRadioButton-icon"
                                          />
                                        }
                                        className="HvRadioButton-radio"
                                        classes={
                                          Object {
                                            "checked": "PrivateSwitchBase-checked-55 Mui-checked",
                                            "disabled": "PrivateSwitchBase-disabled-56 Mui-disabled",
                                            "input": "PrivateSwitchBase-input-57",
                                            "root": "PrivateSwitchBase-root-54 MuiRadio-root",
                                          }
                                        }
                                        color="default"
                                        disableRipple={true}
                                        disabled={false}
                                        icon={
                                          <ForwardRef(WithStyles)
                                            className="HvRadioButton-icon"
                                          />
                                        }
                                        id="hv-list-6-item-2-selector-input"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        type="radio"
                                        value=""
                                      >
                                        <WithStyles(ForwardRef(IconButton))
                                          className="PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio"
                                          color="default"
                                          component="span"
                                          disableRipple={true}
                                          disabled={false}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <ForwardRef(IconButton)
                                            className="PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio"
                                            classes={
                                              Object {
                                                "colorInherit": "MuiIconButton-colorInherit",
                                                "colorPrimary": "MuiIconButton-colorPrimary",
                                                "colorSecondary": "MuiIconButton-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "edgeEnd": "MuiIconButton-edgeEnd",
                                                "edgeStart": "MuiIconButton-edgeStart",
                                                "label": "MuiIconButton-label",
                                                "root": "MuiIconButton-root",
                                                "sizeSmall": "MuiIconButton-sizeSmall",
                                              }
                                            }
                                            color="default"
                                            component="span"
                                            disableRipple={true}
                                            disabled={false}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              centerRipple={true}
                                              className="MuiIconButton-root PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio"
                                              component="span"
                                              disableRipple={true}
                                              disabled={false}
                                              focusRipple={true}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <ForwardRef(ButtonBase)
                                                centerRipple={true}
                                                className="MuiIconButton-root PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="span"
                                                disableRipple={true}
                                                disabled={false}
                                                focusRipple={true}
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                tabIndex={null}
                                              >
                                                <span
                                                  aria-disabled={false}
                                                  className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-54 MuiRadio-root HvRadioButton-radio"
                                                  onBlur={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  tabIndex={null}
                                                >
                                                  <span
                                                    className="MuiIconButton-label"
                                                  >
                                                    <input
                                                      checked={false}
                                                      className="PrivateSwitchBase-input-57"
                                                      disabled={false}
                                                      id="hv-list-6-item-2-selector-input"
                                                      onChange={[Function]}
                                                      type="radio"
                                                      value=""
                                                    />
                                                    <WithStyles(RadioButtonUnselected)
                                                      className="HvRadioButton-icon"
                                                    >
                                                      <RadioButtonUnselected
                                                        className="HvRadioButton-icon"
                                                        classes={
                                                          Object {
                                                            "root": "HvIconRadioButtonUnselected-root",
                                                            "rootL": "HvIconRadioButtonUnselected-rootL",
                                                            "rootM": "HvIconRadioButtonUnselected-rootM",
                                                            "rootS": "HvIconRadioButtonUnselected-rootS",
                                                            "rootXs": "HvIconRadioButtonUnselected-rootXs",
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="HvRadioButton-icon HvIconRadioButtonUnselected-root HvIconRadioButtonUnselected-rootS"
                                                        >
                                                          <svg
                                                            focusable={false}
                                                            height="16px"
                                                            viewBox="0 0 16 16"
                                                            width="16px"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              className="color0"
                                                              d="M8 15.5a7.525 7.525 0 115.3-2.2A7.446 7.446 0 018 15.5z"
                                                              fill="#FFFFFF"
                                                            />
                                                            <path
                                                              className="color1"
                                                              d="M8 15a7.023 7.023 0 10-4.943-2.057A6.953 6.953 0 008 15m0 1a8 8 0 118-8 8 8 0 01-8 8z"
                                                              fill="#414141"
                                                            />
                                                          </svg>
                                                        </div>
                                                      </RadioButtonUnselected>
                                                    </WithStyles(RadioButtonUnselected)>
                                                  </span>
                                                  <NoSsr />
                                                </span>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(IconButton)>
                                        </WithStyles(ForwardRef(IconButton))>
                                      </ForwardRef(SwitchBase)>
                                    </WithStyles(ForwardRef(SwitchBase))>
                                  </ForwardRef(Radio)>
                                </WithStyles(ForwardRef(Radio))>
                                <WithStyles(ForwardRef(Typography))
                                  className="MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate"
                                  component="span"
                                >
                                  <ForwardRef(Typography)
                                    className="MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                    component="span"
                                  >
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography HvList-truncate MuiTypography-body1"
                                    >
                                      Value 3
                                    </span>
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                              </label>
                            </ForwardRef(FormControlLabel)>
                          </WithStyles(ForwardRef(FormControlLabel))>
                        </HvRadio>
                      </WithStyles(HvRadio)>
                    </li>
                  </ConditionalWrapper>
                </Focus>
              </WithStyles(Focus)>
            </ul>
          </div>
        </List>
      </WithStyles(List)>
    </ThemeProvider>
  </StylesProvider>
</HvProvider>
`;
