// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`User withStyles should handle click action correctly 1`] = `
<WithStyles(NavigationAnchors)
  onClick={[Function]}
  options={
    Array [
      Object {
        "label": "Option1",
        "value": "Value1",
      },
      Object {
        "label": "Option2",
        "value": "Value2",
      },
      Object {
        "label": "Option3",
        "value": "Value3",
      },
    ]
  }
>
  <NavigationAnchors
    classes={
      Object {
        "drawerPaper": "HvNavigationAnchors-drawerPaper",
        "drawerPaperPositionInherit": "HvNavigationAnchors-drawerPaperPositionInherit",
        "listDense": "HvNavigationAnchors-listDense",
        "listItemGutters": "HvNavigationAnchors-listItemGutters",
        "listItemRoot": "HvNavigationAnchors-listItemRoot",
        "listItemSelected": "HvNavigationAnchors-listItemSelected",
        "listItemTextDense": "HvNavigationAnchors-listItemTextDense",
        "listItemTextSelected": "HvNavigationAnchors-listItemTextSelected",
        "listRoot": "HvNavigationAnchors-listRoot",
      }
    }
    floating={true}
    href={true}
    onClick={[Function]}
    options={
      Array [
        Object {
          "label": "Option1",
          "value": "Value1",
        },
        Object {
          "label": "Option2",
          "value": "Value2",
        },
        Object {
          "label": "Option3",
          "value": "Value3",
        },
      ]
    }
    scrollElementId=""
    selectedIndex={0}
  >
    <WithStyles(ForwardRef(Drawer))
      anchor="left"
      className=""
      classes={
        Object {
          "paper": "HvNavigationAnchors-drawerPaper",
        }
      }
      open={true}
      variant="persistent"
    >
      <ForwardRef(Drawer)
        anchor="left"
        className=""
        classes={
          Object {
            "docked": "MuiDrawer-docked",
            "modal": "MuiDrawer-modal",
            "paper": "MuiDrawer-paper HvNavigationAnchors-drawerPaper",
            "paperAnchorBottom": "MuiDrawer-paperAnchorBottom",
            "paperAnchorDockedBottom": "MuiDrawer-paperAnchorDockedBottom",
            "paperAnchorDockedLeft": "MuiDrawer-paperAnchorDockedLeft",
            "paperAnchorDockedRight": "MuiDrawer-paperAnchorDockedRight",
            "paperAnchorDockedTop": "MuiDrawer-paperAnchorDockedTop",
            "paperAnchorLeft": "MuiDrawer-paperAnchorLeft",
            "paperAnchorRight": "MuiDrawer-paperAnchorRight",
            "paperAnchorTop": "MuiDrawer-paperAnchorTop",
            "root": "MuiDrawer-root",
          }
        }
        open={true}
        variant="persistent"
      >
        <div
          className="MuiDrawer-root MuiDrawer-docked"
        >
          <ForwardRef(Slide)
            appear={false}
            direction="right"
            in={true}
            timeout={
              Object {
                "enter": 225,
                "exit": 195,
              }
            }
          >
            <Transition
              appear={false}
              enter={true}
              exit={true}
              in={true}
              mountOnEnter={false}
              nodeRef={
                Object {
                  "current": <div
                    class="MuiPaper-root MuiDrawer-paper HvNavigationAnchors-drawerPaper MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft MuiPaper-elevation0"
                  >
                    <ul
                      class="MuiList-root HvNavigationAnchors-listRoot MuiList-dense HvNavigationAnchors-listDense MuiList-padding"
                    >
                      <div
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiListItem-root HvNavigationAnchors-listItemRoot MuiListItem-dense MuiListItem-gutters HvNavigationAnchors-listItemGutters MuiListItem-button Mui-selected HvNavigationAnchors-listItemSelected"
                        role="button"
                        tabindex="0"
                      >
                        <div
                          class="MuiListItemText-root MuiListItemText-dense HvNavigationAnchors-listItemTextDense"
                        >
                          <span
                            class="MuiTypography-root MuiListItemText-primary HvNavigationAnchors-listItemTextSelected MuiTypography-body2 MuiTypography-displayBlock"
                          >
                            Option1
                          </span>
                        </div>
                      </div>
                      <div
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiListItem-root HvNavigationAnchors-listItemRoot MuiListItem-dense MuiListItem-gutters HvNavigationAnchors-listItemGutters MuiListItem-button"
                        role="button"
                        tabindex="0"
                      >
                        <div
                          class="MuiListItemText-root MuiListItemText-dense HvNavigationAnchors-listItemTextDense"
                        >
                          <span
                            class="MuiTypography-root MuiListItemText-primary MuiTypography-body2 MuiTypography-displayBlock"
                          >
                            Option2
                          </span>
                        </div>
                      </div>
                      <div
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiListItem-root HvNavigationAnchors-listItemRoot MuiListItem-dense MuiListItem-gutters HvNavigationAnchors-listItemGutters MuiListItem-button"
                        role="button"
                        tabindex="0"
                      >
                        <div
                          class="MuiListItemText-root MuiListItemText-dense HvNavigationAnchors-listItemTextDense"
                        >
                          <span
                            class="MuiTypography-root MuiListItemText-primary MuiTypography-body2 MuiTypography-displayBlock"
                          >
                            Option3
                          </span>
                        </div>
                      </div>
                    </ul>
                  </div>,
                }
              }
              onEnter={[Function]}
              onEntered={[Function]}
              onEntering={[Function]}
              onExit={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
              timeout={
                Object {
                  "enter": 225,
                  "exit": 195,
                }
              }
              unmountOnExit={false}
            >
              <WithStyles(ForwardRef(Paper))
                className="MuiDrawer-paper HvNavigationAnchors-drawerPaper MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft"
                elevation={0}
                square={true}
                style={
                  Object {
                    "visibility": undefined,
                  }
                }
              >
                <ForwardRef(Paper)
                  className="MuiDrawer-paper HvNavigationAnchors-drawerPaper MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft"
                  classes={
                    Object {
                      "elevation0": "MuiPaper-elevation0",
                      "elevation1": "MuiPaper-elevation1",
                      "elevation10": "MuiPaper-elevation10",
                      "elevation11": "MuiPaper-elevation11",
                      "elevation12": "MuiPaper-elevation12",
                      "elevation13": "MuiPaper-elevation13",
                      "elevation14": "MuiPaper-elevation14",
                      "elevation15": "MuiPaper-elevation15",
                      "elevation16": "MuiPaper-elevation16",
                      "elevation17": "MuiPaper-elevation17",
                      "elevation18": "MuiPaper-elevation18",
                      "elevation19": "MuiPaper-elevation19",
                      "elevation2": "MuiPaper-elevation2",
                      "elevation20": "MuiPaper-elevation20",
                      "elevation21": "MuiPaper-elevation21",
                      "elevation22": "MuiPaper-elevation22",
                      "elevation23": "MuiPaper-elevation23",
                      "elevation24": "MuiPaper-elevation24",
                      "elevation3": "MuiPaper-elevation3",
                      "elevation4": "MuiPaper-elevation4",
                      "elevation5": "MuiPaper-elevation5",
                      "elevation6": "MuiPaper-elevation6",
                      "elevation7": "MuiPaper-elevation7",
                      "elevation8": "MuiPaper-elevation8",
                      "elevation9": "MuiPaper-elevation9",
                      "outlined": "MuiPaper-outlined",
                      "root": "MuiPaper-root",
                      "rounded": "MuiPaper-rounded",
                    }
                  }
                  elevation={0}
                  square={true}
                  style={
                    Object {
                      "visibility": undefined,
                    }
                  }
                >
                  <div
                    className="MuiPaper-root MuiDrawer-paper HvNavigationAnchors-drawerPaper MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft MuiPaper-elevation0"
                    style={
                      Object {
                        "visibility": undefined,
                      }
                    }
                  >
                    <WithStyles(ForwardRef(List))
                      classes={
                        Object {
                          "dense": "HvNavigationAnchors-listDense",
                          "root": "HvNavigationAnchors-listRoot",
                        }
                      }
                      dense={true}
                    >
                      <ForwardRef(List)
                        classes={
                          Object {
                            "dense": "MuiList-dense HvNavigationAnchors-listDense",
                            "padding": "MuiList-padding",
                            "root": "MuiList-root HvNavigationAnchors-listRoot",
                            "subheader": "MuiList-subheader",
                          }
                        }
                        dense={true}
                      >
                        <ul
                          className="MuiList-root HvNavigationAnchors-listRoot MuiList-dense HvNavigationAnchors-listDense MuiList-padding"
                        >
                          <WithStyles(ForwardRef(ListItem))
                            button={true}
                            classes={
                              Object {
                                "gutters": "HvNavigationAnchors-listItemGutters",
                                "root": "HvNavigationAnchors-listItemRoot",
                                "selected": "HvNavigationAnchors-listItemSelected",
                              }
                            }
                            key="Option1"
                            onClick={[Function]}
                            selected={true}
                          >
                            <ForwardRef(ListItem)
                              button={true}
                              classes={
                                Object {
                                  "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                  "button": "MuiListItem-button",
                                  "container": "MuiListItem-container",
                                  "dense": "MuiListItem-dense",
                                  "disabled": "Mui-disabled",
                                  "divider": "MuiListItem-divider",
                                  "focusVisible": "Mui-focusVisible",
                                  "gutters": "MuiListItem-gutters HvNavigationAnchors-listItemGutters",
                                  "root": "MuiListItem-root HvNavigationAnchors-listItemRoot",
                                  "secondaryAction": "MuiListItem-secondaryAction",
                                  "selected": "Mui-selected HvNavigationAnchors-listItemSelected",
                                }
                              }
                              onClick={[Function]}
                              selected={true}
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                className="MuiListItem-root HvNavigationAnchors-listItemRoot MuiListItem-dense MuiListItem-gutters HvNavigationAnchors-listItemGutters MuiListItem-button Mui-selected HvNavigationAnchors-listItemSelected"
                                component="div"
                                disabled={false}
                                focusVisibleClassName="Mui-focusVisible"
                                onClick={[Function]}
                              >
                                <ForwardRef(ButtonBase)
                                  className="MuiListItem-root HvNavigationAnchors-listItemRoot MuiListItem-dense MuiListItem-gutters HvNavigationAnchors-listItemGutters MuiListItem-button Mui-selected HvNavigationAnchors-listItemSelected"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="div"
                                  disableRipple={true}
                                  disabled={false}
                                  focusVisibleClassName="Mui-focusVisible"
                                  onClick={[Function]}
                                >
                                  <div
                                    aria-disabled={false}
                                    className="MuiButtonBase-root MuiListItem-root HvNavigationAnchors-listItemRoot MuiListItem-dense MuiListItem-gutters HvNavigationAnchors-listItemGutters MuiListItem-button Mui-selected HvNavigationAnchors-listItemSelected"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    <WithStyles(ForwardRef(ListItemText))
                                      classes={
                                        Object {
                                          "dense": "HvNavigationAnchors-listItemTextDense",
                                          "primary": "HvNavigationAnchors-listItemTextSelected",
                                        }
                                      }
                                      key=".0"
                                      primary="Option1"
                                    >
                                      <ForwardRef(ListItemText)
                                        classes={
                                          Object {
                                            "dense": "MuiListItemText-dense HvNavigationAnchors-listItemTextDense",
                                            "inset": "MuiListItemText-inset",
                                            "multiline": "MuiListItemText-multiline",
                                            "primary": "MuiListItemText-primary HvNavigationAnchors-listItemTextSelected",
                                            "root": "MuiListItemText-root",
                                            "secondary": "MuiListItemText-secondary",
                                          }
                                        }
                                        primary="Option1"
                                      >
                                        <div
                                          className="MuiListItemText-root MuiListItemText-dense HvNavigationAnchors-listItemTextDense"
                                        >
                                          <WithStyles(ForwardRef(Typography))
                                            className="MuiListItemText-primary HvNavigationAnchors-listItemTextSelected"
                                            component="span"
                                            display="block"
                                            variant="body2"
                                          >
                                            <ForwardRef(Typography)
                                              className="MuiListItemText-primary HvNavigationAnchors-listItemTextSelected"
                                              classes={
                                                Object {
                                                  "alignCenter": "MuiTypography-alignCenter",
                                                  "alignJustify": "MuiTypography-alignJustify",
                                                  "alignLeft": "MuiTypography-alignLeft",
                                                  "alignRight": "MuiTypography-alignRight",
                                                  "body1": "MuiTypography-body1",
                                                  "body2": "MuiTypography-body2",
                                                  "button": "MuiTypography-button",
                                                  "caption": "MuiTypography-caption",
                                                  "colorError": "MuiTypography-colorError",
                                                  "colorInherit": "MuiTypography-colorInherit",
                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                  "displayBlock": "MuiTypography-displayBlock",
                                                  "displayInline": "MuiTypography-displayInline",
                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                  "h1": "MuiTypography-h1",
                                                  "h2": "MuiTypography-h2",
                                                  "h3": "MuiTypography-h3",
                                                  "h4": "MuiTypography-h4",
                                                  "h5": "MuiTypography-h5",
                                                  "h6": "MuiTypography-h6",
                                                  "noWrap": "MuiTypography-noWrap",
                                                  "overline": "MuiTypography-overline",
                                                  "paragraph": "MuiTypography-paragraph",
                                                  "root": "MuiTypography-root",
                                                  "srOnly": "MuiTypography-srOnly",
                                                  "subtitle1": "MuiTypography-subtitle1",
                                                  "subtitle2": "MuiTypography-subtitle2",
                                                }
                                              }
                                              component="span"
                                              display="block"
                                              variant="body2"
                                            >
                                              <span
                                                className="MuiTypography-root MuiListItemText-primary HvNavigationAnchors-listItemTextSelected MuiTypography-body2 MuiTypography-displayBlock"
                                              >
                                                Option1
                                              </span>
                                            </ForwardRef(Typography)>
                                          </WithStyles(ForwardRef(Typography))>
                                        </div>
                                      </ForwardRef(ListItemText)>
                                    </WithStyles(ForwardRef(ListItemText))>
                                  </div>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(ListItem)>
                          </WithStyles(ForwardRef(ListItem))>
                          <WithStyles(ForwardRef(ListItem))
                            button={true}
                            classes={
                              Object {
                                "gutters": "HvNavigationAnchors-listItemGutters",
                                "root": "HvNavigationAnchors-listItemRoot",
                                "selected": "HvNavigationAnchors-listItemSelected",
                              }
                            }
                            key="Option2"
                            onClick={[Function]}
                            selected={false}
                          >
                            <ForwardRef(ListItem)
                              button={true}
                              classes={
                                Object {
                                  "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                  "button": "MuiListItem-button",
                                  "container": "MuiListItem-container",
                                  "dense": "MuiListItem-dense",
                                  "disabled": "Mui-disabled",
                                  "divider": "MuiListItem-divider",
                                  "focusVisible": "Mui-focusVisible",
                                  "gutters": "MuiListItem-gutters HvNavigationAnchors-listItemGutters",
                                  "root": "MuiListItem-root HvNavigationAnchors-listItemRoot",
                                  "secondaryAction": "MuiListItem-secondaryAction",
                                  "selected": "Mui-selected HvNavigationAnchors-listItemSelected",
                                }
                              }
                              onClick={[Function]}
                              selected={false}
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                className="MuiListItem-root HvNavigationAnchors-listItemRoot MuiListItem-dense MuiListItem-gutters HvNavigationAnchors-listItemGutters MuiListItem-button"
                                component="div"
                                disabled={false}
                                focusVisibleClassName="Mui-focusVisible"
                                onClick={[Function]}
                              >
                                <ForwardRef(ButtonBase)
                                  className="MuiListItem-root HvNavigationAnchors-listItemRoot MuiListItem-dense MuiListItem-gutters HvNavigationAnchors-listItemGutters MuiListItem-button"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="div"
                                  disableRipple={true}
                                  disabled={false}
                                  focusVisibleClassName="Mui-focusVisible"
                                  onClick={[Function]}
                                >
                                  <div
                                    aria-disabled={false}
                                    className="MuiButtonBase-root MuiListItem-root HvNavigationAnchors-listItemRoot MuiListItem-dense MuiListItem-gutters HvNavigationAnchors-listItemGutters MuiListItem-button"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    <WithStyles(ForwardRef(ListItemText))
                                      classes={
                                        Object {
                                          "dense": "HvNavigationAnchors-listItemTextDense",
                                          "primary": "",
                                        }
                                      }
                                      key=".0"
                                      primary="Option2"
                                    >
                                      <ForwardRef(ListItemText)
                                        classes={
                                          Object {
                                            "dense": "MuiListItemText-dense HvNavigationAnchors-listItemTextDense",
                                            "inset": "MuiListItemText-inset",
                                            "multiline": "MuiListItemText-multiline",
                                            "primary": "MuiListItemText-primary",
                                            "root": "MuiListItemText-root",
                                            "secondary": "MuiListItemText-secondary",
                                          }
                                        }
                                        primary="Option2"
                                      >
                                        <div
                                          className="MuiListItemText-root MuiListItemText-dense HvNavigationAnchors-listItemTextDense"
                                        >
                                          <WithStyles(ForwardRef(Typography))
                                            className="MuiListItemText-primary"
                                            component="span"
                                            display="block"
                                            variant="body2"
                                          >
                                            <ForwardRef(Typography)
                                              className="MuiListItemText-primary"
                                              classes={
                                                Object {
                                                  "alignCenter": "MuiTypography-alignCenter",
                                                  "alignJustify": "MuiTypography-alignJustify",
                                                  "alignLeft": "MuiTypography-alignLeft",
                                                  "alignRight": "MuiTypography-alignRight",
                                                  "body1": "MuiTypography-body1",
                                                  "body2": "MuiTypography-body2",
                                                  "button": "MuiTypography-button",
                                                  "caption": "MuiTypography-caption",
                                                  "colorError": "MuiTypography-colorError",
                                                  "colorInherit": "MuiTypography-colorInherit",
                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                  "displayBlock": "MuiTypography-displayBlock",
                                                  "displayInline": "MuiTypography-displayInline",
                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                  "h1": "MuiTypography-h1",
                                                  "h2": "MuiTypography-h2",
                                                  "h3": "MuiTypography-h3",
                                                  "h4": "MuiTypography-h4",
                                                  "h5": "MuiTypography-h5",
                                                  "h6": "MuiTypography-h6",
                                                  "noWrap": "MuiTypography-noWrap",
                                                  "overline": "MuiTypography-overline",
                                                  "paragraph": "MuiTypography-paragraph",
                                                  "root": "MuiTypography-root",
                                                  "srOnly": "MuiTypography-srOnly",
                                                  "subtitle1": "MuiTypography-subtitle1",
                                                  "subtitle2": "MuiTypography-subtitle2",
                                                }
                                              }
                                              component="span"
                                              display="block"
                                              variant="body2"
                                            >
                                              <span
                                                className="MuiTypography-root MuiListItemText-primary MuiTypography-body2 MuiTypography-displayBlock"
                                              >
                                                Option2
                                              </span>
                                            </ForwardRef(Typography)>
                                          </WithStyles(ForwardRef(Typography))>
                                        </div>
                                      </ForwardRef(ListItemText)>
                                    </WithStyles(ForwardRef(ListItemText))>
                                  </div>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(ListItem)>
                          </WithStyles(ForwardRef(ListItem))>
                          <WithStyles(ForwardRef(ListItem))
                            button={true}
                            classes={
                              Object {
                                "gutters": "HvNavigationAnchors-listItemGutters",
                                "root": "HvNavigationAnchors-listItemRoot",
                                "selected": "HvNavigationAnchors-listItemSelected",
                              }
                            }
                            key="Option3"
                            onClick={[Function]}
                            selected={false}
                          >
                            <ForwardRef(ListItem)
                              button={true}
                              classes={
                                Object {
                                  "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                  "button": "MuiListItem-button",
                                  "container": "MuiListItem-container",
                                  "dense": "MuiListItem-dense",
                                  "disabled": "Mui-disabled",
                                  "divider": "MuiListItem-divider",
                                  "focusVisible": "Mui-focusVisible",
                                  "gutters": "MuiListItem-gutters HvNavigationAnchors-listItemGutters",
                                  "root": "MuiListItem-root HvNavigationAnchors-listItemRoot",
                                  "secondaryAction": "MuiListItem-secondaryAction",
                                  "selected": "Mui-selected HvNavigationAnchors-listItemSelected",
                                }
                              }
                              onClick={[Function]}
                              selected={false}
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                className="MuiListItem-root HvNavigationAnchors-listItemRoot MuiListItem-dense MuiListItem-gutters HvNavigationAnchors-listItemGutters MuiListItem-button"
                                component="div"
                                disabled={false}
                                focusVisibleClassName="Mui-focusVisible"
                                onClick={[Function]}
                              >
                                <ForwardRef(ButtonBase)
                                  className="MuiListItem-root HvNavigationAnchors-listItemRoot MuiListItem-dense MuiListItem-gutters HvNavigationAnchors-listItemGutters MuiListItem-button"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="div"
                                  disableRipple={true}
                                  disabled={false}
                                  focusVisibleClassName="Mui-focusVisible"
                                  onClick={[Function]}
                                >
                                  <div
                                    aria-disabled={false}
                                    className="MuiButtonBase-root MuiListItem-root HvNavigationAnchors-listItemRoot MuiListItem-dense MuiListItem-gutters HvNavigationAnchors-listItemGutters MuiListItem-button"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    <WithStyles(ForwardRef(ListItemText))
                                      classes={
                                        Object {
                                          "dense": "HvNavigationAnchors-listItemTextDense",
                                          "primary": "",
                                        }
                                      }
                                      key=".0"
                                      primary="Option3"
                                    >
                                      <ForwardRef(ListItemText)
                                        classes={
                                          Object {
                                            "dense": "MuiListItemText-dense HvNavigationAnchors-listItemTextDense",
                                            "inset": "MuiListItemText-inset",
                                            "multiline": "MuiListItemText-multiline",
                                            "primary": "MuiListItemText-primary",
                                            "root": "MuiListItemText-root",
                                            "secondary": "MuiListItemText-secondary",
                                          }
                                        }
                                        primary="Option3"
                                      >
                                        <div
                                          className="MuiListItemText-root MuiListItemText-dense HvNavigationAnchors-listItemTextDense"
                                        >
                                          <WithStyles(ForwardRef(Typography))
                                            className="MuiListItemText-primary"
                                            component="span"
                                            display="block"
                                            variant="body2"
                                          >
                                            <ForwardRef(Typography)
                                              className="MuiListItemText-primary"
                                              classes={
                                                Object {
                                                  "alignCenter": "MuiTypography-alignCenter",
                                                  "alignJustify": "MuiTypography-alignJustify",
                                                  "alignLeft": "MuiTypography-alignLeft",
                                                  "alignRight": "MuiTypography-alignRight",
                                                  "body1": "MuiTypography-body1",
                                                  "body2": "MuiTypography-body2",
                                                  "button": "MuiTypography-button",
                                                  "caption": "MuiTypography-caption",
                                                  "colorError": "MuiTypography-colorError",
                                                  "colorInherit": "MuiTypography-colorInherit",
                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                  "displayBlock": "MuiTypography-displayBlock",
                                                  "displayInline": "MuiTypography-displayInline",
                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                  "h1": "MuiTypography-h1",
                                                  "h2": "MuiTypography-h2",
                                                  "h3": "MuiTypography-h3",
                                                  "h4": "MuiTypography-h4",
                                                  "h5": "MuiTypography-h5",
                                                  "h6": "MuiTypography-h6",
                                                  "noWrap": "MuiTypography-noWrap",
                                                  "overline": "MuiTypography-overline",
                                                  "paragraph": "MuiTypography-paragraph",
                                                  "root": "MuiTypography-root",
                                                  "srOnly": "MuiTypography-srOnly",
                                                  "subtitle1": "MuiTypography-subtitle1",
                                                  "subtitle2": "MuiTypography-subtitle2",
                                                }
                                              }
                                              component="span"
                                              display="block"
                                              variant="body2"
                                            >
                                              <span
                                                className="MuiTypography-root MuiListItemText-primary MuiTypography-body2 MuiTypography-displayBlock"
                                              >
                                                Option3
                                              </span>
                                            </ForwardRef(Typography)>
                                          </WithStyles(ForwardRef(Typography))>
                                        </div>
                                      </ForwardRef(ListItemText)>
                                    </WithStyles(ForwardRef(ListItemText))>
                                  </div>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(ListItem)>
                          </WithStyles(ForwardRef(ListItem))>
                        </ul>
                      </ForwardRef(List)>
                    </WithStyles(ForwardRef(List))>
                  </div>
                </ForwardRef(Paper)>
              </WithStyles(ForwardRef(Paper))>
            </Transition>
          </ForwardRef(Slide)>
        </div>
      </ForwardRef(Drawer)>
    </WithStyles(ForwardRef(Drawer))>
  </NavigationAnchors>
</WithStyles(NavigationAnchors)>
`;

exports[`User withStyles should render correctly 1`] = `
<WithStyles(NavigationAnchors)
  options={
    Array [
      Object {
        "label": "Option1",
        "value": "Value1",
      },
      Object {
        "label": "Option2",
        "value": "Value2",
      },
      Object {
        "label": "Option3",
        "value": "Value3",
      },
    ]
  }
/>
`;

exports[`User withStyles should render correctly with props 1`] = `
<WithStyles(NavigationAnchors)
  options={
    Array [
      Object {
        "label": "Option1",
        "value": "Value1",
      },
      Object {
        "label": "Option2",
        "value": "Value2",
      },
      Object {
        "label": "Option3",
        "value": "Value3",
      },
    ]
  }
>
  <NavigationAnchors
    classes={
      Object {
        "drawerPaper": "HvNavigationAnchors-drawerPaper",
        "drawerPaperPositionInherit": "HvNavigationAnchors-drawerPaperPositionInherit",
        "listDense": "HvNavigationAnchors-listDense",
        "listItemGutters": "HvNavigationAnchors-listItemGutters",
        "listItemRoot": "HvNavigationAnchors-listItemRoot",
        "listItemSelected": "HvNavigationAnchors-listItemSelected",
        "listItemTextDense": "HvNavigationAnchors-listItemTextDense",
        "listItemTextSelected": "HvNavigationAnchors-listItemTextSelected",
        "listRoot": "HvNavigationAnchors-listRoot",
      }
    }
    floating={true}
    href={true}
    options={
      Array [
        Object {
          "label": "Option1",
          "value": "Value1",
        },
        Object {
          "label": "Option2",
          "value": "Value2",
        },
        Object {
          "label": "Option3",
          "value": "Value3",
        },
      ]
    }
    scrollElementId=""
    selectedIndex={0}
  >
    <WithStyles(ForwardRef(Drawer))
      anchor="left"
      className=""
      classes={
        Object {
          "paper": "HvNavigationAnchors-drawerPaper",
        }
      }
      open={true}
      variant="persistent"
    >
      <ForwardRef(Drawer)
        anchor="left"
        className=""
        classes={
          Object {
            "docked": "MuiDrawer-docked",
            "modal": "MuiDrawer-modal",
            "paper": "MuiDrawer-paper HvNavigationAnchors-drawerPaper",
            "paperAnchorBottom": "MuiDrawer-paperAnchorBottom",
            "paperAnchorDockedBottom": "MuiDrawer-paperAnchorDockedBottom",
            "paperAnchorDockedLeft": "MuiDrawer-paperAnchorDockedLeft",
            "paperAnchorDockedRight": "MuiDrawer-paperAnchorDockedRight",
            "paperAnchorDockedTop": "MuiDrawer-paperAnchorDockedTop",
            "paperAnchorLeft": "MuiDrawer-paperAnchorLeft",
            "paperAnchorRight": "MuiDrawer-paperAnchorRight",
            "paperAnchorTop": "MuiDrawer-paperAnchorTop",
            "root": "MuiDrawer-root",
          }
        }
        open={true}
        variant="persistent"
      >
        <div
          className="MuiDrawer-root MuiDrawer-docked"
        >
          <ForwardRef(Slide)
            appear={false}
            direction="right"
            in={true}
            timeout={
              Object {
                "enter": 225,
                "exit": 195,
              }
            }
          >
            <Transition
              appear={false}
              enter={true}
              exit={true}
              in={true}
              mountOnEnter={false}
              nodeRef={
                Object {
                  "current": <div
                    class="MuiPaper-root MuiDrawer-paper HvNavigationAnchors-drawerPaper MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft MuiPaper-elevation0"
                  >
                    <ul
                      class="MuiList-root HvNavigationAnchors-listRoot MuiList-dense HvNavigationAnchors-listDense MuiList-padding"
                    >
                      <div
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiListItem-root HvNavigationAnchors-listItemRoot MuiListItem-dense MuiListItem-gutters HvNavigationAnchors-listItemGutters MuiListItem-button Mui-selected HvNavigationAnchors-listItemSelected"
                        role="button"
                        tabindex="0"
                      >
                        <div
                          class="MuiListItemText-root MuiListItemText-dense HvNavigationAnchors-listItemTextDense"
                        >
                          <span
                            class="MuiTypography-root MuiListItemText-primary HvNavigationAnchors-listItemTextSelected MuiTypography-body2 MuiTypography-displayBlock"
                          >
                            Option1
                          </span>
                        </div>
                      </div>
                      <div
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiListItem-root HvNavigationAnchors-listItemRoot MuiListItem-dense MuiListItem-gutters HvNavigationAnchors-listItemGutters MuiListItem-button"
                        role="button"
                        tabindex="0"
                      >
                        <div
                          class="MuiListItemText-root MuiListItemText-dense HvNavigationAnchors-listItemTextDense"
                        >
                          <span
                            class="MuiTypography-root MuiListItemText-primary MuiTypography-body2 MuiTypography-displayBlock"
                          >
                            Option2
                          </span>
                        </div>
                      </div>
                      <div
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiListItem-root HvNavigationAnchors-listItemRoot MuiListItem-dense MuiListItem-gutters HvNavigationAnchors-listItemGutters MuiListItem-button"
                        role="button"
                        tabindex="0"
                      >
                        <div
                          class="MuiListItemText-root MuiListItemText-dense HvNavigationAnchors-listItemTextDense"
                        >
                          <span
                            class="MuiTypography-root MuiListItemText-primary MuiTypography-body2 MuiTypography-displayBlock"
                          >
                            Option3
                          </span>
                        </div>
                      </div>
                    </ul>
                  </div>,
                }
              }
              onEnter={[Function]}
              onEntered={[Function]}
              onEntering={[Function]}
              onExit={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
              timeout={
                Object {
                  "enter": 225,
                  "exit": 195,
                }
              }
              unmountOnExit={false}
            >
              <WithStyles(ForwardRef(Paper))
                className="MuiDrawer-paper HvNavigationAnchors-drawerPaper MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft"
                elevation={0}
                square={true}
                style={
                  Object {
                    "visibility": undefined,
                  }
                }
              >
                <ForwardRef(Paper)
                  className="MuiDrawer-paper HvNavigationAnchors-drawerPaper MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft"
                  classes={
                    Object {
                      "elevation0": "MuiPaper-elevation0",
                      "elevation1": "MuiPaper-elevation1",
                      "elevation10": "MuiPaper-elevation10",
                      "elevation11": "MuiPaper-elevation11",
                      "elevation12": "MuiPaper-elevation12",
                      "elevation13": "MuiPaper-elevation13",
                      "elevation14": "MuiPaper-elevation14",
                      "elevation15": "MuiPaper-elevation15",
                      "elevation16": "MuiPaper-elevation16",
                      "elevation17": "MuiPaper-elevation17",
                      "elevation18": "MuiPaper-elevation18",
                      "elevation19": "MuiPaper-elevation19",
                      "elevation2": "MuiPaper-elevation2",
                      "elevation20": "MuiPaper-elevation20",
                      "elevation21": "MuiPaper-elevation21",
                      "elevation22": "MuiPaper-elevation22",
                      "elevation23": "MuiPaper-elevation23",
                      "elevation24": "MuiPaper-elevation24",
                      "elevation3": "MuiPaper-elevation3",
                      "elevation4": "MuiPaper-elevation4",
                      "elevation5": "MuiPaper-elevation5",
                      "elevation6": "MuiPaper-elevation6",
                      "elevation7": "MuiPaper-elevation7",
                      "elevation8": "MuiPaper-elevation8",
                      "elevation9": "MuiPaper-elevation9",
                      "outlined": "MuiPaper-outlined",
                      "root": "MuiPaper-root",
                      "rounded": "MuiPaper-rounded",
                    }
                  }
                  elevation={0}
                  square={true}
                  style={
                    Object {
                      "visibility": undefined,
                    }
                  }
                >
                  <div
                    className="MuiPaper-root MuiDrawer-paper HvNavigationAnchors-drawerPaper MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft MuiPaper-elevation0"
                    style={
                      Object {
                        "visibility": undefined,
                      }
                    }
                  >
                    <WithStyles(ForwardRef(List))
                      classes={
                        Object {
                          "dense": "HvNavigationAnchors-listDense",
                          "root": "HvNavigationAnchors-listRoot",
                        }
                      }
                      dense={true}
                    >
                      <ForwardRef(List)
                        classes={
                          Object {
                            "dense": "MuiList-dense HvNavigationAnchors-listDense",
                            "padding": "MuiList-padding",
                            "root": "MuiList-root HvNavigationAnchors-listRoot",
                            "subheader": "MuiList-subheader",
                          }
                        }
                        dense={true}
                      >
                        <ul
                          className="MuiList-root HvNavigationAnchors-listRoot MuiList-dense HvNavigationAnchors-listDense MuiList-padding"
                        >
                          <WithStyles(ForwardRef(ListItem))
                            button={true}
                            classes={
                              Object {
                                "gutters": "HvNavigationAnchors-listItemGutters",
                                "root": "HvNavigationAnchors-listItemRoot",
                                "selected": "HvNavigationAnchors-listItemSelected",
                              }
                            }
                            key="Option1"
                            onClick={[Function]}
                            selected={true}
                          >
                            <ForwardRef(ListItem)
                              button={true}
                              classes={
                                Object {
                                  "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                  "button": "MuiListItem-button",
                                  "container": "MuiListItem-container",
                                  "dense": "MuiListItem-dense",
                                  "disabled": "Mui-disabled",
                                  "divider": "MuiListItem-divider",
                                  "focusVisible": "Mui-focusVisible",
                                  "gutters": "MuiListItem-gutters HvNavigationAnchors-listItemGutters",
                                  "root": "MuiListItem-root HvNavigationAnchors-listItemRoot",
                                  "secondaryAction": "MuiListItem-secondaryAction",
                                  "selected": "Mui-selected HvNavigationAnchors-listItemSelected",
                                }
                              }
                              onClick={[Function]}
                              selected={true}
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                className="MuiListItem-root HvNavigationAnchors-listItemRoot MuiListItem-dense MuiListItem-gutters HvNavigationAnchors-listItemGutters MuiListItem-button Mui-selected HvNavigationAnchors-listItemSelected"
                                component="div"
                                disabled={false}
                                focusVisibleClassName="Mui-focusVisible"
                                onClick={[Function]}
                              >
                                <ForwardRef(ButtonBase)
                                  className="MuiListItem-root HvNavigationAnchors-listItemRoot MuiListItem-dense MuiListItem-gutters HvNavigationAnchors-listItemGutters MuiListItem-button Mui-selected HvNavigationAnchors-listItemSelected"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="div"
                                  disableRipple={true}
                                  disabled={false}
                                  focusVisibleClassName="Mui-focusVisible"
                                  onClick={[Function]}
                                >
                                  <div
                                    aria-disabled={false}
                                    className="MuiButtonBase-root MuiListItem-root HvNavigationAnchors-listItemRoot MuiListItem-dense MuiListItem-gutters HvNavigationAnchors-listItemGutters MuiListItem-button Mui-selected HvNavigationAnchors-listItemSelected"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    <WithStyles(ForwardRef(ListItemText))
                                      classes={
                                        Object {
                                          "dense": "HvNavigationAnchors-listItemTextDense",
                                          "primary": "HvNavigationAnchors-listItemTextSelected",
                                        }
                                      }
                                      key=".0"
                                      primary="Option1"
                                    >
                                      <ForwardRef(ListItemText)
                                        classes={
                                          Object {
                                            "dense": "MuiListItemText-dense HvNavigationAnchors-listItemTextDense",
                                            "inset": "MuiListItemText-inset",
                                            "multiline": "MuiListItemText-multiline",
                                            "primary": "MuiListItemText-primary HvNavigationAnchors-listItemTextSelected",
                                            "root": "MuiListItemText-root",
                                            "secondary": "MuiListItemText-secondary",
                                          }
                                        }
                                        primary="Option1"
                                      >
                                        <div
                                          className="MuiListItemText-root MuiListItemText-dense HvNavigationAnchors-listItemTextDense"
                                        >
                                          <WithStyles(ForwardRef(Typography))
                                            className="MuiListItemText-primary HvNavigationAnchors-listItemTextSelected"
                                            component="span"
                                            display="block"
                                            variant="body2"
                                          >
                                            <ForwardRef(Typography)
                                              className="MuiListItemText-primary HvNavigationAnchors-listItemTextSelected"
                                              classes={
                                                Object {
                                                  "alignCenter": "MuiTypography-alignCenter",
                                                  "alignJustify": "MuiTypography-alignJustify",
                                                  "alignLeft": "MuiTypography-alignLeft",
                                                  "alignRight": "MuiTypography-alignRight",
                                                  "body1": "MuiTypography-body1",
                                                  "body2": "MuiTypography-body2",
                                                  "button": "MuiTypography-button",
                                                  "caption": "MuiTypography-caption",
                                                  "colorError": "MuiTypography-colorError",
                                                  "colorInherit": "MuiTypography-colorInherit",
                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                  "displayBlock": "MuiTypography-displayBlock",
                                                  "displayInline": "MuiTypography-displayInline",
                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                  "h1": "MuiTypography-h1",
                                                  "h2": "MuiTypography-h2",
                                                  "h3": "MuiTypography-h3",
                                                  "h4": "MuiTypography-h4",
                                                  "h5": "MuiTypography-h5",
                                                  "h6": "MuiTypography-h6",
                                                  "noWrap": "MuiTypography-noWrap",
                                                  "overline": "MuiTypography-overline",
                                                  "paragraph": "MuiTypography-paragraph",
                                                  "root": "MuiTypography-root",
                                                  "srOnly": "MuiTypography-srOnly",
                                                  "subtitle1": "MuiTypography-subtitle1",
                                                  "subtitle2": "MuiTypography-subtitle2",
                                                }
                                              }
                                              component="span"
                                              display="block"
                                              variant="body2"
                                            >
                                              <span
                                                className="MuiTypography-root MuiListItemText-primary HvNavigationAnchors-listItemTextSelected MuiTypography-body2 MuiTypography-displayBlock"
                                              >
                                                Option1
                                              </span>
                                            </ForwardRef(Typography)>
                                          </WithStyles(ForwardRef(Typography))>
                                        </div>
                                      </ForwardRef(ListItemText)>
                                    </WithStyles(ForwardRef(ListItemText))>
                                  </div>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(ListItem)>
                          </WithStyles(ForwardRef(ListItem))>
                          <WithStyles(ForwardRef(ListItem))
                            button={true}
                            classes={
                              Object {
                                "gutters": "HvNavigationAnchors-listItemGutters",
                                "root": "HvNavigationAnchors-listItemRoot",
                                "selected": "HvNavigationAnchors-listItemSelected",
                              }
                            }
                            key="Option2"
                            onClick={[Function]}
                            selected={false}
                          >
                            <ForwardRef(ListItem)
                              button={true}
                              classes={
                                Object {
                                  "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                  "button": "MuiListItem-button",
                                  "container": "MuiListItem-container",
                                  "dense": "MuiListItem-dense",
                                  "disabled": "Mui-disabled",
                                  "divider": "MuiListItem-divider",
                                  "focusVisible": "Mui-focusVisible",
                                  "gutters": "MuiListItem-gutters HvNavigationAnchors-listItemGutters",
                                  "root": "MuiListItem-root HvNavigationAnchors-listItemRoot",
                                  "secondaryAction": "MuiListItem-secondaryAction",
                                  "selected": "Mui-selected HvNavigationAnchors-listItemSelected",
                                }
                              }
                              onClick={[Function]}
                              selected={false}
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                className="MuiListItem-root HvNavigationAnchors-listItemRoot MuiListItem-dense MuiListItem-gutters HvNavigationAnchors-listItemGutters MuiListItem-button"
                                component="div"
                                disabled={false}
                                focusVisibleClassName="Mui-focusVisible"
                                onClick={[Function]}
                              >
                                <ForwardRef(ButtonBase)
                                  className="MuiListItem-root HvNavigationAnchors-listItemRoot MuiListItem-dense MuiListItem-gutters HvNavigationAnchors-listItemGutters MuiListItem-button"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="div"
                                  disableRipple={true}
                                  disabled={false}
                                  focusVisibleClassName="Mui-focusVisible"
                                  onClick={[Function]}
                                >
                                  <div
                                    aria-disabled={false}
                                    className="MuiButtonBase-root MuiListItem-root HvNavigationAnchors-listItemRoot MuiListItem-dense MuiListItem-gutters HvNavigationAnchors-listItemGutters MuiListItem-button"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    <WithStyles(ForwardRef(ListItemText))
                                      classes={
                                        Object {
                                          "dense": "HvNavigationAnchors-listItemTextDense",
                                          "primary": "",
                                        }
                                      }
                                      key=".0"
                                      primary="Option2"
                                    >
                                      <ForwardRef(ListItemText)
                                        classes={
                                          Object {
                                            "dense": "MuiListItemText-dense HvNavigationAnchors-listItemTextDense",
                                            "inset": "MuiListItemText-inset",
                                            "multiline": "MuiListItemText-multiline",
                                            "primary": "MuiListItemText-primary",
                                            "root": "MuiListItemText-root",
                                            "secondary": "MuiListItemText-secondary",
                                          }
                                        }
                                        primary="Option2"
                                      >
                                        <div
                                          className="MuiListItemText-root MuiListItemText-dense HvNavigationAnchors-listItemTextDense"
                                        >
                                          <WithStyles(ForwardRef(Typography))
                                            className="MuiListItemText-primary"
                                            component="span"
                                            display="block"
                                            variant="body2"
                                          >
                                            <ForwardRef(Typography)
                                              className="MuiListItemText-primary"
                                              classes={
                                                Object {
                                                  "alignCenter": "MuiTypography-alignCenter",
                                                  "alignJustify": "MuiTypography-alignJustify",
                                                  "alignLeft": "MuiTypography-alignLeft",
                                                  "alignRight": "MuiTypography-alignRight",
                                                  "body1": "MuiTypography-body1",
                                                  "body2": "MuiTypography-body2",
                                                  "button": "MuiTypography-button",
                                                  "caption": "MuiTypography-caption",
                                                  "colorError": "MuiTypography-colorError",
                                                  "colorInherit": "MuiTypography-colorInherit",
                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                  "displayBlock": "MuiTypography-displayBlock",
                                                  "displayInline": "MuiTypography-displayInline",
                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                  "h1": "MuiTypography-h1",
                                                  "h2": "MuiTypography-h2",
                                                  "h3": "MuiTypography-h3",
                                                  "h4": "MuiTypography-h4",
                                                  "h5": "MuiTypography-h5",
                                                  "h6": "MuiTypography-h6",
                                                  "noWrap": "MuiTypography-noWrap",
                                                  "overline": "MuiTypography-overline",
                                                  "paragraph": "MuiTypography-paragraph",
                                                  "root": "MuiTypography-root",
                                                  "srOnly": "MuiTypography-srOnly",
                                                  "subtitle1": "MuiTypography-subtitle1",
                                                  "subtitle2": "MuiTypography-subtitle2",
                                                }
                                              }
                                              component="span"
                                              display="block"
                                              variant="body2"
                                            >
                                              <span
                                                className="MuiTypography-root MuiListItemText-primary MuiTypography-body2 MuiTypography-displayBlock"
                                              >
                                                Option2
                                              </span>
                                            </ForwardRef(Typography)>
                                          </WithStyles(ForwardRef(Typography))>
                                        </div>
                                      </ForwardRef(ListItemText)>
                                    </WithStyles(ForwardRef(ListItemText))>
                                  </div>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(ListItem)>
                          </WithStyles(ForwardRef(ListItem))>
                          <WithStyles(ForwardRef(ListItem))
                            button={true}
                            classes={
                              Object {
                                "gutters": "HvNavigationAnchors-listItemGutters",
                                "root": "HvNavigationAnchors-listItemRoot",
                                "selected": "HvNavigationAnchors-listItemSelected",
                              }
                            }
                            key="Option3"
                            onClick={[Function]}
                            selected={false}
                          >
                            <ForwardRef(ListItem)
                              button={true}
                              classes={
                                Object {
                                  "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                  "button": "MuiListItem-button",
                                  "container": "MuiListItem-container",
                                  "dense": "MuiListItem-dense",
                                  "disabled": "Mui-disabled",
                                  "divider": "MuiListItem-divider",
                                  "focusVisible": "Mui-focusVisible",
                                  "gutters": "MuiListItem-gutters HvNavigationAnchors-listItemGutters",
                                  "root": "MuiListItem-root HvNavigationAnchors-listItemRoot",
                                  "secondaryAction": "MuiListItem-secondaryAction",
                                  "selected": "Mui-selected HvNavigationAnchors-listItemSelected",
                                }
                              }
                              onClick={[Function]}
                              selected={false}
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                className="MuiListItem-root HvNavigationAnchors-listItemRoot MuiListItem-dense MuiListItem-gutters HvNavigationAnchors-listItemGutters MuiListItem-button"
                                component="div"
                                disabled={false}
                                focusVisibleClassName="Mui-focusVisible"
                                onClick={[Function]}
                              >
                                <ForwardRef(ButtonBase)
                                  className="MuiListItem-root HvNavigationAnchors-listItemRoot MuiListItem-dense MuiListItem-gutters HvNavigationAnchors-listItemGutters MuiListItem-button"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="div"
                                  disableRipple={true}
                                  disabled={false}
                                  focusVisibleClassName="Mui-focusVisible"
                                  onClick={[Function]}
                                >
                                  <div
                                    aria-disabled={false}
                                    className="MuiButtonBase-root MuiListItem-root HvNavigationAnchors-listItemRoot MuiListItem-dense MuiListItem-gutters HvNavigationAnchors-listItemGutters MuiListItem-button"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    <WithStyles(ForwardRef(ListItemText))
                                      classes={
                                        Object {
                                          "dense": "HvNavigationAnchors-listItemTextDense",
                                          "primary": "",
                                        }
                                      }
                                      key=".0"
                                      primary="Option3"
                                    >
                                      <ForwardRef(ListItemText)
                                        classes={
                                          Object {
                                            "dense": "MuiListItemText-dense HvNavigationAnchors-listItemTextDense",
                                            "inset": "MuiListItemText-inset",
                                            "multiline": "MuiListItemText-multiline",
                                            "primary": "MuiListItemText-primary",
                                            "root": "MuiListItemText-root",
                                            "secondary": "MuiListItemText-secondary",
                                          }
                                        }
                                        primary="Option3"
                                      >
                                        <div
                                          className="MuiListItemText-root MuiListItemText-dense HvNavigationAnchors-listItemTextDense"
                                        >
                                          <WithStyles(ForwardRef(Typography))
                                            className="MuiListItemText-primary"
                                            component="span"
                                            display="block"
                                            variant="body2"
                                          >
                                            <ForwardRef(Typography)
                                              className="MuiListItemText-primary"
                                              classes={
                                                Object {
                                                  "alignCenter": "MuiTypography-alignCenter",
                                                  "alignJustify": "MuiTypography-alignJustify",
                                                  "alignLeft": "MuiTypography-alignLeft",
                                                  "alignRight": "MuiTypography-alignRight",
                                                  "body1": "MuiTypography-body1",
                                                  "body2": "MuiTypography-body2",
                                                  "button": "MuiTypography-button",
                                                  "caption": "MuiTypography-caption",
                                                  "colorError": "MuiTypography-colorError",
                                                  "colorInherit": "MuiTypography-colorInherit",
                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                  "displayBlock": "MuiTypography-displayBlock",
                                                  "displayInline": "MuiTypography-displayInline",
                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                  "h1": "MuiTypography-h1",
                                                  "h2": "MuiTypography-h2",
                                                  "h3": "MuiTypography-h3",
                                                  "h4": "MuiTypography-h4",
                                                  "h5": "MuiTypography-h5",
                                                  "h6": "MuiTypography-h6",
                                                  "noWrap": "MuiTypography-noWrap",
                                                  "overline": "MuiTypography-overline",
                                                  "paragraph": "MuiTypography-paragraph",
                                                  "root": "MuiTypography-root",
                                                  "srOnly": "MuiTypography-srOnly",
                                                  "subtitle1": "MuiTypography-subtitle1",
                                                  "subtitle2": "MuiTypography-subtitle2",
                                                }
                                              }
                                              component="span"
                                              display="block"
                                              variant="body2"
                                            >
                                              <span
                                                className="MuiTypography-root MuiListItemText-primary MuiTypography-body2 MuiTypography-displayBlock"
                                              >
                                                Option3
                                              </span>
                                            </ForwardRef(Typography)>
                                          </WithStyles(ForwardRef(Typography))>
                                        </div>
                                      </ForwardRef(ListItemText)>
                                    </WithStyles(ForwardRef(ListItemText))>
                                  </div>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(ListItem)>
                          </WithStyles(ForwardRef(ListItem))>
                        </ul>
                      </ForwardRef(List)>
                    </WithStyles(ForwardRef(List))>
                  </div>
                </ForwardRef(Paper)>
              </WithStyles(ForwardRef(Paper))>
            </Transition>
          </ForwardRef(Slide)>
        </div>
      </ForwardRef(Drawer)>
    </WithStyles(ForwardRef(Drawer))>
  </NavigationAnchors>
</WithStyles(NavigationAnchors)>
`;
