// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UnitTimePicker should render correctly 1`] = `
<WithStyles(UnitTimePicker)
  onChangeUnitTimeValue={[MockFunction]}
  unit="MINUTE"
  unitValue={30}
>
  <UnitTimePicker
    classes={
      Object {
        "inputBorderContainer": "HvTimePickerUnitTimePicker-inputBorderContainer",
        "inputContainer": "HvTimePickerUnitTimePicker-inputContainer",
        "subtractIcon": "HvTimePickerUnitTimePicker-subtractIcon",
        "unitTimeContainer": "HvTimePickerUnitTimePicker-unitTimeContainer",
        "unitTimeInput": "HvTimePickerUnitTimePicker-unitTimeInput",
        "unitTimeInputRoot": "HvTimePickerUnitTimePicker-unitTimeInputRoot",
      }
    }
    onChangeUnitTimeValue={[MockFunction]}
    unit="MINUTE"
    unitValue={30}
  >
    <div
      className="HvTimePickerUnitTimePicker-unitTimeContainer"
    >
      <DropUpXS
        onClick={[Function]}
      >
        <HvIconBase
          iconSize="XS"
          name="DropUpXS"
          onClick={[Function]}
        >
          <div
            className="HvIconBase-root HvIconBase-xs"
            name="DropUpXS"
            onClick={[Function]}
          >
            <svg
              focusable={false}
              height={12}
              viewBox="0 0 12 12"
              width={12}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                className="color0"
                d="M10.6 7.95l-.7.7L6 4.75l-3.9 3.9-.7-.7L6 3.35z"
                fill="#414141"
              />
            </svg>
          </div>
        </HvIconBase>
      </DropUpXS>
      <WithStyles(HvInput)
        classes={
          Object {
            "input": "HvTimePickerUnitTimePicker-unitTimeInput",
            "inputBorderContainer": "HvTimePickerUnitTimePicker-inputBorderContainer",
            "inputRoot": "HvTimePickerUnitTimePicker-unitTimeInputRoot",
            "root": "HvTimePickerUnitTimePicker-inputContainer",
          }
        }
        disableClear={true}
        inputProps={
          Object {
            "autoComplete": "off",
            "max": 59,
            "min": 0,
            "type": "number",
          }
        }
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        required={true}
        status="valid"
        value="30"
      >
        <HvInput
          classes={
            Object {
              "adornmentButton": "HvInput-adornmentButton",
              "adornmentsBox": "HvInput-adornmentsBox",
              "description": "HvInput-description",
              "error": "HvInput-error",
              "hasSuggestions": "HvInput-hasSuggestions",
              "icon": "HvInput-icon",
              "iconClear": "HvInput-iconClear",
              "input": "HvInput-input HvTimePickerUnitTimePicker-unitTimeInput",
              "inputBorderContainer": "HvInput-inputBorderContainer HvTimePickerUnitTimePicker-inputBorderContainer",
              "inputExtension": "HvInput-inputExtension",
              "inputRoot": "HvInput-inputRoot HvTimePickerUnitTimePicker-unitTimeInputRoot",
              "inputRootDisabled": "HvInput-inputRootDisabled",
              "inputRootFocused": "HvInput-inputRootFocused",
              "inputRootMultiline": "HvInput-inputRootMultiline",
              "label": "HvInput-label",
              "labelContainer": "HvInput-labelContainer",
              "root": "HvInput-root HvTimePickerUnitTimePicker-inputContainer",
              "suggestionList": "HvInput-suggestionList",
              "suggestionsContainer": "HvInput-suggestionsContainer",
            }
          }
          disableClear={true}
          inputProps={
            Object {
              "autoComplete": "off",
              "max": 59,
              "min": 0,
              "type": "number",
            }
          }
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          required={true}
          status="valid"
          value="30"
        >
          <WithStyles(HvFormElement)
            className="HvInput-root HvTimePickerUnitTimePicker-inputContainer"
            disabled={false}
            onBlur={[Function]}
            readOnly={false}
            required={true}
            status="valid"
          >
            <HvFormElement
              className="HvInput-root HvTimePickerUnitTimePicker-inputContainer"
              classes={
                Object {
                  "root": "HvFormElement-root",
                }
              }
              disabled={false}
              onBlur={[Function]}
              readOnly={false}
              required={true}
              status="valid"
            >
              <div
                className="HvInput-root HvTimePickerUnitTimePicker-inputContainer HvFormElement-root"
                onBlur={[Function]}
              >
                <WithStyles(HvBaseInput)
                  autoFocus={false}
                  classes={
                    Object {
                      "input": "HvInput-input HvTimePickerUnitTimePicker-unitTimeInput",
                      "inputBorderContainer": "HvInput-inputBorderContainer HvTimePickerUnitTimePicker-inputBorderContainer",
                      "inputRoot": "HvInput-inputRoot HvTimePickerUnitTimePicker-unitTimeInputRoot",
                      "inputRootDisabled": "HvInput-inputRootDisabled",
                      "inputRootFocused": "HvInput-inputRootFocused",
                      "inputRootMultiline": "HvInput-inputRootMultiline",
                    }
                  }
                  disabled={false}
                  endAdornment={null}
                  inputProps={
                    Object {
                      "aria-controls": undefined,
                      "aria-describedby": undefined,
                      "aria-errormessage": undefined,
                      "aria-invalid": undefined,
                      "aria-label": undefined,
                      "aria-labelledby": undefined,
                      "autoComplete": "off",
                      "max": 59,
                      "min": 0,
                      "ref": Object {
                        "current": <input
                          autocomplete="off"
                          class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input HvTimePickerUnitTimePicker-unitTimeInput"
                          max="59"
                          min="0"
                          required=""
                          rows="10"
                          type="number"
                          value="30"
                        />,
                      },
                      "type": "number",
                    }
                  }
                  inputRef={
                    Object {
                      "current": <input
                        autocomplete="off"
                        class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input HvTimePickerUnitTimePicker-unitTimeInput"
                        max="59"
                        min="0"
                        required=""
                        rows="10"
                        type="number"
                        value="30"
                      />,
                    }
                  }
                  invalid={false}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  readOnly={false}
                  required={true}
                  type="text"
                  value="30"
                >
                  <HvBaseInput
                    autoFocus={false}
                    classes={
                      Object {
                        "disabled": "HvBaseInput-disabled",
                        "input": "HvBaseInput-input HvInput-input HvTimePickerUnitTimePicker-unitTimeInput",
                        "inputBorderContainer": "HvBaseInput-inputBorderContainer HvInput-inputBorderContainer HvTimePickerUnitTimePicker-inputBorderContainer",
                        "inputDisabled": "HvBaseInput-inputDisabled",
                        "inputResizable": "HvBaseInput-inputResizable",
                        "inputRoot": "HvBaseInput-inputRoot HvInput-inputRoot HvTimePickerUnitTimePicker-unitTimeInputRoot",
                        "inputRootDisabled": "HvBaseInput-inputRootDisabled HvInput-inputRootDisabled",
                        "inputRootFocused": "HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                        "inputRootMultiline": "HvBaseInput-inputRootMultiline HvInput-inputRootMultiline",
                        "invalid": "HvBaseInput-invalid",
                        "readOnly": "HvBaseInput-readOnly",
                        "resizable": "HvBaseInput-resizable",
                        "root": "HvBaseInput-root",
                      }
                    }
                    disabled={false}
                    endAdornment={null}
                    inputProps={
                      Object {
                        "aria-controls": undefined,
                        "aria-describedby": undefined,
                        "aria-errormessage": undefined,
                        "aria-invalid": undefined,
                        "aria-label": undefined,
                        "aria-labelledby": undefined,
                        "autoComplete": "off",
                        "max": 59,
                        "min": 0,
                        "ref": Object {
                          "current": <input
                            autocomplete="off"
                            class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input HvTimePickerUnitTimePicker-unitTimeInput"
                            max="59"
                            min="0"
                            required=""
                            rows="10"
                            type="number"
                            value="30"
                          />,
                        },
                        "type": "number",
                      }
                    }
                    inputRef={
                      Object {
                        "current": <input
                          autocomplete="off"
                          class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input HvTimePickerUnitTimePicker-unitTimeInput"
                          max="59"
                          min="0"
                          required=""
                          rows="10"
                          type="number"
                          value="30"
                        />,
                      }
                    }
                    invalid={false}
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    readOnly={false}
                    required={true}
                    type="text"
                    value="30"
                  >
                    <div
                      className="HvBaseInput-root"
                    >
                      <WithStyles(ForwardRef(Input))
                        autoFocus={false}
                        classes={
                          Object {
                            "disabled": "HvBaseInput-inputRootDisabled HvInput-inputRootDisabled",
                            "focused": "HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                            "input": "HvBaseInput-input HvInput-input HvTimePickerUnitTimePicker-unitTimeInput",
                            "multiline": "HvBaseInput-inputRootMultiline HvInput-inputRootMultiline",
                            "root": "HvBaseInput-inputRoot HvInput-inputRoot HvTimePickerUnitTimePicker-unitTimeInputRoot",
                          }
                        }
                        disabled={false}
                        endAdornment={null}
                        inputProps={
                          Object {
                            "aria-controls": undefined,
                            "aria-describedby": undefined,
                            "aria-errormessage": undefined,
                            "aria-invalid": undefined,
                            "aria-label": undefined,
                            "aria-labelledby": undefined,
                            "autoComplete": "off",
                            "max": 59,
                            "min": 0,
                            "ref": Object {
                              "current": <input
                                autocomplete="off"
                                class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input HvTimePickerUnitTimePicker-unitTimeInput"
                                max="59"
                                min="0"
                                required=""
                                rows="10"
                                type="number"
                                value="30"
                              />,
                            },
                            "required": true,
                            "type": "number",
                          }
                        }
                        inputRef={
                          Object {
                            "current": <input
                              autocomplete="off"
                              class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input HvTimePickerUnitTimePicker-unitTimeInput"
                              max="59"
                              min="0"
                              required=""
                              rows="10"
                              type="number"
                              value="30"
                            />,
                          }
                        }
                        multiline={false}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        readOnly={false}
                        rows={10}
                        type="text"
                        value="30"
                      >
                        <ForwardRef(Input)
                          autoFocus={false}
                          classes={
                            Object {
                              "colorSecondary": "MuiInput-colorSecondary",
                              "disabled": "Mui-disabled HvBaseInput-inputRootDisabled HvInput-inputRootDisabled",
                              "error": "Mui-error",
                              "focused": "Mui-focused HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                              "formControl": "MuiInput-formControl",
                              "fullWidth": "MuiInput-fullWidth",
                              "input": "MuiInput-input HvBaseInput-input HvInput-input HvTimePickerUnitTimePicker-unitTimeInput",
                              "inputMarginDense": "MuiInput-inputMarginDense",
                              "inputMultiline": "MuiInput-inputMultiline",
                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                              "marginDense": "MuiInput-marginDense",
                              "multiline": "MuiInput-multiline HvBaseInput-inputRootMultiline HvInput-inputRootMultiline",
                              "root": "MuiInput-root HvBaseInput-inputRoot HvInput-inputRoot HvTimePickerUnitTimePicker-unitTimeInputRoot",
                              "underline": "MuiInput-underline",
                            }
                          }
                          disableUnderline={true}
                          disabled={false}
                          endAdornment={null}
                          inputProps={
                            Object {
                              "aria-controls": undefined,
                              "aria-describedby": undefined,
                              "aria-errormessage": undefined,
                              "aria-invalid": undefined,
                              "aria-label": undefined,
                              "aria-labelledby": undefined,
                              "autoComplete": "off",
                              "max": 59,
                              "min": 0,
                              "ref": Object {
                                "current": <input
                                  autocomplete="off"
                                  class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input HvTimePickerUnitTimePicker-unitTimeInput"
                                  max="59"
                                  min="0"
                                  required=""
                                  rows="10"
                                  type="number"
                                  value="30"
                                />,
                              },
                              "required": true,
                              "type": "number",
                            }
                          }
                          inputRef={
                            Object {
                              "current": <input
                                autocomplete="off"
                                class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input HvTimePickerUnitTimePicker-unitTimeInput"
                                max="59"
                                min="0"
                                required=""
                                rows="10"
                                type="number"
                                value="30"
                              />,
                            }
                          }
                          multiline={false}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          readOnly={false}
                          rows={10}
                          type="text"
                          value="30"
                        >
                          <WithStyles(ForwardRef(InputBase))
                            autoFocus={false}
                            classes={
                              Object {
                                "colorSecondary": "MuiInput-colorSecondary",
                                "disabled": "Mui-disabled HvBaseInput-inputRootDisabled HvInput-inputRootDisabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                                "formControl": "MuiInput-formControl",
                                "fullWidth": "MuiInput-fullWidth",
                                "input": "MuiInput-input HvBaseInput-input HvInput-input HvTimePickerUnitTimePicker-unitTimeInput",
                                "inputMarginDense": "MuiInput-inputMarginDense",
                                "inputMultiline": "MuiInput-inputMultiline",
                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                "marginDense": "MuiInput-marginDense",
                                "multiline": "MuiInput-multiline HvBaseInput-inputRootMultiline HvInput-inputRootMultiline",
                                "root": "MuiInput-root HvBaseInput-inputRoot HvInput-inputRoot HvTimePickerUnitTimePicker-unitTimeInputRoot",
                                "underline": null,
                              }
                            }
                            disabled={false}
                            endAdornment={null}
                            fullWidth={false}
                            inputComponent="input"
                            inputProps={
                              Object {
                                "aria-controls": undefined,
                                "aria-describedby": undefined,
                                "aria-errormessage": undefined,
                                "aria-invalid": undefined,
                                "aria-label": undefined,
                                "aria-labelledby": undefined,
                                "autoComplete": "off",
                                "max": 59,
                                "min": 0,
                                "ref": Object {
                                  "current": <input
                                    autocomplete="off"
                                    class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input HvTimePickerUnitTimePicker-unitTimeInput"
                                    max="59"
                                    min="0"
                                    required=""
                                    rows="10"
                                    type="number"
                                    value="30"
                                  />,
                                },
                                "required": true,
                                "type": "number",
                              }
                            }
                            inputRef={
                              Object {
                                "current": <input
                                  autocomplete="off"
                                  class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input HvTimePickerUnitTimePicker-unitTimeInput"
                                  max="59"
                                  min="0"
                                  required=""
                                  rows="10"
                                  type="number"
                                  value="30"
                                />,
                              }
                            }
                            multiline={false}
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            readOnly={false}
                            rows={10}
                            type="text"
                            value="30"
                          >
                            <ForwardRef(InputBase)
                              autoFocus={false}
                              classes={
                                Object {
                                  "adornedEnd": "MuiInputBase-adornedEnd",
                                  "adornedStart": "MuiInputBase-adornedStart",
                                  "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                  "disabled": "Mui-disabled Mui-disabled HvBaseInput-inputRootDisabled HvInput-inputRootDisabled",
                                  "error": "Mui-error Mui-error",
                                  "focused": "Mui-focused Mui-focused HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                                  "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                  "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                  "input": "MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input HvTimePickerUnitTimePicker-unitTimeInput",
                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                  "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                  "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                  "multiline": "MuiInputBase-multiline MuiInput-multiline HvBaseInput-inputRootMultiline HvInput-inputRootMultiline",
                                  "root": "MuiInputBase-root MuiInput-root HvBaseInput-inputRoot HvInput-inputRoot HvTimePickerUnitTimePicker-unitTimeInputRoot",
                                }
                              }
                              disabled={false}
                              endAdornment={null}
                              fullWidth={false}
                              inputComponent="input"
                              inputProps={
                                Object {
                                  "aria-controls": undefined,
                                  "aria-describedby": undefined,
                                  "aria-errormessage": undefined,
                                  "aria-invalid": undefined,
                                  "aria-label": undefined,
                                  "aria-labelledby": undefined,
                                  "autoComplete": "off",
                                  "max": 59,
                                  "min": 0,
                                  "ref": Object {
                                    "current": <input
                                      autocomplete="off"
                                      class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input HvTimePickerUnitTimePicker-unitTimeInput"
                                      max="59"
                                      min="0"
                                      required=""
                                      rows="10"
                                      type="number"
                                      value="30"
                                    />,
                                  },
                                  "required": true,
                                  "type": "number",
                                }
                              }
                              inputRef={
                                Object {
                                  "current": <input
                                    autocomplete="off"
                                    class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input HvTimePickerUnitTimePicker-unitTimeInput"
                                    max="59"
                                    min="0"
                                    required=""
                                    rows="10"
                                    type="number"
                                    value="30"
                                  />,
                                }
                              }
                              multiline={false}
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              readOnly={false}
                              rows={10}
                              type="text"
                              value="30"
                            >
                              <div
                                className="MuiInputBase-root MuiInput-root HvBaseInput-inputRoot HvInput-inputRoot HvTimePickerUnitTimePicker-unitTimeInputRoot"
                                onClick={[Function]}
                              >
                                <input
                                  autoComplete="off"
                                  autoFocus={false}
                                  className="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input HvTimePickerUnitTimePicker-unitTimeInput"
                                  disabled={false}
                                  max={59}
                                  min={0}
                                  onAnimationStart={[Function]}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  readOnly={false}
                                  required={true}
                                  rows={10}
                                  type="number"
                                  value="30"
                                />
                              </div>
                            </ForwardRef(InputBase)>
                          </WithStyles(ForwardRef(InputBase))>
                        </ForwardRef(Input)>
                      </WithStyles(ForwardRef(Input))>
                      <div
                        className="HvBaseInput-inputBorderContainer HvInput-inputBorderContainer HvTimePickerUnitTimePicker-inputBorderContainer"
                        role="presentation"
                      />
                    </div>
                  </HvBaseInput>
                </WithStyles(HvBaseInput)>
              </div>
            </HvFormElement>
          </WithStyles(HvFormElement)>
        </HvInput>
      </WithStyles(HvInput)>
      <DropDownXS
        className="HvTimePickerUnitTimePicker-subtractIcon"
        onClick={[Function]}
      >
        <HvIconBase
          className="HvTimePickerUnitTimePicker-subtractIcon"
          iconSize="XS"
          name="DropDownXS"
          onClick={[Function]}
        >
          <div
            className="HvTimePickerUnitTimePicker-subtractIcon HvIconBase-root HvIconBase-xs"
            name="DropDownXS"
            onClick={[Function]}
          >
            <svg
              focusable={false}
              height={12}
              viewBox="0 0 12 12"
              width={12}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                className="color0"
                d="M5.99994 8.65L1.4 4.05l.7-.7L6 7.25l3.9-3.9.7.7z"
                fill="#414141"
              />
            </svg>
          </div>
        </HvIconBase>
      </DropDownXS>
    </div>
  </UnitTimePicker>
</WithStyles(UnitTimePicker)>
`;
